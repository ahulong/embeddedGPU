##############################################################
###                                                        ###
###  Copyright (c) 2006 Xilinx, Inc. All Rights Reserved.  ###	
###                                                        ###	 
###           CAUTION : DO NOT EDIT THIS FILE !!!          ###
###                                                        ###	 
###  This file is auto-generated and it reflects the MPD   ###
###  files present in each of the sub-directories here.    ###
###  If you edit this file or any of the files in the      ###
###  EDK Installation area, the tools might not work as    ###
###  expected. Should there be an need to change any of    ###
###  these files, contact Xilinx Support for advice.       ###
###                                                        ###
##############################################################























































































































START_SINGLE_MPD bram_block_v1_00_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : bram_block
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN bram_block

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = BOTH
OPTION STYLE = ELABORATE
OPTION SPECIAL = BRAM
OPTION LAST_UPDATED = 12.2
OPTION DESC = Block RAM (BRAM) Block
OPTION LONG_DESC = The BRAM Block is a configurable memory module that attaches to a variety of BRAM Interface Controllers.
OPTION IP_GROUP = Memory and Memory Controller:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=PRODUCTION, spartan3=PRODUCTION, spartan3an=PRODUCTION, spartan3a=PRODUCTION, spartan3e=PRODUCTION, spartan3adsp=PRODUCTION, virtex4lx=PRODUCTION, virtex4sx=PRODUCTION, virtex4fx=PRODUCTION, virtex5lx=PRODUCTION, virtex5sx=PRODUCTION, virtex5fx=PRODUCTION, aspartan3e=PRODUCTION, aspartan3a=PRODUCTION, aspartan3adsp=PRODUCTION, qvirtex4lx=PRODUCTION, qvirtex4sx=PRODUCTION, qvirtex4fx=PRODUCTION, qrvirtex4lx=PRODUCTION, qrvirtex4sx=PRODUCTION, qrvirtex4fx=PRODUCTION, spartan6t=PRODUCTION, spartan6=PRODUCTION, spartan6l=PRE_PRODUCTION, qspartan6t=PRODUCTION, qspartan6=PRODUCTION, aspartan6t=PRODUCTION, aspartan6=PRODUCTION, virtex6lx=PRODUCTION, virtex6sx=PRODUCTION, virtex6hx=PRODUCTION, virtex6cx=PRODUCTION, virtex6llx=PRE_PRODUCTION, virtex6lsx=PRE_PRODUCTION, qspartan6l=PRE_PRODUCTION, qrvirtex5=PRE_PRODUCTION, qvirtex6lx=PRE_PRODUCTION, qvirtex6sx=PRE_PRODUCTION, qvirtex6fx=PRE_PRODUCTION, qvirtex6tx=PRE_PRODUCTION)
OPTION RUN_NGCBUILD = FALSE


## Bus Interfaces
BUS_INTERFACE BUS = PORTA, BUS_STD = XIL_BRAM, BUS_TYPE = TARGET
BUS_INTERFACE BUS = PORTB, BUS_STD = XIL_BRAM, BUS_TYPE = TARGET

## Generics for VHDL or Parameters for Verilog
PARAMETER C_MEMSIZE = 2048, DT = integer
PARAMETER C_PORT_DWIDTH = 32, DT = integer, BUS = PORTA:PORTB, RANGE = (32, 64, 128, 256)
PARAMETER C_PORT_AWIDTH = 32, DT = integer, BUS = PORTA:PORTB, ASSIGNMENT = CONSTANT
PARAMETER C_NUM_WE = 4, DT = integer, RANGE = (1, 2, 4, 8, 16, 32)
PARAMETER C_FAMILY = virtex2, DT = string

## Ports
PORT BRAM_Rst_A = BRAM_Rst, DIR = I, BUS = PORTA
PORT BRAM_Clk_A = BRAM_Clk, DIR = I, BUS = PORTA, SIGIS = CLK
PORT BRAM_EN_A = BRAM_EN, DIR = I, BUS = PORTA
PORT BRAM_WEN_A = BRAM_WEN, DIR = I, VEC = [0:C_NUM_WE-1], BUS = PORTA
PORT BRAM_Addr_A = BRAM_Addr, DIR = I, VEC = [0:C_PORT_AWIDTH-1], BUS = PORTA
PORT BRAM_Din_A = BRAM_Din, DIR = O, VEC = [0:C_PORT_DWIDTH-1], BUS = PORTA
PORT BRAM_Dout_A = BRAM_Dout, DIR = I, VEC = [0:C_PORT_DWIDTH-1], BUS = PORTA
PORT BRAM_Rst_B = BRAM_Rst, DIR = I, BUS = PORTB
PORT BRAM_Clk_B = BRAM_Clk, DIR = I, BUS = PORTB, SIGIS = CLK
PORT BRAM_EN_B = BRAM_EN, DIR = I, BUS = PORTB
PORT BRAM_WEN_B = BRAM_WEN, DIR = I, VEC = [0:C_NUM_WE-1], BUS = PORTB
PORT BRAM_Addr_B = BRAM_Addr, DIR = I, VEC = [0:C_PORT_AWIDTH-1], BUS = PORTB
PORT BRAM_Din_B = BRAM_Din, DIR = O, VEC = [0:C_PORT_DWIDTH-1], BUS = PORTB
PORT BRAM_Dout_B = BRAM_Dout, DIR = I, VEC = [0:C_PORT_DWIDTH-1], BUS = PORTB

END

FINISH_SINGLE_MPD

START_SINGLE_MPD lmb_v10_v1_00_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : lmb_v10
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN lmb_v10

## Peripheral Options
OPTION IPTYPE = BUS
OPTION IMP_NETLIST = TRUE
OPTION BUS_STD = LMB
OPTION MAX_MASTERS = 1
OPTION MAX_SLAVES = 16
OPTION DWIDTH = 32
OPTION AWIDTH = 32
OPTION PLATGEN_SYSLEVEL_UPDATE_PROC = generate_corelevel_ucf
OPTION RUN_NGCBUILD = TRUE
OPTION DESC = Local Memory Bus (LMB) 1.0
OPTION LONG_DESC = 'The LMB is a fast, local bus for connecting MicroBlaze I and D ports to peripherals and BRAM'
OPTION IP_GROUP = Bus and Bridge:MICROBLAZE
OPTION ARCH_SUPPORT_MAP = (aspartan3=PRODUCTION, spartan3=PRODUCTION, spartan3an=PRODUCTION, spartan3a=PRODUCTION, spartan3e=PRODUCTION, spartan3adsp=PRODUCTION, virtex4lx=PRODUCTION, virtex4sx=PRODUCTION, virtex4fx=PRODUCTION, virtex5lx=PRODUCTION, virtex5sx=PRODUCTION, virtex5fx=PRODUCTION, aspartan3e=PRODUCTION, aspartan3a=PRODUCTION, aspartan3adsp=PRODUCTION, qvirtex4lx=PRODUCTION, qvirtex4sx=PRODUCTION, qvirtex4fx=PRODUCTION, qrvirtex4lx=PRODUCTION, qrvirtex4sx=PRODUCTION, qrvirtex4fx=PRODUCTION, spartan6t=PRODUCTION, spartan6=PRODUCTION, spartan6l=PRE_PRODUCTION, qspartan6t=PRODUCTION, qspartan6=PRODUCTION, aspartan6t=PRODUCTION, aspartan6=PRODUCTION, virtex6lx=PRODUCTION, virtex6sx=PRODUCTION, virtex6hx=PRODUCTION, virtex6cx=PRODUCTION, virtex6llx=PRE_PRODUCTION, virtex6lsx=PRE_PRODUCTION, qspartan6l=PRE_PRODUCTION, qrvirtex5=PRE_PRODUCTION, qvirtex6lx=PRE_PRODUCTION, qvirtex6sx=PRE_PRODUCTION, qvirtex6fx=PRE_PRODUCTION, qvirtex6tx=PRE_PRODUCTION)
OPTION HDL = MIXED
OPTION STYLE = HDL

IO_INTERFACE IO_IF = reset_0

## Bus Interfaces

## Generics for VHDL or Parameters for Verilog
PARAMETER C_LMB_NUM_SLAVES = 4, DT = integer
PARAMETER C_LMB_AWIDTH = 32, DT = integer, ASSIGNMENT = CONSTANT
PARAMETER C_LMB_DWIDTH = 32, DT = integer, ASSIGNMENT = CONSTANT
PARAMETER C_EXT_RESET_HIGH = 1, DT = integer, RANGE = (0,1), IO_IF = reset_0, IO_IS = polarity

## Ports
PORT LMB_Clk = "", DIR = I, SIGIS = CLK, ASSIGNMENT = REQUIRE
PORT SYS_Rst = "", DIR = I, ASSIGNMENT = REQUIRE
PORT LMB_Rst = LMB_Rst, DIR = O
PORT M_ABus = M_ABus, DIR = I, VEC = [0:C_LMB_AWIDTH-1]
PORT M_ReadStrobe = M_ReadStrobe, DIR = I
PORT M_WriteStrobe = M_WriteStrobe, DIR = I
PORT M_AddrStrobe = M_AddrStrobe, DIR = I
PORT M_DBus = M_DBus, DIR = I, VEC = [0:C_LMB_DWIDTH-1]
PORT M_BE = M_BE, DIR = I, VEC = [0:(C_LMB_DWIDTH+7)/8-1]
PORT Sl_DBus = Sl_DBus, DIR = I, VEC = [0:(C_LMB_DWIDTH*C_LMB_NUM_SLAVES)-1], INITIALVAL = VCC
PORT Sl_Ready = Sl_Ready, DIR = I, VEC = [0:C_LMB_NUM_SLAVES-1], INITIALVAL = VCC
PORT LMB_ABus = LMB_ABus, DIR = O, VEC = [0:C_LMB_AWIDTH-1]
PORT LMB_ReadStrobe = LMB_ReadStrobe, DIR = O
PORT LMB_WriteStrobe = LMB_WriteStrobe, DIR = O
PORT LMB_AddrStrobe = LMB_AddrStrobe, DIR = O
PORT LMB_ReadDBus = LMB_ReadDBus, DIR = O, VEC = [0:C_LMB_DWIDTH-1]
PORT LMB_WriteDBus = LMB_WriteDBus, DIR = O, VEC = [0:C_LMB_DWIDTH-1]
PORT LMB_Ready = LMB_Ready, DIR = O
PORT LMB_BE = LMB_BE, DIR = O, VEC = [0:(C_LMB_DWIDTH+7)/8-1]

END

FINISH_SINGLE_MPD

START_SINGLE_MPD util_bus_split_v1_00_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : util_bus_split
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN util_bus_split

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION DESC = Utility Bus Split
OPTION LONG_DESC = Bus splitting primitive
OPTION IP_GROUP = Utility:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=PRODUCTION, spartan3=PRODUCTION, spartan3an=PRODUCTION, spartan3a=PRODUCTION, spartan3e=PRODUCTION, spartan3adsp=PRODUCTION, virtex4lx=PRODUCTION, virtex4sx=PRODUCTION, virtex4fx=PRODUCTION, virtex5lx=PRODUCTION, virtex5sx=PRODUCTION, virtex5fx=PRODUCTION, aspartan3e=PRODUCTION, aspartan3a=PRODUCTION, aspartan3adsp=PRODUCTION, qvirtex4lx=PRODUCTION, qvirtex4sx=PRODUCTION, qvirtex4fx=PRODUCTION, qrvirtex4lx=PRODUCTION, qrvirtex4sx=PRODUCTION, qrvirtex4fx=PRODUCTION, spartan6t=PRODUCTION, spartan6=PRODUCTION, spartan6l=PRE_PRODUCTION, qspartan6t=PRODUCTION, qspartan6=PRODUCTION, aspartan6t=PRODUCTION, aspartan6=PRODUCTION, virtex6lx=PRODUCTION, virtex6sx=PRODUCTION, virtex6hx=PRODUCTION, virtex6cx=PRODUCTION, virtex6llx=PRE_PRODUCTION, virtex6lsx=PRE_PRODUCTION, qspartan6l=PRE_PRODUCTION, qvirtex6lx=PRE_PRODUCTION, qvirtex6sx=PRE_PRODUCTION, qvirtex6fx=PRE_PRODUCTION, qvirtex6tx=PRE_PRODUCTION)
OPTION HDL = MIXED
OPTION RUN_NGCBUILD = FALSE
OPTION STYLE = HDL


## Bus Interfaces

## Generics for VHDL or Parameters for Verilog
PARAMETER C_SIZE_IN = 8, DT = integer, RANGE = (1:2147483647)
PARAMETER C_LEFT_POS = 0, DT = integer, RANGE = (0:C_SPLIT-1)
PARAMETER C_SPLIT = 4, DT = integer, RANGE = (1:C_SIZE_IN-1)

## Ports
PORT Sig = "", DIR = I, VEC = [0:C_SIZE_IN-1]
PORT Out1 = "", DIR = O, VEC = [C_LEFT_POS:C_SPLIT-1]
PORT Out2 = "", DIR = O, VEC = [C_SPLIT:C_SIZE_IN-1]

END

FINISH_SINGLE_MPD

START_SINGLE_MPD util_reduced_logic_v1_00_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : util_reduced_logic
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN util_reduced_logic

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION HDL = VHDL
OPTION IMP_NETLIST = TRUE
OPTION DESC = Utility Reduced Logic
OPTION LONG_DESC = Get 1 bit result from 2 input bits
OPTION IP_GROUP = Utility:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=PRODUCTION, spartan3=PRODUCTION, spartan3an=PRODUCTION, spartan3a=PRODUCTION, spartan3e=PRODUCTION, spartan3adsp=PRODUCTION, virtex4lx=PRODUCTION, virtex4sx=PRODUCTION, virtex4fx=PRODUCTION, virtex5lx=PRODUCTION, virtex5sx=PRODUCTION, virtex5fx=PRODUCTION, aspartan3e=PRODUCTION, aspartan3a=PRODUCTION, aspartan3adsp=PRODUCTION, qvirtex4lx=PRODUCTION, qvirtex4sx=PRODUCTION, qvirtex4fx=PRODUCTION, qrvirtex4lx=PRODUCTION, qrvirtex4sx=PRODUCTION, qrvirtex4fx=PRODUCTION, spartan6t=PRODUCTION, spartan6=PRODUCTION, spartan6l=PRE_PRODUCTION, qspartan6t=PRODUCTION, qspartan6=PRODUCTION, aspartan6t=PRODUCTION, aspartan6=PRODUCTION, virtex6lx=PRODUCTION, virtex6sx=PRODUCTION, virtex6hx=PRODUCTION, virtex6cx=PRODUCTION, virtex6llx=PRE_PRODUCTION, virtex6lsx=PRE_PRODUCTION, qspartan6l=PRE_PRODUCTION, qrvirtex5=PRE_PRODUCTION, qvirtex6lx=PRE_PRODUCTION, qvirtex6sx=PRE_PRODUCTION, qvirtex6fx=PRE_PRODUCTION, qvirtex6tx=PRE_PRODUCTION)
OPTION RUN_NGCBUILD = FALSE
OPTION STYLE = HDL


## Bus Interfaces

## Generics for VHDL or Parameters for Verilog
PARAMETER C_OPERATION = and, DT = string, VALUES = (and=and, or=or, xor=xor)
PARAMETER C_SIZE = 8, DT = INTEGER, RANGE = (1:2147483647)

## Ports
PORT Op1 = "", DIR = I, VEC = [0:C_SIZE-1]
PORT Res = "", DIR = O

END

FINISH_SINGLE_MPD

START_SINGLE_MPD util_vector_logic_v1_00_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : util_vector_logic
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN util_vector_logic

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION HDL = VHDL
OPTION IMP_NETLIST = TRUE
OPTION DESC = Utility Vector Logic
OPTION LONG_DESC = 'Simple logic functions, and, or, xor, not.'
OPTION IP_GROUP = Utility:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=PRODUCTION, spartan3=PRODUCTION, spartan3an=PRODUCTION, spartan3a=PRODUCTION, spartan3e=PRODUCTION, spartan3adsp=PRODUCTION, virtex4lx=PRODUCTION, virtex4sx=PRODUCTION, virtex4fx=PRODUCTION, virtex5lx=PRODUCTION, virtex5sx=PRODUCTION, virtex5fx=PRODUCTION, aspartan3e=PRODUCTION, aspartan3a=PRODUCTION, aspartan3adsp=PRODUCTION, qvirtex4lx=PRODUCTION, qvirtex4sx=PRODUCTION, qvirtex4fx=PRODUCTION, qrvirtex4lx=PRODUCTION, qrvirtex4sx=PRODUCTION, qrvirtex4fx=PRODUCTION, spartan6t=PRODUCTION, spartan6=PRODUCTION, spartan6l=PRE_PRODUCTION, qspartan6t=PRODUCTION, qspartan6=PRODUCTION, aspartan6t=PRODUCTION, aspartan6=PRODUCTION, virtex6lx=PRODUCTION, virtex6sx=PRODUCTION, virtex6hx=PRODUCTION, virtex6cx=PRODUCTION, virtex6llx=PRE_PRODUCTION, virtex6lsx=PRE_PRODUCTION, qspartan6l=PRE_PRODUCTION, qrvirtex5=PRE_PRODUCTION, qvirtex6lx=PRE_PRODUCTION, qvirtex6sx=PRE_PRODUCTION, qvirtex6fx=PRE_PRODUCTION, qvirtex6tx=PRE_PRODUCTION)
OPTION RUN_NGCBUILD = FALSE
OPTION STYLE = HDL


## Bus Interfaces

## Generics for VHDL or Parameters for Verilog
PARAMETER C_OPERATION = and, DT = string, VALUES = (and=and, or=or, xor=xor, not=not)
PARAMETER C_SIZE = 8, DT = INTEGER, RANGE = (1:2147483647)

## Ports
PORT Op1 = "", DIR = I, VEC = [0:C_SIZE-1]
PORT Op2 = "", DIR = I, VEC = [0:C_SIZE-1]
PORT Res = "", DIR = O, VEC = [0:C_SIZE-1]

END

FINISH_SINGLE_MPD

START_SINGLE_MPD plb_v34_v1_02_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : plb_v34
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN plb_v34

## Peripheral Options
OPTION IPTYPE = BUS
OPTION HDL = VHDL
OPTION IMP_NETLIST = TRUE
OPTION BUS_STD = PLB
OPTION MAX_MASTERS = 16
OPTION MAX_SLAVES = 16
OPTION DWIDTH = 64
OPTION AWIDTH = 32
OPTION SYSLEVEL_DRC_PROC = check_syslevel_settings
OPTION LAST_UPDATED = 11.4
OPTION DESC = Processor Local Bus (PLB) 3.4
OPTION LONG_DESC = 'Xilinx 64-bit Processor Local Bus (PLB) consists of a bus control unit, a watchdog timer, and separate address, write, and read data path units with a a three-cycle only arbitration feature'
OPTION IP_GROUP = Bus and Bridge:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=SUPERSEDED, spartan3=SUPERSEDED, spartan3an=SUPERSEDED, spartan3a=SUPERSEDED, spartan3e=SUPERSEDED, spartan3adsp=SUPERSEDED, virtex4lx=SUPERSEDED, virtex4sx=SUPERSEDED, virtex4fx=SUPERSEDED, virtex5lx=SUPERSEDED, virtex5sx=SUPERSEDED, virtex5fx=SUPERSEDED, aspartan3e=SUPERSEDED, aspartan3a=SUPERSEDED, aspartan3adsp=SUPERSEDED, qvirtex4lx=SUPERSEDED, qvirtex4sx=SUPERSEDED, qvirtex4fx=SUPERSEDED, qrvirtex4lx=SUPERSEDED, qrvirtex4sx=SUPERSEDED, qrvirtex4fx=SUPERSEDED, spartan6t=SUPERSEDED, spartan6=SUPERSEDED, spartan6l=SUPERSEDED, qspartan6t=SUPERSEDED, qspartan6=SUPERSEDED, aspartan6t=SUPERSEDED, aspartan6=SUPERSEDED, virtex6lx=SUPERSEDED, virtex6sx=SUPERSEDED, virtex6hx=SUPERSEDED, virtex6cx=SUPERSEDED, virtex6llx=SUPERSEDED, virtex6lsx=SUPERSEDED, qspartan6l=SUPERSEDED, qrvirtex5=SUPERSEDED, qvirtex6lx=SUPERSEDED, qvirtex6sx=SUPERSEDED, qvirtex6fx=SUPERSEDED, qvirtex6tx=SUPERSEDED)
OPTION RUN_NGCBUILD = FALSE
OPTION STYLE = HDL

IO_INTERFACE IO_IF = reset_0

## Bus Interfaces
BUS_INTERFACE BUS = SDCR, BUS_STD = DCR, BUS_TYPE = SLAVE, ISVALID = (C_DCR_INTFCE==1)

## Generics for VHDL or Parameters for Verilog
PARAMETER C_PLB_NUM_MASTERS = 4, DT = integer
PARAMETER C_PLB_NUM_SLAVES = 4, DT = integer
PARAMETER C_PLB_MID_WIDTH = 2, DT = integer
PARAMETER C_PLB_AWIDTH = 32, DT = integer, ASSIGNMENT = CONSTANT
PARAMETER C_PLB_DWIDTH = 64, DT = integer, ASSIGNMENT = CONSTANT
PARAMETER C_DCR_INTFCE = 1, DT = integer, BUS = SDCR, RANGE = (0,1)
PARAMETER C_BASEADDR = 0b1111111111, DT = std_logic_vector, BUS = SDCR, MIN_SIZE = 8, ISVALID = (C_DCR_INTFCE==1)
PARAMETER C_HIGHADDR = 0b0000000000, DT = std_logic_vector, ISVALID = (C_DCR_INTFCE==1)
PARAMETER C_DCR_AWIDTH = 10, DT = integer, BUS = SDCR
PARAMETER C_DCR_DWIDTH = 32, DT = integer, BUS = SDCR
PARAMETER C_EXT_RESET_HIGH = 1, DT = integer, RANGE = (0,1), IO_IF = reset_0, IO_IS = polarity
PARAMETER C_IRQ_ACTIVE = 1, DT = std_logic
PARAMETER C_NUM_OPBCLK_PLB2OPB_REARB = 5, DT = integer

## Ports
PORT PLB_Clk = "", DIR = I, SIGIS = CLK, ASSIGNMENT = REQUIRE
PORT SYS_Rst = "", DIR = I, ASSIGNMENT = REQUIRE
PORT PLB_Rst = PLB_Rst, DIR = O
PORT PLB_dcrAck = Sl_dcrAck, DIR = O, BUS = SDCR
PORT PLB_dcrDBus = Sl_dcrDBus, DIR = O, VEC = [0:C_DCR_DWIDTH-1], BUS = SDCR
PORT DCR_ABus = DCR_ABus, DIR = I, VEC = [0:C_DCR_AWIDTH-1], BUS = SDCR
PORT DCR_DBus = DCR_Sl_DBus, DIR = I, VEC = [0:C_DCR_DWIDTH-1], BUS = SDCR
PORT DCR_Read = DCR_Read, DIR = I, BUS = SDCR
PORT DCR_Write = DCR_Write, DIR = I, BUS = SDCR
PORT M_ABus = M_ABus, DIR = I, VEC = [0:(C_PLB_NUM_MASTERS*C_PLB_AWIDTH)-1]
PORT M_BE = M_BE, DIR = I, VEC = [0:(C_PLB_NUM_MASTERS*(C_PLB_DWIDTH/8))-1]
PORT M_RNW = M_RNW, DIR = I, VEC = [0:C_PLB_NUM_MASTERS-1]
PORT M_abort = M_abort, DIR = I, VEC = [0:C_PLB_NUM_MASTERS-1]
PORT M_busLock = M_busLock, DIR = I, VEC = [0:C_PLB_NUM_MASTERS-1]
PORT M_compress = M_compress, DIR = I, VEC = [0:C_PLB_NUM_MASTERS-1]
PORT M_guarded = M_guarded, DIR = I, VEC = [0:C_PLB_NUM_MASTERS-1]
PORT M_lockErr = M_lockErr, DIR = I, VEC = [0:C_PLB_NUM_MASTERS-1]
PORT M_MSize = M_MSize, DIR = I, VEC = [0:(C_PLB_NUM_MASTERS*2)-1]
PORT M_ordered = M_ordered, DIR = I, VEC = [0:C_PLB_NUM_MASTERS-1]
PORT M_priority = M_priority, DIR = I, VEC = [0:(C_PLB_NUM_MASTERS*2)-1]
PORT M_rdBurst = M_rdBurst, DIR = I, VEC = [0:C_PLB_NUM_MASTERS-1]
PORT M_request = M_request, DIR = I, VEC = [0:C_PLB_NUM_MASTERS-1]
PORT M_size = M_size, DIR = I, VEC = [0:(C_PLB_NUM_MASTERS*4)-1]
PORT M_type = M_type, DIR = I, VEC = [0:(C_PLB_NUM_MASTERS*3)-1]
PORT M_wrBurst = M_wrBurst, DIR = I, VEC = [0:C_PLB_NUM_MASTERS-1]
PORT M_wrDBus = M_wrDBus, DIR = I, VEC = [0:(C_PLB_NUM_MASTERS*C_PLB_DWIDTH)-1]
PORT Sl_addrAck = Sl_addrAck, DIR = I, VEC = [0:C_PLB_NUM_SLAVES-1]
PORT Sl_MErr = Sl_MErr, DIR = I, VEC = [0:(C_PLB_NUM_SLAVES*C_PLB_NUM_MASTERS)-1]
PORT Sl_MBusy = Sl_MBusy, DIR = I, VEC = [0:C_PLB_NUM_SLAVES*C_PLB_NUM_MASTERS - 1 ]
PORT Sl_rdBTerm = Sl_rdBTerm, DIR = I, VEC = [0:C_PLB_NUM_SLAVES-1]
PORT Sl_rdComp = Sl_rdComp, DIR = I, VEC = [0:C_PLB_NUM_SLAVES-1]
PORT Sl_rdDAck = Sl_rdDAck, DIR = I, VEC = [0:C_PLB_NUM_SLAVES-1]
PORT Sl_rdDBus = Sl_rdDBus, DIR = I, VEC = [0:C_PLB_NUM_SLAVES*C_PLB_DWIDTH-1]
PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = I, VEC = [0:C_PLB_NUM_SLAVES*4-1]
PORT Sl_rearbitrate = Sl_rearbitrate, DIR = I, VEC = [0:C_PLB_NUM_SLAVES-1]
PORT Sl_SSize = Sl_SSize, DIR = I, VEC = [0:C_PLB_NUM_SLAVES*2-1]
PORT Sl_wait = Sl_wait, DIR = I, VEC = [0:C_PLB_NUM_SLAVES-1]
PORT Sl_wrBTerm = Sl_wrBTerm, DIR = I, VEC = [0:C_PLB_NUM_SLAVES-1]
PORT Sl_wrComp = Sl_wrComp, DIR = I, VEC = [0:C_PLB_NUM_SLAVES-1]
PORT Sl_wrDAck = Sl_wrDAck, DIR = I, VEC = [0:C_PLB_NUM_SLAVES-1]
PORT PLB_ABus = PLB_ABus, DIR = O, VEC = [0:C_PLB_AWIDTH-1]
PORT PLB_BE = PLB_BE, DIR = O, VEC = [0:(C_PLB_DWIDTH/8)-1]
PORT PLB_MAddrAck = PLB_MAddrAck, DIR = O, VEC = [0:C_PLB_NUM_MASTERS-1]
PORT PLB_MBusy = PLB_MBusy, DIR = O, VEC = [0:C_PLB_NUM_MASTERS-1]
PORT PLB_MErr = PLB_MErr, DIR = O, VEC = [0:C_PLB_NUM_MASTERS-1]
PORT PLB_MRdBTerm = PLB_MRdBTerm, DIR = O, VEC = [0:C_PLB_NUM_MASTERS-1]
PORT PLB_MRdDAck = PLB_MRdDAck, DIR = O, VEC = [0:C_PLB_NUM_MASTERS-1]
PORT PLB_MRdDBus = PLB_MRdDBus, DIR = O, VEC = [0:(C_PLB_NUM_MASTERS*C_PLB_DWIDTH)-1]
PORT PLB_MRdWdAddr = PLB_MRdWdAddr, DIR = O, VEC = [0:(C_PLB_NUM_MASTERS*4)-1]
PORT PLB_MRearbitrate = PLB_MRearbitrate, DIR = O, VEC = [0:C_PLB_NUM_MASTERS-1]
PORT PLB_MWrBTerm = PLB_MWrBTerm, DIR = O, VEC = [0:C_PLB_NUM_MASTERS-1]
PORT PLB_MWrDAck = PLB_MWrDAck, DIR = O, VEC = [0:C_PLB_NUM_MASTERS-1]
PORT PLB_MSSize = PLB_MSSize, DIR = O, VEC = [0:(C_PLB_NUM_MASTERS*2)-1]
PORT PLB_PAValid = PLB_PAValid, DIR = O
PORT PLB_RNW = PLB_RNW, DIR = O
PORT PLB_SAValid = PLB_SAValid, DIR = O
PORT PLB_abort = PLB_abort, DIR = O
PORT PLB_busLock = PLB_busLock, DIR = O
PORT PLB_compress = PLB_compress, DIR = O
PORT PLB_guarded = PLB_guarded, DIR = O
PORT PLB_lockErr = PLB_lockErr, DIR = O
PORT PLB_masterID = PLB_masterID, DIR = O, VEC = [0:C_PLB_MID_WIDTH-1]
PORT PLB_MSize = PLB_MSize, DIR = O, VEC = [0:1]
PORT PLB_ordered = PLB_ordered, DIR = O
PORT PLB_pendPri = PLB_pendPri, DIR = O, VEC = [0:1]
PORT PLB_pendReq = PLB_pendReq, DIR = O
PORT PLB_rdBurst = PLB_rdBurst, DIR = O
PORT PLB_rdPrim = PLB_rdPrim, DIR = O
PORT PLB_reqPri = PLB_reqPri, DIR = O, VEC = [0:1]
PORT PLB_size = PLB_size, DIR = O, VEC = [0:3]
PORT PLB_type = PLB_type, DIR = O, VEC = [0:2]
PORT PLB_wrBurst = PLB_wrBurst, DIR = O
PORT PLB_wrDBus = PLB_wrDBus, DIR = O, VEC = [0:C_PLB_DWIDTH-1]
PORT PLB_wrPrim = PLB_wrPrim, DIR = O
PORT PLB_SaddrAck = PLB_SaddrAck, DIR = O
PORT PLB_SMErr = PLB_SMErr, DIR = O, VEC = [0:C_PLB_NUM_MASTERS-1]
PORT PLB_SMBusy = PLB_SMBusy, DIR = O, VEC = [0:C_PLB_NUM_MASTERS-1]
PORT PLB_SrdBTerm = PLB_SrdBTerm, DIR = O
PORT PLB_SrdComp = PLB_SrdComp, DIR = O
PORT PLB_SrdDAck = PLB_SrdDAck, DIR = O
PORT PLB_SrdDBus = PLB_SrdDBus, DIR = O, VEC = [0:C_PLB_DWIDTH-1]
PORT PLB_SrdWdAddr = PLB_SrdWdAddr, DIR = O, VEC = [0:3]
PORT PLB_Srearbitrate = PLB_Srearbitrate, DIR = O
PORT PLB_Sssize = PLB_Sssize, DIR = O, VEC = [0:1]
PORT PLB_Swait = PLB_Swait, DIR = O
PORT PLB_SwrBTerm = PLB_SwrBTerm, DIR = O
PORT PLB_SwrComp = PLB_SwrComp, DIR = O
PORT PLB_SwrDAck = PLB_SwrDAck, DIR = O
PORT PLB2OPB_rearb = PLB2OPB_rearb, DIR = I, VEC = [0:C_PLB_NUM_SLAVES-1]
PORT ArbAddrVldReg = "", DIR = O
PORT Bus_Error_Det = "", DIR = O, EDGE = RISING, SIGIS = INTERRUPT

END

FINISH_SINGLE_MPD

START_SINGLE_MPD fit_timer_v1_01_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : fit_timer
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN fit_timer

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION DESC = Fixed Interval Timer
OPTION LONG_DESC = Generates an interrupt periodically
OPTION IP_GROUP = DMA and Timer:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=SUPERSEDED, spartan3=SUPERSEDED, spartan3an=SUPERSEDED, spartan3a=SUPERSEDED, spartan3e=SUPERSEDED, spartan3adsp=SUPERSEDED, virtex4lx=SUPERSEDED, virtex4sx=SUPERSEDED, virtex4fx=SUPERSEDED, virtex5lx=SUPERSEDED, virtex5sx=SUPERSEDED, virtex5fx=SUPERSEDED, aspartan3e=SUPERSEDED, aspartan3a=SUPERSEDED, aspartan3adsp=SUPERSEDED, qvirtex4lx=SUPERSEDED, qvirtex4sx=SUPERSEDED, qvirtex4fx=SUPERSEDED, qrvirtex4lx=SUPERSEDED, qrvirtex4sx=SUPERSEDED, qrvirtex4fx=SUPERSEDED, spartan6t=SUPERSEDED, spartan6=SUPERSEDED, spartan6l=SUPERSEDED, qspartan6t=SUPERSEDED, qspartan6=SUPERSEDED, aspartan6t=SUPERSEDED, aspartan6=SUPERSEDED, virtex6lx=SUPERSEDED, virtex6sx=SUPERSEDED, virtex6hx=SUPERSEDED, virtex6cx=SUPERSEDED, virtex6llx=SUPERSEDED, virtex6lsx=SUPERSEDED, qspartan6l=SUPERSEDED, qrvirtex5=SUPERSEDED, qvirtex6lx=SUPERSEDED, qvirtex6sx=SUPERSEDED, qvirtex6fx=SUPERSEDED, qvirtex6tx=SUPERSEDED)
OPTION HDL = MIXED
OPTION RUN_NGCBUILD = FALSE
OPTION STYLE = HDL


## Bus Interfaces

## Generics for VHDL or Parameters for Verilog
PARAMETER C_FAMILY = virtex2, DT = string
PARAMETER C_NO_CLOCKS = 6216, DT = integer, RANGE = (3:2147483647)
PARAMETER C_INACCURACY = 0, DT = integer, RANGE = (0:999)
PARAMETER C_EXT_RESET_HIGH = 1, DT = integer, IO_IS = polarity, RANGE = (0:1)

## Ports
PORT Clk = "", DIR = I, SIGIS = CLK
PORT Rst = "", DIR = I
PORT Interrupt = "", DIR = O, EDGE = RISING, SIGIS = INTERRUPT

END

FINISH_SINGLE_MPD

START_SINGLE_MPD pci_arbiter_v1_00_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : pci_arbiter
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN pci_arbiter

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION USAGE_LEVEL = BASE_USER
OPTION PLATGEN_SYSLEVEL_UPDATE_PROC = generate_corelevel_ucf
OPTION DESC = PCI Arbiter
OPTION LONG_DESC = PCI arbiter with two to eight PCI master agents.
OPTION IP_GROUP = PCI:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (spartan3=PRODUCTION, spartan3an=PRE_PRODUCTION, spartan3a=PRE_PRODUCTION, spartan3e=PRODUCTION, spartan3adsp=PRE_PRODUCTION, virtex4lx=PRODUCTION, virtex4sx=PRODUCTION, virtex4fx=PRODUCTION, virtex5lx=PRODUCTION, virtex5sx=PRODUCTION, virtex5fx=PRODUCTION, qrvirtex5=PRE_PRODUCTION)
OPTION RUN_NGCBUILD = FALSE
OPTION STYLE = HDL

IO_INTERFACE IO_IF = PCI_ARBITER_0, IO_TYPE = XIL_PCI_ARBITER_V1

## Bus Interfaces

## Generics for VHDL or Parameters for Verilog
PARAMETER C_FAMILY = virtex4, DT = STRING
PARAMETER C_NUM_PCI_MSTRS = 4, DT = INTEGER, RANGE = (2:8), IO_IF = PCI_ARBITER_0, IO_IS = C_NUM_PCI_MSTRS, DESC = Num PCI Masters, VALUES = (2= 2 , 3= 3 , 4= 4 , 5= 5 , 6= 6 , 7= 7 , 8= 8 )

## Ports
PORT PCI_Clk = "", DIR = I, SIGIS = CLK, IO_IF = PCI_ARBITER_0, IO_IS = PCI_Clk
PORT PCI_Rst_n = "", DIR = I, SIGIS = RST, IO_IF = PCI_ARBITER_0, IO_IS = PCI_Rst_n
PORT PCI_Req_n = "", DIR = I, VEC = [0:(C_NUM_PCI_MSTRS-1)], PERMIT = BASE_USER, IO_IF = PCI_ARBITER_0, IO_IS = PCI_Req
PORT PCI_Gnt_n = "", DIR = O, VEC = [0:(C_NUM_PCI_MSTRS-1)], PERMIT = BASE_USER, IO_IF = PCI_ARBITER_0, IO_IS = PCI_Gnt
PORT PCI_Frame_n = "", DIR = I, IO_IF = PCI_ARBITER_0, IO_IS = PCI_Frame_n
PORT PCI_Irdy_n = "", DIR = I, IO_IF = PCI_ARBITER_0, IO_IS = PCI_Irdy_n

END

FINISH_SINGLE_MPD

START_SINGLE_MPD fcb_v10_v1_00_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : fcb_v10
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN fcb_v10

## Peripheral Options
OPTION IPTYPE = BUS
OPTION HDL = VHDL
OPTION IMP_NETLIST = TRUE
OPTION BUS_STD = FCB
OPTION MAX_MASTERS = 1
OPTION MAX_SLAVES = 16
OPTION DWIDTH = 32
OPTION DESC = Fabric Co-processor Bus (FCB)
OPTION LONG_DESC = Fabric Co-processor Bus (FCB) connects one or more FPGA fabric accelerator slaves to the Auxiliary Processor Unit (APU) controller in a Virtex-4 PowerPC 405.
OPTION IP_GROUP = Bus and Bridge:PPC
OPTION ARCH_SUPPORT_MAP = (virtex4lx=PRODUCTION, virtex4sx=PRODUCTION, virtex4fx=PRODUCTION, qvirtex4lx=PRODUCTION, qvirtex4sx=PRODUCTION, qvirtex4fx=PRODUCTION, qrvirtex4lx=PRODUCTION, qrvirtex4sx=PRODUCTION, qrvirtex4fx=PRODUCTION)
OPTION RUN_NGCBUILD = FALSE
OPTION STYLE = HDL


## Bus Interfaces

## Generics for VHDL or Parameters for Verilog
PARAMETER C_FCB_NUM_MASTERS = 1, DT = INTEGER, ASSIGNMENT = CONSTANT
PARAMETER C_FCB_NUM_SLAVES = 1, DT = INTEGER
PARAMETER C_DATA_WIDTH = 32, DT = INTEGER, ASSIGNMENT = CONSTANT
PARAMETER C_EXT_RESET_HIGH = 1, DT = INTEGER, RANGE = (0,1)

## Ports
PORT FCB_CLK = "", DIR = I, SIGIS = Clk, ASSIGNMENT = REQUIRE
PORT SYS_RST = "", DIR = I, SIGIS = Rst, ASSIGNMENT = REQUIRE
PORT FCB_RST = FCB_Rst, DIR = O, SIGIS = Rst
PORT M_DECODED = APUFCMDECODED, DIR = I, VEC = [0:(C_FCB_NUM_MASTERS-1)]
PORT M_DECUDI = APUFCMDECUDI, DIR = I, VEC = [0:((3*C_FCB_NUM_MASTERS)-1)]
PORT M_DECUDIVALID = APUFCMDECUDIVALID, DIR = I, VEC = [0:(C_FCB_NUM_MASTERS-1)]
PORT M_ENDIAN = APUFCMENDIAN, DIR = I, VEC = [0:(C_FCB_NUM_MASTERS-1)]
PORT M_FLUSH = APUFCMFLUSH, DIR = I, VEC = [0:(C_FCB_NUM_MASTERS-1)]
PORT M_INSTRUCTION = APUFCMINSTRUCTION, DIR = I, VEC = [0:((C_DATA_WIDTH*C_FCB_NUM_MASTERS)-1)]
PORT M_INSTRVALID = APUFCMINSTRVALID, DIR = I, VEC = [0:(C_FCB_NUM_MASTERS-1)]
PORT M_LOADBYTEEN = APUFCMLOADBYTEEN, DIR = I, VEC = [0:((C_DATA_WIDTH/8*C_FCB_NUM_MASTERS)-1)]
PORT M_LOADDATA = APUFCMLOADDATA, DIR = I, VEC = [0:((C_DATA_WIDTH*C_FCB_NUM_MASTERS)-1)]
PORT M_LOADDVALID = APUFCMLOADDVALID, DIR = I, VEC = [0:(C_FCB_NUM_MASTERS-1)]
PORT M_OPERANDVALID = APUFCMOPERANDVALID, DIR = I, VEC = [0:(C_FCB_NUM_MASTERS-1)]
PORT M_RADATA = APUFCMRADATA, DIR = I, VEC = [0:((C_DATA_WIDTH*C_FCB_NUM_MASTERS)-1)]
PORT M_RBDATA = APUFCMRBDATA, DIR = I, VEC = [0:((C_DATA_WIDTH*C_FCB_NUM_MASTERS)-1)]
PORT M_WRITEBACKOK = APUFCMWRITEBACKOK, DIR = I, VEC = [0:(C_FCB_NUM_MASTERS-1)]
PORT M_XERCA = APUFCMXERCA, DIR = I, VEC = [0:(C_FCB_NUM_MASTERS-1)]
PORT FCB_CR = FCMAPUCR, DIR = O, VEC = [0:3]
PORT FCB_DCDCREN = FCMAPUDCDCREN, DIR = O
PORT FCB_DCDFORCEALIGN = FCMAPUDCDFORCEALIGN, DIR = O
PORT FCB_DCDFORCEBESTEERING = FCMAPUDCDFORCEBESTEERING, DIR = O
PORT FCB_DCDFPUOP = FCMAPUDCDFPUOP, DIR = O
PORT FCB_DCDGPRWRITE = FCMAPUDCDGPRWRITE, DIR = O
PORT FCB_DCDLDSTBYTE = FCMAPUDCDLDSTBYTE, DIR = O
PORT FCB_DCDLDSTDW = FCMAPUDCDLDSTDW, DIR = O
PORT FCB_DCDLDSTHW = FCMAPUDCDLDSTHW, DIR = O
PORT FCB_DCDLDSTQW = FCMAPUDCDLDSTQW, DIR = O
PORT FCB_DCDLDSTWD = FCMAPUDCDLDSTWD, DIR = O
PORT FCB_DCDLOAD = FCMAPUDCDLOAD, DIR = O
PORT FCB_DCDPRIVOP = FCMAPUDCDPRIVOP, DIR = O
PORT FCB_DCDRAEN = FCMAPUDCDRAEN, DIR = O
PORT FCB_DCDRBEN = FCMAPUDCDRBEN, DIR = O
PORT FCB_DCDSTORE = FCMAPUDCDSTORE, DIR = O
PORT FCB_DCDTRAPBE = FCMAPUDCDTRAPBE, DIR = O
PORT FCB_DCDTRAPLE = FCMAPUDCDTRAPLE, DIR = O
PORT FCB_DCDUPDATE = FCMAPUDCDUPDATE, DIR = O
PORT FCB_DCDXERCAEN = FCMAPUDCDXERCAEN, DIR = O
PORT FCB_DCDXEROVEN = FCMAPUDCDXEROVEN, DIR = O
PORT FCB_DECODEBUSY = FCMAPUDECODEBUSY, DIR = O
PORT FCB_DONE = FCMAPUDONE, DIR = O
PORT FCB_EXCEPTION = FCMAPUEXCEPTION, DIR = O
PORT FCB_EXEBLOCKINGMCO = FCMAPUEXEBLOCKINGMCO, DIR = O
PORT FCB_EXECRFIELD = FCMAPUEXECRFIELD, DIR = O, VEC = [0:2]
PORT FCB_EXENONBLOCKINGMCO = FCMAPUEXENONBLOCKINGMCO, DIR = O
PORT FCB_INSTRACK = FCMAPUINSTRACK, DIR = O
PORT FCB_LOADWAIT = FCMAPULOADWAIT, DIR = O
PORT FCB_RESULT = FCMAPURESULT, DIR = O, VEC = [0:C_DATA_WIDTH-1]
PORT FCB_RESULTVALID = FCMAPURESULTVALID, DIR = O
PORT FCB_SLEEPNOTREADY = FCMAPUSLEEPNOTREADY, DIR = O
PORT FCB_FCM_XERCA = FCMAPUXERCA, DIR = O
PORT FCB_XEROV = FCMAPUXEROV, DIR = O
PORT FCB_DECODED = FCB_DECODED, DIR = O
PORT FCB_DECUDI = FCB_DECUDI, DIR = O, VEC = [0:2]
PORT FCB_DECUDIVALID = FCB_DECUDIVALID, DIR = O
PORT FCB_ENDIAN = FCB_ENDIAN, DIR = O
PORT FCB_FLUSH = FCB_FLUSH, DIR = O
PORT FCB_INSTRUCTION = FCB_INSTRUCTION, DIR = O, VEC = [0:C_DATA_WIDTH-1]
PORT FCB_INSTRVALID = FCB_INSTRVALID, DIR = O
PORT FCB_LOADBYTEEN = FCB_LOADBYTEEN, DIR = O, VEC = [0:C_DATA_WIDTH/8-1]
PORT FCB_LOADDATA = FCB_LOADDATA, DIR = O, VEC = [0:C_DATA_WIDTH-1]
PORT FCB_LOADDVALID = FCB_LOADDVALID, DIR = O
PORT FCB_OPERANDVALID = FCB_OPERANDVALID, DIR = O
PORT FCB_RADATA = FCB_RADATA, DIR = O, VEC = [0:C_DATA_WIDTH-1]
PORT FCB_RBDATA = FCB_RBDATA, DIR = O, VEC = [0:C_DATA_WIDTH-1]
PORT FCB_WRITEBACKOK = FCB_WRITEBACKOK, DIR = O
PORT FCB_APU_XERCA = FCB_XERCA, DIR = O
PORT FCB_ABORTDECODE = FCB_ABORTDECODE, DIR = O
PORT Sl_CR = Sl_CR, DIR = I, VEC = [0:((4*C_FCB_NUM_SLAVES)-1)]
PORT Sl_DCDCREN = Sl_DCDCREN, DIR = I, VEC = [0:(C_FCB_NUM_SLAVES-1)]
PORT Sl_DCDFORCEALIGN = Sl_DCDFORCEALIGN, DIR = I, VEC = [0:(C_FCB_NUM_SLAVES-1)]
PORT Sl_DCDFORCEBESTEERING = Sl_DCDFORCEBESTEERING, DIR = I, VEC = [0:(C_FCB_NUM_SLAVES-1)]
PORT Sl_DCDFPUOP = Sl_DCDFPUOP, DIR = I, VEC = [0:(C_FCB_NUM_SLAVES-1)]
PORT Sl_DCDGPRWRITE = Sl_DCDGPRWRITE, DIR = I, VEC = [0:(C_FCB_NUM_SLAVES-1)]
PORT Sl_DCDLDSTBYTE = Sl_DCDLDSTBYTE, DIR = I, VEC = [0:(C_FCB_NUM_SLAVES-1)]
PORT Sl_DCDLDSTDW = Sl_DCDLDSTDW, DIR = I, VEC = [0:(C_FCB_NUM_SLAVES-1)]
PORT Sl_DCDLDSTHW = Sl_DCDLDSTHW, DIR = I, VEC = [0:(C_FCB_NUM_SLAVES-1)]
PORT Sl_DCDLDSTQW = Sl_DCDLDSTQW, DIR = I, VEC = [0:(C_FCB_NUM_SLAVES-1)]
PORT Sl_DCDLDSTWD = Sl_DCDLDSTWD, DIR = I, VEC = [0:(C_FCB_NUM_SLAVES-1)]
PORT Sl_DCDLOAD = Sl_DCDLOAD, DIR = I, VEC = [0:(C_FCB_NUM_SLAVES-1)]
PORT Sl_DCDPRIVOP = Sl_DCDPRIVOP, DIR = I, VEC = [0:(C_FCB_NUM_SLAVES-1)]
PORT Sl_DCDRAEN = Sl_DCDRAEN, DIR = I, VEC = [0:(C_FCB_NUM_SLAVES-1)]
PORT Sl_DCDRBEN = Sl_DCDRBEN, DIR = I, VEC = [0:(C_FCB_NUM_SLAVES-1)]
PORT Sl_DCDSTORE = Sl_DCDSTORE, DIR = I, VEC = [0:(C_FCB_NUM_SLAVES-1)]
PORT Sl_DCDTRAPBE = Sl_DCDTRAPBE, DIR = I, VEC = [0:(C_FCB_NUM_SLAVES-1)]
PORT Sl_DCDTRAPLE = Sl_DCDTRAPLE, DIR = I, VEC = [0:(C_FCB_NUM_SLAVES-1)]
PORT Sl_DCDUPDATE = Sl_DCDUPDATE, DIR = I, VEC = [0:(C_FCB_NUM_SLAVES-1)]
PORT Sl_DCDXERCAEN = Sl_DCDXERCAEN, DIR = I, VEC = [0:(C_FCB_NUM_SLAVES-1)]
PORT Sl_DCDXEROVEN = Sl_DCDXEROVEN, DIR = I, VEC = [0:(C_FCB_NUM_SLAVES-1)]
PORT Sl_DECODEBUSY = Sl_DECODEBUSY, DIR = I, VEC = [0:(C_FCB_NUM_SLAVES-1)]
PORT Sl_DONE = Sl_DONE, DIR = I, VEC = [0:(C_FCB_NUM_SLAVES-1)]
PORT Sl_EXCEPTION = Sl_EXCEPTION, DIR = I, VEC = [0:(C_FCB_NUM_SLAVES-1)]
PORT Sl_EXEBLOCKINGMCO = Sl_EXEBLOCKINGMCO, DIR = I, VEC = [0:(C_FCB_NUM_SLAVES-1)]
PORT Sl_EXECRFIELD = Sl_EXECRFIELD, DIR = I, VEC = [0:((3*C_FCB_NUM_SLAVES)-1)]
PORT Sl_EXENONBLOCKINGMCO = Sl_EXENONBLOCKINGMCO, DIR = I, VEC = [0:(C_FCB_NUM_SLAVES-1)]
PORT Sl_INSTRACK = Sl_INSTRACK, DIR = I, VEC = [0:(C_FCB_NUM_SLAVES-1)]
PORT Sl_LOADWAIT = Sl_LOADWAIT, DIR = I, VEC = [0:(C_FCB_NUM_SLAVES-1)]
PORT Sl_RESULT = Sl_RESULT, DIR = I, VEC = [0:((C_DATA_WIDTH*C_FCB_NUM_SLAVES)-1)]
PORT Sl_RESULTVALID = Sl_RESULTVALID, DIR = I, VEC = [0:(C_FCB_NUM_SLAVES-1)]
PORT Sl_SLEEPNOTREADY = Sl_SLEEPNOTREADY, DIR = I, VEC = [0:(C_FCB_NUM_SLAVES-1)]
PORT Sl_XERCA = Sl_XERCA, DIR = I, VEC = [0:(C_FCB_NUM_SLAVES-1)]
PORT Sl_XEROV = Sl_XEROV, DIR = I, VEC = [0:(C_FCB_NUM_SLAVES-1)]

END

FINISH_SINGLE_MPD

START_SINGLE_MPD fcb2fsl_bridge_v1_00_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : fcb2fsl_bridge
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN fcb2fsl_bridge

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION LAST_UPDATED = 11.1
OPTION DESC = FCB to FSL Bridge
OPTION LONG_DESC = Connects FSL interfaced co-processor cores to the PowerPC 405 via the Fabric Co-processor Bus (FCB)
OPTION IP_GROUP = Bus and Bridge:PPC
OPTION ARCH_SUPPORT_MAP = (virtex4lx=PRODUCTION, virtex4sx=PRODUCTION, virtex4fx=PRODUCTION, qvirtex4lx=PRODUCTION, qvirtex4sx=PRODUCTION, qvirtex4fx=PRODUCTION, qrvirtex4lx=PRODUCTION, qrvirtex4sx=PRODUCTION, qrvirtex4fx=PRODUCTION)
OPTION RUN_NGCBUILD = FALSE
OPTION STYLE = HDL


## Bus Interfaces
BUS_INTERFACE BUS = SFCB, BUS_STD = FCB, BUS_TYPE = SLAVE
BUS_INTERFACE BUS = MFSL0, BUS_STD = FSL, BUS_TYPE = MASTER
BUS_INTERFACE BUS = SFSL0, BUS_STD = FSL, BUS_TYPE = SLAVE
BUS_INTERFACE BUS = MFSL1, BUS_STD = FSL, BUS_TYPE = MASTER
BUS_INTERFACE BUS = SFSL1, BUS_STD = FSL, BUS_TYPE = SLAVE
BUS_INTERFACE BUS = MFSL2, BUS_STD = FSL, BUS_TYPE = MASTER
BUS_INTERFACE BUS = SFSL2, BUS_STD = FSL, BUS_TYPE = SLAVE
BUS_INTERFACE BUS = MFSL3, BUS_STD = FSL, BUS_TYPE = MASTER
BUS_INTERFACE BUS = SFSL3, BUS_STD = FSL, BUS_TYPE = SLAVE
BUS_INTERFACE BUS = MFSL4, BUS_STD = FSL, BUS_TYPE = MASTER
BUS_INTERFACE BUS = SFSL4, BUS_STD = FSL, BUS_TYPE = SLAVE
BUS_INTERFACE BUS = MFSL5, BUS_STD = FSL, BUS_TYPE = MASTER
BUS_INTERFACE BUS = SFSL5, BUS_STD = FSL, BUS_TYPE = SLAVE
BUS_INTERFACE BUS = MFSL6, BUS_STD = FSL, BUS_TYPE = MASTER
BUS_INTERFACE BUS = SFSL6, BUS_STD = FSL, BUS_TYPE = SLAVE
BUS_INTERFACE BUS = MFSL7, BUS_STD = FSL, BUS_TYPE = MASTER
BUS_INTERFACE BUS = SFSL7, BUS_STD = FSL, BUS_TYPE = SLAVE
BUS_INTERFACE BUS = MFSL8, BUS_STD = FSL, BUS_TYPE = MASTER
BUS_INTERFACE BUS = SFSL8, BUS_STD = FSL, BUS_TYPE = SLAVE
BUS_INTERFACE BUS = MFSL9, BUS_STD = FSL, BUS_TYPE = MASTER
BUS_INTERFACE BUS = SFSL9, BUS_STD = FSL, BUS_TYPE = SLAVE
BUS_INTERFACE BUS = MFSL10, BUS_STD = FSL, BUS_TYPE = MASTER
BUS_INTERFACE BUS = SFSL10, BUS_STD = FSL, BUS_TYPE = SLAVE
BUS_INTERFACE BUS = MFSL11, BUS_STD = FSL, BUS_TYPE = MASTER
BUS_INTERFACE BUS = SFSL11, BUS_STD = FSL, BUS_TYPE = SLAVE
BUS_INTERFACE BUS = MFSL12, BUS_STD = FSL, BUS_TYPE = MASTER
BUS_INTERFACE BUS = SFSL12, BUS_STD = FSL, BUS_TYPE = SLAVE
BUS_INTERFACE BUS = MFSL13, BUS_STD = FSL, BUS_TYPE = MASTER
BUS_INTERFACE BUS = SFSL13, BUS_STD = FSL, BUS_TYPE = SLAVE
BUS_INTERFACE BUS = MFSL14, BUS_STD = FSL, BUS_TYPE = MASTER
BUS_INTERFACE BUS = SFSL14, BUS_STD = FSL, BUS_TYPE = SLAVE
BUS_INTERFACE BUS = MFSL15, BUS_STD = FSL, BUS_TYPE = MASTER
BUS_INTERFACE BUS = SFSL15, BUS_STD = FSL, BUS_TYPE = SLAVE
BUS_INTERFACE BUS = MFSL16, BUS_STD = FSL, BUS_TYPE = MASTER
BUS_INTERFACE BUS = SFSL16, BUS_STD = FSL, BUS_TYPE = SLAVE
BUS_INTERFACE BUS = MFSL17, BUS_STD = FSL, BUS_TYPE = MASTER
BUS_INTERFACE BUS = SFSL17, BUS_STD = FSL, BUS_TYPE = SLAVE
BUS_INTERFACE BUS = MFSL18, BUS_STD = FSL, BUS_TYPE = MASTER
BUS_INTERFACE BUS = SFSL18, BUS_STD = FSL, BUS_TYPE = SLAVE
BUS_INTERFACE BUS = MFSL19, BUS_STD = FSL, BUS_TYPE = MASTER
BUS_INTERFACE BUS = SFSL19, BUS_STD = FSL, BUS_TYPE = SLAVE
BUS_INTERFACE BUS = MFSL20, BUS_STD = FSL, BUS_TYPE = MASTER
BUS_INTERFACE BUS = SFSL20, BUS_STD = FSL, BUS_TYPE = SLAVE
BUS_INTERFACE BUS = MFSL21, BUS_STD = FSL, BUS_TYPE = MASTER
BUS_INTERFACE BUS = SFSL21, BUS_STD = FSL, BUS_TYPE = SLAVE
BUS_INTERFACE BUS = MFSL22, BUS_STD = FSL, BUS_TYPE = MASTER
BUS_INTERFACE BUS = SFSL22, BUS_STD = FSL, BUS_TYPE = SLAVE
BUS_INTERFACE BUS = MFSL23, BUS_STD = FSL, BUS_TYPE = MASTER
BUS_INTERFACE BUS = SFSL23, BUS_STD = FSL, BUS_TYPE = SLAVE
BUS_INTERFACE BUS = MFSL24, BUS_STD = FSL, BUS_TYPE = MASTER
BUS_INTERFACE BUS = SFSL24, BUS_STD = FSL, BUS_TYPE = SLAVE
BUS_INTERFACE BUS = MFSL25, BUS_STD = FSL, BUS_TYPE = MASTER
BUS_INTERFACE BUS = SFSL25, BUS_STD = FSL, BUS_TYPE = SLAVE
BUS_INTERFACE BUS = MFSL26, BUS_STD = FSL, BUS_TYPE = MASTER
BUS_INTERFACE BUS = SFSL26, BUS_STD = FSL, BUS_TYPE = SLAVE
BUS_INTERFACE BUS = MFSL27, BUS_STD = FSL, BUS_TYPE = MASTER
BUS_INTERFACE BUS = SFSL27, BUS_STD = FSL, BUS_TYPE = SLAVE
BUS_INTERFACE BUS = MFSL28, BUS_STD = FSL, BUS_TYPE = MASTER
BUS_INTERFACE BUS = SFSL28, BUS_STD = FSL, BUS_TYPE = SLAVE
BUS_INTERFACE BUS = MFSL29, BUS_STD = FSL, BUS_TYPE = MASTER
BUS_INTERFACE BUS = SFSL29, BUS_STD = FSL, BUS_TYPE = SLAVE
BUS_INTERFACE BUS = MFSL30, BUS_STD = FSL, BUS_TYPE = MASTER
BUS_INTERFACE BUS = SFSL30, BUS_STD = FSL, BUS_TYPE = SLAVE
BUS_INTERFACE BUS = MFSL31, BUS_STD = FSL, BUS_TYPE = MASTER
BUS_INTERFACE BUS = SFSL31, BUS_STD = FSL, BUS_TYPE = SLAVE

## Generics for VHDL or Parameters for Verilog
PARAMETER C_USE_UDI = 1, DT = INTEGER, RANGE = (0,1)
PARAMETER C_FSL_LINKS = 1, DT = INTEGER, RANGE = (1:32)
PARAMETER C_FSL_DWIDTH = 32, DT = INTEGER, RANGE = (32)
PARAMETER C_FCB_DWIDTH = 32, DT = INTEGER, RANGE = (32)
PARAMETER C_PIPELINE_FSL_ACCESS = 0, DT = INTEGER, RANGE = (0,1)
PARAMETER C_FSL_OFFSET = -1, DT = INTEGER, ASSIGNMENT = CONSTANT

## Ports
PORT FCB_CLK = "", DIR = I, ASSIGNMENT = REQUIRE
PORT FCB_RST = FCB_Rst, DIR = I, BUS = SFCB
PORT FCB_DECODED = FCB_DECODED, DIR = I, BUS = SFCB
PORT FCB_DECUDI = FCB_DECUDI, DIR = I, VEC = [0:2], BUS = SFCB
PORT FCB_DECUDIVALID = FCB_DECUDIVALID, DIR = I, BUS = SFCB
PORT FCB_ENDIAN = FCB_ENDIAN, DIR = I, BUS = SFCB
PORT FCB_FLUSH = FCB_FLUSH, DIR = I, BUS = SFCB
PORT FCB_INSTRUCTION = FCB_INSTRUCTION, DIR = I, VEC = [0:C_FCB_DWIDTH-1], BUS = SFCB
PORT FCB_INSTRVALID = FCB_INSTRVALID, DIR = I, BUS = SFCB
PORT FCB_LOADBYTEEN = FCB_LOADBYTEEN, DIR = I, VEC = [0:C_FCB_DWIDTH/8-1], BUS = SFCB
PORT FCB_LOADDATA = FCB_LOADDATA, DIR = I, VEC = [0:C_FCB_DWIDTH-1], BUS = SFCB
PORT FCB_LOADDVALID = FCB_LOADDVALID, DIR = I, BUS = SFCB
PORT FCB_OPERANDVALID = FCB_OPERANDVALID, DIR = I, BUS = SFCB
PORT FCB_RADATA = FCB_RADATA, DIR = I, VEC = [0:C_FCB_DWIDTH-1], BUS = SFCB
PORT FCB_RBDATA = FCB_RBDATA, DIR = I, VEC = [0:C_FCB_DWIDTH-1], BUS = SFCB
PORT FCB_WRITEBACKOK = FCB_WRITEBACKOK, DIR = I, BUS = SFCB
PORT FCB_XERCA = FCB_XERCA, DIR = I, BUS = SFCB
PORT FCB_ABORTDECODE = FCB_ABORTDECODE, DIR = I, BUS = SFCB
PORT Sl_CR = Sl_CR, DIR = O, VEC = [0:3], BUS = SFCB
PORT Sl_DCDCREN = Sl_DCDCREN, DIR = O, BUS = SFCB
PORT Sl_DCDFORCEALIGN = Sl_DCDFORCEALIGN, DIR = O, BUS = SFCB
PORT Sl_DCDFORCEBESTEERING = Sl_DCDFORCEBESTEERING, DIR = O, BUS = SFCB
PORT Sl_DCDFPUOP = Sl_DCDFPUOP, DIR = O, BUS = SFCB
PORT Sl_DCDGPRWRITE = Sl_DCDGPRWRITE, DIR = O, BUS = SFCB
PORT Sl_DCDLDSTBYTE = Sl_DCDLDSTBYTE, DIR = O, BUS = SFCB
PORT Sl_DCDLDSTDW = Sl_DCDLDSTDW, DIR = O, BUS = SFCB
PORT Sl_DCDLDSTHW = Sl_DCDLDSTHW, DIR = O, BUS = SFCB
PORT Sl_DCDLDSTQW = Sl_DCDLDSTQW, DIR = O, BUS = SFCB
PORT Sl_DCDLDSTWD = Sl_DCDLDSTWD, DIR = O, BUS = SFCB
PORT Sl_DCDLOAD = Sl_DCDLOAD, DIR = O, BUS = SFCB
PORT Sl_DCDPRIVOP = Sl_DCDPRIVOP, DIR = O, BUS = SFCB
PORT Sl_DCDRAEN = Sl_DCDRAEN, DIR = O, BUS = SFCB
PORT Sl_DCDRBEN = Sl_DCDRBEN, DIR = O, BUS = SFCB
PORT Sl_DCDSTORE = Sl_DCDSTORE, DIR = O, BUS = SFCB
PORT Sl_DCDTRAPBE = Sl_DCDTRAPBE, DIR = O, BUS = SFCB
PORT Sl_DCDTRAPLE = Sl_DCDTRAPLE, DIR = O, BUS = SFCB
PORT Sl_DCDUPDATE = Sl_DCDUPDATE, DIR = O, BUS = SFCB
PORT Sl_DCDXERCAEN = Sl_DCDXERCAEN, DIR = O, BUS = SFCB
PORT Sl_DCDXEROVEN = Sl_DCDXEROVEN, DIR = O, BUS = SFCB
PORT Sl_DECODEBUSY = Sl_DECODEBUSY, DIR = O, BUS = SFCB
PORT Sl_DONE = Sl_DONE, DIR = O, BUS = SFCB
PORT Sl_EXCEPTION = Sl_EXCEPTION, DIR = O, BUS = SFCB
PORT Sl_EXEBLOCKINGMCO = Sl_EXEBLOCKINGMCO, DIR = O, BUS = SFCB
PORT Sl_EXECRFIELD = Sl_EXECRFIELD, DIR = O, VEC = [0:2], BUS = SFCB
PORT Sl_EXENONBLOCKINGMCO = Sl_EXENONBLOCKINGMCO, DIR = O, BUS = SFCB
PORT Sl_INSTRACK = Sl_INSTRACK, DIR = O, BUS = SFCB
PORT Sl_LOADWAIT = Sl_LOADWAIT, DIR = O, BUS = SFCB
PORT Sl_RESULT = Sl_RESULT, DIR = O, VEC = [0:C_FCB_DWIDTH-1], BUS = SFCB
PORT Sl_RESULTVALID = Sl_RESULTVALID, DIR = O, BUS = SFCB
PORT Sl_SLEEPNOTREADY = Sl_SLEEPNOTREADY, DIR = O, BUS = SFCB
PORT Sl_XERCA = Sl_XERCA, DIR = O, BUS = SFCB
PORT Sl_XEROV = Sl_XEROV, DIR = O, BUS = SFCB
PORT FSL0_M_Clk = "", DIR = O, BUS = MFSL0
PORT FSL0_M_Data = FSL_M_Data, DIR = O, VEC = [0:(C_FSL_DWIDTH-1)], BUS = MFSL0
PORT FSL0_M_Control = FSL_M_Control, DIR = O, BUS = MFSL0
PORT FSL0_M_Write = FSL_M_Write, DIR = O, BUS = MFSL0
PORT FSL0_M_Full = FSL_M_Full, DIR = I, BUS = MFSL0
PORT FSL0_S_Clk = "", DIR = O, BUS = SFSL0
PORT FSL0_S_Data = FSL_S_Data, DIR = I, VEC = [0:(C_FSL_DWIDTH-1)], BUS = SFSL0
PORT FSL0_S_Control = FSL_S_Control, DIR = I, BUS = SFSL0
PORT FSL0_S_Read = FSL_S_Read, DIR = O, BUS = SFSL0
PORT FSL0_S_Exists = FSL_S_Exists, DIR = I, BUS = SFSL0
PORT FSL1_M_Clk = "", DIR = O, BUS = MFSL1
PORT FSL1_M_Data = FSL_M_Data, DIR = O, VEC = [0:(C_FSL_DWIDTH-1)], BUS = MFSL1
PORT FSL1_M_Control = FSL_M_Control, DIR = O, BUS = MFSL1
PORT FSL1_M_Write = FSL_M_Write, DIR = O, BUS = MFSL1
PORT FSL1_M_Full = FSL_M_Full, DIR = I, BUS = MFSL1
PORT FSL1_S_Clk = "", DIR = O, BUS = SFSL1
PORT FSL1_S_Data = FSL_S_Data, DIR = I, VEC = [0:(C_FSL_DWIDTH-1)], BUS = SFSL1
PORT FSL1_S_Control = FSL_S_Control, DIR = I, BUS = SFSL1
PORT FSL1_S_Read = FSL_S_Read, DIR = O, BUS = SFSL1
PORT FSL1_S_Exists = FSL_S_Exists, DIR = I, BUS = SFSL1
PORT FSL2_M_Clk = "", DIR = O, BUS = MFSL2
PORT FSL2_M_Data = FSL_M_Data, DIR = O, VEC = [0:(C_FSL_DWIDTH-1)], BUS = MFSL2
PORT FSL2_M_Control = FSL_M_Control, DIR = O, BUS = MFSL2
PORT FSL2_M_Write = FSL_M_Write, DIR = O, BUS = MFSL2
PORT FSL2_M_Full = FSL_M_Full, DIR = I, BUS = MFSL2
PORT FSL2_S_Clk = "", DIR = O, BUS = SFSL2
PORT FSL2_S_Data = FSL_S_Data, DIR = I, VEC = [0:(C_FSL_DWIDTH-1)], BUS = SFSL2
PORT FSL2_S_Control = FSL_S_Control, DIR = I, BUS = SFSL2
PORT FSL2_S_Read = FSL_S_Read, DIR = O, BUS = SFSL2
PORT FSL2_S_Exists = FSL_S_Exists, DIR = I, BUS = SFSL2
PORT FSL3_M_Clk = "", DIR = O, BUS = MFSL3
PORT FSL3_M_Data = FSL_M_Data, DIR = O, VEC = [0:(C_FSL_DWIDTH-1)], BUS = MFSL3
PORT FSL3_M_Control = FSL_M_Control, DIR = O, BUS = MFSL3
PORT FSL3_M_Write = FSL_M_Write, DIR = O, BUS = MFSL3
PORT FSL3_M_Full = FSL_M_Full, DIR = I, BUS = MFSL3
PORT FSL3_S_Clk = "", DIR = O, BUS = SFSL3
PORT FSL3_S_Data = FSL_S_Data, DIR = I, VEC = [0:(C_FSL_DWIDTH-1)], BUS = SFSL3
PORT FSL3_S_Control = FSL_S_Control, DIR = I, BUS = SFSL3
PORT FSL3_S_Read = FSL_S_Read, DIR = O, BUS = SFSL3
PORT FSL3_S_Exists = FSL_S_Exists, DIR = I, BUS = SFSL3
PORT FSL4_M_Clk = "", DIR = O, BUS = MFSL4
PORT FSL4_M_Data = FSL_M_Data, DIR = O, VEC = [0:(C_FSL_DWIDTH-1)], BUS = MFSL4
PORT FSL4_M_Control = FSL_M_Control, DIR = O, BUS = MFSL4
PORT FSL4_M_Write = FSL_M_Write, DIR = O, BUS = MFSL4
PORT FSL4_M_Full = FSL_M_Full, DIR = I, BUS = MFSL4
PORT FSL4_S_Clk = "", DIR = O, BUS = SFSL4
PORT FSL4_S_Data = FSL_S_Data, DIR = I, VEC = [0:(C_FSL_DWIDTH-1)], BUS = SFSL4
PORT FSL4_S_Control = FSL_S_Control, DIR = I, BUS = SFSL4
PORT FSL4_S_Read = FSL_S_Read, DIR = O, BUS = SFSL4
PORT FSL4_S_Exists = FSL_S_Exists, DIR = I, BUS = SFSL4
PORT FSL5_M_Clk = "", DIR = O, BUS = MFSL5
PORT FSL5_M_Data = FSL_M_Data, DIR = O, VEC = [0:(C_FSL_DWIDTH-1)], BUS = MFSL5
PORT FSL5_M_Control = FSL_M_Control, DIR = O, BUS = MFSL5
PORT FSL5_M_Write = FSL_M_Write, DIR = O, BUS = MFSL5
PORT FSL5_M_Full = FSL_M_Full, DIR = I, BUS = MFSL5
PORT FSL5_S_Clk = "", DIR = O, BUS = SFSL5
PORT FSL5_S_Data = FSL_S_Data, DIR = I, VEC = [0:(C_FSL_DWIDTH-1)], BUS = SFSL5
PORT FSL5_S_Control = FSL_S_Control, DIR = I, BUS = SFSL5
PORT FSL5_S_Read = FSL_S_Read, DIR = O, BUS = SFSL5
PORT FSL5_S_Exists = FSL_S_Exists, DIR = I, BUS = SFSL5
PORT FSL6_M_Clk = "", DIR = O, BUS = MFSL6
PORT FSL6_M_Data = FSL_M_Data, DIR = O, VEC = [0:(C_FSL_DWIDTH-1)], BUS = MFSL6
PORT FSL6_M_Control = FSL_M_Control, DIR = O, BUS = MFSL6
PORT FSL6_M_Write = FSL_M_Write, DIR = O, BUS = MFSL6
PORT FSL6_M_Full = FSL_M_Full, DIR = I, BUS = MFSL6
PORT FSL6_S_Clk = "", DIR = O, BUS = SFSL6
PORT FSL6_S_Data = FSL_S_Data, DIR = I, VEC = [0:(C_FSL_DWIDTH-1)], BUS = SFSL6
PORT FSL6_S_Control = FSL_S_Control, DIR = I, BUS = SFSL6
PORT FSL6_S_Read = FSL_S_Read, DIR = O, BUS = SFSL6
PORT FSL6_S_Exists = FSL_S_Exists, DIR = I, BUS = SFSL6
PORT FSL7_M_Clk = "", DIR = O, BUS = MFSL7
PORT FSL7_M_Data = FSL_M_Data, DIR = O, VEC = [0:(C_FSL_DWIDTH-1)], BUS = MFSL7
PORT FSL7_M_Control = FSL_M_Control, DIR = O, BUS = MFSL7
PORT FSL7_M_Write = FSL_M_Write, DIR = O, BUS = MFSL7
PORT FSL7_M_Full = FSL_M_Full, DIR = I, BUS = MFSL7
PORT FSL7_S_Clk = "", DIR = O, BUS = SFSL7
PORT FSL7_S_Data = FSL_S_Data, DIR = I, VEC = [0:(C_FSL_DWIDTH-1)], BUS = SFSL7
PORT FSL7_S_Control = FSL_S_Control, DIR = I, BUS = SFSL7
PORT FSL7_S_Read = FSL_S_Read, DIR = O, BUS = SFSL7
PORT FSL7_S_Exists = FSL_S_Exists, DIR = I, BUS = SFSL7
PORT FSL8_M_Clk = "", DIR = O, BUS = MFSL8
PORT FSL8_M_Data = FSL_M_Data, DIR = O, VEC = [0:(C_FSL_DWIDTH-1)], BUS = MFSL8
PORT FSL8_M_Control = FSL_M_Control, DIR = O, BUS = MFSL8
PORT FSL8_M_Write = FSL_M_Write, DIR = O, BUS = MFSL8
PORT FSL8_M_Full = FSL_M_Full, DIR = I, BUS = MFSL8
PORT FSL8_S_Clk = "", DIR = O, BUS = SFSL8
PORT FSL8_S_Data = FSL_S_Data, DIR = I, VEC = [0:(C_FSL_DWIDTH-1)], BUS = SFSL8
PORT FSL8_S_Control = FSL_S_Control, DIR = I, BUS = SFSL8
PORT FSL8_S_Read = FSL_S_Read, DIR = O, BUS = SFSL8
PORT FSL8_S_Exists = FSL_S_Exists, DIR = I, BUS = SFSL8
PORT FSL9_M_Clk = "", DIR = O, BUS = MFSL9
PORT FSL9_M_Data = FSL_M_Data, DIR = O, VEC = [0:(C_FSL_DWIDTH-1)], BUS = MFSL9
PORT FSL9_M_Control = FSL_M_Control, DIR = O, BUS = MFSL9
PORT FSL9_M_Write = FSL_M_Write, DIR = O, BUS = MFSL9
PORT FSL9_M_Full = FSL_M_Full, DIR = I, BUS = MFSL9
PORT FSL9_S_Clk = "", DIR = O, BUS = SFSL9
PORT FSL9_S_Data = FSL_S_Data, DIR = I, VEC = [0:(C_FSL_DWIDTH-1)], BUS = SFSL9
PORT FSL9_S_Control = FSL_S_Control, DIR = I, BUS = SFSL9
PORT FSL9_S_Read = FSL_S_Read, DIR = O, BUS = SFSL9
PORT FSL9_S_Exists = FSL_S_Exists, DIR = I, BUS = SFSL9
PORT FSL10_M_Clk = "", DIR = O, BUS = MFSL10
PORT FSL10_M_Data = FSL_M_Data, DIR = O, VEC = [0:(C_FSL_DWIDTH-1)], BUS = MFSL10
PORT FSL10_M_Control = FSL_M_Control, DIR = O, BUS = MFSL10
PORT FSL10_M_Write = FSL_M_Write, DIR = O, BUS = MFSL10
PORT FSL10_M_Full = FSL_M_Full, DIR = I, BUS = MFSL10
PORT FSL10_S_Clk = "", DIR = O, BUS = SFSL10
PORT FSL10_S_Data = FSL_S_Data, DIR = I, VEC = [0:(C_FSL_DWIDTH-1)], BUS = SFSL10
PORT FSL10_S_Control = FSL_S_Control, DIR = I, BUS = SFSL10
PORT FSL10_S_Read = FSL_S_Read, DIR = O, BUS = SFSL10
PORT FSL10_S_Exists = FSL_S_Exists, DIR = I, BUS = SFSL10
PORT FSL11_M_Clk = "", DIR = O, BUS = MFSL11
PORT FSL11_M_Data = FSL_M_Data, DIR = O, VEC = [0:(C_FSL_DWIDTH-1)], BUS = MFSL11
PORT FSL11_M_Control = FSL_M_Control, DIR = O, BUS = MFSL11
PORT FSL11_M_Write = FSL_M_Write, DIR = O, BUS = MFSL11
PORT FSL11_M_Full = FSL_M_Full, DIR = I, BUS = MFSL11
PORT FSL11_S_Clk = "", DIR = O, BUS = SFSL11
PORT FSL11_S_Data = FSL_S_Data, DIR = I, VEC = [0:(C_FSL_DWIDTH-1)], BUS = SFSL11
PORT FSL11_S_Control = FSL_S_Control, DIR = I, BUS = SFSL11
PORT FSL11_S_Read = FSL_S_Read, DIR = O, BUS = SFSL11
PORT FSL11_S_Exists = FSL_S_Exists, DIR = I, BUS = SFSL11
PORT FSL12_M_Clk = "", DIR = O, BUS = MFSL12
PORT FSL12_M_Data = FSL_M_Data, DIR = O, VEC = [0:(C_FSL_DWIDTH-1)], BUS = MFSL12
PORT FSL12_M_Control = FSL_M_Control, DIR = O, BUS = MFSL12
PORT FSL12_M_Write = FSL_M_Write, DIR = O, BUS = MFSL12
PORT FSL12_M_Full = FSL_M_Full, DIR = I, BUS = MFSL12
PORT FSL12_S_Clk = "", DIR = O, BUS = SFSL12
PORT FSL12_S_Data = FSL_S_Data, DIR = I, VEC = [0:(C_FSL_DWIDTH-1)], BUS = SFSL12
PORT FSL12_S_Control = FSL_S_Control, DIR = I, BUS = SFSL12
PORT FSL12_S_Read = FSL_S_Read, DIR = O, BUS = SFSL12
PORT FSL12_S_Exists = FSL_S_Exists, DIR = I, BUS = SFSL12
PORT FSL13_M_Clk = "", DIR = O, BUS = MFSL13
PORT FSL13_M_Data = FSL_M_Data, DIR = O, VEC = [0:(C_FSL_DWIDTH-1)], BUS = MFSL13
PORT FSL13_M_Control = FSL_M_Control, DIR = O, BUS = MFSL13
PORT FSL13_M_Write = FSL_M_Write, DIR = O, BUS = MFSL13
PORT FSL13_M_Full = FSL_M_Full, DIR = I, BUS = MFSL13
PORT FSL13_S_Clk = "", DIR = O, BUS = SFSL13
PORT FSL13_S_Data = FSL_S_Data, DIR = I, VEC = [0:(C_FSL_DWIDTH-1)], BUS = SFSL13
PORT FSL13_S_Control = FSL_S_Control, DIR = I, BUS = SFSL13
PORT FSL13_S_Read = FSL_S_Read, DIR = O, BUS = SFSL13
PORT FSL13_S_Exists = FSL_S_Exists, DIR = I, BUS = SFSL13
PORT FSL14_M_Clk = "", DIR = O, BUS = MFSL14
PORT FSL14_M_Data = FSL_M_Data, DIR = O, VEC = [0:(C_FSL_DWIDTH-1)], BUS = MFSL14
PORT FSL14_M_Control = FSL_M_Control, DIR = O, BUS = MFSL14
PORT FSL14_M_Write = FSL_M_Write, DIR = O, BUS = MFSL14
PORT FSL14_M_Full = FSL_M_Full, DIR = I, BUS = MFSL14
PORT FSL14_S_Clk = "", DIR = O, BUS = SFSL14
PORT FSL14_S_Data = FSL_S_Data, DIR = I, VEC = [0:(C_FSL_DWIDTH-1)], BUS = SFSL14
PORT FSL14_S_Control = FSL_S_Control, DIR = I, BUS = SFSL14
PORT FSL14_S_Read = FSL_S_Read, DIR = O, BUS = SFSL14
PORT FSL14_S_Exists = FSL_S_Exists, DIR = I, BUS = SFSL14
PORT FSL15_M_Clk = "", DIR = O, BUS = MFSL15
PORT FSL15_M_Data = FSL_M_Data, DIR = O, VEC = [0:(C_FSL_DWIDTH-1)], BUS = MFSL15
PORT FSL15_M_Control = FSL_M_Control, DIR = O, BUS = MFSL15
PORT FSL15_M_Write = FSL_M_Write, DIR = O, BUS = MFSL15
PORT FSL15_M_Full = FSL_M_Full, DIR = I, BUS = MFSL15
PORT FSL15_S_Clk = "", DIR = O, BUS = SFSL15
PORT FSL15_S_Data = FSL_S_Data, DIR = I, VEC = [0:(C_FSL_DWIDTH-1)], BUS = SFSL15
PORT FSL15_S_Control = FSL_S_Control, DIR = I, BUS = SFSL15
PORT FSL15_S_Read = FSL_S_Read, DIR = O, BUS = SFSL15
PORT FSL15_S_Exists = FSL_S_Exists, DIR = I, BUS = SFSL15
PORT FSL16_M_Clk = "", DIR = O, BUS = MFSL16
PORT FSL16_M_Data = FSL_M_Data, DIR = O, VEC = [0:(C_FSL_DWIDTH-1)], BUS = MFSL16
PORT FSL16_M_Control = FSL_M_Control, DIR = O, BUS = MFSL16
PORT FSL16_M_Write = FSL_M_Write, DIR = O, BUS = MFSL16
PORT FSL16_M_Full = FSL_M_Full, DIR = I, BUS = MFSL16
PORT FSL16_S_Clk = "", DIR = O, BUS = SFSL16
PORT FSL16_S_Data = FSL_S_Data, DIR = I, VEC = [0:(C_FSL_DWIDTH-1)], BUS = SFSL16
PORT FSL16_S_Control = FSL_S_Control, DIR = I, BUS = SFSL16
PORT FSL16_S_Read = FSL_S_Read, DIR = O, BUS = SFSL16
PORT FSL16_S_Exists = FSL_S_Exists, DIR = I, BUS = SFSL16
PORT FSL17_M_Clk = "", DIR = O, BUS = MFSL17
PORT FSL17_M_Data = FSL_M_Data, DIR = O, VEC = [0:(C_FSL_DWIDTH-1)], BUS = MFSL17
PORT FSL17_M_Control = FSL_M_Control, DIR = O, BUS = MFSL17
PORT FSL17_M_Write = FSL_M_Write, DIR = O, BUS = MFSL17
PORT FSL17_M_Full = FSL_M_Full, DIR = I, BUS = MFSL17
PORT FSL17_S_Clk = "", DIR = O, BUS = SFSL17
PORT FSL17_S_Data = FSL_S_Data, DIR = I, VEC = [0:(C_FSL_DWIDTH-1)], BUS = SFSL17
PORT FSL17_S_Control = FSL_S_Control, DIR = I, BUS = SFSL17
PORT FSL17_S_Read = FSL_S_Read, DIR = O, BUS = SFSL17
PORT FSL17_S_Exists = FSL_S_Exists, DIR = I, BUS = SFSL17
PORT FSL18_M_Clk = "", DIR = O, BUS = MFSL18
PORT FSL18_M_Data = FSL_M_Data, DIR = O, VEC = [0:(C_FSL_DWIDTH-1)], BUS = MFSL18
PORT FSL18_M_Control = FSL_M_Control, DIR = O, BUS = MFSL18
PORT FSL18_M_Write = FSL_M_Write, DIR = O, BUS = MFSL18
PORT FSL18_M_Full = FSL_M_Full, DIR = I, BUS = MFSL18
PORT FSL18_S_Clk = "", DIR = O, BUS = SFSL18
PORT FSL18_S_Data = FSL_S_Data, DIR = I, VEC = [0:(C_FSL_DWIDTH-1)], BUS = SFSL18
PORT FSL18_S_Control = FSL_S_Control, DIR = I, BUS = SFSL18
PORT FSL18_S_Read = FSL_S_Read, DIR = O, BUS = SFSL18
PORT FSL18_S_Exists = FSL_S_Exists, DIR = I, BUS = SFSL18
PORT FSL19_M_Clk = "", DIR = O, BUS = MFSL19
PORT FSL19_M_Data = FSL_M_Data, DIR = O, VEC = [0:(C_FSL_DWIDTH-1)], BUS = MFSL19
PORT FSL19_M_Control = FSL_M_Control, DIR = O, BUS = MFSL19
PORT FSL19_M_Write = FSL_M_Write, DIR = O, BUS = MFSL19
PORT FSL19_M_Full = FSL_M_Full, DIR = I, BUS = MFSL19
PORT FSL19_S_Clk = "", DIR = O, BUS = SFSL19
PORT FSL19_S_Data = FSL_S_Data, DIR = I, VEC = [0:(C_FSL_DWIDTH-1)], BUS = SFSL19
PORT FSL19_S_Control = FSL_S_Control, DIR = I, BUS = SFSL19
PORT FSL19_S_Read = FSL_S_Read, DIR = O, BUS = SFSL19
PORT FSL19_S_Exists = FSL_S_Exists, DIR = I, BUS = SFSL19
PORT FSL20_M_Clk = "", DIR = O, BUS = MFSL20
PORT FSL20_M_Data = FSL_M_Data, DIR = O, VEC = [0:(C_FSL_DWIDTH-1)], BUS = MFSL20
PORT FSL20_M_Control = FSL_M_Control, DIR = O, BUS = MFSL20
PORT FSL20_M_Write = FSL_M_Write, DIR = O, BUS = MFSL20
PORT FSL20_M_Full = FSL_M_Full, DIR = I, BUS = MFSL20
PORT FSL20_S_Clk = "", DIR = O, BUS = SFSL20
PORT FSL20_S_Data = FSL_S_Data, DIR = I, VEC = [0:(C_FSL_DWIDTH-1)], BUS = SFSL20
PORT FSL20_S_Control = FSL_S_Control, DIR = I, BUS = SFSL20
PORT FSL20_S_Read = FSL_S_Read, DIR = O, BUS = SFSL20
PORT FSL20_S_Exists = FSL_S_Exists, DIR = I, BUS = SFSL20
PORT FSL21_M_Clk = "", DIR = O, BUS = MFSL21
PORT FSL21_M_Data = FSL_M_Data, DIR = O, VEC = [0:(C_FSL_DWIDTH-1)], BUS = MFSL21
PORT FSL21_M_Control = FSL_M_Control, DIR = O, BUS = MFSL21
PORT FSL21_M_Write = FSL_M_Write, DIR = O, BUS = MFSL21
PORT FSL21_M_Full = FSL_M_Full, DIR = I, BUS = MFSL21
PORT FSL21_S_Clk = "", DIR = O, BUS = SFSL21
PORT FSL21_S_Data = FSL_S_Data, DIR = I, VEC = [0:(C_FSL_DWIDTH-1)], BUS = SFSL21
PORT FSL21_S_Control = FSL_S_Control, DIR = I, BUS = SFSL21
PORT FSL21_S_Read = FSL_S_Read, DIR = O, BUS = SFSL21
PORT FSL21_S_Exists = FSL_S_Exists, DIR = I, BUS = SFSL21
PORT FSL22_M_Clk = "", DIR = O, BUS = MFSL22
PORT FSL22_M_Data = FSL_M_Data, DIR = O, VEC = [0:(C_FSL_DWIDTH-1)], BUS = MFSL22
PORT FSL22_M_Control = FSL_M_Control, DIR = O, BUS = MFSL22
PORT FSL22_M_Write = FSL_M_Write, DIR = O, BUS = MFSL22
PORT FSL22_M_Full = FSL_M_Full, DIR = I, BUS = MFSL22
PORT FSL22_S_Clk = "", DIR = O, BUS = SFSL22
PORT FSL22_S_Data = FSL_S_Data, DIR = I, VEC = [0:(C_FSL_DWIDTH-1)], BUS = SFSL22
PORT FSL22_S_Control = FSL_S_Control, DIR = I, BUS = SFSL22
PORT FSL22_S_Read = FSL_S_Read, DIR = O, BUS = SFSL22
PORT FSL22_S_Exists = FSL_S_Exists, DIR = I, BUS = SFSL22
PORT FSL23_M_Clk = "", DIR = O, BUS = MFSL23
PORT FSL23_M_Data = FSL_M_Data, DIR = O, VEC = [0:(C_FSL_DWIDTH-1)], BUS = MFSL23
PORT FSL23_M_Control = FSL_M_Control, DIR = O, BUS = MFSL23
PORT FSL23_M_Write = FSL_M_Write, DIR = O, BUS = MFSL23
PORT FSL23_M_Full = FSL_M_Full, DIR = I, BUS = MFSL23
PORT FSL23_S_Clk = "", DIR = O, BUS = SFSL23
PORT FSL23_S_Data = FSL_S_Data, DIR = I, VEC = [0:(C_FSL_DWIDTH-1)], BUS = SFSL23
PORT FSL23_S_Control = FSL_S_Control, DIR = I, BUS = SFSL23
PORT FSL23_S_Read = FSL_S_Read, DIR = O, BUS = SFSL23
PORT FSL23_S_Exists = FSL_S_Exists, DIR = I, BUS = SFSL23
PORT FSL24_M_Clk = "", DIR = O, BUS = MFSL24
PORT FSL24_M_Data = FSL_M_Data, DIR = O, VEC = [0:(C_FSL_DWIDTH-1)], BUS = MFSL24
PORT FSL24_M_Control = FSL_M_Control, DIR = O, BUS = MFSL24
PORT FSL24_M_Write = FSL_M_Write, DIR = O, BUS = MFSL24
PORT FSL24_M_Full = FSL_M_Full, DIR = I, BUS = MFSL24
PORT FSL24_S_Clk = "", DIR = O, BUS = SFSL24
PORT FSL24_S_Data = FSL_S_Data, DIR = I, VEC = [0:(C_FSL_DWIDTH-1)], BUS = SFSL24
PORT FSL24_S_Control = FSL_S_Control, DIR = I, BUS = SFSL24
PORT FSL24_S_Read = FSL_S_Read, DIR = O, BUS = SFSL24
PORT FSL24_S_Exists = FSL_S_Exists, DIR = I, BUS = SFSL24
PORT FSL25_M_Clk = "", DIR = O, BUS = MFSL25
PORT FSL25_M_Data = FSL_M_Data, DIR = O, VEC = [0:(C_FSL_DWIDTH-1)], BUS = MFSL25
PORT FSL25_M_Control = FSL_M_Control, DIR = O, BUS = MFSL25
PORT FSL25_M_Write = FSL_M_Write, DIR = O, BUS = MFSL25
PORT FSL25_M_Full = FSL_M_Full, DIR = I, BUS = MFSL25
PORT FSL25_S_Clk = "", DIR = O, BUS = SFSL25
PORT FSL25_S_Data = FSL_S_Data, DIR = I, VEC = [0:(C_FSL_DWIDTH-1)], BUS = SFSL25
PORT FSL25_S_Control = FSL_S_Control, DIR = I, BUS = SFSL25
PORT FSL25_S_Read = FSL_S_Read, DIR = O, BUS = SFSL25
PORT FSL25_S_Exists = FSL_S_Exists, DIR = I, BUS = SFSL25
PORT FSL26_M_Clk = "", DIR = O, BUS = MFSL26
PORT FSL26_M_Data = FSL_M_Data, DIR = O, VEC = [0:(C_FSL_DWIDTH-1)], BUS = MFSL26
PORT FSL26_M_Control = FSL_M_Control, DIR = O, BUS = MFSL26
PORT FSL26_M_Write = FSL_M_Write, DIR = O, BUS = MFSL26
PORT FSL26_M_Full = FSL_M_Full, DIR = I, BUS = MFSL26
PORT FSL26_S_Clk = "", DIR = O, BUS = SFSL26
PORT FSL26_S_Data = FSL_S_Data, DIR = I, VEC = [0:(C_FSL_DWIDTH-1)], BUS = SFSL26
PORT FSL26_S_Control = FSL_S_Control, DIR = I, BUS = SFSL26
PORT FSL26_S_Read = FSL_S_Read, DIR = O, BUS = SFSL26
PORT FSL26_S_Exists = FSL_S_Exists, DIR = I, BUS = SFSL26
PORT FSL27_M_Clk = "", DIR = O, BUS = MFSL27
PORT FSL27_M_Data = FSL_M_Data, DIR = O, VEC = [0:(C_FSL_DWIDTH-1)], BUS = MFSL27
PORT FSL27_M_Control = FSL_M_Control, DIR = O, BUS = MFSL27
PORT FSL27_M_Write = FSL_M_Write, DIR = O, BUS = MFSL27
PORT FSL27_M_Full = FSL_M_Full, DIR = I, BUS = MFSL27
PORT FSL27_S_Clk = "", DIR = O, BUS = SFSL27
PORT FSL27_S_Data = FSL_S_Data, DIR = I, VEC = [0:(C_FSL_DWIDTH-1)], BUS = SFSL27
PORT FSL27_S_Control = FSL_S_Control, DIR = I, BUS = SFSL27
PORT FSL27_S_Read = FSL_S_Read, DIR = O, BUS = SFSL27
PORT FSL27_S_Exists = FSL_S_Exists, DIR = I, BUS = SFSL27
PORT FSL28_M_Clk = "", DIR = O, BUS = MFSL28
PORT FSL28_M_Data = FSL_M_Data, DIR = O, VEC = [0:(C_FSL_DWIDTH-1)], BUS = MFSL28
PORT FSL28_M_Control = FSL_M_Control, DIR = O, BUS = MFSL28
PORT FSL28_M_Write = FSL_M_Write, DIR = O, BUS = MFSL28
PORT FSL28_M_Full = FSL_M_Full, DIR = I, BUS = MFSL28
PORT FSL28_S_Clk = "", DIR = O, BUS = SFSL28
PORT FSL28_S_Data = FSL_S_Data, DIR = I, VEC = [0:(C_FSL_DWIDTH-1)], BUS = SFSL28
PORT FSL28_S_Control = FSL_S_Control, DIR = I, BUS = SFSL28
PORT FSL28_S_Read = FSL_S_Read, DIR = O, BUS = SFSL28
PORT FSL28_S_Exists = FSL_S_Exists, DIR = I, BUS = SFSL28
PORT FSL29_M_Clk = "", DIR = O, BUS = MFSL29
PORT FSL29_M_Data = FSL_M_Data, DIR = O, VEC = [0:(C_FSL_DWIDTH-1)], BUS = MFSL29
PORT FSL29_M_Control = FSL_M_Control, DIR = O, BUS = MFSL29
PORT FSL29_M_Write = FSL_M_Write, DIR = O, BUS = MFSL29
PORT FSL29_M_Full = FSL_M_Full, DIR = I, BUS = MFSL29
PORT FSL29_S_Clk = "", DIR = O, BUS = SFSL29
PORT FSL29_S_Data = FSL_S_Data, DIR = I, VEC = [0:(C_FSL_DWIDTH-1)], BUS = SFSL29
PORT FSL29_S_Control = FSL_S_Control, DIR = I, BUS = SFSL29
PORT FSL29_S_Read = FSL_S_Read, DIR = O, BUS = SFSL29
PORT FSL29_S_Exists = FSL_S_Exists, DIR = I, BUS = SFSL29
PORT FSL30_M_Clk = "", DIR = O, BUS = MFSL30
PORT FSL30_M_Data = FSL_M_Data, DIR = O, VEC = [0:(C_FSL_DWIDTH-1)], BUS = MFSL30
PORT FSL30_M_Control = FSL_M_Control, DIR = O, BUS = MFSL30
PORT FSL30_M_Write = FSL_M_Write, DIR = O, BUS = MFSL30
PORT FSL30_M_Full = FSL_M_Full, DIR = I, BUS = MFSL30
PORT FSL30_S_Clk = "", DIR = O, BUS = SFSL30
PORT FSL30_S_Data = FSL_S_Data, DIR = I, VEC = [0:(C_FSL_DWIDTH-1)], BUS = SFSL30
PORT FSL30_S_Control = FSL_S_Control, DIR = I, BUS = SFSL30
PORT FSL30_S_Read = FSL_S_Read, DIR = O, BUS = SFSL30
PORT FSL30_S_Exists = FSL_S_Exists, DIR = I, BUS = SFSL30
PORT FSL31_M_Clk = "", DIR = O, BUS = MFSL31
PORT FSL31_M_Data = FSL_M_Data, DIR = O, VEC = [0:(C_FSL_DWIDTH-1)], BUS = MFSL31
PORT FSL31_M_Control = FSL_M_Control, DIR = O, BUS = MFSL31
PORT FSL31_M_Write = FSL_M_Write, DIR = O, BUS = MFSL31
PORT FSL31_M_Full = FSL_M_Full, DIR = I, BUS = MFSL31
PORT FSL31_S_Clk = "", DIR = O, BUS = SFSL31
PORT FSL31_S_Data = FSL_S_Data, DIR = I, VEC = [0:(C_FSL_DWIDTH-1)], BUS = SFSL31
PORT FSL31_S_Control = FSL_S_Control, DIR = I, BUS = SFSL31
PORT FSL31_S_Read = FSL_S_Read, DIR = O, BUS = SFSL31
PORT FSL31_S_Exists = FSL_S_Exists, DIR = I, BUS = SFSL31

END

FINISH_SINGLE_MPD

START_SINGLE_MPD opb2dcr_bridge_v1_00_b 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : opb2dcr_bridge
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN opb2dcr_bridge

## Peripheral Options
OPTION STYLE = HDL
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION LAST_UPDATED = 11.4
OPTION DESC = OPB to DCR Bridge
OPTION LONG_DESC = Translates transactions received on its OPB slave interface into DCR master operations
OPTION IP_GROUP = Bus and Bridge:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=SUPERSEDED, spartan3=SUPERSEDED, spartan3an=SUPERSEDED, spartan3a=SUPERSEDED, spartan3e=SUPERSEDED, spartan3adsp=SUPERSEDED, virtex4lx=SUPERSEDED, virtex4sx=SUPERSEDED, virtex4fx=SUPERSEDED, virtex5lx=SUPERSEDED, virtex5sx=SUPERSEDED, virtex5fx=SUPERSEDED, aspartan3e=SUPERSEDED, aspartan3a=SUPERSEDED, aspartan3adsp=SUPERSEDED, qvirtex4lx=SUPERSEDED, qvirtex4sx=SUPERSEDED, qvirtex4fx=SUPERSEDED, qrvirtex4lx=SUPERSEDED, qrvirtex4sx=SUPERSEDED, qrvirtex4fx=SUPERSEDED, spartan6t=SUPERSEDED, spartan6=SUPERSEDED, spartan6l=SUPERSEDED, qspartan6t=SUPERSEDED, qspartan6=SUPERSEDED, aspartan6t=SUPERSEDED, aspartan6=SUPERSEDED, virtex6lx=SUPERSEDED, virtex6sx=SUPERSEDED, virtex6hx=SUPERSEDED, virtex6cx=SUPERSEDED, virtex6llx=SUPERSEDED, virtex6lsx=SUPERSEDED, qspartan6l=SUPERSEDED, qrvirtex5=SUPERSEDED, qvirtex6lx=SUPERSEDED, qvirtex6sx=SUPERSEDED, qvirtex6fx=SUPERSEDED, qvirtex6tx=SUPERSEDED)
OPTION RUN_NGCBUILD = FALSE


## Bus Interfaces
BUS_INTERFACE BUS = SOPB, BUS_STD = OPB, BUS_TYPE = SLAVE
BUS_INTERFACE BUS = MDCR, BUS_STD = DCR, BUS_TYPE = MASTER

## Generics for VHDL or Parameters for Verilog
PARAMETER C_BASEADDR = 0xffffffff, DT = std_logic_vector, BRIDGE_TO = MDCR, BUS = SOPB, ADDRESS = BASE, PAIR = C_HIGHADDR
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = SOPB, ADDRESS = HIGH, PAIR = C_BASEADDR
PARAMETER C_OPB_AWIDTH = 32, DT = INTEGER, BUS = SOPB
PARAMETER C_OPB_DWIDTH = 32, DT = INTEGER, BUS = SOPB
PARAMETER C_FAMILY = virtex2p, DT = STRING

## Ports
PORT OPB_Clk = "", DIR = I, BUS = SOPB, SIGIS = Clk
PORT OPB_Rst = OPB_Rst, DIR = I, SIGIS = Rst, BUS = SOPB
PORT OPB_ABus = OPB_ABus, DIR = I, VEC = [0:(C_OPB_AWIDTH-1)], BUS = SOPB
PORT OPB_BE = OPB_BE, DIR = I, VEC = [0:((C_OPB_DWIDTH/8)-1)], BUS = SOPB
PORT OPB_DBus = OPB_DBus, DIR = I, VEC = [0:(C_OPB_DWIDTH-1)], BUS = SOPB
PORT OPB_RNW = OPB_RNW, DIR = I, BUS = SOPB
PORT OPB_Select = OPB_select, DIR = I, BUS = SOPB
PORT OPB_seqAddr = OPB_seqAddr, DIR = I, BUS = SOPB
PORT OPB_xferAck = OPB_xferAck, DIR = I, BUS = SOPB
PORT OPB_errAck = OPB_errAck, DIR = I, BUS = SOPB
PORT OPB_retry = OPB_retry, DIR = I, BUS = SOPB
PORT OPB_timeout = OPB_timeout, DIR = I, BUS = SOPB
PORT Sln_DBus = Sl_DBus, DIR = O, VEC = [0:(C_OPB_DWIDTH-1)], BUS = SOPB
PORT Sln_XferAck = Sl_xferAck, DIR = O, BUS = SOPB
PORT Sln_Retry = Sl_retry, DIR = O, BUS = SOPB
PORT Sln_ToutSup = Sl_toutSup, DIR = O, BUS = SOPB
PORT Sln_ErrAck = Sl_errAck, DIR = O, BUS = SOPB
PORT DCR_opbAck = DCR_Ack, DIR = I, BUS = MDCR
PORT DCR_opbDBusIn = DCR_M_DBus, DIR = I, VEC = [0:31], BUS = MDCR
PORT OPB_dcrClk = "", DIR = O, SIGIS = Clk
PORT OPB_dcrRst = "", DIR = O
PORT OPB_dcrRead = M_dcrRead, DIR = O, BUS = MDCR
PORT OPB_dcrWrite = M_dcrWrite, DIR = O, BUS = MDCR
PORT OPB_dcrABus = M_dcrABus, DIR = O, VEC = [0:9], BUS = MDCR
PORT OPB_dcrDBusOut = M_dcrDBus, DIR = O, VEC = [0:31], BUS = MDCR

END

FINISH_SINGLE_MPD

START_SINGLE_MPD chipscope_opb_iba_v1_01_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : chipscope_opb_iba
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN chipscope_opb_iba

## Peripheral Options
OPTION IMP_NETLIST = TRUE
OPTION IPTYPE = PERIPHERAL
OPTION STYLE = MIX
OPTION RUN_NGCBUILD = TRUE
OPTION IPLEVEL_DRC_PROC = opb_iba_drc
OPTION ELABORATE_PROC = opb_iba_generate
OPTION LAST_UPDATED = 11.3
OPTION DESC = Chipscope OPB Integrated Bus Analyzer (IBA)
OPTION LONG_DESC = Chipscope OPB Bus Analyzer
OPTION IP_GROUP = Debug:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=SUPERSEDED, spartan3=SUPERSEDED, spartan3an=SUPERSEDED, spartan3a=SUPERSEDED, spartan3e=SUPERSEDED, spartan3adsp=SUPERSEDED, virtex4lx=SUPERSEDED, virtex4sx=SUPERSEDED, virtex4fx=SUPERSEDED, virtex5lx=SUPERSEDED, virtex5sx=SUPERSEDED, virtex5fx=SUPERSEDED, aspartan3e=SUPERSEDED, aspartan3a=SUPERSEDED, aspartan3adsp=SUPERSEDED, qvirtex4lx=SUPERSEDED, qvirtex4sx=SUPERSEDED, qvirtex4fx=SUPERSEDED, qrvirtex4lx=SUPERSEDED, qrvirtex4sx=SUPERSEDED, qrvirtex4fx=SUPERSEDED, spartan6t=SUPERSEDED, spartan6=SUPERSEDED, spartan6l=SUPERSEDED, qspartan6t=SUPERSEDED, qspartan6=SUPERSEDED, aspartan6t=SUPERSEDED, aspartan6=SUPERSEDED, virtex6lx=SUPERSEDED, virtex6sx=SUPERSEDED, virtex6hx=SUPERSEDED, virtex6cx=SUPERSEDED, virtex6llx=SUPERSEDED, virtex6lsx=SUPERSEDED, qspartan6l=SUPERSEDED, qrvirtex5=SUPERSEDED, qvirtex6lx=SUPERSEDED, qvirtex6sx=SUPERSEDED, qvirtex6fx=SUPERSEDED, qvirtex6tx=SUPERSEDED)
OPTION HDL = MIXED


## Bus Interfaces
BUS_INTERFACE BUS = MON_OPB, BUS_STD = OPB, BUS_TYPE = MONITOR

## Generics for VHDL or Parameters for Verilog
PARAMETER C_OPB_AWIDTH = 32, DT = integer, BUS = MON_OPB
PARAMETER C_OPB_DWIDTH = 32, DT = integer, BUS = MON_OPB
PARAMETER C_NUM_MASTERS = 4, DT = integer, BUS = MON_OPB
PARAMETER C_NUM_SLAVES = 4, DT = integer, BUS = MON_OPB
PARAMETER C_FAMILY = virtex2, DT = string
PARAMETER C_DEVICE = xc4vfx12, DT = string
PARAMETER C_PACKAGE = ff1016, DT = string
PARAMETER C_SPEEDGRADE = -11, DT = string
PARAMETER C_NUM_DATA_SAMPLES = 512, DT = integer, RANGE = (512, 1024, 2048, 4096, 8192, 16384, 32768, 65536, 131072)
PARAMETER C_ENABLE_TRIGGER_OUT = 1, DT = integer, RANGE = (0,1)
PARAMETER C_DISABLE_RPM = 0, DT = integer, RANGE = (0,1)
PARAMETER C_DISABLE_SRL16S = 0, DT = integer, RANGE = (0,1)
PARAMETER C_RISING_CLOCK_EDGE = 1, DT = integer, RANGE = (0,1)
PARAMETER C_ENABLE_TRIGGER_SEQUENCER = 1, DT = integer, RANGE = (0,1)
PARAMETER C_MAX_SEQUENCER_LEVELS = 16, DT = integer, RANGE = (1:16)
PARAMETER C_ENABLE_STORAGE_QUALIFICATION = 1, DT = integer, RANGE = (0,1)
PARAMETER C_CONTROL_UNITS = 1, DT = integer, RANGE = (0:16)
PARAMETER C_CONTROL_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32)
PARAMETER C_CONTROL_UNIT_MATCH_TYPE = basic with edges, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended = extended, extended with edges = extended with edges, range = range, range with edges = range with edges)
PARAMETER C_ADDR_UNITS = 1, DT = integer, RANGE = (0:16)
PARAMETER C_ADDR_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32)
PARAMETER C_ADDR_UNIT_MATCH_TYPE = extended with edges, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended = extended, extended with edges = extended with edges, range = range, range with edges = range with edges)
PARAMETER C_DATA_UNITS = 1, DT = integer, RANGE = (0:16)
PARAMETER C_DATA_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32)
PARAMETER C_DATA_UNIT_MATCH_TYPE = basic, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended = extended, extended with edges = extended with edges, range = range, range with edges = range with edges)
PARAMETER C_WRDATA_UNITS = 0, DT = integer, RANGE = (0:16)
PARAMETER C_WRDATA_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32)
PARAMETER C_WRDATA_UNIT_MATCH_TYPE = basic, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended = extended, extended with edges = extended with edges, range = range, range with edges = range with edges)
PARAMETER C_RDDATA_UNITS = 0, DT = integer, RANGE = (0:16)
PARAMETER C_RDDATA_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32)
PARAMETER C_RDDATA_UNIT_MATCH_TYPE = basic, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended = extended, extended with edges = extended with edges, range = range, range with edges = range with edges)
PARAMETER C_PV_UNITS = 0, DT = integer, RANGE = (0:16)
PARAMETER C_PV_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32)
PARAMETER C_PV_UNIT_MATCH_TYPE = basic, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended = extended, extended with edges = extended with edges, range = range, range with edges = range with edges)
PARAMETER C_GENERIC_TRIGGER_UNITS = 0, DT = integer, RANGE = (0:16)
PARAMETER C_TRIGGER_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32)
PARAMETER C_TRIGGER_UNIT_MATCH_TYPE = extended with edges, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended = extended, extended with edges = extended with edges, range = range, range with edges = range with edges)
PARAMETER C_GENERIC_TRIGGER_IN_WIDTH = 8, DT = integer, RANGE = (0:1024)
PARAMETER C_MASTER0_UNITS = 0, DT = integer, RANGE = (0:16)
PARAMETER C_MASTER0_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32)
PARAMETER C_MASTER0_UNIT_MATCH_TYPE = basic, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended = extended, extended with edges = extended with edges, range = range, range with edges = range with edges)
PARAMETER C_MASTER1_UNITS = 0, DT = integer, RANGE = (0:16)
PARAMETER C_MASTER1_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32)
PARAMETER C_MASTER1_UNIT_MATCH_TYPE = basic, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended = extended, extended with edges = extended with edges, range = range, range with edges = range with edges)
PARAMETER C_MASTER2_UNITS = 0, DT = integer, RANGE = (0:16)
PARAMETER C_MASTER2_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32)
PARAMETER C_MASTER2_UNIT_MATCH_TYPE = basic, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended = extended, extended with edges = extended with edges, range = range, range with edges = range with edges)
PARAMETER C_MASTER3_UNITS = 0, DT = integer, RANGE = (0:16)
PARAMETER C_MASTER3_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32)
PARAMETER C_MASTER3_UNIT_MATCH_TYPE = basic, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended = extended, extended with edges = extended with edges, range = range, range with edges = range with edges)
PARAMETER C_MASTER4_UNITS = 0, DT = integer, RANGE = (0:16)
PARAMETER C_MASTER4_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32)
PARAMETER C_MASTER4_UNIT_MATCH_TYPE = basic, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended = extended, extended with edges = extended with edges, range = range, range with edges = range with edges)
PARAMETER C_MASTER5_UNITS = 0, DT = integer, RANGE = (0:16)
PARAMETER C_MASTER5_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32)
PARAMETER C_MASTER5_UNIT_MATCH_TYPE = basic, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended = extended, extended with edges = extended with edges, range = range, range with edges = range with edges)
PARAMETER C_MASTER6_UNITS = 0, DT = integer, RANGE = (0:16)
PARAMETER C_MASTER6_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32)
PARAMETER C_MASTER6_UNIT_MATCH_TYPE = basic, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended = extended, extended with edges = extended with edges, range = range, range with edges = range with edges)
PARAMETER C_MASTER7_UNITS = 0, DT = integer, RANGE = (0:16)
PARAMETER C_MASTER7_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32)
PARAMETER C_MASTER7_UNIT_MATCH_TYPE = basic, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended = extended, extended with edges = extended with edges, range = range, range with edges = range with edges)
PARAMETER C_SLAVE0_UNITS = 0, DT = integer, RANGE = (0:16)
PARAMETER C_SLAVE0_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32)
PARAMETER C_SLAVE0_UNIT_MATCH_TYPE = basic, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended = extended, extended with edges = extended with edges, range = range, range with edges = range with edges)
PARAMETER C_SLAVE1_UNITS = 0, DT = integer, RANGE = (0:16)
PARAMETER C_SLAVE1_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32)
PARAMETER C_SLAVE1_UNIT_MATCH_TYPE = basic, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended = extended, extended with edges = extended with edges, range = range, range with edges = range with edges)
PARAMETER C_SLAVE2_UNITS = 0, DT = integer, RANGE = (0:16)
PARAMETER C_SLAVE2_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32)
PARAMETER C_SLAVE2_UNIT_MATCH_TYPE = basic, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended = extended, extended with edges = extended with edges, range = range, range with edges = range with edges)
PARAMETER C_SLAVE3_UNITS = 0, DT = integer, RANGE = (0:16)
PARAMETER C_SLAVE3_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32)
PARAMETER C_SLAVE3_UNIT_MATCH_TYPE = basic, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended = extended, extended with edges = extended with edges, range = range, range with edges = range with edges)
PARAMETER C_SLAVE4_UNITS = 0, DT = integer, RANGE = (0:16)
PARAMETER C_SLAVE4_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32)
PARAMETER C_SLAVE4_UNIT_MATCH_TYPE = basic, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended = extended, extended with edges = extended with edges, range = range, range with edges = range with edges)
PARAMETER C_SLAVE5_UNITS = 0, DT = integer, RANGE = (0:16)
PARAMETER C_SLAVE5_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32)
PARAMETER C_SLAVE5_UNIT_MATCH_TYPE = basic, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended = extended, extended with edges = extended with edges, range = range, range with edges = range with edges)
PARAMETER C_SLAVE6_UNITS = 0, DT = integer, RANGE = (0:16)
PARAMETER C_SLAVE6_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32)
PARAMETER C_SLAVE6_UNIT_MATCH_TYPE = basic, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended = extended, extended with edges = extended with edges, range = range, range with edges = range with edges)
PARAMETER C_SLAVE7_UNITS = 0, DT = integer, RANGE = (0:16)
PARAMETER C_SLAVE7_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32)
PARAMETER C_SLAVE7_UNIT_MATCH_TYPE = basic, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended = extended, extended with edges = extended with edges, range = range, range with edges = range with edges)

## Ports
PORT OPB_Clk = "", DIR = I, SIGIS = CLK, BUS = MON_OPB
PORT OPB_Rst = OPB_Rst, DIR = I, BUS = MON_OPB
PORT SYS_Rst = "", DIR = I
PORT Debug_SYS_Rst = Debug_SYS_Rst, DIR = I, BUS = MON_OPB
PORT WDT_Rst = WDT_Rst, DIR = I, BUS = MON_OPB
PORT M_ABus = M_ABus, DIR = I, VEC = [0:(C_OPB_AWIDTH*C_NUM_MASTERS)-1], BUS = MON_OPB
PORT M_BE = M_BE, DIR = I, VEC = [0:(C_OPB_DWIDTH+7)/8*C_NUM_MASTERS-1], BUS = MON_OPB
PORT M_beXfer = M_beXfer, DIR = I, VEC = [0:C_NUM_MASTERS-1], BUS = MON_OPB
PORT M_busLock = M_busLock, DIR = I, VEC = [0:C_NUM_MASTERS-1], BUS = MON_OPB
PORT M_DBus = M_DBus, DIR = I, VEC = [0:(C_OPB_DWIDTH*C_NUM_MASTERS)-1], BUS = MON_OPB
PORT M_DBusEn = M_DBusEn, DIR = I, VEC = [0:C_NUM_MASTERS-1], BUS = MON_OPB
PORT M_DBusEn32_63 = M_DBusEn32_63, DIR = I, VEC = [0:C_NUM_MASTERS-1], INITIALVAL = VCC, BUS = MON_OPB
PORT M_dwXfer = M_dwXfer, DIR = I, VEC = [0:C_NUM_MASTERS-1], BUS = MON_OPB
PORT M_fwXfer = M_fwXfer, DIR = I, VEC = [0:C_NUM_MASTERS-1], BUS = MON_OPB
PORT M_hwXfer = M_hwXfer, DIR = I, VEC = [0:C_NUM_MASTERS-1], BUS = MON_OPB
PORT M_request = M_request, DIR = I, VEC = [0:C_NUM_MASTERS-1], BUS = MON_OPB
PORT M_RNW = M_RNW, DIR = I, VEC = [0:C_NUM_MASTERS-1], BUS = MON_OPB
PORT M_select = M_select, DIR = I, VEC = [0:C_NUM_MASTERS-1], BUS = MON_OPB
PORT M_seqAddr = M_seqAddr, DIR = I, VEC = [0:C_NUM_MASTERS-1], BUS = MON_OPB
PORT Sl_beAck = Sl_beAck, DIR = I, VEC = [0:C_NUM_SLAVES-1], BUS = MON_OPB
PORT Sl_DBus = Sl_DBus, DIR = I, VEC = [0:(C_OPB_DWIDTH*C_NUM_SLAVES)-1], BUS = MON_OPB
PORT Sl_DBusEn = Sl_DBusEn, DIR = I, VEC = [0:C_NUM_SLAVES-1], INITIALVAL = VCC, BUS = MON_OPB
PORT Sl_DBusEn32_63 = Sl_DBusEn32_63, DIR = I, VEC = [0:C_NUM_SLAVES-1], INITIALVAL = VCC, BUS = MON_OPB
PORT Sl_errAck = Sl_errAck, DIR = I, VEC = [0:C_NUM_SLAVES-1], BUS = MON_OPB
PORT Sl_dwAck = Sl_dwAck, DIR = I, VEC = [0:C_NUM_SLAVES-1], BUS = MON_OPB
PORT Sl_fwAck = Sl_fwAck, DIR = I, VEC = [0:C_NUM_SLAVES-1], BUS = MON_OPB
PORT Sl_hwAck = Sl_hwAck, DIR = I, VEC = [0:C_NUM_SLAVES-1], BUS = MON_OPB
PORT Sl_retry = Sl_retry, DIR = I, VEC = [0:C_NUM_SLAVES-1], BUS = MON_OPB
PORT Sl_toutSup = Sl_toutSup, DIR = I, VEC = [0:C_NUM_SLAVES-1], BUS = MON_OPB
PORT Sl_xferAck = Sl_xferAck, DIR = I, VEC = [0:C_NUM_SLAVES-1], BUS = MON_OPB
PORT OPB_MRequest = OPB_MRequest, DIR = I, VEC = [0:C_NUM_MASTERS-1], BUS = MON_OPB
PORT OPB_ABus = OPB_ABus, DIR = I, VEC = [0:C_OPB_AWIDTH-1], BUS = MON_OPB
PORT OPB_BE = OPB_BE, DIR = I, VEC = [0:(C_OPB_DWIDTH+7)/8-1], BUS = MON_OPB
PORT OPB_beXfer = OPB_beXfer, DIR = I, BUS = MON_OPB
PORT OPB_beAck = OPB_beAck, DIR = I, BUS = MON_OPB
PORT OPB_busLock = OPB_busLock, DIR = I, BUS = MON_OPB
PORT OPB_rdDBus = OPB_rdDBus, DIR = I, VEC = [0:C_OPB_DWIDTH-1], BUS = MON_OPB
PORT OPB_wrDBus = OPB_wrDBus, DIR = I, VEC = [0:C_OPB_DWIDTH-1], BUS = MON_OPB
PORT OPB_DBus = OPB_DBus, DIR = I, VEC = [0:C_OPB_DWIDTH-1], BUS = MON_OPB
PORT OPB_errAck = OPB_errAck, DIR = I, BUS = MON_OPB
PORT OPB_dwAck = OPB_dwAck, DIR = I, BUS = MON_OPB
PORT OPB_dwXfer = OPB_dwXfer, DIR = I, BUS = MON_OPB
PORT OPB_fwAck = OPB_dwAck, DIR = I, BUS = MON_OPB
PORT OPB_fwXfer = OPB_dwXfer, DIR = I, BUS = MON_OPB
PORT OPB_hwAck = OPB_dwAck, DIR = I, BUS = MON_OPB
PORT OPB_hwXfer = OPB_dwXfer, DIR = I, BUS = MON_OPB
PORT OPB_MGrant = OPB_MGrant, DIR = I, VEC = [0:C_NUM_MASTERS-1], BUS = MON_OPB
PORT OPB_pendReq = OPB_pendReq, DIR = I, VEC = [0:C_NUM_MASTERS-1], BUS = MON_OPB
PORT OPB_retry = OPB_retry, DIR = I, BUS = MON_OPB
PORT OPB_RNW = OPB_RNW, DIR = I, BUS = MON_OPB
PORT OPB_select = OPB_select, DIR = I, BUS = MON_OPB
PORT OPB_seqAddr = OPB_seqAddr, DIR = I, BUS = MON_OPB
PORT OPB_timeout = OPB_timeout, DIR = I, BUS = MON_OPB
PORT OPB_toutSup = OPB_toutSup, DIR = I, BUS = MON_OPB
PORT OPB_xferAck = OPB_xferAck, DIR = I, BUS = MON_OPB
PORT chipscope_icon_control = "", DIR = I, VEC = [35:0]
PORT iba_trig_in = "", DIR = I, VEC = [C_GENERIC_TRIGGER_IN_WIDTH-1:0]
PORT iba_trig_out = "", DIR = O

END

FINISH_SINGLE_MPD

START_SINGLE_MPD chipscope_plb_iba_v1_01_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : chipscope_plb_iba
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN chipscope_plb_iba

## Peripheral Options
OPTION IMP_NETLIST = TRUE
OPTION IPTYPE = PERIPHERAL
OPTION STYLE = MIX
OPTION RUN_NGCBUILD = TRUE
OPTION IPLEVEL_DRC_PROC = plb_iba_drc
OPTION ELABORATE_PROC = plb_iba_generate
OPTION LAST_UPDATED = 11.3
OPTION DESC = Chipscope PLB Integrated Bus Analyzer (IBA)
OPTION LONG_DESC = Chipscope PLB Bus Analyzer
OPTION IP_GROUP = Debug:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=SUPERSEDED, spartan3=SUPERSEDED, spartan3an=SUPERSEDED, spartan3a=SUPERSEDED, spartan3e=SUPERSEDED, spartan3adsp=SUPERSEDED, virtex4lx=SUPERSEDED, virtex4sx=SUPERSEDED, virtex4fx=SUPERSEDED, virtex5lx=SUPERSEDED, virtex5sx=SUPERSEDED, virtex5fx=SUPERSEDED, aspartan3e=SUPERSEDED, aspartan3a=SUPERSEDED, aspartan3adsp=SUPERSEDED, qvirtex4lx=SUPERSEDED, qvirtex4sx=SUPERSEDED, qvirtex4fx=SUPERSEDED, qrvirtex4lx=SUPERSEDED, qrvirtex4sx=SUPERSEDED, qrvirtex4fx=SUPERSEDED, spartan6t=SUPERSEDED, spartan6=SUPERSEDED, spartan6l=SUPERSEDED, qspartan6t=SUPERSEDED, qspartan6=SUPERSEDED, aspartan6t=SUPERSEDED, aspartan6=SUPERSEDED, virtex6lx=SUPERSEDED, virtex6sx=SUPERSEDED, virtex6hx=SUPERSEDED, virtex6cx=SUPERSEDED, virtex6llx=SUPERSEDED, virtex6lsx=SUPERSEDED, qspartan6l=SUPERSEDED, qrvirtex5=SUPERSEDED, qvirtex6lx=SUPERSEDED, qvirtex6sx=SUPERSEDED, qvirtex6fx=SUPERSEDED, qvirtex6tx=SUPERSEDED)
OPTION HDL = MIXED


## Bus Interfaces
BUS_INTERFACE BUS = MON_PLB, BUS_STD = PLB, BUS_TYPE = MONITOR

## Generics for VHDL or Parameters for Verilog
PARAMETER C_PLB_AWIDTH = 32, DT = integer, BUS = MON_PLB
PARAMETER C_PLB_DWIDTH = 64, DT = integer, BUS = MON_PLB
PARAMETER C_PLB_NUM_MASTERS = 4, DT = integer, BUS = MON_PLB
PARAMETER C_PLB_NUM_SLAVES = 4, DT = integer, BUS = MON_PLB
PARAMETER C_PLB_MID_WIDTH = 2, DT = integer, BUS = MON_PLB
PARAMETER C_FAMILY = virtex2, DT = string
PARAMETER C_DEVICE = xc4vfx12, DT = string
PARAMETER C_PACKAGE = ff1016, DT = string
PARAMETER C_SPEEDGRADE = -11, DT = string
PARAMETER C_NUM_DATA_SAMPLES = 512, DT = integer, RANGE = (512, 1024, 2048, 4096, 8192, 16384, 32768, 65536, 131072)
PARAMETER C_ENABLE_TRIGGER_OUT = 1, DT = integer, RANGE = (0,1)
PARAMETER C_DISABLE_RPM = 0, DT = integer, RANGE = (0,1)
PARAMETER C_DISABLE_SRL16S = 0, DT = integer, RANGE = (0,1)
PARAMETER C_RISING_CLOCK_EDGE = 1, DT = integer, RANGE = (0,1)
PARAMETER C_ENABLE_TRIGGER_SEQUENCER = 1, DT = integer, RANGE = (0,1)
PARAMETER C_MAX_SEQUENCER_LEVELS = 16, DT = integer, RANGE = (1:16)
PARAMETER C_ENABLE_STORAGE_QUALIFICATION = 1, DT = integer, RANGE = (0,1)
PARAMETER C_CONTROL_UNITS = 1, DT = integer, RANGE = (0:16)
PARAMETER C_CONTROL_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32)
PARAMETER C_CONTROL_UNIT_MATCH_TYPE = basic with edges, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended = extended, extended with edges = extended with edges, range = range, range with edges = range with edges)
PARAMETER C_ADDR_UNITS = 1, DT = integer, RANGE = (0:16)
PARAMETER C_ADDR_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32)
PARAMETER C_ADDR_UNIT_MATCH_TYPE = extended with edges, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended = extended, extended with edges = extended with edges, range = range, range with edges = range with edges)
PARAMETER C_WRDATA_UNITS = 0, DT = integer, RANGE = (0:16)
PARAMETER C_WRDATA_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32)
PARAMETER C_WRDATA_UNIT_MATCH_TYPE = basic, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended = extended, extended with edges = extended with edges, range = range, range with edges = range with edges)
PARAMETER C_RDDATA_UNITS = 0, DT = integer, RANGE = (0:16)
PARAMETER C_RDDATA_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32)
PARAMETER C_RDDATA_UNIT_MATCH_TYPE = basic, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended = extended, extended with edges = extended with edges, range = range, range with edges = range with edges)
PARAMETER C_GENERIC_TRIGGER_UNITS = 0, DT = integer, RANGE = (0:16)
PARAMETER C_TRIGGER_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32)
PARAMETER C_TRIGGER_UNIT_MATCH_TYPE = extended with edges, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended = extended, extended with edges = extended with edges, range = range, range with edges = range with edges)
PARAMETER C_GENERIC_TRIGGER_IN_WIDTH = 8, DT = integer, RANGE = (1:1024)
PARAMETER C_MASTER0_UNITS = 0, DT = integer, RANGE = (0:16)
PARAMETER C_MASTER0_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32)
PARAMETER C_MASTER0_UNIT_MATCH_TYPE = basic, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended = extended, extended with edges = extended with edges, range = range, range with edges = range with edges)
PARAMETER C_MASTER1_UNITS = 0, DT = integer, RANGE = (0:16)
PARAMETER C_MASTER1_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32)
PARAMETER C_MASTER1_UNIT_MATCH_TYPE = basic, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended = extended, extended with edges = extended with edges, range = range, range with edges = range with edges)
PARAMETER C_MASTER2_UNITS = 0, DT = integer, RANGE = (0:16)
PARAMETER C_MASTER2_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32)
PARAMETER C_MASTER2_UNIT_MATCH_TYPE = basic, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended = extended, extended with edges = extended with edges, range = range, range with edges = range with edges)
PARAMETER C_MASTER3_UNITS = 0, DT = integer, RANGE = (0:16)
PARAMETER C_MASTER3_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32)
PARAMETER C_MASTER3_UNIT_MATCH_TYPE = basic, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended = extended, extended with edges = extended with edges, range = range, range with edges = range with edges)
PARAMETER C_MASTER4_UNITS = 0, DT = integer, RANGE = (0:16)
PARAMETER C_MASTER4_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32)
PARAMETER C_MASTER4_UNIT_MATCH_TYPE = basic, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended = extended, extended with edges = extended with edges, range = range, range with edges = range with edges)
PARAMETER C_MASTER5_UNITS = 0, DT = integer, RANGE = (0:16)
PARAMETER C_MASTER5_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32)
PARAMETER C_MASTER5_UNIT_MATCH_TYPE = basic, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended = extended, extended with edges = extended with edges, range = range, range with edges = range with edges)
PARAMETER C_MASTER6_UNITS = 0, DT = integer, RANGE = (0:16)
PARAMETER C_MASTER6_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32)
PARAMETER C_MASTER6_UNIT_MATCH_TYPE = basic, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended = extended, extended with edges = extended with edges, range = range, range with edges = range with edges)
PARAMETER C_MASTER7_UNITS = 0, DT = integer, RANGE = (0:16)
PARAMETER C_MASTER7_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32)
PARAMETER C_MASTER7_UNIT_MATCH_TYPE = basic, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended = extended, extended with edges = extended with edges, range = range, range with edges = range with edges)
PARAMETER C_SLAVE0_UNITS = 0, DT = integer, RANGE = (0:16)
PARAMETER C_SLAVE0_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32)
PARAMETER C_SLAVE0_UNIT_MATCH_TYPE = basic, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended = extended, extended with edges = extended with edges, range = range, range with edges = range with edges)
PARAMETER C_SLAVE1_UNITS = 0, DT = integer, RANGE = (0:16)
PARAMETER C_SLAVE1_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32)
PARAMETER C_SLAVE1_UNIT_MATCH_TYPE = basic, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended = extended, extended with edges = extended with edges, range = range, range with edges = range with edges)
PARAMETER C_SLAVE2_UNITS = 0, DT = integer, RANGE = (0:16)
PARAMETER C_SLAVE2_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32)
PARAMETER C_SLAVE2_UNIT_MATCH_TYPE = basic, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended = extended, extended with edges = extended with edges, range = range, range with edges = range with edges)
PARAMETER C_SLAVE3_UNITS = 0, DT = integer, RANGE = (0:16)
PARAMETER C_SLAVE3_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32)
PARAMETER C_SLAVE3_UNIT_MATCH_TYPE = basic, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended = extended, extended with edges = extended with edges, range = range, range with edges = range with edges)
PARAMETER C_SLAVE4_UNITS = 0, DT = integer, RANGE = (0:16)
PARAMETER C_SLAVE4_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32)
PARAMETER C_SLAVE4_UNIT_MATCH_TYPE = basic, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended = extended, extended with edges = extended with edges, range = range, range with edges = range with edges)
PARAMETER C_SLAVE5_UNITS = 0, DT = integer, RANGE = (0:16)
PARAMETER C_SLAVE5_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32)
PARAMETER C_SLAVE5_UNIT_MATCH_TYPE = basic, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended = extended, extended with edges = extended with edges, range = range, range with edges = range with edges)
PARAMETER C_SLAVE6_UNITS = 0, DT = integer, RANGE = (0:16)
PARAMETER C_SLAVE6_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32)
PARAMETER C_SLAVE6_UNIT_MATCH_TYPE = basic, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended = extended, extended with edges = extended with edges, range = range, range with edges = range with edges)
PARAMETER C_SLAVE7_UNITS = 0, DT = integer, RANGE = (0:16)
PARAMETER C_SLAVE7_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32)
PARAMETER C_SLAVE7_UNIT_MATCH_TYPE = basic, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended = extended, extended with edges = extended with edges, range = range, range with edges = range with edges)

## Ports
PORT PLB_Clk = "", DIR = I, SIGIS = CLK, BUS = MON_PLB
PORT PLB_Rst = PLB_Rst, DIR = I, BUS = MON_PLB
PORT M_BE = M_BE, DIR = I, VEC = [0:(C_PLB_NUM_MASTERS*(C_PLB_DWIDTH/8))-1], BUS = MON_PLB
PORT M_RNW = M_RNW, DIR = I, VEC = [0:C_PLB_NUM_MASTERS-1], BUS = MON_PLB
PORT M_abort = M_abort, DIR = I, VEC = [0:C_PLB_NUM_MASTERS-1], BUS = MON_PLB
PORT M_busLock = M_busLock, DIR = I, VEC = [0:C_PLB_NUM_MASTERS-1], BUS = MON_PLB
PORT M_MSize = M_MSize, DIR = I, VEC = [0:(C_PLB_NUM_MASTERS*2)-1], BUS = MON_PLB
PORT M_priority = M_priority, DIR = I, VEC = [0:(C_PLB_NUM_MASTERS*2)-1], BUS = MON_PLB
PORT M_request = M_request, DIR = I, VEC = [0:C_PLB_NUM_MASTERS-1], BUS = MON_PLB
PORT M_size = M_size, DIR = I, VEC = [0:(C_PLB_NUM_MASTERS*4)-1], BUS = MON_PLB
PORT Sl_addrAck = Sl_addrAck, DIR = I, VEC = [0:C_PLB_NUM_SLAVES-1], BUS = MON_PLB
PORT Sl_rdDAck = Sl_rdDAck, DIR = I, VEC = [0:C_PLB_NUM_SLAVES-1], BUS = MON_PLB
PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = I, VEC = [0:C_PLB_NUM_SLAVES*4-1], BUS = MON_PLB
PORT Sl_rearbitrate = Sl_rearbitrate, DIR = I, VEC = [0:C_PLB_NUM_SLAVES-1], BUS = MON_PLB
PORT Sl_SSize = Sl_SSize, DIR = I, VEC = [0:C_PLB_NUM_SLAVES*2-1], BUS = MON_PLB
PORT Sl_wait = Sl_wait, DIR = I, VEC = [0:C_PLB_NUM_SLAVES-1], BUS = MON_PLB
PORT Sl_wrComp = Sl_wrComp, DIR = I, VEC = [0:C_PLB_NUM_SLAVES-1], BUS = MON_PLB
PORT Sl_wrDAck = Sl_wrDAck, DIR = I, VEC = [0:C_PLB_NUM_SLAVES-1], BUS = MON_PLB
PORT PLB_ABus = PLB_ABus, DIR = I, VEC = [0:C_PLB_AWIDTH-1], BUS = MON_PLB
PORT PLB_BE = PLB_BE, DIR = I, VEC = [0:(C_PLB_DWIDTH/8)-1], BUS = MON_PLB
PORT PLB_MAddrAck = PLB_MAddrAck, DIR = I, VEC = [0:C_PLB_NUM_MASTERS-1], BUS = MON_PLB
PORT PLB_MBusy = PLB_MBusy, DIR = I, VEC = [0:C_PLB_NUM_MASTERS-1], BUS = MON_PLB
PORT PLB_MErr = PLB_MErr, DIR = I, VEC = [0:C_PLB_NUM_MASTERS-1], BUS = MON_PLB
PORT PLB_MRdDAck = PLB_MRdDAck, DIR = I, VEC = [0:C_PLB_NUM_MASTERS-1], BUS = MON_PLB
PORT PLB_MRdWdAddr = PLB_MRdWdAddr, DIR = I, VEC = [0:(C_PLB_NUM_MASTERS*4)-1], BUS = MON_PLB
PORT PLB_MRearbitrate = PLB_MRearbitrate, DIR = I, VEC = [0:C_PLB_NUM_MASTERS-1], BUS = MON_PLB
PORT PLB_MWrDAck = PLB_MWrDAck, DIR = I, VEC = [0:C_PLB_NUM_MASTERS-1], BUS = MON_PLB
PORT PLB_MSSize = PLB_MSSize, DIR = I, VEC = [0:(C_PLB_NUM_MASTERS*2)-1], BUS = MON_PLB
PORT PLB_PAValid = PLB_PAValid, DIR = I, BUS = MON_PLB
PORT PLB_RNW = PLB_RNW, DIR = I, BUS = MON_PLB
PORT PLB_SAValid = PLB_SAValid, DIR = I, BUS = MON_PLB
PORT PLB_abort = PLB_abort, DIR = I, BUS = MON_PLB
PORT PLB_busLock = PLB_busLock, DIR = I, BUS = MON_PLB
PORT PLB_masterID = PLB_masterID, DIR = I, VEC = [0:C_PLB_MID_WIDTH-1], BUS = MON_PLB
PORT PLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = MON_PLB
PORT PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = MON_PLB
PORT PLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = MON_PLB
PORT PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = MON_PLB
PORT PLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:C_PLB_DWIDTH-1], BUS = MON_PLB
PORT Sl_rdDBus = PLB_SrdDBus, DIR = I, VEC = [0:C_PLB_DWIDTH-1], BUS = MON_PLB
PORT chipscope_icon_control = "", DIR = I, VEC = [35:0]
PORT iba_trig_in = "", DIR = I, VEC = [C_GENERIC_TRIGGER_IN_WIDTH-1:0]
PORT iba_trig_out = "", DIR = O

END

FINISH_SINGLE_MPD

START_SINGLE_MPD agilent_mtc_v4_v1_00_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : agilent_mtc_v4
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN agilent_mtc_v4

## Peripheral Options
OPTION IMP_NETLIST = TRUE
OPTION IPTYPE = PERIPHERAL
OPTION STYLE = HDL
OPTION RUN_NGCBUILD = TRUE
OPTION IPLEVEL_DRC_PROC = mtc_drc
OPTION ELABORATE_PROC = mtc_generate
OPTION LAST_UPDATED = 11.1
OPTION DESC = Agilent MicroBlaze v4 Trace Core
OPTION LONG_DESC = Agilent MicroBlaze v4 trace core used with an Agilent logic analyzer.
OPTION IP_GROUP = Debug:MICROBLAZE
OPTION ARCH_SUPPORT_MAP = (spartan3=PRODUCTION, spartan3an=PRE_PRODUCTION, spartan3a=PRE_PRODUCTION, spartan3e=PRODUCTION, spartan3adsp=PRE_PRODUCTION, virtex4lx=PRODUCTION, virtex4sx=PRODUCTION, virtex4fx=PRODUCTION, virtex5lx=PRODUCTION, virtex5sx=PRODUCTION, virtex5fx=PRODUCTION, qvirtex4lx=PRODUCTION, qvirtex4sx=PRODUCTION, qvirtex4fx=PRODUCTION, qrvirtex4lx=PRODUCTION, qrvirtex4sx=PRODUCTION, qrvirtex4fx=PRODUCTION)
OPTION HDL = MIXED


## Bus Interfaces

## Generics for VHDL or Parameters for Verilog
PARAMETER C_FAMILY = virtex2, DT = string
PARAMETER C_RISING_CLOCK_EDGE = 1, DT = INTEGER, DESC = Sample on Rising Edge of Clock, VALUES = (0= FALSE , 1= TRUE )
PARAMETER C_TDM_RATE = 1, DT = INTEGER, RANGE = (1:2), DESC = Time Division Multiplexing Rate, VALUES = (1= 1X, 2 = 2x)
PARAMETER C_ATD_PIN_COUNT = 4, DT = INTEGER, RANGE = (4:128), DESC = ATD Pin Count
PARAMETER C_PIN_EDIT_MODE = 0, DT = INTEGER, RANGE = (0, 1), DESC = Enable Individual Pin Edit Mode, VALUES = (0 = Same as ATCK, 1 = Individual)
PARAMETER C_MAX_FREQUENCY = 100, DT = INTEGER, RANGE = (100, 200, 300, 500), DESC = Maximum Frequency of ATC2 Core
PARAMETER C_PC_EX_WIDTH = 0, DT = INTEGER, RANGE = (0:32), DESC = Size of MicroBlaze PC_EX signal to monitor
PARAMETER C_PC_EX_ENABLE_LOWER_2_BITS = 0, DT = INTEGER, RANGE = (0:1), DESC = Enable the lower 2 bits of PC_EX signal, VALUES = (0=FALSE, 1=TRUE)
PARAMETER C_TRACE_DATA_ADDRESS_WIDTH = 0, DT = INTEGER, RANGE = (0:32), DESC = Size of MicroBlaze Trace Address signal to monitor
PARAMETER C_NEW_REG_VALUE_WIDTH = 0, DT = INTEGER, RANGE = (0, 8, 16, 32), DESC = Size of MicroBlaze New Register signal to monitor
PARAMETER C_MICROBLAZE_CONTROL = 0, DT = INTEGER, RANGE = (0, 1), DESC = Enable/Disable monitoring of MicroBlaze control signals, VALUES = (0 = 0, 1 = 20)
PARAMETER C_ATCK_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATCK Pin
PARAMETER C_ATCK_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATCK and all Trace Pins, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD0_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD0_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD1_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD1_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD2_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD2_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD3_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD3_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD4_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD4_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD5_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD5_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD6_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD6_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD7_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD7_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD8_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD8_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD9_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD9_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD10_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD10_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD11_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD11_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD12_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD12_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD13_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD13_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD14_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD14_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD15_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD15_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD16_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD16_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD17_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD17_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD18_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD18_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD19_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD19_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD20_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD20_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD21_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD21_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD22_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD22_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD23_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD23_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD24_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD24_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD25_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD25_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD26_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD26_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD27_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD27_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD28_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD28_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD29_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD29_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD30_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD30_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD31_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD31_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD32_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD32_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD33_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD33_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD34_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD34_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD35_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD35_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD36_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD36_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD37_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD37_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD38_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD38_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD39_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD39_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD40_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD40_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD41_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD41_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD42_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD42_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD43_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD43_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD44_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD44_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD45_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD45_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD46_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD46_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD47_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD47_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD48_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD48_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD49_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD49_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD50_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD50_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD51_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD51_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD52_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD52_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD53_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD53_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD54_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD54_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD55_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD55_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD56_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD56_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD57_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD57_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD58_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD58_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD59_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD59_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD60_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD60_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD61_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD61_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD62_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD62_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD63_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD63_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD64_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD64_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD65_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD65_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD66_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD66_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD67_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD67_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD68_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD68_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD69_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD69_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD70_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD70_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD71_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD71_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD72_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD72_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD73_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD73_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD74_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD74_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD75_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD75_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD76_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD76_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD77_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD77_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD78_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD78_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD79_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD79_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD80_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD80_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD81_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD81_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD82_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD82_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD83_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD83_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD84_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD84_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD85_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD85_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD86_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD86_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD87_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD87_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD88_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD88_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD89_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD89_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD90_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD90_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD91_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD91_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD92_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD92_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD93_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD93_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD94_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD94_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD95_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD95_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD96_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD96_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD97_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD97_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD98_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD98_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD99_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD99_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD100_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD100_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD101_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD101_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD102_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD102_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD103_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD103_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD104_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD104_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD105_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD105_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD106_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD106_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD107_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD107_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD108_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD108_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD109_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD109_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD110_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD110_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD111_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD111_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD112_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD112_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD113_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD113_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD114_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD114_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD115_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD115_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD116_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD116_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD117_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD117_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD118_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD118_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD119_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD119_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD120_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD120_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD121_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD121_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD122_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD122_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD123_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD123_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD124_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD124_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD125_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD125_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD126_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD126_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD127_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD127_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)

## Ports
PORT AGILENT_MTC_CONTROL = "", DIR = I, VEC = [35:0]
PORT CLK = "", DIR = I, SIGIS = CLK
PORT MB_Halted = "", DIR = I
PORT VALID_INSTR = Trace_Valid_Instr, DIR = I
PORT PC_EX = Trace_PC_EX, DIR = I, VEC = [0:31]
PORT REG_WRITE = Trace_Reg_Write, DIR = I
PORT REG_ADDR = Trace_Reg_Addr, DIR = I, VEC = [0:4]
PORT MSR_REG = Trace_MSR_Reg, DIR = I, VEC = [0:9]
PORT NEW_REG_VALUE = Trace_New_Reg_Value, DIR = I, VEC = [0:31]
PORT PIPE_RUNNING = Trace_Pipe_Running, DIR = I
PORT INTERRUPT_TAKEN = Trace_Interrupt_Taken, DIR = I
PORT JUMP_TAKEN = Trace_Jump_Taken, DIR = I
PORT PREFETCH_ADDR = Trace_Prefetch_Addr, DIR = I, VEC = [0:3]
PORT Trace_Branch_Instr = Trace_Branch_Instr, DIR = I
PORT Trace_Delay_Slot = Trace_Delay_Slot, DIR = I
PORT Trace_Data_Address = Trace_Data_Address, DIR = I, VEC = [0:31]
PORT Trace_AS = Trace_AS, DIR = I
PORT Trace_Data_Read = Trace_Data_Read, DIR = I
PORT Trace_Data_Write = Trace_Data_Write, DIR = I
PORT Trace_DCache_Req = Trace_DCache_Req, DIR = I
PORT Trace_DCache_Hit = Trace_DCache_Hit, DIR = I
PORT Trace_ICache_Req = Trace_ICache_Req, DIR = I
PORT Trace_ICache_Hit = Trace_ICache_Hit, DIR = I
PORT Trace_Instr_EX = Trace_Instr_EX, DIR = I, VEC = [0:31]
PORT UNUSED = Unconnected, DIR = O

END

FINISH_SINGLE_MPD

START_SINGLE_MPD agilent_mtc_v5_v1_00_b 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : agilent_mtc_v5
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN agilent_mtc_v5

## Peripheral Options
OPTION IMP_NETLIST = TRUE
OPTION IPTYPE = PERIPHERAL
OPTION STYLE = HDL
OPTION RUN_NGCBUILD = TRUE
OPTION IPLEVEL_DRC_PROC = mtc_drc
OPTION ELABORATE_PROC = mtc_generate
OPTION LAST_UPDATED = 11.1
OPTION DESC = Agilent MicroBlaze v5 Trace Core
OPTION LONG_DESC = Agilent MicroBlaze v5 trace core used with an Agilent logic analyzer.
OPTION IP_GROUP = Debug:MICROBLAZE
OPTION ARCH_SUPPORT_MAP = (spartan3=PRODUCTION, spartan3an=PRE_PRODUCTION, spartan3a=PRE_PRODUCTION, spartan3e=PRODUCTION, spartan3adsp=PRE_PRODUCTION, virtex4lx=PRODUCTION, virtex4sx=PRODUCTION, virtex4fx=PRODUCTION, virtex5lx=PRODUCTION, virtex5sx=PRODUCTION, virtex5fx=PRODUCTION, qvirtex4lx=PRODUCTION, qvirtex4sx=PRODUCTION, qvirtex4fx=PRODUCTION, qrvirtex4lx=PRODUCTION, qrvirtex4sx=PRODUCTION, qrvirtex4fx=PRODUCTION)
OPTION HDL = MIXED


## Bus Interfaces

## Generics for VHDL or Parameters for Verilog
PARAMETER C_FAMILY = virtex2, DT = string
PARAMETER C_TDM_RATE = 1, DT = INTEGER, RANGE = (1:2), DESC = Time Division Multiplexing Rate, VALUES = (1= 1X, 2 = 2x)
PARAMETER C_ATD_PIN_COUNT = 4, DT = INTEGER, RANGE = (4:128), DESC = ATD Pin Count
PARAMETER C_PIN_EDIT_MODE = 0, DT = INTEGER, RANGE = (0, 1), DESC = Enable Individual Pin Edit Mode, VALUES = (0 = Same as ATCK, 1 = Individual)
PARAMETER C_MAX_FREQUENCY = 100, DT = INTEGER, RANGE = (100, 200, 300, 500), DESC = Maximum Frequency of ATC2 Core
PARAMETER C_PC_WIDTH = 0, DT = INTEGER, RANGE = (0:32), DESC = Size of MicroBlaze PC signal to monitor
PARAMETER C_PC_ENABLE_LOWER_2_BITS = 0, DT = INTEGER, RANGE = (0:1), DESC = Enable the lower 2 bits of PC signal, VALUES = (0=FALSE, 1=TRUE)
PARAMETER C_TRACE_DATA_ADDRESS_WIDTH = 0, DT = INTEGER, RANGE = (0:32), DESC = Size of MicroBlaze Trace Address signal to monitor
PARAMETER C_NEW_REG_VALUE_WIDTH = 0, DT = INTEGER, RANGE = (0, 8, 16, 32), DESC = Size of MicroBlaze New Register signal to monitor
PARAMETER C_MICROBLAZE_CONTROL = 0, DT = INTEGER, RANGE = (0, 1), DESC = Enable/Disable monitoring of MicroBlaze control signals, VALUES = (0 = 0, 1 = 26)
PARAMETER C_ATCK_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATCK Pin
PARAMETER C_ATCK_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATCK and all Trace Pins, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD0_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD0_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD1_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD1_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD2_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD2_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD3_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD3_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD4_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD4_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD5_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD5_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD6_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD6_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD7_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD7_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD8_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD8_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD9_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD9_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD10_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD10_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD11_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD11_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD12_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD12_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD13_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD13_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD14_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD14_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD15_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD15_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD16_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD16_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD17_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD17_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD18_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD18_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD19_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD19_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD20_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD20_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD21_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD21_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD22_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD22_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD23_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD23_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD24_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD24_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD25_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD25_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD26_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD26_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD27_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD27_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD28_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD28_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD29_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD29_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD30_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD30_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD31_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD31_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD32_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD32_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD33_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD33_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD34_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD34_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD35_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD35_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD36_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD36_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD37_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD37_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD38_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD38_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD39_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD39_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD40_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD40_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD41_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD41_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD42_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD42_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD43_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD43_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD44_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD44_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD45_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD45_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD46_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD46_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD47_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD47_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD48_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD48_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD49_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD49_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD50_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD50_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD51_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD51_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD52_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD52_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD53_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD53_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD54_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD54_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD55_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD55_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD56_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD56_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD57_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD57_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD58_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD58_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD59_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD59_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD60_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD60_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD61_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD61_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD62_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD62_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD63_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD63_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD64_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD64_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD65_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD65_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD66_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD66_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD67_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD67_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD68_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD68_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD69_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD69_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD70_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD70_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD71_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD71_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD72_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD72_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD73_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD73_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD74_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD74_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD75_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD75_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD76_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD76_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD77_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD77_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD78_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD78_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD79_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD79_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD80_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD80_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD81_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD81_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD82_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD82_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD83_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD83_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD84_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD84_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD85_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD85_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD86_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD86_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD87_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD87_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD88_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD88_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD89_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD89_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD90_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD90_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD91_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD91_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD92_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD92_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD93_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD93_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD94_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD94_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD95_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD95_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD96_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD96_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD97_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD97_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD98_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD98_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD99_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD99_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD100_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD100_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD101_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD101_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD102_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD102_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD103_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD103_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD104_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD104_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD105_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD105_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD106_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD106_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD107_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD107_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD108_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD108_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD109_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD109_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD110_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD110_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD111_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD111_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD112_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD112_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD113_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD113_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD114_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD114_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD115_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD115_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD116_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD116_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD117_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD117_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD118_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD118_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD119_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD119_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD120_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD120_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD121_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD121_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD122_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD122_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD123_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD123_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD124_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD124_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD125_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD125_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD126_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD126_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD127_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD127_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)

## Ports
PORT AGILENT_MTC_CONTROL = "", DIR = I, VEC = [35:0]
PORT CLK = "", DIR = I, SIGIS = CLK
PORT MB_Halted = "", DIR = I
PORT VALID_INSTR = Trace_Valid_Instr, DIR = I
PORT PC = Trace_PC, DIR = I, VEC = [0:31]
PORT REG_WRITE = Trace_Reg_Write, DIR = I
PORT REG_ADDR = Trace_Reg_Addr, DIR = I, VEC = [0:4]
PORT MSR_REG = Trace_MSR_Reg, DIR = I, VEC = [0:10]
PORT NEW_REG_VALUE = Trace_New_Reg_Value, DIR = I, VEC = [0:31]
PORT PIPE_RUNNING = Trace_Pipe_Running, DIR = I, VEC = [0:2]
PORT EXCEPTION_TAKEN = Trace_Exception_Taken, DIR = I
PORT EXCEPTION_TYPE = Trace_Exception_Kind, DIR = I, VEC = [0:3]
PORT JUMP_TAKEN = Trace_Jump_Taken, DIR = I
PORT Trace_Delay_Slot = Trace_Delay_Slot, DIR = I
PORT Trace_Data_Address = Trace_Data_Address, DIR = I, VEC = [0:31]
PORT Trace_Data_Write_Value = Trace_Data_Write_Value, DIR = I, VEC = [0:31]
PORT Trace_Data_Access = Trace_Data_Access, DIR = I
PORT Trace_Data_Read = Trace_Data_Read, DIR = I
PORT Trace_DCache_Req = Trace_DCache_Req, DIR = I
PORT Trace_DCache_Hit = Trace_DCache_Hit, DIR = I
PORT Trace_ICache_Req = Trace_ICache_Req, DIR = I
PORT Trace_ICache_Hit = Trace_ICache_Hit, DIR = I
PORT UNUSED = Unconnected, DIR = O

END

FINISH_SINGLE_MPD

START_SINGLE_MPD util_flipflop_v1_10_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : util_flipflop
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN util_flipflop

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION HDL = VHDL
OPTION IMP_NETLIST = TRUE
OPTION DESC = Utility Flip-Flop
OPTION LONG_DESC = Flipflop primitive
OPTION IP_GROUP = Utility:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=PRODUCTION, spartan3=PRODUCTION, spartan3an=PRODUCTION, spartan3a=PRODUCTION, spartan3e=PRODUCTION, spartan3adsp=PRODUCTION, virtex4lx=PRODUCTION, virtex4sx=PRODUCTION, virtex4fx=PRODUCTION, virtex5lx=PRODUCTION, virtex5sx=PRODUCTION, virtex5fx=PRODUCTION, aspartan3e=PRODUCTION, aspartan3a=PRODUCTION, aspartan3adsp=PRODUCTION, qvirtex4lx=PRODUCTION, qvirtex4sx=PRODUCTION, qvirtex4fx=PRODUCTION, qrvirtex4lx=PRODUCTION, qrvirtex4sx=PRODUCTION, qrvirtex4fx=PRODUCTION, spartan6t=PRODUCTION, spartan6=PRODUCTION, spartan6l=PRE_PRODUCTION, qspartan6t=PRODUCTION, qspartan6=PRODUCTION, aspartan6t=PRODUCTION, aspartan6=PRODUCTION, virtex6lx=PRODUCTION, virtex6sx=PRODUCTION, virtex6hx=PRODUCTION, virtex6cx=PRODUCTION, virtex6llx=PRE_PRODUCTION, virtex6lsx=PRE_PRODUCTION, qspartan6l=PRE_PRODUCTION, qrvirtex5=PRE_PRODUCTION, qvirtex6lx=PRE_PRODUCTION, qvirtex6sx=PRE_PRODUCTION, qvirtex6fx=PRE_PRODUCTION, qvirtex6tx=PRE_PRODUCTION)
OPTION RUN_NGCBUILD = FALSE
OPTION STYLE = HDL


## Bus Interfaces

## Generics for VHDL or Parameters for Verilog
PARAMETER C_SET_RST_HIGH = 1, DT = integer, RANGE = (0, 1)
PARAMETER C_USE_RST = 1, DT = integer, RANGE = (0, 1)
PARAMETER C_USE_SET = 1, DT = integer, RANGE = (0, 1)
PARAMETER C_USE_CE = 1, DT = integer, RANGE = (0, 1)
PARAMETER C_USE_ASYNCH = 1, DT = integer, RANGE = (0, 1)
PARAMETER C_SIZE = 8, DT = integer, RANGE = (1:2147483647)
PARAMETER C_INIT = 0, DT = string

## Ports
PORT Clk = "", DIR = I, SIGIS = CLK
PORT RST = "", DIR = I
PORT SET = "", DIR = I
PORT CE = "", DIR = I
PORT D = "", DIR = I, VEC = [0:C_SIZE-1]
PORT Q = "", DIR = O, VEC = [0:C_SIZE-1]

END

FINISH_SINGLE_MPD

START_SINGLE_MPD proc_sys_reset_v2_00_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : proc_sys_reset
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN proc_sys_reset

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION DESC = Processor System Reset Module
OPTION LONG_DESC = Reset management module
OPTION IP_GROUP = 'Clock, Reset and Interrupt:MICROBLAZE:PPC'
OPTION ARCH_SUPPORT_MAP = (aspartan3=PRODUCTION, spartan3=PRODUCTION, spartan3an=PRODUCTION, spartan3a=PRODUCTION, spartan3e=PRODUCTION, spartan3adsp=PRODUCTION, virtex4lx=PRODUCTION, virtex4sx=PRODUCTION, virtex4fx=PRODUCTION, virtex5lx=PRODUCTION, virtex5sx=PRODUCTION, virtex5fx=PRODUCTION, aspartan3e=PRODUCTION, aspartan3a=PRODUCTION, aspartan3adsp=PRODUCTION, qvirtex4lx=PRODUCTION, qvirtex4sx=PRODUCTION, qvirtex4fx=PRODUCTION, qrvirtex4lx=PRODUCTION, qrvirtex4sx=PRODUCTION, qrvirtex4fx=PRODUCTION, spartan6t=PRODUCTION, spartan6=PRODUCTION, spartan6l=PRE_PRODUCTION, qspartan6t=PRODUCTION, qspartan6=PRODUCTION, aspartan6t=PRODUCTION, aspartan6=PRODUCTION, virtex6lx=PRODUCTION, virtex6sx=PRODUCTION, virtex6hx=PRODUCTION, virtex6cx=PRODUCTION, virtex6llx=PRE_PRODUCTION, virtex6lsx=PRE_PRODUCTION, qspartan6l=PRE_PRODUCTION, qrvirtex5=PRE_PRODUCTION, qvirtex6lx=PRE_PRODUCTION, qvirtex6sx=PRE_PRODUCTION, qvirtex6fx=PRE_PRODUCTION, qvirtex6tx=PRE_PRODUCTION)
OPTION HDL = MIXED
OPTION RUN_NGCBUILD = FALSE
OPTION STYLE = HDL

IO_INTERFACE IO_IF = reset_0

## Bus Interfaces
BUS_INTERFACE BUS = RESETPPC0, BUS_STD = XIL_RESETPPC, BUS_TYPE = INITIATOR, ISVALID = ([xstrncmp C_FAMILY virtex2p ] || [xstrncmp C_SUBFAMILY  *fx ] )
BUS_INTERFACE BUS = RESETPPC1, BUS_STD = XIL_RESETPPC, BUS_TYPE = INITIATOR, ISVALID = (([xstrncmp C_FAMILY virtex2p ] || [xstrncmp C_SUBFAMILY  *fx ]) && (!([xstrncmp C_DEVICE *2vp4 ] || [xstrncmp C_DEVICE  *2vp7 ] || [xstrncmp C_DEVICE  *2vpx20 ] || [xstrncmp C_DEVICE  *4vfx12 ] || [xstrncmp C_DEVICE  *4vfx20 ] || [xstrncmp C_DEVICE  *5vfx30t ] || [xstrncmp C_DEVICE  *5vfx70t ])))

## Generics for VHDL or Parameters for Verilog
PARAMETER C_SUBFAMILY = lx, DT = string, TYPE = NON_HDL
PARAMETER C_EXT_RST_WIDTH = 4, DT = integer, RANGE = (1:16)
PARAMETER C_AUX_RST_WIDTH = 4, DT = integer, RANGE = (1:16)
PARAMETER C_EXT_RESET_HIGH = 1, DT = std_logic, RANGE = (0,1), IO_IF = reset_0, IO_IS = polarity
PARAMETER C_AUX_RESET_HIGH = 1, DT = std_logic, RANGE = (0,1), IO_IF = reset_0, IO_IS = polarity
PARAMETER C_NUM_BUS_RST = 1, DT = integer, RANGE = (1:8)
PARAMETER C_NUM_PERP_RST = 1, DT = integer, RANGE = (1:16)
PARAMETER C_FAMILY = virtex5, TYPE = NON_HDL

## Ports
PORT Slowest_sync_clk = "", DIR = I, SIGIS = CLK
PORT Ext_Reset_In = "", DIR = I, SIGIS = RST
PORT Aux_Reset_In = "", DIR = I, SIGIS = RST
PORT MB_Debug_Sys_Rst = "", DIR = I, SIGIS = RST
PORT Core_Reset_Req_0 = Core_Reset_Req, DIR = I, BUS = RESETPPC0, SIGIS = RST
PORT Chip_Reset_Req_0 = Chip_Reset_Req, DIR = I, BUS = RESETPPC0, SIGIS = RST
PORT System_Reset_Req_0 = System_Reset_Req, DIR = I, BUS = RESETPPC0, SIGIS = RST
PORT Core_Reset_Req_1 = Core_Reset_Req, DIR = I, BUS = RESETPPC1, SIGIS = RST
PORT Chip_Reset_Req_1 = Chip_Reset_Req, DIR = I, BUS = RESETPPC1, SIGIS = RST
PORT System_Reset_Req_1 = System_Reset_Req, DIR = I, BUS = RESETPPC1, SIGIS = RST
PORT Dcm_locked = "", DIR = I, ASSIGNMENT = REQUIRE
PORT RstcPPCresetcore_0 = RstcPPCresetcore, DIR = O, BUS = RESETPPC0, SIGIS = RST
PORT RstcPPCresetchip_0 = RstsPPCresetchip, DIR = O, BUS = RESETPPC0, SIGIS = RST
PORT RstcPPCresetsys_0 = RstcPPCresetsys, DIR = O, BUS = RESETPPC0, SIGIS = RST
PORT RstcPPCresetcore_1 = RstcPPCresetcore, DIR = O, BUS = RESETPPC1, SIGIS = RST
PORT RstcPPCresetchip_1 = RstsPPCresetchip, DIR = O, BUS = RESETPPC1, SIGIS = RST
PORT RstcPPCresetsys_1 = RstcPPCresetsys, DIR = O, BUS = RESETPPC1, SIGIS = RST
PORT MB_Reset = "", DIR = O, SIGIS = RST
PORT Bus_Struct_Reset = "", DIR = O, VEC = [0:C_NUM_BUS_RST-1], SIGIS = RST
PORT Peripheral_Reset = "", DIR = O, VEC = [0:C_NUM_PERP_RST-1], SIGIS = RST

END

FINISH_SINGLE_MPD

START_SINGLE_MPD mgt_protector_v1_00_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : mgt_protector
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN mgt_protector

## Peripheral Options
OPTION STYLE = MIX
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION RUN_NGCBUILD = TRUE
OPTION USAGE_LEVEL = BASE_USER
OPTION PLATGEN_SYSLEVEL_UPDATE_PROC = loc_constraints_ucf
OPTION LAST_UPDATED = 12.2
OPTION DESC = MGT Protector
OPTION LONG_DESC = MGT protector core to put unused Virtex-4 MGTs to a safe activity mode
OPTION IP_GROUP = Utility:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (virtex4lx=PRODUCTION, virtex4sx=PRODUCTION, virtex4fx=PRODUCTION, qvirtex4lx=PRODUCTION, qvirtex4sx=PRODUCTION, qvirtex4fx=PRODUCTION, qrvirtex4lx=PRODUCTION, qrvirtex4sx=PRODUCTION, qrvirtex4fx=PRODUCTION, qrvirtex5=PRE_PRODUCTION)

IO_INTERFACE IO_IF = mgt_0, IO_TYPE = XIL_MGT_PROTECTOR_V1

## Bus Interfaces

## Generics for VHDL or Parameters for Verilog
PARAMETER C_NUM_TILES = 16, DT = INTEGER, IO_IS = C_NUM_TILES, IO_IF = mgt_0
PARAMETER C_USE_0 = 1, DT = std_logic, IO_IS = C_USE_0, IO_IF = mgt_0, VALUES = (0=false, 1=true), PERMIT = BASE_USER
PARAMETER C_USE_1 = 1, DT = std_logic, IO_IS = C_USE_1, IO_IF = mgt_0, VALUES = (0=false, 1=true), PERMIT = BASE_USER
PARAMETER C_USE_2 = 1, DT = std_logic, IO_IS = C_USE_2, IO_IF = mgt_0, VALUES = (0=false, 1=true), PERMIT = BASE_USER
PARAMETER C_USE_3 = 1, DT = std_logic, IO_IS = C_USE_3, IO_IF = mgt_0, VALUES = (0=false, 1=true), PERMIT = BASE_USER
PARAMETER C_USE_4 = 1, DT = std_logic, IO_IS = C_USE_4, IO_IF = mgt_0, VALUES = (0=false, 1=true), PERMIT = BASE_USER
PARAMETER C_USE_5 = 1, DT = std_logic, IO_IS = C_USE_5, IO_IF = mgt_0, VALUES = (0=false, 1=true), PERMIT = BASE_USER
PARAMETER C_USE_6 = 1, DT = std_logic, IO_IS = C_USE_6, IO_IF = mgt_0, VALUES = (0=false, 1=true), PERMIT = BASE_USER
PARAMETER C_USE_7 = 1, DT = std_logic, IO_IS = C_USE_7, IO_IF = mgt_0, VALUES = (0=false, 1=true), PERMIT = BASE_USER
PARAMETER C_USE_8 = 1, DT = std_logic, IO_IS = C_USE_8, IO_IF = mgt_0, VALUES = (0=false, 1=true), PERMIT = BASE_USER
PARAMETER C_USE_9 = 1, DT = std_logic, IO_IS = C_USE_9, IO_IF = mgt_0, VALUES = (0=false, 1=true), PERMIT = BASE_USER
PARAMETER C_USE_10 = 1, DT = std_logic, IO_IS = C_USE_10, IO_IF = mgt_0, VALUES = (0=false, 1=true), PERMIT = BASE_USER
PARAMETER C_USE_11 = 1, DT = std_logic, IO_IS = C_USE_11, IO_IF = mgt_0, VALUES = (0=false, 1=true), PERMIT = BASE_USER
PARAMETER C_USE_12 = 1, DT = std_logic, IO_IS = C_USE_12, IO_IF = mgt_0, VALUES = (0=false, 1=true), PERMIT = BASE_USER
PARAMETER C_USE_13 = 1, DT = std_logic, IO_IS = C_USE_13, IO_IF = mgt_0, VALUES = (0=false, 1=true), PERMIT = BASE_USER
PARAMETER C_USE_14 = 1, DT = std_logic, IO_IS = C_USE_14, IO_IF = mgt_0, VALUES = (0=false, 1=true), PERMIT = BASE_USER
PARAMETER C_USE_15 = 1, DT = std_logic, IO_IS = C_USE_15, IO_IF = mgt_0, VALUES = (0=false, 1=true), PERMIT = BASE_USER
PARAMETER C_LOC_0_AB = NOT_SET, DT = STRING, IO_IS = C_LOC_0_AB, IO_IF = mgt_0, TYPE = NON_HDL
PARAMETER C_LOC_1_AB = NOT_SET, DT = STRING, IO_IS = C_LOC_1_AB, IO_IF = mgt_0, TYPE = NON_HDL
PARAMETER C_LOC_2_AB = NOT_SET, DT = STRING, IO_IS = C_LOC_2_AB, IO_IF = mgt_0, TYPE = NON_HDL
PARAMETER C_LOC_3_AB = NOT_SET, DT = STRING, IO_IS = C_LOC_3_AB, IO_IF = mgt_0, TYPE = NON_HDL
PARAMETER C_LOC_4_AB = NOT_SET, DT = STRING, IO_IS = C_LOC_4_AB, IO_IF = mgt_0, TYPE = NON_HDL
PARAMETER C_LOC_5_AB = NOT_SET, DT = STRING, IO_IS = C_LOC_5_AB, IO_IF = mgt_0, TYPE = NON_HDL
PARAMETER C_LOC_6_AB = NOT_SET, DT = STRING, IO_IS = C_LOC_6_AB, IO_IF = mgt_0, TYPE = NON_HDL
PARAMETER C_LOC_7_AB = NOT_SET, DT = STRING, IO_IS = C_LOC_7_AB, IO_IF = mgt_0, TYPE = NON_HDL
PARAMETER C_LOC_8_AB = NOT_SET, DT = STRING, IO_IS = C_LOC_8_AB, IO_IF = mgt_0, TYPE = NON_HDL
PARAMETER C_LOC_9_AB = NOT_SET, DT = STRING, IO_IS = C_LOC_9_AB, IO_IF = mgt_0, TYPE = NON_HDL
PARAMETER C_LOC_10_AB = NOT_SET, DT = STRING, IO_IS = C_LOC_10_AB, IO_IF = mgt_0, TYPE = NON_HDL
PARAMETER C_LOC_11_AB = NOT_SET, DT = STRING, IO_IS = C_LOC_11_AB, IO_IF = mgt_0, TYPE = NON_HDL
PARAMETER C_LOC_12_AB = NOT_SET, DT = STRING, IO_IS = C_LOC_12_AB, IO_IF = mgt_0, TYPE = NON_HDL
PARAMETER C_LOC_13_AB = NOT_SET, DT = STRING, IO_IS = C_LOC_13_AB, IO_IF = mgt_0, TYPE = NON_HDL
PARAMETER C_LOC_14_AB = NOT_SET, DT = STRING, IO_IS = C_LOC_14_AB, IO_IF = mgt_0, TYPE = NON_HDL
PARAMETER C_LOC_15_AB = NOT_SET, DT = STRING, IO_IS = C_LOC_15_AB, IO_IF = mgt_0, TYPE = NON_HDL

## Ports
PORT CLK = "", DIR = I, IO_IS = int_clk, IO_IF = mgt_0

END

FINISH_SINGLE_MPD

START_SINGLE_MPD dsbram_if_cntlr_v3_00_c 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : dsbram_if_cntlr
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN dsbram_if_cntlr

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION SPECIAL = BRAM_CNTLR
OPTION NUM_WRITE_ENABLES = 4
OPTION ADDR_SLICE = 29
OPTION DWIDTH = 32
OPTION AWIDTH = 32
OPTION SYSLEVEL_DRC_PROC = check_syslevel_settings
OPTION IPLEVEL_DRC_PROC = check_iplevel_settings
OPTION ARCH_SUPPORT_MAP = (virtex4fx=PRODUCTION, qvirtex4fx=PRODUCTION, qrvirtex4fx=PRODUCTION)
OPTION LAST_UPDATED = 11.1
OPTION DESC = Data-Side OCM BRAM Controller
OPTION LONG_DESC = BRAM_Block connects to the DSOCM V10 Bus for Virtex-II Pro PowerPC 405 based embedded systems.
OPTION IP_GROUP = Memory and Memory Controller:PPC
OPTION RUN_NGCBUILD = FALSE
OPTION STYLE = HDL


## Bus Interfaces
BUS_INTERFACE BUS = DSOCM, BUS_STD = DSOCM, BUS_TYPE = SLAVE
BUS_INTERFACE BUS = PORTA, BUS_STD = XIL_BRAM, BUS_TYPE = INITIATOR

## Generics for VHDL or Parameters for Verilog
PARAMETER C_BASEADDR = 0xFFFFFFFF, DT = std_logic_vector(0 to 31), BUS = DSOCM, MIN_SIZE = 0x800, ADDR_TYPE = MEMORY
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector(0 to 31), BUS = DSOCM
PARAMETER C_BRAM_EN = 0, DT = integer, RANGE = (0,1)
PARAMETER C_RANGECHECK = 0, DT = integer, RANGE = (0,1)

## Ports
PORT BRAMDSOCMCLK = "", DIR = I, SIGIS = CLK, BUS = DSOCM
PORT DSBRAMRST = DSOCM_Rst, DIR = I, BUS = DSOCM
PORT DSOCMBRAMABUS = DSOCMBRAMABUS, DIR = I, VEC = [8:29], BUS = DSOCM
PORT DSOCMBRAMBYTEWRITE = DSOCMBRAMBYTEWRITE, DIR = I, VEC = [0:3], BUS = DSOCM
PORT DSOCMBRAMEN = DSOCMBRAMEN, DIR = I, BUS = DSOCM
PORT DSOCMBRAMWRDBUS = DSOCMBRAMWRDBUS, DIR = I, VEC = [0:31], BUS = DSOCM
PORT S_BRAMDSOCMRDDBUS = S_BRAMDSOCMRDDBUS, DIR = O, VEC = [0:31], BUS = DSOCM
PORT S_DSOCMRWCOMPLETE = S_DSOCMRWCOMPLETE, DIR = O, BUS = DSOCM
PORT S_DSOCMSLAVESELECT = S_DSOCMSLAVESELECT, DIR = O, BUS = DSOCM
PORT BRAM_Rst_A = BRAM_Rst, DIR = O, BUS = PORTA
PORT BRAM_Clk_A = BRAM_Clk, DIR = O, BUS = PORTA
PORT BRAM_EN_A = BRAM_EN, DIR = O, BUS = PORTA
PORT BRAM_WEN_A = BRAM_WEN, DIR = O, VEC = [0:3], BUS = PORTA
PORT BRAM_Addr_A = BRAM_Addr, DIR = O, VEC = [0:31], BUS = PORTA
PORT BRAM_Din_A = BRAM_Din, DIR = I, VEC = [0:31], BUS = PORTA
PORT BRAM_Dout_A = BRAM_Dout, DIR = O, VEC = [0:31], BUS = PORTA

END

FINISH_SINGLE_MPD

START_SINGLE_MPD dsocm_v10_v2_00_b 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : dsocm_v10
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN dsocm_v10

## Peripheral Options
OPTION IPTYPE = BUS
OPTION IMP_NETLIST = TRUE
OPTION BUS_STD = DSOCM
OPTION MAX_MASTERS = 1
OPTION LAST_UPDATED = 11.1
OPTION DESC = Data-Side On-Chip Memory (OCM) Bus 1.0
OPTION LONG_DESC = Data-Side On-Chip Memory(OCM) bus interconnect core
OPTION IP_GROUP = Bus and Bridge:PPC
OPTION ARCH_SUPPORT_MAP = (virtex4lx=PRODUCTION, virtex4sx=PRODUCTION, virtex4fx=PRODUCTION, qvirtex4lx=PRODUCTION, qvirtex4sx=PRODUCTION, qvirtex4fx=PRODUCTION, qrvirtex4lx=PRODUCTION, qrvirtex4sx=PRODUCTION, qrvirtex4fx=PRODUCTION)
OPTION HDL = MIXED
OPTION RUN_NGCBUILD = FALSE
OPTION STYLE = HDL
OPTION MAX_SLAVES = 64


## Bus Interfaces

## Generics for VHDL or Parameters for Verilog
PARAMETER C_NUM_MASTERS = 1, DT = integer
PARAMETER C_NUM_SLAVES = 1, DT = integer
PARAMETER C_DSCNTLVALUE = 0x81, DT = std_logic_vector(0 to 7)
PARAMETER C_DSARCVALUE = 0x31, DT = std_logic_vector(0 to 7), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_proc
PARAMETER C_FIXED_LATENCY = 1, DT = std_logic

## Ports
PORT DSOCM_Clk = "", DIR = I, SIGIS = CLK, ASSIGNMENT = REQUIRE
PORT SYS_Rst = "", DIR = I
PORT DSOCM_Rst = DSOCM_Rst, DIR = O
PORT M_DSOCMBRAMABUS = M_DSOCMBRAMABUS, DIR = I, VEC = [8:29]
PORT M_DSOCMBRAMBYTEWRITE = M_DSOCMBRAMBYTEWRITE, DIR = I, VEC = [0:3]
PORT M_DSOCMBRAMEN = M_DSOCMBRAMEN, DIR = I
PORT M_DSOCMBRAMWRDBUS = M_DSOCMBRAMWRDBUS, DIR = I, VEC = [0:31]
PORT M_DSOCMBUSY = M_DSOCMBUSY, DIR = I
PORT M_DSOCMRDADDRVALID = M_DSOCMRDADDRVALID, DIR = I
PORT M_DSOCMWRADDRVALID = M_DSOCMWRADDRVALID, DIR = I
PORT S_BRAMDSOCMRDDBUS = S_BRAMDSOCMRDDBUS, DIR = I, VEC = [0:32*C_NUM_SLAVES-1]
PORT S_DSOCMRWCOMPLETE = S_DSOCMRWCOMPLETE, DIR = I, VEC = [0:C_NUM_SLAVES-1]
PORT S_DSOCMSLAVESELECT = S_DSOCMSLAVESELECT, DIR = I, VEC = [0:C_NUM_SLAVES-1]
PORT BRAMDSOCMRDDBUS = BRAMDSOCMRDDBUS, DIR = O, VEC = [0:31]
PORT DSARCVALUE = DSARCVALUE, DIR = O, VEC = [0:7]
PORT DSCNTLVALUE = DSCNTLVALUE, DIR = O, VEC = [0:7]
PORT DSOCMBRAMWRDBUS = DSOCMBRAMWRDBUS, DIR = O, VEC = [0:31]
PORT DSOCMBRAMEN = DSOCMBRAMEN, DIR = O
PORT DSOCMBRAMBYTEWRITE = DSOCMBRAMBYTEWRITE, DIR = O, VEC = [0:3]
PORT DSOCMBRAMABUS = DSOCMBRAMABUS, DIR = O, VEC = [8:29]
PORT DSOCMBUSY = DSOCMBUSY, DIR = O
PORT DSOCMRDADDRVALID = DSOCMRDADDRVALID, DIR = O
PORT DSOCMWRADDRVALID = DSOCMWRADDRVALID, DIR = O
PORT DSOCMRWCOMPLETE = DSOCMRWCOMPLETE, DIR = O

END

FINISH_SINGLE_MPD

START_SINGLE_MPD isbram_if_cntlr_v3_00_c 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : isbram_if_cntlr
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN isbram_if_cntlr

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION SPECIAL = BRAM_CNTLR
OPTION NUM_WRITE_ENABLES = 2
OPTION ADDR_SLICE = 28
OPTION DWIDTH = 64
OPTION AWIDTH = 32
OPTION SYSLEVEL_DRC_PROC = check_syslevel_settings
OPTION IPLEVEL_DRC_PROC = check_iplevel_settings
OPTION ARCH_SUPPORT_MAP = (virtex4fx=PRODUCTION, qvirtex4fx=PRODUCTION, qrvirtex4fx=PRODUCTION)
OPTION LAST_UPDATED = 11.1
OPTION DESC = Instruction-Side OCM BRAM Controller
OPTION LONG_DESC = BRAM_Block connects to the ISOCM V10 Bus for Virtex-II Pro PowerPC 405 based embedded systems.
OPTION IP_GROUP = Memory and Memory Controller:PPC
OPTION RUN_NGCBUILD = FALSE
OPTION STYLE = HDL


## Bus Interfaces
BUS_INTERFACE BUS = ISOCM, BUS_STD = ISOCM, BUS_TYPE = SLAVE
BUS_INTERFACE BUS = DCR_WRITE_PORT, BUS_STD = XIL_BRAM, BUS_TYPE = INITIATOR
BUS_INTERFACE BUS = INSTRN_READ_PORT, BUS_STD = XIL_BRAM, BUS_TYPE = INITIATOR

## Generics for VHDL or Parameters for Verilog
PARAMETER C_BASEADDR = 0xFFFFFFFF, DT = std_logic_vector(0 to 31), BUS = ISOCM, MIN_SIZE = 0x1000, ADDR_TYPE = MEMORY
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector(0 to 31), BUS = ISOCM
PARAMETER C_BRAM_EN = 0, DT = integer, RANGE = (0,1)
PARAMETER C_RANGECHECK = 0, DT = integer, RANGE = (0,1)

## Ports
PORT BRAMISOCMCLK = "", DIR = I, SIGIS = CLK, BUS = ISOCM
PORT ISBRAMRST = ISOCM_Rst, DIR = I, BUS = ISOCM
PORT ISOCMBRAMRDABUS = ISOCMBRAMRDABUS, DIR = I, VEC = [8:28], BUS = ISOCM
PORT ISOCMBRAMWRABUS = ISOCMBRAMWRABUS, DIR = I, VEC = [8:28], BUS = ISOCM
PORT ISOCMBRAMEN = ISOCMBRAMEN, DIR = I, BUS = ISOCM
PORT ISOCMBRAMWRDBUS = ISOCMBRAMWRDBUS, DIR = I, VEC = [0:31], BUS = ISOCM
PORT ISOCMBRAMODDWRITEEN = ISOCMBRAMODDWRITEEN, DIR = I, BUS = ISOCM
PORT ISOCMBRAMEVENWRITEEN = ISOCMBRAMEVENWRITEEN, DIR = I, BUS = ISOCM
PORT ISOCMDCRBRAMODDEN = ISOCMDCRBRAMODDEN, DIR = I, BUS = ISOCM
PORT ISOCMDCRBRAMEVENEN = ISOCMDCRBRAMEVENEN, DIR = I, BUS = ISOCM
PORT ISOCMDCRBRAMRDSELECT = ISOCMDCRBRAMRDSELECT, DIR = I, BUS = ISOCM
PORT S_BRAMISOCMRDDBUS = S_BRAMISOCMRDDBUS, DIR = O, VEC = [0:63], BUS = ISOCM
PORT S_BRAMISOCMDCRRDDBUS = S_BRAMISOCMDCRRDDBUS, DIR = O, VEC = [0:31], BUS = ISOCM
PORT S_ISOCMSLAVESELECT = S_ISOCMSLAVESELECT, DIR = O, BUS = ISOCM
PORT S_ISOCMDCRSLAVESELECT = S_ISOCMDCRSLAVESELECT, DIR = O, BUS = ISOCM
PORT BRAM_Rst_A = BRAM_Rst, DIR = O, BUS = DCR_WRITE_PORT
PORT BRAM_Clk_A = BRAM_Clk, DIR = O, BUS = DCR_WRITE_PORT
PORT BRAM_Addr_A = BRAM_Addr, DIR = O, VEC = [0:31], BUS = DCR_WRITE_PORT
PORT BRAM_EN_A = BRAM_EN, DIR = O, BUS = DCR_WRITE_PORT
PORT BRAM_WEN_A = BRAM_WEN, DIR = O, VEC = [0:1], BUS = DCR_WRITE_PORT
PORT BRAM_Dout_A = BRAM_Dout, DIR = O, VEC = [0:63], BUS = DCR_WRITE_PORT
PORT BRAM_Din_A = BRAM_Din, DIR = I, VEC = [0:63], BUS = DCR_WRITE_PORT
PORT BRAM_Rst_B = BRAM_Rst, DIR = O, BUS = INSTRN_READ_PORT
PORT BRAM_Clk_B = BRAM_Clk, DIR = O, BUS = INSTRN_READ_PORT
PORT BRAM_Addr_B = BRAM_Addr, DIR = O, VEC = [0:31], BUS = INSTRN_READ_PORT
PORT BRAM_EN_B = BRAM_EN, DIR = O, BUS = INSTRN_READ_PORT
PORT BRAM_WEN_B = BRAM_WEN, DIR = O, VEC = [0:1], BUS = INSTRN_READ_PORT
PORT BRAM_Dout_B = BRAM_Dout, DIR = O, VEC = [0:63], BUS = INSTRN_READ_PORT
PORT BRAM_Din_B = BRAM_Din, DIR = I, VEC = [0:63], BUS = INSTRN_READ_PORT

END

FINISH_SINGLE_MPD

START_SINGLE_MPD isocm_v10_v2_00_b 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : isocm_v10
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN isocm_v10

## Peripheral Options
OPTION IPTYPE = BUS
OPTION IMP_NETLIST = TRUE
OPTION BUS_STD = ISOCM
OPTION MAX_MASTERS = 1
OPTION LAST_UPDATED = 11.1
OPTION DESC = Instruction-Side On-Chip Memory (OCM) Bus 1.0
OPTION LONG_DESC = Instruction-side On-Chip Memory(OCM) bus interconnect core
OPTION IP_GROUP = Bus and Bridge:PPC
OPTION ARCH_SUPPORT_MAP = (virtex4lx=PRODUCTION, virtex4sx=PRODUCTION, virtex4fx=PRODUCTION, qvirtex4lx=PRODUCTION, qvirtex4sx=PRODUCTION, qvirtex4fx=PRODUCTION, qrvirtex4lx=PRODUCTION, qrvirtex4sx=PRODUCTION, qrvirtex4fx=PRODUCTION)
OPTION HDL = MIXED
OPTION RUN_NGCBUILD = FALSE
OPTION STYLE = HDL
OPTION MAX_SLAVES = 64


## Bus Interfaces

## Generics for VHDL or Parameters for Verilog
PARAMETER C_NUM_MASTERS = 1, DT = integer
PARAMETER C_NUM_SLAVES = 1, DT = integer
PARAMETER C_ISCNTLVALUE = 0x81, DT = std_logic_vector(0 to 7)
PARAMETER C_ISARCVALUE = 0x30, DT = std_logic_vector(0 to 7), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_proc

## Ports
PORT ISOCM_Clk = "", DIR = I, SIGIS = CLK, ASSIGNMENT = REQUIRE
PORT SYS_Rst = "", DIR = I
PORT ISOCM_Rst = ISOCM_Rst, DIR = O
PORT M_ISOCMBRAMRDABUS = M_ISOCMBRAMRDABUS, DIR = I, VEC = [8:28]
PORT M_ISOCMBRAMWRABUS = M_ISOCMBRAMWRABUS, DIR = I, VEC = [8:28]
PORT M_ISOCMBRAMEN = M_ISOCMBRAMEN, DIR = I
PORT M_ISOCMBRAMWRDBUS = M_ISOCMBRAMWRDBUS, DIR = I, VEC = [0:31]
PORT M_ISOCMBRAMODDWRITEEN = M_ISOCMBRAMODDWRITEEN, DIR = I
PORT M_ISOCMBRAMEVENWRITEEN = M_ISOCMBRAMEVENWRITEEN, DIR = I
PORT M_ISOCMDCRBRAMODDEN = M_ISOCMDCRBRAMODDEN, DIR = I
PORT M_ISOCMDCRBRAMEVENEN = M_ISOCMDCRBRAMEVENEN, DIR = I
PORT M_ISOCMDCRBRAMRDSELECT = M_ISOCMDCRBRAMRDSELECT, DIR = I
PORT S_BRAMISOCMRDDBUS = S_BRAMISOCMRDDBUS, DIR = I, VEC = [0:64*C_NUM_SLAVES-1]
PORT S_BRAMISOCMDCRRDDBUS = S_BRAMISOCMDCRRDDBUS, DIR = I, VEC = [0:32*C_NUM_SLAVES-1]
PORT S_ISOCMSLAVESELECT = S_ISOCMSLAVESELECT, DIR = I, VEC = [0:C_NUM_SLAVES-1]
PORT S_ISOCMDCRSLAVESELECT = S_ISOCMDCRSLAVESELECT, DIR = I, VEC = [0:C_NUM_SLAVES-1]
PORT BRAMISOCMRDDBUS = BRAMISOCMRDDBUS, DIR = O, VEC = [0:63]
PORT ISARCVALUE = ISARCVALUE, DIR = O, VEC = [0:7]
PORT ISCNTLVALUE = ISCNTLVALUE, DIR = O, VEC = [0:7]
PORT ISOCMBRAMEN = ISOCMBRAMEN, DIR = O
PORT ISOCMBRAMWRDBUS = ISOCMBRAMWRDBUS, DIR = O, VEC = [0:31]
PORT ISOCMBRAMODDWRITEEN = ISOCMBRAMODDWRITEEN, DIR = O
PORT ISOCMBRAMEVENWRITEEN = ISOCMBRAMEVENWRITEEN, DIR = O
PORT ISOCMBRAMRDABUS = ISOCMBRAMRDABUS, DIR = O, VEC = [8:28]
PORT ISOCMBRAMWRABUS = ISOCMBRAMWRABUS, DIR = O, VEC = [8:28]
PORT ISOCMDCRBRAMODDEN = ISOCMDCRBRAMODDEN, DIR = O
PORT ISOCMDCRBRAMEVENEN = ISOCMDCRBRAMEVENEN, DIR = O
PORT ISOCMDCRBRAMRDSELECT = ISOCMDCRBRAMRDSELECT, DIR = O
PORT BRAMISOCMDCRRDDBUS = BRAMISOCMDCRRDDBUS, DIR = O, VEC = [0:31]

END

FINISH_SINGLE_MPD

START_SINGLE_MPD fcb_v20_v1_00_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : fcb_v20
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN fcb_v20

## Peripheral Options
OPTION IPTYPE = BUS
OPTION HDL = VHDL
OPTION IMP_NETLIST = TRUE
OPTION BUS_STD = FCB2
OPTION MAX_MASTERS = 1
OPTION MAX_SLAVES = 16
OPTION DWIDTH = 32
OPTION LAST_UPDATED = 10.1.2
OPTION DESC = Fabric Co-processor Bus V2.0(FCB)
OPTION LONG_DESC = Fabric Co-processor Bus (FCB) connects one or more FPGA fabric accelerator slaves to the Auxiliary Processor Unit (APU) controller in a Virtex-4 PowerPC 405.
OPTION IP_GROUP = Bus and Bridge:PPC
OPTION ARCH_SUPPORT_MAP = (virtex5fx=PRODUCTION)
OPTION RUN_NGCBUILD = FALSE
OPTION STYLE = HDL


## Bus Interfaces

## Generics for VHDL or Parameters for Verilog
PARAMETER C_FCB2_NUM_MASTERS = 1, DT = INTEGER, RANGE = (1)
PARAMETER C_FCB2_NUM_SLAVES = 1, DT = INTEGER
PARAMETER C_DATA_WIDTH = 32, DT = INTEGER, RANGE = (32)
PARAMETER C_EXT_RESET_HIGH = 1, DT = INTEGER, RANGE = (0,1)
PARAMETER C_DECUDI_WIDTH = 4, DT = INTEGER
PARAMETER C_LBA_WIDTH = 4, DT = INTEGER
PARAMETER C_LDSDATA_WIDTH = 128, DT = INTEGER, RANGE = (128)

## Ports
PORT FCB_CLK = "", DIR = I, SIGIS = Clk, ASSIGNMENT = REQUIRE
PORT SYS_RST = "", DIR = I, SIGIS = Rst, ASSIGNMENT = REQUIRE
PORT FCB_RST = FCB_Rst, DIR = O, SIGIS = Rst
PORT M_DECUDI = APUFCMDECUDI, DIR = I, VEC = [0:(C_DECUDI_WIDTH-1)]
PORT M_DECUDIVALID = APUFCMDECUDIVALID, DIR = I, VEC = [0:(C_FCB2_NUM_MASTERS-1)]
PORT M_ENDIAN = APUFCMENDIAN, DIR = I, VEC = [0:(C_FCB2_NUM_MASTERS-1)]
PORT M_FLUSH = APUFCMFLUSH, DIR = I, VEC = [0:(C_FCB2_NUM_MASTERS-1)]
PORT M_INSTRUCTION = APUFCMINSTRUCTION, DIR = I, VEC = [0:((C_DATA_WIDTH*C_FCB2_NUM_MASTERS)-1)]
PORT M_INSTRVALID = APUFCMINSTRVALID, DIR = I
PORT M_LOADBYTEADDR = APUFCMLOADBYTEADDR, DIR = I, VEC = [0:(C_LBA_WIDTH-1)]
PORT M_LOADDATA = APUFCMLOADDATA, DIR = I, VEC = [0:(C_LDSDATA_WIDTH-1)]
PORT M_LOADDVALID = APUFCMLOADDVALID, DIR = I
PORT M_OPERANDVALID = APUFCMOPERANDVALID, DIR = I, VEC = [0:(C_FCB2_NUM_MASTERS-1)]
PORT M_RADATA = APUFCMRADATA, DIR = I, VEC = [0:((C_DATA_WIDTH*C_FCB2_NUM_MASTERS)-1)]
PORT M_RBDATA = APUFCMRBDATA, DIR = I, VEC = [0:((C_DATA_WIDTH*C_FCB2_NUM_MASTERS)-1)]
PORT M_WRITEBACKOK = APUFCMWRITEBACKOK, DIR = I, VEC = [0:(C_FCB2_NUM_MASTERS-1)]
PORT M_DECFPUOP = APUFCMDECFPUOP, DIR = I
PORT M_DECLOAD = APUFCMDECLOAD, DIR = I
PORT M_DECSTORE = APUFCMDECSTORE, DIR = I
PORT M_DECLDSTXFERSIZE = APUFCMDECLDSTXFERSIZE, DIR = I, VEC = [0:2]
PORT M_DECNONAUTON = APUFCMDECNONAUTON, DIR = I
PORT M_NEXTINSTRREADY = APUFCMNEXTINSTRREADY, DIR = I
PORT M_MSRFE0 = APUFCMMSRFE0, DIR = I
PORT M_MSRFE1 = APUFCMMSRFE1, DIR = I
PORT FCB_CR = FCMAPUCR, DIR = O, VEC = [0:3]
PORT FCB_DONE = FCMAPUDONE, DIR = O
PORT FCB_EXCEPTION = FCMAPUEXCEPTION, DIR = O
PORT FCB_RESULT = FCMAPURESULT, DIR = O, VEC = [0:C_DATA_WIDTH-1]
PORT FCB_RESULTVALID = FCMAPURESULTVALID, DIR = O
PORT FCB_SLEEPNOTREADY = FCMAPUSLEEPNOTREADY, DIR = O
PORT FCB_STOREDATA = FCMAPUSTOREDATA, DIR = O, VEC = [0:(C_LDSDATA_WIDTH-1)]
PORT FCB_CONFIRMINSTR = FCMAPUCONFIRMINSTR, DIR = O
PORT FCB_FPSCRFEX = FCMAPUFPSCRFEX, DIR = O
PORT FCB_DECUDI = FCB_DECUDI, DIR = O, VEC = [0:3]
PORT FCB_DECUDIVALID = FCB_DECUDIVALID, DIR = O
PORT FCB_ENDIAN = FCB_ENDIAN, DIR = O
PORT FCB_FLUSH = FCB_FLUSH, DIR = O
PORT FCB_INSTRUCTION = FCB_INSTRUCTION, DIR = O, VEC = [0:C_DATA_WIDTH-1]
PORT FCB_INSTRVALID = FCB_INSTRVALID, DIR = O
PORT FCB_LOADBYTEADDR = FCB_LOADBYTEADDR, DIR = O, VEC = [0:C_DATA_WIDTH/8-1]
PORT FCB_LOADDATA = FCB_LOADDATA, DIR = O, VEC = [0:C_LDSDATA_WIDTH-1]
PORT FCB_LOADDVALID = FCB_LOADDVALID, DIR = O
PORT FCB_OPERANDVALID = FCB_OPERANDVALID, DIR = O
PORT FCB_RADATA = FCB_RADATA, DIR = O, VEC = [0:C_DATA_WIDTH-1]
PORT FCB_RBDATA = FCB_RBDATA, DIR = O, VEC = [0:C_DATA_WIDTH-1]
PORT FCB_WRITEBACKOK = FCB_WRITEBACKOK, DIR = O
PORT FCB_DECFPUOP = FCB_DECFPUOP, DIR = O
PORT FCB_DECLOAD = FCB_DECLOAD, DIR = O
PORT FCB_DECSTORE = FCB_DECSTORE, DIR = O
PORT FCB_DECLDSTXFERSIZE = FCB_DECLDSTXFERSIZE, DIR = O, VEC = [0:2]
PORT FCB_DECNONAUTON = FCB_DECNONAUTON, DIR = O
PORT FCB_NEXTINSTRREADY = FCB_NEXTINSTRREADY, DIR = O
PORT FCB_MSRFE0 = FCB_MSRFE0, DIR = O
PORT FCB_MSRFE1 = FCB_MSRFE1, DIR = O
PORT Sl_CR = Sl_CR, DIR = I, VEC = [0:((4*C_FCB2_NUM_SLAVES)-1)]
PORT Sl_DONE = Sl_DONE, DIR = I, VEC = [0:(C_FCB2_NUM_SLAVES-1)]
PORT Sl_EXCEPTION = Sl_EXCEPTION, DIR = I, VEC = [0:(C_FCB2_NUM_SLAVES-1)]
PORT Sl_RESULT = Sl_RESULT, DIR = I, VEC = [0:((C_DATA_WIDTH*C_FCB2_NUM_SLAVES)-1)]
PORT Sl_RESULTVALID = Sl_RESULTVALID, DIR = I, VEC = [0:(C_FCB2_NUM_SLAVES-1)]
PORT Sl_SLEEPNOTREADY = Sl_SLEEPNOTREADY, DIR = I, VEC = [0:(C_FCB2_NUM_SLAVES-1)]
PORT Sl_STOREDATA = Sl_STOREDATA, DIR = I, VEC = [0:((C_LDSDATA_WIDTH*C_FCB2_NUM_SLAVES)-1)]
PORT Sl_CONFIRMINSTR = Sl_CONFIRMINSTR, DIR = I, VEC = [0:(C_FCB2_NUM_SLAVES-1)]
PORT Sl_FPSCRFEX = Sl_FPSCRFEX, DIR = I, VEC = [0:(C_FCB2_NUM_SLAVES-1)]

END

FINISH_SINGLE_MPD

START_SINGLE_MPD dcm_module_v1_00_d 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : dcm_module
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN dcm_module

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION IPLEVEL_DRC_PROC = check_iplevel_settings
OPTION DESC = Digital Clock Manager (DCM)
OPTION LONG_DESC = The digital clock manager module is a wrapper around the DCM primitive which allows it to be used in the EDK tool suite.
OPTION IP_GROUP = 'Clock, Reset and Interrupt:MICROBLAZE:PPC'
OPTION ARCH_SUPPORT_MAP = (aspartan3=SUPERSEDED, spartan3=SUPERSEDED, spartan3an=SUPERSEDED, spartan3a=SUPERSEDED, spartan3e=SUPERSEDED, spartan3adsp=SUPERSEDED, virtex4lx=SUPERSEDED, virtex4sx=SUPERSEDED, virtex4fx=SUPERSEDED, virtex5lx=SUPERSEDED, virtex5sx=SUPERSEDED, virtex5fx=SUPERSEDED, aspartan3e=SUPERSEDED, aspartan3a=SUPERSEDED, aspartan3adsp=SUPERSEDED, qvirtex4lx=SUPERSEDED, qvirtex4sx=SUPERSEDED, qvirtex4fx=SUPERSEDED, qrvirtex4lx=SUPERSEDED, qrvirtex4sx=SUPERSEDED, qrvirtex4fx=SUPERSEDED, spartan6t=SUPERSEDED, spartan6=SUPERSEDED, spartan6l=SUPERSEDED, qspartan6t=SUPERSEDED, qspartan6=SUPERSEDED, aspartan6t=SUPERSEDED, aspartan6=SUPERSEDED, virtex6lx=SUPERSEDED, virtex6sx=SUPERSEDED, virtex6hx=SUPERSEDED, virtex6cx=SUPERSEDED, virtex6llx=SUPERSEDED, virtex6lsx=SUPERSEDED, qspartan6l=SUPERSEDED, qrvirtex5=SUPERSEDED, qvirtex6lx=SUPERSEDED, qvirtex6sx=SUPERSEDED, qvirtex6fx=SUPERSEDED, qvirtex6tx=SUPERSEDED)
OPTION RUN_NGCBUILD = FALSE
OPTION STYLE = HDL


## Bus Interfaces

## Generics for VHDL or Parameters for Verilog
PARAMETER C_DFS_FREQUENCY_MODE = LOW, DT = STRING, VALUES = (LOW= Low, HIGH= High)
PARAMETER C_DLL_FREQUENCY_MODE = LOW, DT = STRING, VALUES = (LOW= Low, HIGH= High)
PARAMETER C_DUTY_CYCLE_CORRECTION = TRUE, DT = BOOLEAN, VALUES = (TRUE= True, FALSE= False)
PARAMETER C_CLKIN_DIVIDE_BY_2 = FALSE, DT = BOOLEAN, VALUES = (TRUE= True, FALSE= False)
PARAMETER C_CLK_FEEDBACK = 1X, DT = STRING, VALUES = (NONE= None, 1X= 1X, 2X= 2X)
PARAMETER C_CLKOUT_PHASE_SHIFT = NONE, DT = STRING, VALUES = (NONE= None, FIXED= Fixed, VARIABLE= Variable, VARIABLE_POSITIVE=  Variable Positive , VARIABLE_CENTER=  Variable Center , DIRECT= Direct)
PARAMETER C_DSS_MODE = NONE, DT = STRING, VALUES = (NONE= None)
PARAMETER C_STARTUP_WAIT = FALSE, DT = BOOLEAN, VALUES = (TRUE= True, FALSE= False)
PARAMETER C_PHASE_SHIFT = 0, DT = INTEGER, RANGE = (-255:1023)
PARAMETER C_CLKFX_MULTIPLY = 4, DT = INTEGER, RANGE = (2:32)
PARAMETER C_CLKFX_DIVIDE = 1, DT = INTEGER, RANGE = (1:32)
PARAMETER C_CLKDV_DIVIDE = 2.0, DT = REAL, VALUES = (1.5 = 1.5, 2.0 = 2.0, 2.5 = 2.5, 3.0= 3.0, 3.5= 3.5, 4.0= 4.0, 4.5= 4.5, 5.0= 5.0, 5.5=5.5, 6.0= 6.0, 6.5= 6.5, 7.0= 7.0, 7.5= 7.5, 8.0= 8.0, 9.0= 9.0, 10.0= 10.0, 11.0= 11.0, 12.0= 12.0, 13.0= 13.0, 14.0= 14.0, 15.0= 15.0, 16.0= 16.0)
PARAMETER C_CLKIN_PERIOD = 41.66666, DT = REAL, IO_IS = clk_freq, CLK_PORT = CLKIN, CLK_UNIT = NS
PARAMETER C_DESKEW_ADJUST = SYSTEM_SYNCHRONOUS, DT = STRING, VALUES = (SYSTEM_SYNCHRONOUS=  System Synchronous , SOURCE_SYNCHRONOUS=  Source Synchronous , 0= 0, 1= 1, 2= 2, 3= 3, 4= 4, 5= 5, 6= 6, 7= 7, 8= 8, 9= 9, 10= 10, 11= 11, 12= 12, 13= 13, 14= 14, 15= 15)
PARAMETER C_CLKIN_BUF = FALSE, DT = BOOLEAN, VALUES = (TRUE= True, FALSE= False)
PARAMETER C_CLKFB_BUF = FALSE, DT = BOOLEAN, VALUES = (TRUE= True, FALSE= False)
PARAMETER C_CLK0_BUF = FALSE, DT = BOOLEAN, VALUES = (TRUE= True, FALSE= False)
PARAMETER C_CLK90_BUF = FALSE, DT = BOOLEAN, VALUES = (TRUE= True, FALSE= False)
PARAMETER C_CLK180_BUF = FALSE, DT = BOOLEAN, VALUES = (TRUE= True, FALSE= False)
PARAMETER C_CLK270_BUF = FALSE, DT = BOOLEAN, VALUES = (TRUE= True, FALSE= False)
PARAMETER C_CLKDV_BUF = FALSE, DT = BOOLEAN, VALUES = (TRUE= True, FALSE= False)
PARAMETER C_CLK2X_BUF = FALSE, DT = BOOLEAN, VALUES = (TRUE= True, FALSE= False)
PARAMETER C_CLK2X180_BUF = FALSE, DT = BOOLEAN, VALUES = (TRUE= True, FALSE= False)
PARAMETER C_CLKFX_BUF = FALSE, DT = BOOLEAN, VALUES = (TRUE= True, FALSE= False)
PARAMETER C_CLKFX180_BUF = FALSE, DT = BOOLEAN, VALUES = (TRUE= True, FALSE= False)
PARAMETER C_EXT_RESET_HIGH = 1, DT = integer, IO_IS = polarity, RANGE = (0:1), VALUES = (0 =  0: Active Low , 1 =  1: Active High )
PARAMETER C_FAMILY = virtex2, DT = string

## Ports
PORT RST = "", DIR = I
PORT CLKIN = "", DIR = I, SIGIS = CLK
PORT CLKFB = "", DIR = I
PORT PSEN = "", DIR = I
PORT PSINCDEC = "", DIR = I
PORT PSCLK = "", DIR = I
PORT DSSEN = "", DIR = I
PORT CLK0 = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN, CLK_FACTOR = 1.0 / ( (C_CLKIN_DIVIDE_BY_2)? 2 : 1 )
PORT CLK90 = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN, CLK_FACTOR = 1.0 / ( (C_CLKIN_DIVIDE_BY_2)? 2 : 1 )
PORT CLK180 = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN, CLK_FACTOR = 1.0 / ( (C_CLKIN_DIVIDE_BY_2)? 2 : 1 )
PORT CLK270 = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN, CLK_FACTOR = 1.0 / ( (C_CLKIN_DIVIDE_BY_2)? 2 : 1 )
PORT CLKDV = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN, CLK_FACTOR = 1.0 / ((C_CLKDV_DIVIDE) * ((C_CLKIN_DIVIDE_BY_2)? 2 : 1 ))
PORT CLK2X = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN, CLK_FACTOR = 2.0 / ( (C_CLKIN_DIVIDE_BY_2)? 2 : 1 )
PORT CLK2X180 = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN, CLK_FACTOR = 2.0 / ( (C_CLKIN_DIVIDE_BY_2)? 2 : 1 )
PORT CLKFX = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN, CLK_FACTOR = 1.0 *  C_CLKFX_MULTIPLY / ((C_CLKFX_DIVIDE) * ((C_CLKIN_DIVIDE_BY_2)? 2 : 1 ))
PORT CLKFX180 = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN, CLK_FACTOR = 1.0 * C_CLKFX_MULTIPLY / ((C_CLKFX_DIVIDE) * ((C_CLKIN_DIVIDE_BY_2)? 2 : 1 ))
PORT STATUS = "", DIR = O, VEC = [7:0], ENDIAN = LITTLE
PORT LOCKED = "", DIR = O
PORT PSDONE = "", DIR = O

END

FINISH_SINGLE_MPD

START_SINGLE_MPD apu_fpu_v3_10_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : apu_fpu
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN apu_fpu

## Peripheral Options
OPTION STYLE = MIX
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION SIMMODELS = STRUCTURAL
OPTION HDL = VHDL
OPTION SYSLEVEL_DRC_PROC = apufpu_syslevel_drc
OPTION LAST_UPDATED = 11.1
OPTION DESC = APU Floating Point Unit
OPTION LONG_DESC = Floating Point Unit via Auxilary Processor Unit.
OPTION IP_GROUP = Arithmetic:PPC
OPTION ARCH_SUPPORT_MAP = (virtex4lx=PRODUCTION, virtex4sx=PRODUCTION, virtex4fx=PRODUCTION, qvirtex4lx=PRODUCTION, qvirtex4sx=PRODUCTION, qvirtex4fx=PRODUCTION, qrvirtex4lx=PRODUCTION, qrvirtex4sx=PRODUCTION, qrvirtex4fx=PRODUCTION)
OPTION RUN_NGCBUILD = TRUE


## Bus Interfaces
BUS_INTERFACE BUS = SFCB, BUS_STD = FCB, BUS_TYPE = SLAVE

## Generics for VHDL or Parameters for Verilog
PARAMETER C_FULL_FEATURES = 1, DT = integer, RANGE = (0:1), VALUES = ( 0 = Lite, 1 = Full), DESC = FPU features, PERMIT = BASE_USER

## Ports
PORT FCB_CLK = "", DIR = I, BUS = SFCB, SIGIS = CLK
PORT FCB_RST = FCB_RST, DIR = I, BUS = SFCB
PORT FPU_CLK = "", DIR = I, SIGIS = CLK
PORT APUFCMDECODED = FCB_DECODED, DIR = I, BUS = SFCB
PORT APUFCMDECUDI = FCB_DECUDI, DIR = I, BUS = SFCB, VEC = [0:2]
PORT APUFCMDECUDIVALID = FCB_DECUDIVALID, DIR = I, BUS = SFCB
PORT APUFCMENDIAN = FCB_ENDIAN, DIR = I, BUS = SFCB
PORT APUFCMFLUSH = FCB_FLUSH, DIR = I, BUS = SFCB
PORT APUFCMINSTRUCTION = FCB_INSTRUCTION, DIR = I, BUS = SFCB, VEC = [0:31]
PORT APUFCMINSTRVALID = FCB_INSTRVALID, DIR = I, BUS = SFCB
PORT APUFCMLOADBYTEEN = FCB_LOADBYTEEN, DIR = I, BUS = SFCB, VEC = [0:3]
PORT APUFCMLOADDATA = FCB_LOADDATA, DIR = I, BUS = SFCB, VEC = [0:31]
PORT APUFCMLOADDVALID = FCB_LOADDVALID, DIR = I, BUS = SFCB
PORT APUFCMOPERANDVALID = FCB_OPERANDVALID, DIR = I, BUS = SFCB
PORT APUFCMRADATA = FCB_RADATA, DIR = I, BUS = SFCB, VEC = [0:31]
PORT APUFCMRBDATA = FCB_RBDATA, DIR = I, BUS = SFCB, VEC = [0:31]
PORT APUFCMWRITEBACKOK = FCB_WRITEBACKOK, DIR = I, BUS = SFCB
PORT APUFCMXERCA = FCB_XERCA, DIR = I, BUS = SFCB
PORT FCMAPUCR = Sl_CR, DIR = O, BUS = SFCB, VEC = [0:3]
PORT FCMAPUDCDCREN = Sl_DCDCREN, DIR = O, BUS = SFCB
PORT FCMAPUDCDFORCEALIGN = Sl_DCDFORCEALIGN, DIR = O, BUS = SFCB
PORT FCMAPUDCDFORCEBESTEERING = Sl_DCDFORCEBESTEERING, DIR = O, BUS = SFCB
PORT FCMAPUDCDFPUOP = Sl_DCDFPUOP, DIR = O, BUS = SFCB
PORT FCMAPUDCDGPRWRITE = Sl_DCDGPRWRITE, DIR = O, BUS = SFCB
PORT FCMAPUDCDLDSTBYTE = Sl_DCDLDSTBYTE, DIR = O, BUS = SFCB
PORT FCMAPUDCDLDSTDW = Sl_DCDLDSTDW, DIR = O, BUS = SFCB
PORT FCMAPUDCDLDSTHW = Sl_DCDLDSTHW, DIR = O, BUS = SFCB
PORT FCMAPUDCDLDSTQW = Sl_DCDLDSTQW, DIR = O, BUS = SFCB
PORT FCMAPUDCDLDSTWD = Sl_DCDLDSTWD, DIR = O, BUS = SFCB
PORT FCMAPUDCDLOAD = Sl_DCDLOAD, DIR = O, BUS = SFCB
PORT FCMAPUDCDPRIVOP = Sl_DCDPRIVOP, DIR = O, BUS = SFCB
PORT FCMAPUDCDRAEN = Sl_DCDRAEN, DIR = O, BUS = SFCB
PORT FCMAPUDCDRBEN = Sl_DCDRBEN, DIR = O, BUS = SFCB
PORT FCMAPUDCDSTORE = Sl_DCDSTORE, DIR = O, BUS = SFCB
PORT FCMAPUDCDTRAPBE = Sl_DCDTRAPBE, DIR = O, BUS = SFCB
PORT FCMAPUDCDTRAPLE = Sl_DCDTRAPLE, DIR = O, BUS = SFCB
PORT FCMAPUDCDUPDATE = Sl_DCDUPDATE, DIR = O, BUS = SFCB
PORT FCMAPUDCDXERCAEN = Sl_DCDXERCAEN, DIR = O, BUS = SFCB
PORT FCMAPUDCDXEROVEN = Sl_DCDXEROVEN, DIR = O, BUS = SFCB
PORT FCMAPUDECODEBUSY = Sl_DECODEBUSY, DIR = O, BUS = SFCB
PORT FCMAPUDONE = Sl_DONE, DIR = O, BUS = SFCB
PORT FCMAPUEXCEPTION = Sl_EXCEPTION, DIR = O, BUS = SFCB
PORT FCMAPUEXEBLOCKINGMCO = Sl_EXEBLOCKINGMCO, DIR = O, BUS = SFCB
PORT FCMAPUEXECRFIELD = Sl_EXECRFIELD, DIR = O, BUS = SFCB, VEC = [0:2]
PORT FCMAPUEXENONBLOCKINGMCO = Sl_EXENONBLOCKINGMCO, DIR = O, BUS = SFCB
PORT FCMAPUINSTRACK = Sl_INSTRACK, DIR = O, BUS = SFCB
PORT FCMAPULOADWAIT = Sl_LOADWAIT, DIR = O, BUS = SFCB
PORT FCMAPURESULT = Sl_RESULT, DIR = O, BUS = SFCB, VEC = [0:31]
PORT FCMAPURESULTVALID = Sl_RESULTVALID, DIR = O, BUS = SFCB
PORT FCMAPUSLEEPNOTREADY = Sl_SLEEPNOTREADY, DIR = O, BUS = SFCB
PORT FCMAPUXERCA = Sl_XERCA, DIR = O, BUS = SFCB
PORT FCMAPUXEROV = Sl_XEROV, DIR = O, BUS = SFCB

END

FINISH_SINGLE_MPD

START_SINGLE_MPD ppc440_virtex5_v1_01_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : ppc440_virtex5
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN ppc440_virtex5

## Peripheral Options
OPTION IPTYPE = PROCESSOR
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION SPECIAL = PPC440
OPTION IPLEVEL_DRC_PROC = check_iplevel_settings
OPTION SYSLEVEL_DRC_PROC = check_syslevel_settings
OPTION RUN_NGCBUILD = TRUE
OPTION PLATGEN_SYSLEVEL_UPDATE_PROC = generate_corelevel_ucf
OPTION CLK_FREQ_RATIOS = (CPMINTERCONNECTCLK/CPMC440CLK=(1/[1:99],2/[3:99]), (CPMPPCMPLBCLK,CPMPPCS0PLBCLK,CPMPPCS1PLBCLK)/CPMINTERCONNECTCLK=(1/[1:16]), CPMMCCLK/CPMINTERCONNECTCLK=(1/[1:16],2/3), CPMFCMCLK/CPMC440CLK=(1/[1:16]))
OPTION LAST_UPDATED = 10.1.2
OPTION DESC = PowerPC 440 Virtex-5
OPTION LONG_DESC = A wrapper to instantiate the PowerPC 440 Processor Block primitive
OPTION IP_GROUP = Processor:PPC
OPTION ARCH_SUPPORT_MAP = (virtex5fx=PRODUCTION)
OPTION STYLE = HDL

IO_INTERFACE IO_IF = cpudbg_0, IO_TYPE = XIL_CPUDEBUG_V1
IO_INTERFACE IO_IF = trace_0, IO_TYPE = XIL_TRACE_V1

## Bus Interfaces
BUS_INTERFACE BUS = MPLB, BUS_STD = PLBV46, BUS_TYPE = MASTER, GENERATE_BURSTS = TRUE, SHARES_ADDR = PPC440MC
BUS_INTERFACE BUS = SPLB0, BUS_STD = PLBV46, BUS_TYPE = SLAVE
BUS_INTERFACE BUS = SPLB1, BUS_STD = PLBV46, BUS_TYPE = SLAVE
BUS_INTERFACE BUS = PPC440MC, BUS_STD = XIL_PPC440MC, BUS_TYPE = INITIATOR, SHARES_ADDR = MPLB
BUS_INTERFACE BUS = LLDMA0, BUS_STD = XIL_LL_DMA, BUS_TYPE = TARGET, ISVALID = (C_NUM_DMA > 0)
BUS_INTERFACE BUS = LLDMA1, BUS_STD = XIL_LL_DMA, BUS_TYPE = TARGET, ISVALID = (C_NUM_DMA > 1)
BUS_INTERFACE BUS = LLDMA2, BUS_STD = XIL_LL_DMA, BUS_TYPE = TARGET, ISVALID = (C_NUM_DMA > 2)
BUS_INTERFACE BUS = LLDMA3, BUS_STD = XIL_LL_DMA, BUS_TYPE = TARGET, ISVALID = (C_NUM_DMA > 3)
BUS_INTERFACE BUS = MDCR, BUS_STD = DCR, BUS_TYPE = MASTER
BUS_INTERFACE BUS = SDCR, BUS_STD = DCR, BUS_TYPE = SLAVE
BUS_INTERFACE BUS = MFCB, BUS_STD = FCB2, BUS_TYPE = MASTER
BUS_INTERFACE BUS = MFCM, BUS_STD = XIL_FCM2, BUS_TYPE = INITIATOR
BUS_INTERFACE BUS = JTAGPPC, BUS_STD = XIL_JTAGPPC, BUS_TYPE = TARGET
BUS_INTERFACE BUS = RESETPPC, BUS_STD = XIL_RESETPPC, BUS_TYPE = TARGET

## Generics for VHDL or Parameters for Verilog
PARAMETER C_PIR = 0b1111, DT = std_logic_vector(28 to 31), DESC = 'Processor Identification Register (4 LSBs)'
PARAMETER C_ENDIAN_RESET = 0, DT = std_logic, VALUES = (0 = Big Endian, 1 = Little Endian), DESC = 'Reset value of Endian storage byte ordering'
PARAMETER C_USER_RESET = 0b0000, DT = std_logic_vector(0 to 3), DESC = 'Reset value for user defined storage attributes (Tattribute[4:7])'
PARAMETER C_INTERCONNECT_IMASK = 0xffffffff, DT = BIT_VECTOR(0 to 31), DESC = 'Interrupt mask for Crossbar, PLB Bridges, and MIB (IMASK DCR)'
PARAMETER C_ICU_RD_FETCH_PLB_PRIO = 0b00, DT = std_logic_vector(0 to 1), VALUES = (0b00='00 (Lowest)', 0b01=01, 0b10=10, 0b11='11 (Highest)'), DESC = 'PLB priority for fetch requests'
PARAMETER C_ICU_RD_SPEC_PLB_PRIO = 0b00, DT = std_logic_vector(0 to 1), VALUES = (0b00='00 (Lowest)', 0b01=01, 0b10=10, 0b11='11 (Highest)'), DESC = 'PLB priority for speculative fetch requests'
PARAMETER C_ICU_RD_TOUCH_PLB_PRIO = 0b00, DT = std_logic_vector(0 to 1), VALUES = (0b00='00 (Lowest)', 0b01=01, 0b10=10, 0b11='11 (Highest)'), DESC = 'PLB priority for icbt requests'
PARAMETER C_DCU_RD_LD_CACHE_PLB_PRIO = 0b00, DT = std_logic_vector(0 to 1), VALUES = (0b00='00 (Lowest)', 0b01=01, 0b10=10, 0b11='11 (Highest)'), DESC = 'PLB priority for non-urgent cacheable load requests'
PARAMETER C_DCU_RD_NONCACHE_PLB_PRIO = 0b00, DT = std_logic_vector(0 to 1), VALUES = (0b00='00 (Lowest)', 0b01=01, 0b10=10, 0b11='11 (Highest)'), DESC = 'PLB priority for non-urgent non-cacheable load requests'
PARAMETER C_DCU_RD_TOUCH_PLB_PRIO = 0b00, DT = std_logic_vector(0 to 1), VALUES = (0b00='00 (Lowest)', 0b01=01, 0b10=10, 0b11='11 (Highest)'), DESC = 'PLB priority for dcbt requests'
PARAMETER C_DCU_RD_URGENT_PLB_PRIO = 0b00, DT = std_logic_vector(0 to 1), VALUES = (0b00='00 (Lowest)', 0b01=01, 0b10=10, 0b11='11 (Highest)'), DESC = 'PLB priority for urgent load requests'
PARAMETER C_DCU_WR_FLUSH_PLB_PRIO = 0b00, DT = std_logic_vector(0 to 1), VALUES = (0b00='00 (Lowest)', 0b01=01, 0b10=10, 0b11='11 (Highest)'), DESC = 'PLB priority for non-urgent flush requests'
PARAMETER C_DCU_WR_STORE_PLB_PRIO = 0b00, DT = std_logic_vector(0 to 1), VALUES = (0b00='00 (Lowest)', 0b01=01, 0b10=10, 0b11='11 (Highest)'), DESC = 'PLB priority for non-urgent store requests'
PARAMETER C_DCU_WR_URGENT_PLB_PRIO = 0b00, DT = std_logic_vector(0 to 1), VALUES = (0b00='00 (Lowest)', 0b01=01, 0b10=10, 0b11='11 (Highest)'), DESC = 'PLB priority for urgent store requests'
PARAMETER C_DMA0_PLB_PRIO = 0b00, DT = bit_vector(0 to 1), ISVALID = (C_NUM_DMA > 0), VALUES = (0b00='00 (Lowest)', 0b01=01, 0b10=10, 0b11='11 (Highest)'), DESC = 'PLB priority for DMA0 requests'
PARAMETER C_DMA1_PLB_PRIO = 0b00, DT = bit_vector(0 to 1), ISVALID = (C_NUM_DMA > 1), VALUES = (0b00='00 (Lowest)', 0b01=01, 0b10=10, 0b11='11 (Highest)'), DESC = 'PLB priority for DMA1 requests'
PARAMETER C_DMA2_PLB_PRIO = 0b00, DT = bit_vector(0 to 1), ISVALID = (C_NUM_DMA > 2), VALUES = (0b00='00 (Lowest)', 0b01=01, 0b10=10, 0b11='11 (Highest)'), DESC = 'PLB priority for DMA2 requests'
PARAMETER C_DMA3_PLB_PRIO = 0b00, DT = bit_vector(0 to 1), ISVALID = (C_NUM_DMA > 3), VALUES = (0b00='00 (Lowest)', 0b01=01, 0b10=10, 0b11='11 (Highest)'), DESC = 'PLB priority for DMA3 requests'
PARAMETER C_IDCR_BASEADDR = 0b1111111111, DT = std_logic_vector(0 to 9), BUS = SDCR:MDCR, MIN_SIZE = 0x100, DESC = 'Base address of the internal DCR registers'
PARAMETER C_IDCR_HIGHADDR = 0b0000000000, DT = std_logic_vector(0 to 9), BUS = SDCR:MDCR, DESC = 'High address of the internal DCR registers'
PARAMETER C_APU_CONTROL = 0b00010000000000000, DT = BIT_VECTOR(0 to 16), DESC = 'APU Control register'
PARAMETER C_APU_UDI_0 = 0b000000000000000000000000, DT = BIT_VECTOR(0 to 23), DESC = 'UDI configuration register 0'
PARAMETER C_APU_UDI_1 = 0b000000000000000000000000, DT = BIT_VECTOR(0 to 23), DESC = 'UDI configuration register 1'
PARAMETER C_APU_UDI_2 = 0b000000000000000000000000, DT = BIT_VECTOR(0 to 23), DESC = 'UDI configuration register 2'
PARAMETER C_APU_UDI_3 = 0b000000000000000000000000, DT = BIT_VECTOR(0 to 23), DESC = 'UDI configuration register 3'
PARAMETER C_APU_UDI_4 = 0b000000000000000000000000, DT = BIT_VECTOR(0 to 23), DESC = 'UDI configuration register 4'
PARAMETER C_APU_UDI_5 = 0b000000000000000000000000, DT = BIT_VECTOR(0 to 23), DESC = 'UDI configuration register 5'
PARAMETER C_APU_UDI_6 = 0b000000000000000000000000, DT = BIT_VECTOR(0 to 23), DESC = 'UDI configuration register 6'
PARAMETER C_APU_UDI_7 = 0b000000000000000000000000, DT = BIT_VECTOR(0 to 23), DESC = 'UDI configuration register 7'
PARAMETER C_APU_UDI_8 = 0b000000000000000000000000, DT = BIT_VECTOR(0 to 23), DESC = 'UDI configuration register 8'
PARAMETER C_APU_UDI_9 = 0b000000000000000000000000, DT = BIT_VECTOR(0 to 23), DESC = 'UDI configuration register 9'
PARAMETER C_APU_UDI_10 = 0b000000000000000000000000, DT = BIT_VECTOR(0 to 23), DESC = 'UDI configuration register 10'
PARAMETER C_APU_UDI_11 = 0b000000000000000000000000, DT = BIT_VECTOR(0 to 23), DESC = 'UDI configuration register 11'
PARAMETER C_APU_UDI_12 = 0b000000000000000000000000, DT = BIT_VECTOR(0 to 23), DESC = 'UDI configuration register 12'
PARAMETER C_APU_UDI_13 = 0b000000000000000000000000, DT = BIT_VECTOR(0 to 23), DESC = 'UDI configuration register 13'
PARAMETER C_APU_UDI_14 = 0b000000000000000000000000, DT = BIT_VECTOR(0 to 23), DESC = 'UDI configuration register 14'
PARAMETER C_APU_UDI_15 = 0b000000000000000000000000, DT = BIT_VECTOR(0 to 23), DESC = 'UDI configuration register 15'
PARAMETER C_PPC440MC_ADDR_BASE = 0xFFFFFFFF, DT = std_logic_vector(0 to 31), ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ppc440mc_addr
PARAMETER C_PPC440MC_ADDR_HIGH = 0x00000000, DT = std_logic_vector(0 to 31), ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ppc440mc_addr
PARAMETER C_PPC440MC_ROW_CONFLICT_MASK = 0x00000000, DT = BIT_VECTOR(0 to 31), DESC = 'Memory row conflict mask'
PARAMETER C_PPC440MC_BANK_CONFLICT_MASK = 0x00000000, DT = BIT_VECTOR(0 to 31), DESC = 'Memory bank conflict mask'
PARAMETER C_PPC440MC_CONTROL = 0x0000008f, DT = BIT_VECTOR(0 to 31), DESC = 'Memory Controller Interface configuration register (MI_CONTROL DCR)'
PARAMETER C_PPC440MC_PRIO_ICU = 4, DT = integer, RANGE = (0:4), DESC = 'Secondary priority for MCI instruction fetches'
PARAMETER C_PPC440MC_PRIO_DCUW = 3, DT = integer, RANGE = (0:4), DESC = 'Secondary priority for MCI data stores'
PARAMETER C_PPC440MC_PRIO_DCUR = 2, DT = integer, RANGE = (0:4), DESC = 'Secondary priority for MCI data loads'
PARAMETER C_PPC440MC_PRIO_SPLB1 = 0, DT = integer, RANGE = (0:4), DESC = 'Secondary priority for MCI requests from SPLB1, DMA2 or DMA3'
PARAMETER C_PPC440MC_PRIO_SPLB0 = 1, DT = integer, RANGE = (0:4), DESC = 'Secondary priority for MCI requests from SPLB0, DMA0 or DMA1'
PARAMETER C_PPC440MC_ARB_MODE = 0, DT = integer, VALUES = (0 = 'Least Recently Used', 1 = 'Round-Robin', 2= 'Fixed priority'), DESC = 'MCI arbitration mode'
PARAMETER C_PPC440MC_MAX_BURST = 8, DT = integer, RANGE = (1,2,4,8,16), DESC = 'Maximum number of quad-words per burst through MCI '
PARAMETER C_MPLB_AWIDTH = 32, DT = integer, BUS = MPLB, ASSIGNMENT = UPDATE
PARAMETER C_MPLB_DWIDTH = 128, DT = integer, BUS = MPLB, ASSIGNMENT = UPDATE
PARAMETER C_MPLB_NATIVE_DWIDTH = 128, DT = integer, BUS = MPLB, ASSIGNMENT = CONSTANT
PARAMETER C_MPLB_COUNTER = 0x00000500, DT = BIT_VECTOR(0 to 31), DESC = 'NOT SUPPORTED'
PARAMETER C_MPLB_PRIO_ICU = 4, DT = integer, RANGE = (0:4), DESC = 'Secondary priority for MPLB instruction fetches'
PARAMETER C_MPLB_PRIO_DCUW = 3, DT = integer, RANGE = (0:4), DESC = 'Secondary priority for MPLB data stores'
PARAMETER C_MPLB_PRIO_DCUR = 2, DT = integer, RANGE = (0:4), DESC = 'Secondary priority for MPLB data loads'
PARAMETER C_MPLB_PRIO_SPLB1 = 0, DT = integer, RANGE = (0:4), DESC = 'Secondary priority for MPLB requests from SPLB0, DMA0 or DMA1'
PARAMETER C_MPLB_PRIO_SPLB0 = 1, DT = integer, RANGE = (0:4), DESC = 'Secondary priority for MPLB requests from SPLB0, DMA0 or DMA1'
PARAMETER C_MPLB_ARB_MODE = 0, DT = integer, VALUES = (0 = 'Least Recently Used', 1 = 'Round-Robin', 2= 'Fixed priority'), DESC = 'MPLB arbitration mode'
PARAMETER C_MPLB_SYNC_TATTRIBUTE = 0, DT = integer, VALUES = (0 = 'Disable SYNC', 1 = 'Enable Sync'), DESC = 'Value of Sync attribute (Tattribute[7]) on MPLB'
PARAMETER C_MPLB_MAX_BURST = 8, DT = integer, RANGE = (1,2,4,8,16), DESC = 'Maximum number of quad-words per burst through MPLB'
PARAMETER C_MPLB_ALLOW_LOCK_XFER = 1, DT = integer, VALUES = (0 = 'No', 1 = 'Yes'), DESC = 'Allow locked transfers on MPLB '
PARAMETER C_MPLB_READ_PIPE_ENABLE = 1, DT = integer, VALUES = (0 = 'No', 1 = 'Yes'), DESC = 'Allow read address pipelining on MPLB'
PARAMETER C_MPLB_WRITE_PIPE_ENABLE = 1, DT = integer, VALUES = (0 = 'No', 1 = 'Yes'), ISVALID = (C_MPLB_WRITE_POST_ENABLE > 0), DESC = 'Allow write address pipelining on MPLB '
PARAMETER C_MPLB_WRITE_POST_ENABLE = 1, DT = integer, VALUES = (0 = 'No', 1 = 'Yes'), DESC = 'Allow posted writes on MPLB and SPLB interfaces'
PARAMETER C_MPLB_P2P = 0, BUS = MPLB, DT = integer, ASSIGNMENT = CONSTANT
PARAMETER C_MPLB_WDOG_ENABLE = 1, DT = integer, RANGE = (0:1), DESC = 'NOT SUPPORTED'
PARAMETER C_SPLB0_AWIDTH = 32, DT = integer, BUS = SPLB0, ASSIGNMENT = UPDATE
PARAMETER C_SPLB0_DWIDTH = 128, DT = integer, BUS = SPLB0, ASSIGNMENT = UPDATE
PARAMETER C_SPLB0_NATIVE_DWIDTH = 128, DT = integer, BUS = SPLB0, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB0_SUPPORT_BURSTS = 1, DT = integer, BUS = SPLB0, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB0_USE_MPLB_ADDR = 0, DT = integer, VALUES = (0 = 'No', 1 = 'Yes'), DESC = 'Allow access to MPLB via SPLB0'
PARAMETER C_SPLB0_NUM_MPLB_ADDR_RNG = 0, DT = integer, RANGE = (0:4), DESC = 'Number of MPLB address ranges accessible via SPLB0'
PARAMETER C_SPLB0_RNG_MC_BASEADDR = 0xffffffff, DT = std_logic_vector(0 to 31), BUS = SPLB0, MIN_SIZE = 0x08000000, DESC = 'MCI address range accessible via SPLB0'
PARAMETER C_SPLB0_RNG_MC_HIGHADDR = 0x00000000, DT = std_logic_vector(0 to 31), BUS = SPLB0
PARAMETER C_SPLB0_RNG0_MPLB_BASEADDR = 0xffffffff, DT = std_logic_vector(0 to 31), BUS = SPLB0, BRIDGE_TO = MPLB, ISVALID = (C_SPLB0_NUM_MPLB_ADDR_RNG * C_SPLB0_USE_MPLB_ADDR >= 1), ADDR_TYPE = BRIDGE, MIN_SIZE = 0x08000000, DESC = 'Range 0 of MPLB addresses accessible via SPLB0'
PARAMETER C_SPLB0_RNG0_MPLB_HIGHADDR = 0x00000000, DT = std_logic_vector(0 to 31), BUS = SPLB0
PARAMETER C_SPLB0_RNG1_MPLB_BASEADDR = 0xffffffff, DT = std_logic_vector(0 to 31), BUS = SPLB0, BRIDGE_TO = MPLB, ISVALID = (C_SPLB0_NUM_MPLB_ADDR_RNG * C_SPLB0_USE_MPLB_ADDR >= 2), ADDR_TYPE = BRIDGE, MIN_SIZE = 0x08000000, DESC = 'Range 1 of MPLB addresses accessible via SPLB0'
PARAMETER C_SPLB0_RNG1_MPLB_HIGHADDR = 0x00000000, DT = std_logic_vector(0 to 31), BUS = SPLB0
PARAMETER C_SPLB0_RNG2_MPLB_BASEADDR = 0xffffffff, DT = std_logic_vector(0 to 31), BUS = SPLB0, BRIDGE_TO = MPLB, ISVALID = (C_SPLB0_NUM_MPLB_ADDR_RNG * C_SPLB0_USE_MPLB_ADDR >= 3), ADDR_TYPE = BRIDGE, MIN_SIZE = 0x08000000, DESC = 'Range 2 of MPLB addresses accessible via SPLB0'
PARAMETER C_SPLB0_RNG2_MPLB_HIGHADDR = 0x00000000, DT = std_logic_vector(0 to 31), BUS = SPLB0
PARAMETER C_SPLB0_RNG3_MPLB_BASEADDR = 0xffffffff, DT = std_logic_vector(0 to 31), BUS = SPLB0, BRIDGE_TO = MPLB, ISVALID = (C_SPLB0_NUM_MPLB_ADDR_RNG * C_SPLB0_USE_MPLB_ADDR >= 4), ADDR_TYPE = BRIDGE, MIN_SIZE = 0x08000000, DESC = 'Range 3 of MPLB addresses accessible via SPLB0'
PARAMETER C_SPLB0_RNG3_MPLB_HIGHADDR = 0x00000000, DT = std_logic_vector(0 to 31), BUS = SPLB0
PARAMETER C_SPLB0_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB0, ASSIGNMENT = UPDATE
PARAMETER C_SPLB0_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB0, ASSIGNMENT = UPDATE
PARAMETER C_SPLB0_ALLOW_LOCK_XFER = 1, DT = integer, VALUES = (0 = 'No', 1 = 'Yes'), DESC = 'Allow locked transfers on SPLB0 '
PARAMETER C_SPLB0_READ_PIPE_ENABLE = 1, DT = integer, VALUES = (0 = 'No', 1 = 'Yes'), DESC = 'Allow read address pipelining on SPLB0'
PARAMETER C_SPLB0_PROPAGATE_MIRQ = 0, DT = integer, VALUES = (0 = 'No', 1 = 'Yes'), DESC = 'Propagate MIRQ signals from crossbar onto SPLB0 bus'
PARAMETER C_SPLB0_P2P = -1, DT = integer, BUS = SPLB0, ASSIGNMENT = UPDATE
PARAMETER C_SPLB1_AWIDTH = 32, DT = integer, BUS = SPLB1, ASSIGNMENT = UPDATE
PARAMETER C_SPLB1_DWIDTH = 128, DT = integer, BUS = SPLB1, ASSIGNMENT = UPDATE
PARAMETER C_SPLB1_NATIVE_DWIDTH = 128, DT = integer, BUS = SPLB1, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB1_SUPPORT_BURSTS = 1, DT = integer, BUS = SPLB1, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB1_USE_MPLB_ADDR = 0, DT = integer, VALUES = (0 = 'No', 1 = 'Yes'), DESC = 'Allow access to MPLB via SPLB1'
PARAMETER C_SPLB1_NUM_MPLB_ADDR_RNG = 0, DT = integer, RANGE = (0:4), DESC = 'Number of MPLB address ranges accessible via SPLB1'
PARAMETER C_SPLB1_RNG_MC_BASEADDR = 0xffffffff, DT = std_logic_vector(0 to 31), BUS = SPLB1, MIN_SIZE = 0x08000000, DESC = 'MCI address range accessible via SPLB1'
PARAMETER C_SPLB1_RNG_MC_HIGHADDR = 0x00000000, DT = std_logic_vector(0 to 31), BUS = SPLB1
PARAMETER C_SPLB1_RNG0_MPLB_BASEADDR = 0xffffffff, DT = std_logic_vector(0 to 31), BUS = SPLB1, BRIDGE_TO = MPLB, ISVALID = (C_SPLB1_NUM_MPLB_ADDR_RNG * C_SPLB1_USE_MPLB_ADDR >= 1), ADDR_TYPE = BRIDGE, MIN_SIZE = 0x08000000, DESC = 'Range 0 of MPLB addresses accessible via SPLB1'
PARAMETER C_SPLB1_RNG0_MPLB_HIGHADDR = 0x00000000, DT = std_logic_vector(0 to 31), BUS = SPLB1
PARAMETER C_SPLB1_RNG1_MPLB_BASEADDR = 0xffffffff, DT = std_logic_vector(0 to 31), BUS = SPLB1, BRIDGE_TO = MPLB, ISVALID = (C_SPLB1_NUM_MPLB_ADDR_RNG * C_SPLB1_USE_MPLB_ADDR >= 2), ADDR_TYPE = BRIDGE, MIN_SIZE = 0x08000000, DESC = 'Range 1 of MPLB addresses accessible via SPLB1'
PARAMETER C_SPLB1_RNG1_MPLB_HIGHADDR = 0x00000000, DT = std_logic_vector(0 to 31), BUS = SPLB1
PARAMETER C_SPLB1_RNG2_MPLB_BASEADDR = 0xffffffff, DT = std_logic_vector(0 to 31), BUS = SPLB1, BRIDGE_TO = MPLB, ISVALID = (C_SPLB1_NUM_MPLB_ADDR_RNG * C_SPLB1_USE_MPLB_ADDR >= 3), ADDR_TYPE = BRIDGE, MIN_SIZE = 0x08000000, DESC = 'Range 2 of MPLB addresses accessible via SPLB1'
PARAMETER C_SPLB1_RNG2_MPLB_HIGHADDR = 0x00000000, DT = std_logic_vector(0 to 31), BUS = SPLB1
PARAMETER C_SPLB1_RNG3_MPLB_BASEADDR = 0xffffffff, DT = std_logic_vector(0 to 31), BUS = SPLB1, BRIDGE_TO = MPLB, ISVALID = (C_SPLB1_NUM_MPLB_ADDR_RNG * C_SPLB1_USE_MPLB_ADDR >= 4), ADDR_TYPE = BRIDGE, MIN_SIZE = 0x08000000, DESC = 'Range 3 of MPLB addresses accessible via SPLB1'
PARAMETER C_SPLB1_RNG3_MPLB_HIGHADDR = 0x00000000, DT = std_logic_vector(0 to 31), BUS = SPLB1
PARAMETER C_SPLB1_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB1, ASSIGNMENT = UPDATE
PARAMETER C_SPLB1_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB1, ASSIGNMENT = UPDATE
PARAMETER C_SPLB1_ALLOW_LOCK_XFER = 1, DT = integer, VALUES = (0 = 'No', 1 = 'Yes'), DESC = 'Allow locked transfers on SPLB1 '
PARAMETER C_SPLB1_READ_PIPE_ENABLE = 1, DT = integer, VALUES = (0 = 'No', 1 = 'Yes'), DESC = 'Allow read address pipelining on SPLB1'
PARAMETER C_SPLB1_PROPAGATE_MIRQ = 0, DT = integer, VALUES = (0 = 'No', 1 = 'Yes'), DESC = 'Propagate MIRQ signals from crossbar onto SPLB1 bus'
PARAMETER C_SPLB1_P2P = -1, DT = integer, BUS = SPLB1, ASSIGNMENT = UPDATE
PARAMETER C_NUM_DMA = 0, DT = INTEGER, RANGE = (0:4), DESC = 'Number of DMA channels to be used'
PARAMETER C_DMA0_TXCHANNELCTRL = 0x01010000, DT = BIT_VECTOR(0 to 31), ISVALID = (C_NUM_DMA > 0), DESC = 'DMA0 Transmit channel control register'
PARAMETER C_DMA0_RXCHANNELCTRL = 0x01010000, DT = BIT_VECTOR(0 to 31), ISVALID = (C_NUM_DMA > 0), DESC = 'DMA0 Receive channel control register'
PARAMETER C_DMA0_CONTROL = 0b00000000, DT = BIT_VECTOR(0 to 7), ISVALID = (C_NUM_DMA > 0), DESC = 'DMA0 interface control register'
PARAMETER C_DMA0_TXIRQTIMER = 0b1111111111, DT = BIT_VECTOR(0 to 9), ISVALID = (C_NUM_DMA > 0), DESC = 'DMA0 transmit IRQ coalescing clock divider ratio'
PARAMETER C_DMA0_RXIRQTIMER = 0b1111111111, DT = BIT_VECTOR(0 to 9), ISVALID = (C_NUM_DMA > 0), DESC = 'DMA0 receive IRQ coalescing clock divider ratio'
PARAMETER C_DMA1_TXCHANNELCTRL = 0x01010000, DT = BIT_VECTOR(0 to 31), ISVALID = (C_NUM_DMA > 1), DESC = 'DMA1 Transmit channel control register'
PARAMETER C_DMA1_RXCHANNELCTRL = 0x01010000, DT = BIT_VECTOR(0 to 31), ISVALID = (C_NUM_DMA > 1), DESC = 'DMA1 Receive channel control register'
PARAMETER C_DMA1_CONTROL = 0b00000000, DT = BIT_VECTOR(0 to 7), ISVALID = (C_NUM_DMA > 1), DESC = 'DMA1 interface control register'
PARAMETER C_DMA1_TXIRQTIMER = 0b1111111111, DT = BIT_VECTOR(0 to 9), ISVALID = (C_NUM_DMA > 1), DESC = 'DMA1 transmit IRQ coalescing clock divider ratio'
PARAMETER C_DMA1_RXIRQTIMER = 0b1111111111, DT = BIT_VECTOR(0 to 9), ISVALID = (C_NUM_DMA > 1), DESC = 'DMA1 receive IRQ coalescing clock divider ratio'
PARAMETER C_DMA2_TXCHANNELCTRL = 0x01010000, DT = BIT_VECTOR(0 to 31), ISVALID = (C_NUM_DMA > 2), DESC = 'DMA2 Transmit channel control register'
PARAMETER C_DMA2_RXCHANNELCTRL = 0x01010000, DT = BIT_VECTOR(0 to 31), ISVALID = (C_NUM_DMA > 2), DESC = 'DMA2 Receive channel control register'
PARAMETER C_DMA2_CONTROL = 0b00000000, DT = BIT_VECTOR(0 to 7), ISVALID = (C_NUM_DMA > 2), DESC = 'DMA2 interface control register'
PARAMETER C_DMA2_TXIRQTIMER = 0b1111111111, DT = BIT_VECTOR(0 to 9), ISVALID = (C_NUM_DMA > 2), DESC = 'DMA2 transmit IRQ coalescing clock divider ratio'
PARAMETER C_DMA2_RXIRQTIMER = 0b1111111111, DT = BIT_VECTOR(0 to 9), ISVALID = (C_NUM_DMA > 2), DESC = 'DMA2 receive IRQ coalescing clock divider ratio'
PARAMETER C_DMA3_TXCHANNELCTRL = 0x01010000, DT = BIT_VECTOR(0 to 31), ISVALID = (C_NUM_DMA > 3), DESC = 'DMA3 Transmit channel control register'
PARAMETER C_DMA3_RXCHANNELCTRL = 0x01010000, DT = BIT_VECTOR(0 to 31), ISVALID = (C_NUM_DMA > 3), DESC = 'DMA3 Receive channel control register'
PARAMETER C_DMA3_CONTROL = 0b00000000, DT = BIT_VECTOR(0 to 7), ISVALID = (C_NUM_DMA > 3), DESC = 'DMA3 interface control register'
PARAMETER C_DMA3_TXIRQTIMER = 0b1111111111, DT = BIT_VECTOR(0 to 9), ISVALID = (C_NUM_DMA > 3), DESC = 'DMA3 transmit IRQ coalescing clock divider ratio'
PARAMETER C_DMA3_RXIRQTIMER = 0b1111111111, DT = BIT_VECTOR(0 to 9), ISVALID = (C_NUM_DMA > 3), DESC = 'DMA3 receive IRQ coalescing clock divider ratio'
PARAMETER C_DCR_AUTOLOCK_ENABLE = 1, DT = INTEGER, VALUES = (0 = 'No', 1 = 'Yes'), DESC = 'Enable the auto-lock feature for the DCR indirect mode'
PARAMETER C_PPCDM_ASYNCMODE = 0, DT = INTEGER, VALUES = (0 = 'Synchronous', 1 = 'Asynchronous'), DESC = 'Synchronization mode for the external MDCR interface'
PARAMETER C_PPCDS_ASYNCMODE = 0, DT = INTEGER, VALUES = (0 = 'Synchronous', 1 = 'Asynchronous'), DESC = 'Synchronization mode for the external SDCR interface'
PARAMETER C_GENERATE_PLB_TIMESPECS = 1, DT = INTEGER, TYPE = NON_HDL, VALUES = (0 = 'No', 1 = 'Yes'), DESC = 'Generate TimeSpecs for SPLB0, SPLB1 MBusy output resynchronization flops'

## Ports
PORT CPMC440CLK = "", DIR = I, INITIALVAL = VCC, SIGIS = CLK
PORT CPMC440CLKEN = "", DIR = I, INITIALVAL = VCC
PORT CPMINTERCONNECTCLK = "", DIR = I, INITIALVAL = VCC, SIGIS = CLK
PORT CPMINTERCONNECTCLKEN = "", DIR = I, INITIALVAL = VCC
PORT CPMINTERCONNECTCLKNTO1 = "", DIR = I, INITIALVAL = VCC
PORT CPMC440CORECLOCKINACTIVE = "", DIR = I
PORT CPMC440TIMERCLOCK = "", DIR = I, INITIALVAL = VCC, SIGIS = CLK
PORT C440MACHINECHECK = "", DIR = O
PORT C440CPMCORESLEEPREQ = "", DIR = O
PORT C440CPMDECIRPTREQ = "", DIR = O
PORT C440CPMFITIRPTREQ = "", DIR = O
PORT C440CPMMSRCE = "", DIR = O
PORT C440CPMMSREE = "", DIR = O
PORT C440CPMTIMERRESETREQ = "", DIR = O
PORT C440CPMWDIRPTREQ = "", DIR = O
PORT PPCCPMINTERCONNECTBUSY = "", DIR = O
PORT DBGC440DEBUGHALT = "", DIR = I, PERMIT = BASE_USER, DESC = 'JTAG HALT', IO_IF = cpudbg_0, IO_IS = cpu_halt
PORT DBGC440DEBUGHALTNEG = "", DIR = I, INITIALVAL = VCC, PERMIT = BASE_USER, DESC = 'JTAG HALT INV', IO_IF = cpudbg_0, IO_IS = cpu_halt_neg
PORT DBGC440SYSTEMSTATUS = "", DIR = I, VEC = [0:4]
PORT DBGC440UNCONDDEBUGEVENT = "", DIR = I
PORT C440DBGSYSTEMCONTROL = "", DIR = O, VEC = [0:7]
PORT SPLB0_Error = "", DIR = O, VEC = [0:3]
PORT SPLB1_Error = "", DIR = O, VEC = [0:3]
PORT EICC440CRITIRQ = "", DIR = I, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH
PORT EICC440EXTIRQ = "", DIR = I, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH
PORT PPCEICINTERCONNECTIRQ = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, INTERRUPT_PRIORITY = HIGH
PORT CPMDCRCLK = "", DIR = I, INITIALVAL = VCC, SIGIS = CLK
PORT DCRPPCDMACK = DCR_Ack, DIR = I, BUS = MDCR
PORT DCRPPCDMDBUSIN = DCR_M_DBus, DIR = I, VEC = [0:31], BUS = MDCR
PORT DCRPPCDMTIMEOUTWAIT = DCR_TimeoutWait, DIR = I, BUS = MDCR
PORT PPCDMDCRREAD = M_dcrRead, DIR = O, BUS = MDCR
PORT PPCDMDCRWRITE = M_dcrWrite, DIR = O, BUS = MDCR
PORT PPCDMDCRABUS = M_dcrABus, DIR = O, VEC = [0:9], BUS = MDCR
PORT PPCDMDCRDBUSOUT = M_dcrDBus, DIR = O, VEC = [0:31], BUS = MDCR
PORT DCRPPCDSREAD = DCR_Read, DIR = I, BUS = SDCR
PORT DCRPPCDSWRITE = DCR_Write, DIR = I, BUS = SDCR
PORT DCRPPCDSABUS = DCR_ABus, DIR = I, VEC = [0:9], BUS = SDCR
PORT DCRPPCDSDBUSOUT = DCR_Sl_DBus, DIR = I, VEC = [0:31], BUS = SDCR
PORT PPCDSDCRACK = Sl_dcrAck, DIR = O, BUS = SDCR
PORT PPCDSDCRDBUSIN = Sl_dcrDBus, DIR = O, VEC = [0:31], BUS = SDCR
PORT PPCDSDCRTIMEOUTWAIT = Sl_dcrTimeoutWait, DIR = O, BUS = SDCR
PORT CPMFCMCLK = "", DIR = I, INITIALVAL = VCC, SIGIS = CLK, BUS = MFCB
PORT FCMAPUCR = FCMAPUCR, DIR = I, VEC = [0:3], BUS = MFCM:MFCB
PORT FCMAPUDONE = FCMAPUDONE, DIR = I, BUS = MFCM:MFCB
PORT FCMAPUEXCEPTION = FCMAPUEXCEPTION, DIR = I, BUS = MFCM:MFCB
PORT FCMAPUFPSCRFEX = FCMAPUFPSCRFEX, DIR = I, BUS = MFCM:MFCB
PORT FCMAPURESULT = FCMAPURESULT, DIR = I, VEC = [0:31], BUS = MFCM:MFCB
PORT FCMAPURESULTVALID = FCMAPURESULTVALID, DIR = I, BUS = MFCM:MFCB
PORT FCMAPUSLEEPNOTREADY = FCMAPUSLEEPNOTREADY, DIR = I, BUS = MFCM:MFCB
PORT FCMAPUCONFIRMINSTR = FCMAPUCONFIRMINSTR, DIR = I, BUS = MFCM:MFCB
PORT FCMAPUSTOREDATA = FCMAPUSTOREDATA, DIR = I, VEC = [0:127], BUS = MFCM:MFCB
PORT APUFCMDECNONAUTON = APUFCMDECNONAUTON, DIR = O, BUS = MFCM:MFCB
PORT APUFCMDECFPUOP = APUFCMDECFPUOP, DIR = O, BUS = MFCM:MFCB
PORT APUFCMDECLDSTXFERSIZE = APUFCMDECLDSTXFERSIZE, DIR = O, VEC = [0:2], BUS = MFCM:MFCB
PORT APUFCMDECLOAD = APUFCMDECLOAD, DIR = O, BUS = MFCM:MFCB
PORT APUFCMNEXTINSTRREADY = APUFCMNEXTINSTRREADY, DIR = O, BUS = MFCM:MFCB
PORT APUFCMDECSTORE = APUFCMDECSTORE, DIR = O, BUS = MFCM:MFCB
PORT APUFCMDECUDI = APUFCMDECUDI, DIR = O, VEC = [0:3], BUS = MFCM:MFCB
PORT APUFCMDECUDIVALID = APUFCMDECUDIVALID, DIR = O, BUS = MFCM:MFCB
PORT APUFCMENDIAN = APUFCMENDIAN, DIR = O, BUS = MFCM:MFCB
PORT APUFCMFLUSH = APUFCMFLUSH, DIR = O, BUS = MFCM:MFCB
PORT APUFCMINSTRUCTION = APUFCMINSTRUCTION, DIR = O, VEC = [0:31], BUS = MFCM:MFCB
PORT APUFCMINSTRVALID = APUFCMINSTRVALID, DIR = O, BUS = MFCM:MFCB
PORT APUFCMLOADBYTEADDR = APUFCMLOADBYTEADDR, DIR = O, VEC = [0:3], BUS = MFCM:MFCB
PORT APUFCMLOADDATA = APUFCMLOADDATA, DIR = O, VEC = [0:127], BUS = MFCM:MFCB
PORT APUFCMLOADDVALID = APUFCMLOADDVALID, DIR = O, BUS = MFCM:MFCB
PORT APUFCMOPERANDVALID = APUFCMOPERANDVALID, DIR = O, BUS = MFCM:MFCB
PORT APUFCMRADATA = APUFCMRADATA, DIR = O, VEC = [0:31], BUS = MFCM:MFCB
PORT APUFCMRBDATA = APUFCMRBDATA, DIR = O, VEC = [0:31], BUS = MFCM:MFCB
PORT APUFCMWRITEBACKOK = APUFCMWRITEBACKOK, DIR = O, BUS = MFCM:MFCB
PORT APUFCMMSRFE0 = APUFCMMSRFE0, DIR = O, BUS = MFCM:MFCB
PORT APUFCMMSRFE1 = APUFCMMSRFE1, DIR = O, BUS = MFCM:MFCB
PORT JTGC440TCK = JTGC405TCK, DIR = I, INITIALVAL = VCC, BUS = JTAGPPC, PERMIT = BASE_USER, DESC = 'JTAG TCK', IO_IF = cpudbg_0, IO_IS = cpu_tck
PORT JTGC440TDI = JTGC405TDI, DIR = I, INITIALVAL = VCC, BUS = JTAGPPC, PERMIT = BASE_USER, DESC = 'JTAG TDI', IO_IF = cpudbg_0, IO_IS = cpu_tdi
PORT JTGC440TMS = JTGC405TMS, DIR = I, INITIALVAL = VCC, BUS = JTAGPPC, PERMIT = BASE_USER, DESC = 'JTAG TMS', IO_IF = cpudbg_0, IO_IS = cpu_tms
PORT JTGC440TRSTNEG = JTGC405TRSTNEG, DIR = I, INITIALVAL = VCC, BUS = JTAGPPC, PERMIT = BASE_USER, DESC = 'JTAG TRST', IO_IF = cpudbg_0, IO_IS = cpu_trst
PORT C440JTGTDO = C405JTGTDO, DIR = O, BUS = JTAGPPC, PERMIT = BASE_USER, DESC = 'JTAG TDO', IO_IF = cpudbg_0, IO_IS = cpu_tdo
PORT C440JTGTDOEN = C405JTGTDOEN, DIR = O, BUS = JTAGPPC
PORT CPMMCCLK = "", DIR = I, INITIALVAL = VCC, SIGIS = CLK
PORT MCMIREADDATA = MCMIREADDATA, DIR = I, VEC = [0:127], BUS = PPC440MC
PORT MCMIREADDATAVALID = MCMIREADDATAVALID, DIR = I, BUS = PPC440MC
PORT MCMIREADDATAERR = MCMIREADDATAERR, DIR = I, BUS = PPC440MC
PORT MCMIADDRREADYTOACCEPT = MCMIADDRREADYTOACCEPT, DIR = I, INITIALVAL = VCC, BUS = PPC440MC
PORT MIMCREADNOTWRITE = MIMCREADNOTWRITE, DIR = O, BUS = PPC440MC
PORT MIMCADDRESS = MIMCADDRESS, DIR = O, VEC = [0:35], BUS = PPC440MC
PORT MIMCADDRESSVALID = MIMCADDRESSVALID, DIR = O, BUS = PPC440MC
PORT MIMCWRITEDATA = MIMCWRITEDATA, DIR = O, VEC = [0:127], BUS = PPC440MC
PORT MIMCWRITEDATAVALID = MIMCWRITEDATAVALID, DIR = O, BUS = PPC440MC
PORT MIMCBYTEENABLE = MIMCBYTEENABLE, DIR = O, VEC = [0:15], BUS = PPC440MC
PORT MIMCBANKCONFLICT = MIMCBANKCONFLICT, DIR = O, BUS = PPC440MC
PORT MIMCROWCONFLICT = MIMCROWCONFLICT, DIR = O, BUS = PPC440MC
PORT CPMPPCMPLBCLK = "", DIR = I, INITIALVAL = VCC, SIGIS = CLK, BUS = MPLB
PORT PLBPPCMMBUSY = PLB_MBusy, DIR = I, BUS = MPLB
PORT PLBPPCMMIRQ = PLB_MIRQ, DIR = I, BUS = MPLB
PORT PLBPPCMMRDERR = PLB_MRdErr, DIR = I, BUS = MPLB
PORT PLBPPCMMWRERR = PLB_MWrErr, DIR = I, BUS = MPLB
PORT PLBPPCMADDRACK = PLB_MAddrAck, DIR = I, BUS = MPLB
PORT PLBPPCMRDBTERM = PLB_MRdBTerm, DIR = I, BUS = MPLB
PORT PLBPPCMRDDACK = PLB_MRdDAck, DIR = I, BUS = MPLB
PORT PLBPPCMRDDBUS = PLB_MRdDBus, DIR = I, VEC = [0:127], BUS = MPLB
PORT PLBPPCMRDWDADDR = PLB_MRdWdAddr, DIR = I, VEC = [0:3], BUS = MPLB
PORT PLBPPCMREARBITRATE = PLB_MRearbitrate, DIR = I, BUS = MPLB
PORT PLBPPCMSSIZE = PLB_MSSize, DIR = I, VEC = [0:1], BUS = MPLB
PORT PLBPPCMTIMEOUT = PLB_MTimeout, DIR = I, BUS = MPLB
PORT PLBPPCMWRBTERM = PLB_MWrBTerm, DIR = I, BUS = MPLB
PORT PLBPPCMWRDACK = PLB_MWrDAck, DIR = I, BUS = MPLB
PORT PLBPPCMRDPENDPRI = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = MPLB
PORT PLBPPCMRDPENDREQ = PLB_rdPendReq, DIR = I, BUS = MPLB
PORT PLBPPCMREQPRI = PLB_reqPri, DIR = I, VEC = [0:1], BUS = MPLB
PORT PLBPPCMWRPENDPRI = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = MPLB
PORT PLBPPCMWRPENDREQ = PLB_wrPendReq, DIR = I, BUS = MPLB
PORT PPCMPLBABORT = M_abort, DIR = O, BUS = MPLB
PORT PPCMPLBABUS = M_ABus, DIR = O, VEC = [0:31], BUS = MPLB
PORT PPCMPLBBE = M_BE, DIR = O, VEC = [0:15], BUS = MPLB
PORT PPCMPLBBUSLOCK = M_busLock, DIR = O, BUS = MPLB
PORT PPCMPLBLOCKERR = M_lockErr, DIR = O, BUS = MPLB
PORT PPCMPLBMSIZE = M_MSize, DIR = O, VEC = [0:1], BUS = MPLB
PORT PPCMPLBPRIORITY = M_priority, DIR = O, VEC = [0:1], BUS = MPLB
PORT PPCMPLBRDBURST = M_rdBurst, DIR = O, BUS = MPLB
PORT PPCMPLBREQUEST = M_request, DIR = O, BUS = MPLB
PORT PPCMPLBRNW = M_RNW, DIR = O, BUS = MPLB
PORT PPCMPLBSIZE = M_size, DIR = O, VEC = [0:3], BUS = MPLB
PORT PPCMPLBTATTRIBUTE = M_TAttribute, DIR = O, VEC = [0:15], BUS = MPLB
PORT PPCMPLBTYPE = M_type, DIR = O, VEC = [0:2], BUS = MPLB
PORT PPCMPLBUABUS = M_UABus, DIR = O, VEC = [0:31], BUS = MPLB
PORT PPCMPLBWRBURST = M_wrBurst, DIR = O, BUS = MPLB
PORT PPCMPLBWRDBUS = M_wrDBus, DIR = O, VEC = [0:127], BUS = MPLB
PORT CPMPPCS0PLBCLK = "", DIR = I, INITIALVAL = VCC, SIGIS = CLK, BUS = SPLB0
PORT PLBPPCS0MASTERID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB0_MID_WIDTH-1)], BUS = SPLB0
PORT PLBPPCS0PAVALID = PLB_PAValid, DIR = I, BUS = SPLB0
PORT PLBPPCS0SAVALID = PLB_SAValid, DIR = I, BUS = SPLB0
PORT PLBPPCS0RDPENDREQ = PLB_rdPendReq, DIR = I, BUS = SPLB0
PORT PLBPPCS0WRPENDREQ = PLB_wrPendReq, DIR = I, BUS = SPLB0
PORT PLBPPCS0RDPENDPRI = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB0
PORT PLBPPCS0WRPENDPRI = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB0
PORT PLBPPCS0REQPRI = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB0
PORT PLBPPCS0RDPRIM = PLB_rdPrim, DIR = I, BUS = SPLB0
PORT PLBPPCS0WRPRIM = PLB_wrPrim, DIR = I, BUS = SPLB0
PORT PLBPPCS0BUSLOCK = PLB_busLock, DIR = I, BUS = SPLB0
PORT PLBPPCS0ABORT = PLB_abort, DIR = I, BUS = SPLB0
PORT PLBPPCS0RNW = PLB_RNW, DIR = I, BUS = SPLB0
PORT PLBPPCS0BE = PLB_BE, DIR = I, VEC = [0:15], BUS = SPLB0
PORT PLBPPCS0SIZE = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB0
PORT PLBPPCS0TYPE = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB0
PORT PLBPPCS0TATTRIBUTE = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB0
PORT PLBPPCS0LOCKERR = PLB_lockErr, DIR = I, BUS = SPLB0
PORT PLBPPCS0MSIZE = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB0
PORT PLBPPCS0UABUS = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB0
PORT PLBPPCS0ABUS = PLB_ABus, DIR = I, VEC = [0:31], BUS = SPLB0
PORT PLBPPCS0WRDBUS = PLB_wrDBus, DIR = I, VEC = [0:127], BUS = SPLB0
PORT PLBPPCS0WRBURST = PLB_wrBurst, DIR = I, BUS = SPLB0
PORT PLBPPCS0RDBURST = PLB_rdBurst, DIR = I, BUS = SPLB0
PORT PPCS0PLBADDRACK = Sl_addrAck, DIR = O, BUS = SPLB0
PORT PPCS0PLBWAIT = Sl_wait, DIR = O, BUS = SPLB0
PORT PPCS0PLBREARBITRATE = Sl_rearbitrate, DIR = O, BUS = SPLB0
PORT PPCS0PLBWRDACK = Sl_wrDAck, DIR = O, BUS = SPLB0
PORT PPCS0PLBWRCOMP = Sl_wrComp, DIR = O, BUS = SPLB0
PORT PPCS0PLBRDDBUS = Sl_rdDBus, DIR = O, VEC = [0:127], BUS = SPLB0
PORT PPCS0PLBRDWDADDR = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB0
PORT PPCS0PLBRDDACK = Sl_rdDAck, DIR = O, BUS = SPLB0
PORT PPCS0PLBRDCOMP = Sl_rdComp, DIR = O, BUS = SPLB0
PORT PPCS0PLBRDBTERM = Sl_rdBTerm, DIR = O, BUS = SPLB0
PORT PPCS0PLBWRBTERM = Sl_wrBTerm, DIR = O, BUS = SPLB0
PORT PPCS0PLBMBUSY = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB0_NUM_MASTERS-1)], BUS = SPLB0
PORT PPCS0PLBMRDERR = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB0_NUM_MASTERS-1)], BUS = SPLB0
PORT PPCS0PLBMWRERR = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB0_NUM_MASTERS-1)], BUS = SPLB0
PORT PPCS0PLBMIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB0_NUM_MASTERS-1)], BUS = SPLB0
PORT PPCS0PLBSSIZE = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB0
PORT CPMPPCS1PLBCLK = "", DIR = I, INITIALVAL = VCC, SIGIS = CLK, BUS = SPLB1
PORT PLBPPCS1MASTERID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB1_MID_WIDTH-1)], BUS = SPLB1
PORT PLBPPCS1PAVALID = PLB_PAValid, DIR = I, BUS = SPLB1
PORT PLBPPCS1SAVALID = PLB_SAValid, DIR = I, BUS = SPLB1
PORT PLBPPCS1RDPENDREQ = PLB_rdPendReq, DIR = I, BUS = SPLB1
PORT PLBPPCS1WRPENDREQ = PLB_wrPendReq, DIR = I, BUS = SPLB1
PORT PLBPPCS1RDPENDPRI = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB1
PORT PLBPPCS1WRPENDPRI = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB1
PORT PLBPPCS1REQPRI = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB1
PORT PLBPPCS1RDPRIM = PLB_rdPrim, DIR = I, BUS = SPLB1
PORT PLBPPCS1WRPRIM = PLB_wrPrim, DIR = I, BUS = SPLB1
PORT PLBPPCS1BUSLOCK = PLB_busLock, DIR = I, BUS = SPLB1
PORT PLBPPCS1ABORT = PLB_abort, DIR = I, BUS = SPLB1
PORT PLBPPCS1RNW = PLB_RNW, DIR = I, BUS = SPLB1
PORT PLBPPCS1BE = PLB_BE, DIR = I, VEC = [0:15], BUS = SPLB1
PORT PLBPPCS1SIZE = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB1
PORT PLBPPCS1TYPE = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB1
PORT PLBPPCS1TATTRIBUTE = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB1
PORT PLBPPCS1LOCKERR = PLB_lockErr, DIR = I, BUS = SPLB1
PORT PLBPPCS1MSIZE = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB1
PORT PLBPPCS1UABUS = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB1
PORT PLBPPCS1ABUS = PLB_ABus, DIR = I, VEC = [0:31], BUS = SPLB1
PORT PLBPPCS1WRDBUS = PLB_wrDBus, DIR = I, VEC = [0:127], BUS = SPLB1
PORT PLBPPCS1WRBURST = PLB_wrBurst, DIR = I, BUS = SPLB1
PORT PLBPPCS1RDBURST = PLB_rdBurst, DIR = I, BUS = SPLB1
PORT PPCS1PLBADDRACK = Sl_addrAck, DIR = O, BUS = SPLB1
PORT PPCS1PLBWAIT = Sl_wait, DIR = O, BUS = SPLB1
PORT PPCS1PLBREARBITRATE = Sl_rearbitrate, DIR = O, BUS = SPLB1
PORT PPCS1PLBWRDACK = Sl_wrDAck, DIR = O, BUS = SPLB1
PORT PPCS1PLBWRCOMP = Sl_wrComp, DIR = O, BUS = SPLB1
PORT PPCS1PLBRDDBUS = Sl_rdDBus, DIR = O, VEC = [0:127], BUS = SPLB1
PORT PPCS1PLBRDWDADDR = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB1
PORT PPCS1PLBRDDACK = Sl_rdDAck, DIR = O, BUS = SPLB1
PORT PPCS1PLBRDCOMP = Sl_rdComp, DIR = O, BUS = SPLB1
PORT PPCS1PLBRDBTERM = Sl_rdBTerm, DIR = O, BUS = SPLB1
PORT PPCS1PLBWRBTERM = Sl_wrBTerm, DIR = O, BUS = SPLB1
PORT PPCS1PLBMBUSY = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB1_NUM_MASTERS-1)], BUS = SPLB1
PORT PPCS1PLBMRDERR = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB1_NUM_MASTERS-1)], BUS = SPLB1
PORT PPCS1PLBMWRERR = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB1_NUM_MASTERS-1)], BUS = SPLB1
PORT PPCS1PLBMIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB1_NUM_MASTERS-1)], BUS = SPLB1
PORT PPCS1PLBSSIZE = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB1
PORT CPMDMA0LLCLK = "", DIR = I, INITIALVAL = VCC, SIGIS = CLK, ISVALID = (C_NUM_DMA > 0)
PORT LLDMA0TXDSTRDYN = LL_Tx_DstRdy_n, DIR = I, INITIALVAL = VCC, BUS = LLDMA0
PORT LLDMA0RXD = LL_Rx_Data, DIR = I, VEC = [0:31], BUS = LLDMA0
PORT LLDMA0RXREM = LL_Rx_Rem, DIR = I, VEC = [0:3], BUS = LLDMA0
PORT LLDMA0RXSOFN = LL_Rx_SOF_n, DIR = I, INITIALVAL = VCC, BUS = LLDMA0
PORT LLDMA0RXEOFN = LL_Rx_EOF_n, DIR = I, INITIALVAL = VCC, BUS = LLDMA0
PORT LLDMA0RXSOPN = LL_Rx_SOP_n, DIR = I, INITIALVAL = VCC, BUS = LLDMA0
PORT LLDMA0RXEOPN = LL_Rx_EOP_n, DIR = I, INITIALVAL = VCC, BUS = LLDMA0
PORT LLDMA0RXSRCRDYN = LL_Rx_SrcRdy_n, DIR = I, INITIALVAL = VCC, BUS = LLDMA0
PORT LLDMA0RSTENGINEREQ = "", DIR = I, ISVALID = (C_NUM_DMA > 0)
PORT DMA0LLTXD = LL_Tx_Data, DIR = O, VEC = [0:31], BUS = LLDMA0
PORT DMA0LLTXREM = LL_Tx_Rem, DIR = O, VEC = [0:3], BUS = LLDMA0
PORT DMA0LLTXSOFN = LL_Tx_SOF_n, DIR = O, BUS = LLDMA0
PORT DMA0LLTXEOFN = LL_Tx_EOF_n, DIR = O, BUS = LLDMA0
PORT DMA0LLTXSOPN = LL_Tx_SOP_n, DIR = O, BUS = LLDMA0
PORT DMA0LLTXEOPN = LL_Tx_EOP_n, DIR = O, BUS = LLDMA0
PORT DMA0LLTXSRCRDYN = LL_Tx_SrcRdy_n, DIR = O, BUS = LLDMA0
PORT DMA0LLRXDSTRDYN = LL_Rx_DstRdy_n, DIR = O, BUS = LLDMA0
PORT DMA0LLRSTENGINEACK = LL_RST_ACK, DIR = O, BUS = LLDMA0, ISVALID = (C_NUM_DMA > 0)
PORT DMA0TXIRQ = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, INTERRUPT_PRIORITY = HIGH, ISVALID = (C_NUM_DMA > 0)
PORT DMA0RXIRQ = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, INTERRUPT_PRIORITY = HIGH, ISVALID = (C_NUM_DMA > 0)
PORT CPMDMA1LLCLK = "", DIR = I, INITIALVAL = VCC, SIGIS = CLK, ISVALID = (C_NUM_DMA > 1)
PORT LLDMA1TXDSTRDYN = LL_Tx_DstRdy_n, DIR = I, INITIALVAL = VCC, BUS = LLDMA1
PORT LLDMA1RXD = LL_Rx_Data, DIR = I, VEC = [0:31], BUS = LLDMA1
PORT LLDMA1RXREM = LL_Rx_Rem, DIR = I, VEC = [0:3], BUS = LLDMA1
PORT LLDMA1RXSOFN = LL_Rx_SOF_n, DIR = I, INITIALVAL = VCC, BUS = LLDMA1
PORT LLDMA1RXEOFN = LL_Rx_EOF_n, DIR = I, INITIALVAL = VCC, BUS = LLDMA1
PORT LLDMA1RXSOPN = LL_Rx_SOP_n, DIR = I, INITIALVAL = VCC, BUS = LLDMA1
PORT LLDMA1RXEOPN = LL_Rx_EOP_n, DIR = I, INITIALVAL = VCC, BUS = LLDMA1
PORT LLDMA1RXSRCRDYN = LL_Rx_SrcRdy_n, DIR = I, INITIALVAL = VCC, BUS = LLDMA1
PORT LLDMA1RSTENGINEREQ = "", DIR = I, ISVALID = (C_NUM_DMA > 1)
PORT DMA1LLTXD = LL_Tx_Data, DIR = O, VEC = [0:31], BUS = LLDMA1
PORT DMA1LLTXREM = LL_Tx_Rem, DIR = O, VEC = [0:3], BUS = LLDMA1
PORT DMA1LLTXSOFN = LL_Tx_SOF_n, DIR = O, BUS = LLDMA1
PORT DMA1LLTXEOFN = LL_Tx_EOF_n, DIR = O, BUS = LLDMA1
PORT DMA1LLTXSOPN = LL_Tx_SOP_n, DIR = O, BUS = LLDMA1
PORT DMA1LLTXEOPN = LL_Tx_EOP_n, DIR = O, BUS = LLDMA1
PORT DMA1LLTXSRCRDYN = LL_Tx_SrcRdy_n, DIR = O, BUS = LLDMA1
PORT DMA1LLRXDSTRDYN = LL_Rx_DstRdy_n, DIR = O, BUS = LLDMA1
PORT DMA1LLRSTENGINEACK = LL_RST_ACK, DIR = O, BUS = LLDMA1, ISVALID = (C_NUM_DMA > 1)
PORT DMA1TXIRQ = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, INTERRUPT_PRIORITY = HIGH, ISVALID = (C_NUM_DMA > 1)
PORT DMA1RXIRQ = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, INTERRUPT_PRIORITY = HIGH, ISVALID = (C_NUM_DMA > 1)
PORT CPMDMA2LLCLK = "", DIR = I, INITIALVAL = VCC, SIGIS = CLK, ISVALID = (C_NUM_DMA > 2)
PORT LLDMA2TXDSTRDYN = LL_Tx_DstRdy_n, DIR = I, INITIALVAL = VCC, BUS = LLDMA2
PORT LLDMA2RXD = LL_Rx_Data, DIR = I, VEC = [0:31], BUS = LLDMA2
PORT LLDMA2RXREM = LL_Rx_Rem, DIR = I, VEC = [0:3], BUS = LLDMA2
PORT LLDMA2RXSOFN = LL_Rx_SOF_n, DIR = I, INITIALVAL = VCC, BUS = LLDMA2
PORT LLDMA2RXEOFN = LL_Rx_EOF_n, DIR = I, INITIALVAL = VCC, BUS = LLDMA2
PORT LLDMA2RXSOPN = LL_Rx_SOP_n, DIR = I, INITIALVAL = VCC, BUS = LLDMA2
PORT LLDMA2RXEOPN = LL_Rx_EOP_n, DIR = I, INITIALVAL = VCC, BUS = LLDMA2
PORT LLDMA2RXSRCRDYN = LL_Rx_SrcRdy_n, DIR = I, INITIALVAL = VCC, BUS = LLDMA2
PORT LLDMA2RSTENGINEREQ = "", DIR = I, ISVALID = (C_NUM_DMA > 2)
PORT DMA2LLTXD = LL_Tx_Data, DIR = O, VEC = [0:31], BUS = LLDMA2
PORT DMA2LLTXREM = LL_Tx_Rem, DIR = O, VEC = [0:3], BUS = LLDMA2
PORT DMA2LLTXSOFN = LL_Tx_SOF_n, DIR = O, BUS = LLDMA2
PORT DMA2LLTXEOFN = LL_Tx_EOF_n, DIR = O, BUS = LLDMA2
PORT DMA2LLTXSOPN = LL_Tx_SOP_n, DIR = O, BUS = LLDMA2
PORT DMA2LLTXEOPN = LL_Tx_EOP_n, DIR = O, BUS = LLDMA2
PORT DMA2LLTXSRCRDYN = LL_Tx_SrcRdy_n, DIR = O, BUS = LLDMA2
PORT DMA2LLRXDSTRDYN = LL_Rx_DstRdy_n, DIR = O, BUS = LLDMA2
PORT DMA2LLRSTENGINEACK = LL_RST_ACK, DIR = O, BUS = LLDMA2, ISVALID = (C_NUM_DMA > 2)
PORT DMA2TXIRQ = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, INTERRUPT_PRIORITY = HIGH, ISVALID = (C_NUM_DMA > 2)
PORT DMA2RXIRQ = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, INTERRUPT_PRIORITY = HIGH, ISVALID = (C_NUM_DMA > 2)
PORT CPMDMA3LLCLK = "", DIR = I, INITIALVAL = VCC, SIGIS = CLK, ISVALID = (C_NUM_DMA > 3)
PORT LLDMA3TXDSTRDYN = LL_Tx_DstRdy_n, DIR = I, INITIALVAL = VCC, BUS = LLDMA3
PORT LLDMA3RXD = LL_Rx_Data, DIR = I, VEC = [0:31], BUS = LLDMA3
PORT LLDMA3RXREM = LL_Rx_Rem, DIR = I, VEC = [0:3], BUS = LLDMA3
PORT LLDMA3RXSOFN = LL_Rx_SOF_n, DIR = I, INITIALVAL = VCC, BUS = LLDMA3
PORT LLDMA3RXEOFN = LL_Rx_EOF_n, DIR = I, INITIALVAL = VCC, BUS = LLDMA3
PORT LLDMA3RXSOPN = LL_Rx_SOP_n, DIR = I, INITIALVAL = VCC, BUS = LLDMA3
PORT LLDMA3RXEOPN = LL_Rx_EOP_n, DIR = I, INITIALVAL = VCC, BUS = LLDMA3
PORT LLDMA3RXSRCRDYN = LL_Rx_SrcRdy_n, DIR = I, INITIALVAL = VCC, BUS = LLDMA3
PORT LLDMA3RSTENGINEREQ = "", DIR = I, ISVALID = (C_NUM_DMA > 3)
PORT DMA3LLTXD = LL_Tx_Data, DIR = O, VEC = [0:31], BUS = LLDMA3
PORT DMA3LLTXREM = LL_Tx_Rem, DIR = O, VEC = [0:3], BUS = LLDMA3
PORT DMA3LLTXSOFN = LL_Tx_SOF_n, DIR = O, BUS = LLDMA3
PORT DMA3LLTXEOFN = LL_Tx_EOF_n, DIR = O, BUS = LLDMA3
PORT DMA3LLTXSOPN = LL_Tx_SOP_n, DIR = O, BUS = LLDMA3
PORT DMA3LLTXEOPN = LL_Tx_EOP_n, DIR = O, BUS = LLDMA3
PORT DMA3LLTXSRCRDYN = LL_Tx_SrcRdy_n, DIR = O, BUS = LLDMA3
PORT DMA3LLRXDSTRDYN = LL_Rx_DstRdy_n, DIR = O, BUS = LLDMA3
PORT DMA3LLRSTENGINEACK = LL_RST_ACK, DIR = O, BUS = LLDMA3, ISVALID = (C_NUM_DMA > 3)
PORT DMA3TXIRQ = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, INTERRUPT_PRIORITY = HIGH, ISVALID = (C_NUM_DMA > 3)
PORT DMA3RXIRQ = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, INTERRUPT_PRIORITY = HIGH, ISVALID = (C_NUM_DMA > 3)
PORT RSTC440RESETCORE = RstcPPCresetcore, DIR = I, SIGIS = RST, BUS = RESETPPC
PORT RSTC440RESETCHIP = RstsPPCresetchip, DIR = I, SIGIS = RST, BUS = RESETPPC
PORT RSTC440RESETSYSTEM = RstcPPCresetsys, DIR = I, SIGIS = RST, BUS = RESETPPC
PORT C440RSTCORERESETREQ = Core_Reset_Req, DIR = O, SIGIS = RST, BUS = RESETPPC
PORT C440RSTCHIPRESETREQ = Chip_Reset_Req, DIR = O, SIGIS = RST, BUS = RESETPPC
PORT C440RSTSYSTEMRESETREQ = System_Reset_Req, DIR = O, SIGIS = RST, BUS = RESETPPC
PORT TRCC440TRACEDISABLE = "", DIR = I
PORT TRCC440TRIGGEREVENTIN = "", DIR = I, PERMIT = BASE_USER, DESC = 'Trace Trigger Event In', IO_IF = trace_0, IO_IS = trace_trigger_event_in
PORT C440TRCBRANCHSTATUS = "", DIR = O, VEC = [0:2], PERMIT = BASE_USER, DESC = 'Trace Branch Status', IO_IF = trace_0, IO_IS = branch_status
PORT C440TRCCYCLE = "", DIR = O, PERMIT = BASE_USER, DESC = 'Trace Clock', IO_IF = trace_0, IO_IS = trace_clk
PORT C440TRCEXECUTIONSTATUS = "", DIR = O, VEC = [0:4], PERMIT = BASE_USER, DESC = 'Trace Execution Status', IO_IF = trace_0, IO_IS = exec_status
PORT C440TRCTRACESTATUS = "", DIR = O, VEC = [0:6], PERMIT = BASE_USER, DESC = 'Trace Status', IO_IF = trace_0, IO_IS = trace_status
PORT C440TRCTRIGGEREVENTOUT = "", DIR = O, PERMIT = BASE_USER, DESC = 'Trace Trigger Event Out', IO_IF = trace_0, IO_IS = trace_trigger_event_out
PORT C440TRCTRIGGEREVENTTYPE = "", DIR = O, VEC = [0:13]

END

FINISH_SINGLE_MPD

START_SINGLE_MPD util_io_mux_v1_00_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : util_io_mux
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN util_io_mux

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION HDL = VHDL
OPTION IMP_NETLIST = TRUE
OPTION DESC = Utility IO Multiplexor
OPTION LONG_DESC = Utility IO multiplexor
OPTION IP_GROUP = Utility:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=PRODUCTION, spartan3=PRODUCTION, spartan3an=PRODUCTION, spartan3a=PRODUCTION, spartan3e=PRODUCTION, spartan3adsp=PRODUCTION, virtex4lx=PRODUCTION, virtex4sx=PRODUCTION, virtex4fx=PRODUCTION, virtex5lx=PRODUCTION, virtex5sx=PRODUCTION, virtex5fx=PRODUCTION, aspartan3e=PRODUCTION, aspartan3a=PRODUCTION, aspartan3adsp=PRODUCTION, qvirtex4lx=PRODUCTION, qvirtex4sx=PRODUCTION, qvirtex4fx=PRODUCTION, qrvirtex4lx=PRODUCTION, qrvirtex4sx=PRODUCTION, qrvirtex4fx=PRODUCTION, spartan6t=PRODUCTION, spartan6=PRODUCTION, spartan6l=PRE_PRODUCTION, qspartan6t=PRODUCTION, qspartan6=PRODUCTION, aspartan6t=PRODUCTION, aspartan6=PRODUCTION, virtex6lx=PRODUCTION, virtex6sx=PRODUCTION, virtex6hx=PRODUCTION, virtex6cx=PRODUCTION, virtex6llx=PRE_PRODUCTION, virtex6lsx=PRE_PRODUCTION, qspartan6l=PRE_PRODUCTION, qvirtex6lx=PRE_PRODUCTION, qvirtex6sx=PRE_PRODUCTION, qvirtex6fx=PRE_PRODUCTION, qvirtex6tx=PRE_PRODUCTION)
OPTION RUN_NGCBUILD = FALSE
OPTION STYLE = HDL


## Bus Interfaces

## Generics for VHDL or Parameters for Verilog
PARAMETER C_SIZE = 8, DT = INTEGER, RANGE = (1:2147483647)

## Ports
PORT S = "", DIR = I
PORT I0 = "", DIR = O, VEC = [0:C_SIZE-1]
PORT O0 = "", DIR = I, VEC = [0:C_SIZE-1]
PORT T0 = "", DIR = I, VEC = [0:C_SIZE-1]
PORT I1 = "", DIR = O, VEC = [0:C_SIZE-1]
PORT O1 = "", DIR = I, VEC = [0:C_SIZE-1]
PORT T1 = "", DIR = I, VEC = [0:C_SIZE-1]
PORT IO_I = "", DIR = I, VEC = [0:C_SIZE-1]
PORT IO_O = "", DIR = O, VEC = [0:C_SIZE-1]
PORT IO_T = "", DIR = O, VEC = [0:C_SIZE-1]
PORT IO = "", DIR = IO, VEC = [0:C_SIZE-1], THREE_STATE = TRUE, ENABLE = MULTI, TRI_I = IO_I, TRI_O = IO_O, TRI_T = IO_T

END

FINISH_SINGLE_MPD

START_SINGLE_MPD xmtc_v1_00_c 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : xmtc
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN xmtc

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION USAGE_LEVEL = BASE_USER
OPTION LAST_UPDATED = 12.2
OPTION DESC = Xilinx MicroBlaze Trace Core (XMTC)
OPTION LONG_DESC = Xilinx MicroBlaze soft processor trace core.
OPTION IP_GROUP = Debug:MICROBLAZE
OPTION ARCH_SUPPORT_MAP = (aspartan3=PRODUCTION, spartan3=PRODUCTION, spartan3an=PRODUCTION, spartan3a=PRODUCTION, spartan3e=PRODUCTION, spartan3adsp=PRODUCTION, virtex4lx=PRODUCTION, virtex4sx=PRODUCTION, virtex4fx=PRODUCTION, virtex5lx=PRODUCTION, virtex5sx=PRODUCTION, virtex5fx=PRODUCTION, aspartan3e=PRODUCTION, aspartan3a=PRODUCTION, aspartan3adsp=PRODUCTION, qvirtex4lx=PRODUCTION, qvirtex4sx=PRODUCTION, qvirtex4fx=PRODUCTION, qrvirtex4lx=PRODUCTION, qrvirtex4sx=PRODUCTION, qrvirtex4fx=PRODUCTION, qrvirtex5=PRE_PRODUCTION)
OPTION RUN_NGCBUILD = FALSE
OPTION STYLE = HDL

IO_INTERFACE IO_IF = XMTC, IO_TYPE = XIL_XMTC_V1

## Bus Interfaces
BUS_INTERFACE BUS = MBTRACE, BUS_STD = XIL_MBTRACE, BUS_TYPE = TARGET, ISVALID = (C_TRACE_VERSION == 1)
BUS_INTERFACE BUS = MBTRACE2, BUS_STD = XIL_MBTRACE2, BUS_TYPE = TARGET, ISVALID = (C_TRACE_VERSION == 2)
BUS_INTERFACE BUS = MDM, BUS_STD = XIL_BSCAN, BUS_TYPE = TARGET

## Generics for VHDL or Parameters for Verilog
PARAMETER C_FAMILY = virtex5, DT = STRING
PARAMETER C_INSTANCE = xmtc, DT = STRING
PARAMETER C_EXT_RESET_HIGH = 1, DT = INTEGER, RANGE = (0,1)
PARAMETER C_COMMAND_COUNT = 1, DT = INTEGER, RANGE = (1:16)
PARAMETER C_PC_COMPARATOR_COUNT = 0, DT = INTEGER, RANGE = (0:2)
PARAMETER C_RA_COMPARATOR_COUNT = 0, DT = INTEGER, RANGE = (0:2)
PARAMETER C_WA_COMPARATOR_COUNT = 0, DT = INTEGER, RANGE = (0:2)
PARAMETER C_COUNTER_COUNT = 0, DT = INTEGER, RANGE = (0:2)
PARAMETER C_DATAVAL_COUNT = 0, DT = INTEGER, RANGE = (0:2)
PARAMETER C_REGVAL_COUNT = 0, DT = INTEGER, RANGE = (0:2)
PARAMETER C_ONCHIP_STORAGE = 0, DT = INTEGER, RANGE = (0:1)
PARAMETER C_STORAGE_KSAMPLES = 1, DT = INTEGER, RANGE = (1:16)
PARAMETER C_ALWAYS_COLLECT = 1, DT = INTEGER, RANGE = (0:1)
PARAMETER C_CLOCK_STYLE = 2, DT = INTEGER, RANGE = (1,2), VALUES = (1=SDR, 2=DDR)
PARAMETER C_TRACE_VERSION = 2, DT = INTEGER, RANGE = (1:2), TYPE = NON_HDL

## Ports
PORT Clk = "", DIR = I, SIGIS = CLK
PORT Rst = "", DIR = I, SIGIS = RST
PORT Trace_Instruction = Trace_Instruction, DIR = I, VEC = [0:31], BUS = MBTRACE2:MBTRACE
PORT Trace_Valid_Instr = Trace_Valid_Instr, DIR = I, BUS = MBTRACE2:MBTRACE
PORT Trace_PC = Trace_PC, DIR = I, VEC = [0:31], BUS = MBTRACE2:MBTRACE
PORT Trace_Reg_Write = Trace_Reg_Write, DIR = I, BUS = MBTRACE2:MBTRACE
PORT Trace_Reg_Addr = Trace_Reg_Addr, DIR = I, VEC = [0:4], BUS = MBTRACE2:MBTRACE
PORT Trace_MSR_Reg_11 = Trace_MSR_Reg, DIR = I, VEC = [0:10], BUS = MBTRACE
PORT Trace_MSR_Reg_15 = Trace_MSR_Reg, DIR = I, VEC = [0:14], BUS = MBTRACE2
PORT Trace_PID_Reg = Trace_PID_Reg, DIR = I, VEC = [0:7], BUS = MBTRACE2
PORT Trace_New_Reg_Value = Trace_New_Reg_Value, DIR = I, VEC = [0:31], BUS = MBTRACE2:MBTRACE
PORT Trace_Exception_Taken = Trace_Exception_Taken, DIR = I, BUS = MBTRACE2:MBTRACE
PORT Trace_Exception_Kind_4 = Trace_Exception_Kind, DIR = I, VEC = [0:3], BUS = MBTRACE
PORT Trace_Exception_Kind_5 = Trace_Exception_Kind, DIR = I, VEC = [0:4], BUS = MBTRACE2
PORT Trace_Jump_Taken = Trace_Jump_Taken, DIR = I, BUS = MBTRACE2:MBTRACE
PORT Trace_Delay_Slot = Trace_Delay_Slot, DIR = I, BUS = MBTRACE2:MBTRACE
PORT Trace_Data_Address = Trace_Data_Address, DIR = I, VEC = [0:31], BUS = MBTRACE2:MBTRACE
PORT Trace_Data_Write_Value = Trace_Data_Write_Value, DIR = I, VEC = [0:31], BUS = MBTRACE2:MBTRACE
PORT Trace_Data_Byte_Enable = Trace_Data_Byte_Enable, DIR = I, VEC = [0:3], BUS = MBTRACE2:MBTRACE
PORT Trace_Data_Access = Trace_Data_Access, DIR = I, BUS = MBTRACE2:MBTRACE
PORT Trace_Data_Read = Trace_Data_Read, DIR = I, BUS = MBTRACE2:MBTRACE
PORT Trace_Data_Write = Trace_Data_Write, DIR = I, BUS = MBTRACE2:MBTRACE
PORT Trace_DCache_Req = Trace_DCache_Req, DIR = I, BUS = MBTRACE2:MBTRACE
PORT Trace_DCache_Hit = Trace_DCache_Hit, DIR = I, BUS = MBTRACE2:MBTRACE
PORT Trace_ICache_Req = Trace_ICache_Req, DIR = I, BUS = MBTRACE2:MBTRACE
PORT Trace_ICache_Hit = Trace_ICache_Hit, DIR = I, BUS = MBTRACE2:MBTRACE
PORT Trace_OF_PipeRun = Trace_OF_PipeRun, DIR = I, BUS = MBTRACE2:MBTRACE
PORT Trace_EX_PipeRun = Trace_EX_PipeRun, DIR = I, BUS = MBTRACE2:MBTRACE
PORT Trace_MEM_PipeRun = Trace_MEM_PipeRun, DIR = I, BUS = MBTRACE2:MBTRACE
PORT Trace_MB_Halted = Trace_MB_Halted, DIR = I, BUS = MBTRACE2
PORT MDM_TDI = TDI, DIR = I, BUS = MDM
PORT MDM_SEL = SEL, DIR = I, BUS = MDM
PORT MDM_SHIFT = SHIFT, DIR = I, BUS = MDM
PORT MDM_UPDATE = UPDATE, DIR = I, BUS = MDM
PORT MDM_RESET = RESET, DIR = I, BUS = MDM
PORT MDM_DRCK = DRCK, DIR = I, BUS = MDM
PORT MDM_CAPTURE = CAPTURE, DIR = I, BUS = MDM
PORT MDM_TDO = TDO, DIR = O, BUS = MDM
PORT XMTC_Clk = xmtc_clk, DIR = O, IO_IF = XMTC, IO_IS = xmtc_clk, SIGIS = CLK, CLK_INPORT = Clk, CLK_FACTOR = (1 / C_CLOK_STYLE)
PORT XMTC_Data = xmtc_data, DIR = O, VEC = [0:17], IO_IF = XMTC, IO_IS = xmtc_data
PORT XMTC_Collect = xmtc_collect, DIR = O, IO_IF = XMTC, IO_IS = xmtc_collect
PORT XMTC_Trig_Out = xmtc_trig_out, DIR = O, IO_IF = XMTC, IO_IS = xmtc_trig_out
PORT XMTC_Trig_In = xmtc_trig_in, DIR = I, VEC = [0:15], IO_IF = XMTC, IO_IS = xmtc_trig_in

END

FINISH_SINGLE_MPD

START_SINGLE_MPD jtagppc_cntlr_v2_01_c 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : jtagppc_cntlr
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN jtagppc_cntlr

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION HDL = VHDL
OPTION IMP_NETLIST = TRUE
OPTION SYSLEVEL_DRC_PROC = syslevel_drc_proc
OPTION ARCH_SUPPORT_MAP = (virtex2p=PRODUCTION, virtex4fx=PRODUCTION, qvirtex4fx=PRODUCTION, qrvirtex4fx=PRODUCTION, virtex5fx=PRODUCTION)
OPTION LAST_UPDATED = 10.1.3
OPTION DESC = PowerPC JTAG Controller
OPTION LONG_DESC = JTAGPPC wrapper allows the PowerPC to connect to the JTAG chain of the FPGA.
OPTION IP_GROUP = Debug:PPC
OPTION RUN_NGCBUILD = FALSE
OPTION STYLE = HDL


## Bus Interfaces
BUS_INTERFACE BUS = JTAGPPC0, BUS_STD = XIL_JTAGPPC, BUS_TYPE = INITIATOR
BUS_INTERFACE BUS = JTAGPPC1, BUS_STD = XIL_JTAGPPC, BUS_TYPE = INITIATOR, ISVALID = (!([xstrncmp C_DEVICE *2vp4 ] || [xstrncmp C_DEVICE  *2vp7 ] || [xstrncmp C_DEVICE  *2vpx20 ] || [xstrncmp C_DEVICE  *4vfx12 ] || [xstrncmp C_DEVICE  *4vfx20 ] || [xstrncmp C_DEVICE  *5vfx30t ] || [xstrncmp C_DEVICE  *5vfx70t ]))

## Generics for VHDL or Parameters for Verilog
PARAMETER C_DEVICE = X2VP4, DT = string, ASSIGNMENT = UPDATE
PARAMETER C_NUM_PPC_USED = 0, DT = integer, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ppc

## Ports
PORT TRSTNEG = "", DIR = I, INITIALVAL = VCC
PORT HALTNEG0 = "", DIR = I, INITIALVAL = VCC
PORT DBGC405DEBUGHALT0 = "", DIR = O
PORT HALTNEG1 = "", DIR = I, INITIALVAL = VCC
PORT DBGC405DEBUGHALT1 = "", DIR = O
PORT C405JTGTDO0 = C405JTGTDO, DIR = I, INITIALVAL = GND, BUS = JTAGPPC0
PORT C405JTGTDOEN0 = C405JTGTDOEN, DIR = I, INITIALVAL = GND, BUS = JTAGPPC0
PORT JTGC405TCK0 = JTGC405TCK, DIR = O, BUS = JTAGPPC0
PORT JTGC405TDI0 = JTGC405TDI, DIR = O, BUS = JTAGPPC0
PORT JTGC405TMS0 = JTGC405TMS, DIR = O, BUS = JTAGPPC0
PORT JTGC405TRSTNEG0 = JTGC405TRSTNEG, DIR = O, BUS = JTAGPPC0
PORT C405JTGTDO1 = C405JTGTDO, DIR = I, INITIALVAL = GND, BUS = JTAGPPC1
PORT C405JTGTDOEN1 = C405JTGTDOEN, DIR = I, INITIALVAL = GND, BUS = JTAGPPC1
PORT JTGC405TCK1 = JTGC405TCK, DIR = O, BUS = JTAGPPC1
PORT JTGC405TDI1 = JTGC405TDI, DIR = O, BUS = JTAGPPC1
PORT JTGC405TMS1 = JTGC405TMS, DIR = O, BUS = JTAGPPC1
PORT JTGC405TRSTNEG1 = JTGC405TRSTNEG, DIR = O, BUS = JTAGPPC1

END

FINISH_SINGLE_MPD

START_SINGLE_MPD apu_fpu_virtex5_v1_01_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : apu_fpu_virtex5
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN apu_fpu_virtex5

## Peripheral Options
OPTION STYLE = MIX
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION SIMMODELS = STRUCTURAL
OPTION HDL = VHDL
OPTION SYSLEVEL_DRC_PROC = apufpu_virtex5_syslevel_drc
OPTION PLATGEN_SYSLEVEL_UPDATE_PROC = apufpu_virtex5_write_ucf
OPTION LAST_UPDATED = 10.1.3
OPTION DESC = V5 APU Floating Point Unit
OPTION LONG_DESC = Floating Point Unit via Auxilary Processor Unit. for Virtex5
OPTION IP_GROUP = Arithmetic:PPC
OPTION ARCH_SUPPORT_MAP = (virtex5fx=PRODUCTION)
OPTION RUN_NGCBUILD = TRUE


## Bus Interfaces
BUS_INTERFACE BUS = SFCB2, BUS_STD = FCB2, BUS_TYPE = SLAVE

## Generics for VHDL or Parameters for Verilog
PARAMETER C_USE_RLOCS = 0, DT = integer, RANGE = (0:2), VALUES = ( 0 = No, 1 = PowerPC0, 2 = PowerPC1 ), DESC = Write FPU placement constraints, PERMIT = BASE_USER
PARAMETER C_DOUBLE_PRECISION = 1, DT = integer, RANGE = (0:1), VALUES = ( 0 = Single Precision, 1 = Double Precision), DESC = FPU Precision, PERMIT = BASE_USER
PARAMETER C_LATENCY_CONF = 1, DT = integer, RANGE = (0:1), VALUES = ( 0 = High Speed, 1 = Low Latency), DESC = FPU Latency configuration, PERMIT = BASE_USER

## Ports
PORT FCB_CLK = "", DIR = I, SIGIS = CLK, BUS = SFCB2
PORT FCB_RST = FCB_RST, DIR = I, BUS = SFCB2
PORT FCMAPURESULT = Sl_RESULT, DIR = O, VEC = [0:31], BUS = SFCB2
PORT FCMAPUDONE = Sl_DONE, DIR = O, BUS = SFCB2
PORT FCMAPUSLEEPNOTREADY = Sl_SLEEPNOTREADY, DIR = O, BUS = SFCB2
PORT FCMAPURESULTVALID = Sl_RESULTVALID, DIR = O, BUS = SFCB2
PORT FCMAPUCR = Sl_CR, DIR = O, VEC = [0:3], BUS = SFCB2
PORT FCMAPUEXCEPTION = Sl_EXCEPTION, DIR = O, BUS = SFCB2
PORT FCMAPUSTOREDATA = Sl_STOREDATA, DIR = O, VEC = [0:127], BUS = SFCB2
PORT FCMAPUCONFIRMINSTR = Sl_CONFIRMINSTR, DIR = O, BUS = SFCB2
PORT FCMAPUFPSCRFEX = Sl_FPSCRFEX, DIR = O, BUS = SFCB2
PORT APUFCMINSTRUCTION = FCB_INSTRUCTION, DIR = I, VEC = [0:31], BUS = SFCB2
PORT APUFCMINSTRVALID = FCB_INSTRVALID, DIR = I, BUS = SFCB2
PORT APUFCMRADATA = FCB_RADATA, DIR = I, VEC = [0:31], BUS = SFCB2
PORT APUFCMRBDATA = FCB_RBDATA, DIR = I, VEC = [0:31], BUS = SFCB2
PORT APUFCMOPERANDVALID = FCB_OPERANDVALID, DIR = I, BUS = SFCB2
PORT APUFCMFLUSH = FCB_FLUSH, DIR = I, BUS = SFCB2
PORT APUFCMWRITEBACKOK = FCB_WRITEBACKOK, DIR = I, BUS = SFCB2
PORT APUFCMLOADDATA = FCB_LOADDATA, DIR = I, VEC = [0:127], BUS = SFCB2
PORT APUFCMLOADDVALID = FCB_LOADDVALID, DIR = I, BUS = SFCB2
PORT APUFCMLOADBYTEADDR = FCB_LOADBYTEADDR, DIR = I, VEC = [0:3], BUS = SFCB2
PORT APUFCMENDIAN = FCB_ENDIAN, DIR = I, BUS = SFCB2
PORT APUFCMDECUDI = FCB_DECUDI, DIR = I, VEC = [0:3], BUS = SFCB2
PORT APUFCMDECUDIVALID = FCB_DECUDIVALID, DIR = I, BUS = SFCB2
PORT APUFCMDECFPUOP = FCB_DECFPUOP, DIR = I, BUS = SFCB2
PORT APUFCMDECLOAD = FCB_DECLOAD, DIR = I, BUS = SFCB2
PORT APUFCMDECSTORE = FCB_DECSTORE, DIR = I, BUS = SFCB2
PORT APUFCMDECLDSTXFERSIZE = FCB_DECLDSTXFERSIZE, DIR = I, VEC = [0:2], BUS = SFCB2
PORT APUFCMDECNONAUTON = FCB_DECNONAUTON, DIR = I, BUS = SFCB2
PORT APUFCMNEXTINSTRREADY = FCB_NEXTINSTRREADY, DIR = I, BUS = SFCB2
PORT APUFCMMSRFE0 = FCB_MSRFE0, DIR = I, BUS = SFCB2
PORT APUFCMMSRFE1 = FCB_MSRFE1, DIR = I, BUS = SFCB2

END

FINISH_SINGLE_MPD

START_SINGLE_MPD ppc405_virtex4_v2_01_b 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : ppc405_virtex4
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN ppc405_virtex4

## Peripheral Options
OPTION IPTYPE = PROCESSOR
OPTION IMP_NETLIST = TRUE
OPTION HDL = MIXED
OPTION CLK_FREQ_RATIOS = ((IPLB0_PLB_Clk,IPLB1_PLB_Clk,DPLB0_PLB_Clk,DPLB1_PLB_Clk)/CPMC405CLOCK=(1/[1:16],2/[3:16],3/[4:16]), (CPMDCRCLK,CPMFCMCLK)/CPMC405CLOCK=(1/[1:16]), (BRAMDSOCMCLK,BRAMISOCMCLK)/CPMC405CLOCK=(1/[1:8]))
OPTION SPECIAL = PPC405
OPTION SYSLEVEL_DRC_PROC = syslevel_drc_proc
OPTION ARCH_SUPPORT_MAP = (virtex4fx=PRODUCTION, qvirtex4fx=PRODUCTION, qrvirtex4fx=PRODUCTION)
OPTION RUN_NGCBUILD = TRUE
OPTION PLATGEN_SYSLEVEL_UPDATE_PROC = generate_corelevel_ucf
OPTION LAST_UPDATED = 11.1
OPTION DESC = PowerPC 405 Virtex-4
OPTION LONG_DESC = A wrapper to instantiate the PowerPC 405 Processor Block primitive
OPTION IP_GROUP = Processor:PPC
OPTION STYLE = HDL

IO_INTERFACE IO_IF = cpudbg_0, IO_TYPE = XIL_CPUDEBUG_V1
IO_INTERFACE IO_IF = trace_0, IO_TYPE = XIL_TRACE_V1

## Bus Interfaces
BUS_INTERFACE BUS = MDCR, BUS_STD = DCR, BUS_TYPE = MASTER, SHARES_ADDR = EMACDCR
BUS_INTERFACE BUS = DPLB0, BUS_STD = PLBV46, BUS_TYPE = MASTER, GENERATE_BURSTS = TRUE, SHARES_ADDR = DSOCM
BUS_INTERFACE BUS = IPLB0, BUS_STD = PLBV46, BUS_TYPE = MASTER, GENERATE_BURSTS = TRUE, SHARES_ADDR = ISOCM
BUS_INTERFACE BUS = DPLB1, BUS_STD = PLBV46, BUS_TYPE = MASTER, GENERATE_BURSTS = TRUE, SHARES_ADDR = DSOCM
BUS_INTERFACE BUS = IPLB1, BUS_STD = PLBV46, BUS_TYPE = MASTER, GENERATE_BURSTS = TRUE, SHARES_ADDR = ISOCM
BUS_INTERFACE BUS = DSOCM, BUS_STD = DSOCM, BUS_TYPE = MASTER, SHARES_ADDR = DPLB0:DPLB1
BUS_INTERFACE BUS = ISOCM, BUS_STD = ISOCM, BUS_TYPE = MASTER, SHARES_ADDR = IPLB0:IPLB1
BUS_INTERFACE BUS = MFCB, BUS_STD = FCB, BUS_TYPE = MASTER
BUS_INTERFACE BUS = MFCM, BUS_STD = XIL_FCM, BUS_TYPE = INITIATOR
BUS_INTERFACE BUS = EMACDCR, BUS_STD = XIL_EMACDCR, BUS_TYPE = INITIATOR, SHARES_ADDR = MDCR
BUS_INTERFACE BUS = JTAGPPC, BUS_STD = XIL_JTAGPPC, BUS_TYPE = TARGET
BUS_INTERFACE BUS = RESETPPC, BUS_STD = XIL_RESETPPC, BUS_TYPE = TARGET

## Generics for VHDL or Parameters for Verilog
PARAMETER C_DPLB0_DWIDTH = 64, DT = INTEGER, BUS = DPLB0, ASSIGNMENT = UPDATE
PARAMETER C_DPLB0_NATIVE_DWIDTH = 64, DT = integer, BUS = DPLB0, ASSIGNMENT = CONSTANT
PARAMETER C_IPLB0_DWIDTH = 64, DT = INTEGER, BUS = IPLB0, ASSIGNMENT = UPDATE
PARAMETER C_IPLB0_NATIVE_DWIDTH = 64, DT = integer, BUS = IPLB0, ASSIGNMENT = CONSTANT
PARAMETER C_DPLB1_DWIDTH = 64, DT = INTEGER, BUS = DPLB1, ASSIGNMENT = UPDATE
PARAMETER C_DPLB1_NATIVE_DWIDTH = 64, DT = integer, BUS = DPLB1, ASSIGNMENT = CONSTANT
PARAMETER C_IPLB1_DWIDTH = 64, DT = INTEGER, BUS = IPLB1, ASSIGNMENT = UPDATE
PARAMETER C_IPLB1_NATIVE_DWIDTH = 64, DT = integer, BUS = IPLB1, ASSIGNMENT = CONSTANT
PARAMETER C_DPLB1_ADDR_BASE = 0xffffffff, DT = std_logic_vector(0 to 31), BUS = DPLB1, ASSIGNMENT = OPTIONAL_UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_address
PARAMETER C_DPLB1_ADDR_HIGH = 0x00000000, DT = std_logic_vector(0 to 31), BUS = DPLB1, ASSIGNMENT = OPTIONAL_UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_address
PARAMETER C_IPLB1_ADDR_BASE = 0xffffffff, DT = std_logic_vector(0 to 31), BUS = IPLB1, ASSIGNMENT = OPTIONAL_UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_address
PARAMETER C_IPLB1_ADDR_HIGH = 0x00000000, DT = std_logic_vector(0 to 31), BUS = IPLB1, ASSIGNMENT = OPTIONAL_UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_address
PARAMETER C_FASTEST_PLB_CLOCK = DEFAULT, DT = string, VALUES = ( DEFAULT = DEFAULT ,  IPLB0 =IPLB0,  DPLB0 =DPLB0,  IPLB1 =IPLB1,  DPLB1 =DPLB1), ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_fastest_plb
PARAMETER C_GENERATE_PLB_TIMESPECS = 1, DT = INTEGER, TYPE = NON_HDL
PARAMETER C_DPLB0_P2P = 1, DT = INTEGER, BUS = DPLB0, TYPE = NON_HDL
PARAMETER C_DPLB1_P2P = 1, DT = INTEGER, BUS = DPLB1, TYPE = NON_HDL
PARAMETER C_IPLB0_P2P = 1, DT = INTEGER, BUS = IPLB0, TYPE = NON_HDL
PARAMETER C_IPLB1_P2P = 1, DT = INTEGER, BUS = IPLB1, TYPE = NON_HDL
PARAMETER C_IDCR_BASEADDR = 0b1111111111, DT = std_logic_vector(0 to 9), BUS = MDCR, MIN_SIZE = 16
PARAMETER C_IDCR_HIGHADDR = 0b0000000000, DT = std_logic_vector(0 to 9), BUS = MDCR, ASSIGNMENT = UPDATE
PARAMETER C_DISABLE_OPERAND_FORWARDING = 1, DT = INTEGER
PARAMETER C_MMU_ENABLE = 1, DT = INTEGER
PARAMETER C_DETERMINISTIC_MULT = 0, DT = INTEGER, ASSIGNMENT = CONSTANT
PARAMETER C_PLBSYNCBYPASS = 1, DT = INTEGER, RANGE = (0, 1)
PARAMETER C_APU_CONTROL = 0b1101111000000000, DT = std_logic_vector(0 to 15)
PARAMETER C_APU_UDI_1 = 0b101000011000100110000011, DT = std_logic_vector(0 to 23)
PARAMETER C_APU_UDI_2 = 0b101000111000100110000011, DT = std_logic_vector(0 to 23)
PARAMETER C_APU_UDI_3 = 0b101001011000100111000011, DT = std_logic_vector(0 to 23)
PARAMETER C_APU_UDI_4 = 0b101001111000100111000011, DT = std_logic_vector(0 to 23)
PARAMETER C_APU_UDI_5 = 0b101010011000110000000011, DT = std_logic_vector(0 to 23)
PARAMETER C_APU_UDI_6 = 0b101010111000110000000011, DT = std_logic_vector(0 to 23)
PARAMETER C_APU_UDI_7 = 0b101011011000110001000011, DT = std_logic_vector(0 to 23)
PARAMETER C_APU_UDI_8 = 0b101011111000110001000011, DT = std_logic_vector(0 to 23)
PARAMETER C_PVR_HIGH = 0b0000, DT = std_logic_vector(0 to 3)
PARAMETER C_PVR_LOW = 0b0000, DT = std_logic_vector(0 to 3)

## Ports
PORT C405CPMCORESLEEPREQ = "", DIR = O
PORT C405CPMMSRCE = "", DIR = O
PORT C405CPMMSREE = "", DIR = O
PORT C405CPMTIMERIRQ = "", DIR = O
PORT C405CPMTIMERRESETREQ = "", DIR = O
PORT C405XXXMACHINECHECK = "", DIR = O
PORT CPMC405CLOCK = "", DIR = I, SIGIS = CLK, INITIALVAL = VCC
PORT CPMC405CORECLKINACTIVE = "", DIR = I
PORT CPMC405CPUCLKEN = "", DIR = I, INITIALVAL = VCC
PORT CPMC405JTAGCLKEN = "", DIR = I, INITIALVAL = VCC
PORT CPMC405TIMERCLKEN = "", DIR = I, INITIALVAL = VCC
PORT CPMC405TIMERTICK = "", DIR = I, INITIALVAL = VCC
PORT MCBCPUCLKEN = "", DIR = I, INITIALVAL = VCC
PORT MCBTIMEREN = "", DIR = I, INITIALVAL = VCC
PORT MCPPCRST = "", DIR = I, INITIALVAL = VCC
PORT CPMDCRCLK = "", DIR = I, SIGIS = CLK, INITIALVAL = VCC
PORT CPMFCMCLK = "", DIR = I, SIGIS = CLK, BUS = MFCM:MFCB, INITIALVAL = VCC
PORT C405RSTCHIPRESETREQ = Chip_Reset_Req, DIR = O, SIGIS = RST, BUS = RESETPPC
PORT C405RSTCORERESETREQ = Core_Reset_Req, DIR = O, SIGIS = RST, BUS = RESETPPC
PORT C405RSTSYSRESETREQ = System_Reset_Req, DIR = O, SIGIS = RST, BUS = RESETPPC
PORT RSTC405RESETCHIP = RstsPPCresetchip, DIR = I, SIGIS = RST, BUS = RESETPPC
PORT RSTC405RESETCORE = RstcPPCresetcore, DIR = I, SIGIS = RST, BUS = RESETPPC
PORT RSTC405RESETSYS = RstcPPCresetsys, DIR = I, SIGIS = RST, BUS = RESETPPC
PORT APUFCMDECODED = APUFCMDECODED, DIR = O, BUS = MFCM:MFCB
PORT APUFCMDECUDI = APUFCMDECUDI, DIR = O, VEC = [0:2], BUS = MFCM:MFCB
PORT APUFCMDECUDIVALID = APUFCMDECUDIVALID, DIR = O, BUS = MFCM:MFCB
PORT APUFCMENDIAN = APUFCMENDIAN, DIR = O, BUS = MFCM:MFCB
PORT APUFCMFLUSH = APUFCMFLUSH, DIR = O, BUS = MFCM:MFCB
PORT APUFCMINSTRUCTION = APUFCMINSTRUCTION, DIR = O, VEC = [0:31], BUS = MFCM:MFCB
PORT APUFCMINSTRVALID = APUFCMINSTRVALID, DIR = O, BUS = MFCM:MFCB
PORT APUFCMLOADBYTEEN = APUFCMLOADBYTEEN, DIR = O, VEC = [0:3], BUS = MFCM:MFCB
PORT APUFCMLOADDATA = APUFCMLOADDATA, DIR = O, VEC = [0:31], BUS = MFCM:MFCB
PORT APUFCMLOADDVALID = APUFCMLOADDVALID, DIR = O, BUS = MFCM:MFCB
PORT APUFCMOPERANDVALID = APUFCMOPERANDVALID, DIR = O, BUS = MFCM:MFCB
PORT APUFCMRADATA = APUFCMRADATA, DIR = O, VEC = [0:31], BUS = MFCM:MFCB
PORT APUFCMRBDATA = APUFCMRBDATA, DIR = O, VEC = [0:31], BUS = MFCM:MFCB
PORT APUFCMWRITEBACKOK = APUFCMWRITEBACKOK, DIR = O, BUS = MFCM:MFCB
PORT APUFCMXERCA = APUFCMXERCA, DIR = O, BUS = MFCM:MFCB
PORT FCMAPUCR = FCMAPUCR, DIR = I, VEC = [0:3], BUS = MFCM:MFCB
PORT FCMAPUDCDCREN = FCMAPUDCDCREN, DIR = I, BUS = MFCM:MFCB
PORT FCMAPUDCDFORCEALIGN = FCMAPUDCDFORCEALIGN, DIR = I, BUS = MFCM:MFCB
PORT FCMAPUDCDFORCEBESTEERING = FCMAPUDCDFORCEBESTEERING, DIR = I, BUS = MFCM:MFCB
PORT FCMAPUDCDFPUOP = FCMAPUDCDFPUOP, DIR = I, BUS = MFCM:MFCB
PORT FCMAPUDCDGPRWRITE = FCMAPUDCDGPRWRITE, DIR = I, BUS = MFCM:MFCB
PORT FCMAPUDCDLDSTBYTE = FCMAPUDCDLDSTBYTE, DIR = I, BUS = MFCM:MFCB
PORT FCMAPUDCDLDSTDW = FCMAPUDCDLDSTDW, DIR = I, BUS = MFCM:MFCB
PORT FCMAPUDCDLDSTHW = FCMAPUDCDLDSTHW, DIR = I, BUS = MFCM:MFCB
PORT FCMAPUDCDLDSTQW = FCMAPUDCDLDSTQW, DIR = I, BUS = MFCM:MFCB
PORT FCMAPUDCDLDSTWD = FCMAPUDCDLDSTWD, DIR = I, BUS = MFCM:MFCB
PORT FCMAPUDCDLOAD = FCMAPUDCDLOAD, DIR = I, BUS = MFCM:MFCB
PORT FCMAPUDCDPRIVOP = FCMAPUDCDPRIVOP, DIR = I, BUS = MFCM:MFCB
PORT FCMAPUDCDRAEN = FCMAPUDCDRAEN, DIR = I, BUS = MFCM:MFCB
PORT FCMAPUDCDRBEN = FCMAPUDCDRBEN, DIR = I, BUS = MFCM:MFCB
PORT FCMAPUDCDSTORE = FCMAPUDCDSTORE, DIR = I, BUS = MFCM:MFCB
PORT FCMAPUDCDTRAPBE = FCMAPUDCDTRAPBE, DIR = I, BUS = MFCM:MFCB
PORT FCMAPUDCDTRAPLE = FCMAPUDCDTRAPLE, DIR = I, BUS = MFCM:MFCB
PORT FCMAPUDCDUPDATE = FCMAPUDCDUPDATE, DIR = I, BUS = MFCM:MFCB
PORT FCMAPUDCDXERCAEN = FCMAPUDCDXERCAEN, DIR = I, BUS = MFCM:MFCB
PORT FCMAPUDCDXEROVEN = FCMAPUDCDXEROVEN, DIR = I, BUS = MFCM:MFCB
PORT FCMAPUDECODEBUSY = FCMAPUDECODEBUSY, DIR = I, BUS = MFCM:MFCB
PORT FCMAPUDONE = FCMAPUDONE, DIR = I, BUS = MFCM:MFCB
PORT FCMAPUEXCEPTION = FCMAPUEXCEPTION, DIR = I, BUS = MFCM:MFCB
PORT FCMAPUEXEBLOCKINGMCO = FCMAPUEXEBLOCKINGMCO, DIR = I, BUS = MFCM:MFCB
PORT FCMAPUEXECRFIELD = FCMAPUEXECRFIELD, DIR = I, VEC = [0:2], BUS = MFCM:MFCB
PORT FCMAPUEXENONBLOCKINGMCO = FCMAPUEXENONBLOCKINGMCO, DIR = I, BUS = MFCM:MFCB
PORT FCMAPUINSTRACK = FCMAPUINSTRACK, DIR = I, BUS = MFCM:MFCB
PORT FCMAPULOADWAIT = FCMAPULOADWAIT, DIR = I, BUS = MFCM:MFCB
PORT FCMAPURESULT = FCMAPURESULT, DIR = I, VEC = [0:31], BUS = MFCM:MFCB
PORT FCMAPURESULTVALID = FCMAPURESULTVALID, DIR = I, BUS = MFCM:MFCB
PORT FCMAPUSLEEPNOTREADY = FCMAPUSLEEPNOTREADY, DIR = I, BUS = MFCM:MFCB
PORT FCMAPUXERCA = FCMAPUXERCA, DIR = I, BUS = MFCM:MFCB
PORT FCMAPUXEROV = FCMAPUXEROV, DIR = I, BUS = MFCM:MFCB
PORT IPLB0_PLB_Clk = "", BUS = IPLB0, DIR = I, SIGIS = CLK
PORT IPLB0_PLB_Rst = MPLB_Rst, BUS = IPLB0, DIR = I, SIGIS = RST
PORT IPLB0_PLB_MBusy = PLB_MBusy, BUS = IPLB0, DIR = I
PORT IPLB0_PLB_MRdErr = PLB_MRdErr, BUS = IPLB0, DIR = I
PORT IPLB0_PLB_MWrErr = PLB_MWrErr, BUS = IPLB0, DIR = I
PORT IPLB0_PLB_MWrBTerm = PLB_MWrBTerm, BUS = IPLB0, DIR = I
PORT IPLB0_PLB_MWrDAck = PLB_MWrDAck, BUS = IPLB0, DIR = I
PORT IPLB0_PLB_MAddrAck = PLB_MAddrAck, BUS = IPLB0, DIR = I
PORT IPLB0_PLB_MRdBTerm = PLB_MRdBTerm, BUS = IPLB0, DIR = I
PORT IPLB0_PLB_MRdDAck = PLB_MRdDAck, BUS = IPLB0, DIR = I
PORT IPLB0_PLB_MRdDBus = PLB_MRdDBus, BUS = IPLB0, DIR = I, VEC = [0:(C_IPLB0_DWIDTH-1)]
PORT IPLB0_PLB_MRearbitrate = PLB_MRearbitrate, BUS = IPLB0, DIR = I
PORT IPLB0_PLB_MSSize = PLB_MSSize, BUS = IPLB0, DIR = I, VEC = [0:1]
PORT IPLB0_PLB_MTimeout = PLB_MTimeout, BUS = IPLB0, DIR = I
PORT IPLB0_PLB_MRdWdAddr = PLB_MRdWdAddr, BUS = IPLB0, DIR = I, VEC = [0:3]
PORT IPLB0_M_ABus = M_ABus, BUS = IPLB0, DIR = O, VEC = [0:31]
PORT IPLB0_M_BE = M_BE, BUS = IPLB0, DIR = O, VEC = [0:((C_IPLB0_DWIDTH/8)-1)]
PORT IPLB0_M_MSize = M_MSize, BUS = IPLB0, DIR = O, VEC = [0:1]
PORT IPLB0_M_rdBurst = M_rdBurst, BUS = IPLB0, DIR = O
PORT IPLB0_M_request = M_request, BUS = IPLB0, DIR = O
PORT IPLB0_M_RNW = M_RNW, BUS = IPLB0, DIR = O
PORT IPLB0_M_size = M_size, BUS = IPLB0, DIR = O, VEC = [0:3]
PORT IPLB0_M_wrBurst = M_wrBurst, BUS = IPLB0, DIR = O
PORT IPLB0_M_wrDBus = M_wrDBus, BUS = IPLB0, DIR = O, VEC = [0:(C_IPLB0_DWIDTH-1)]
PORT IPLB0_M_abort = M_abort, BUS = IPLB0, DIR = O
PORT IPLB0_M_UABus = M_UABus, BUS = IPLB0, DIR = O, VEC = [0:31]
PORT IPLB0_M_busLock = M_busLock, BUS = IPLB0, DIR = O
PORT IPLB0_M_lockErr = M_lockErr, BUS = IPLB0, DIR = O
PORT IPLB0_M_priority = M_priority, BUS = IPLB0, DIR = O, VEC = [0:1]
PORT IPLB0_M_type = M_type, BUS = IPLB0, DIR = O, VEC = [0:2]
PORT IPLB0_M_TAttribute = M_TAttribute, BUS = IPLB0, DIR = O, VEC = [0:15]
PORT DPLB0_PLB_Clk = "", BUS = DPLB0, DIR = I, SIGIS = CLK
PORT DPLB0_PLB_Rst = MPLB_Rst, BUS = DPLB0, DIR = I, SIGIS = RST
PORT DPLB0_PLB_MBusy = PLB_MBusy, BUS = DPLB0, DIR = I
PORT DPLB0_PLB_MRdErr = PLB_MRdErr, BUS = DPLB0, DIR = I
PORT DPLB0_PLB_MWrErr = PLB_MWrErr, BUS = DPLB0, DIR = I
PORT DPLB0_PLB_MWrBTerm = PLB_MWrBTerm, BUS = DPLB0, DIR = I
PORT DPLB0_PLB_MWrDAck = PLB_MWrDAck, BUS = DPLB0, DIR = I
PORT DPLB0_PLB_MAddrAck = PLB_MAddrAck, BUS = DPLB0, DIR = I
PORT DPLB0_PLB_MRdBTerm = PLB_MRdBTerm, BUS = DPLB0, DIR = I
PORT DPLB0_PLB_MRdDAck = PLB_MRdDAck, BUS = DPLB0, DIR = I
PORT DPLB0_PLB_MRdDBus = PLB_MRdDBus, BUS = DPLB0, DIR = I, VEC = [0:(C_DPLB0_DWIDTH-1)]
PORT DPLB0_PLB_MRearbitrate = PLB_MRearbitrate, BUS = DPLB0, DIR = I
PORT DPLB0_PLB_MSSize = PLB_MSSize, BUS = DPLB0, DIR = I, VEC = [0:1]
PORT DPLB0_PLB_MTimeout = PLB_MTimeout, BUS = DPLB0, DIR = I
PORT DPLB0_PLB_MRdWdAddr = PLB_MRdWdAddr, BUS = DPLB0, DIR = I, VEC = [0:3]
PORT DPLB0_M_ABus = M_ABus, BUS = DPLB0, DIR = O, VEC = [0:31]
PORT DPLB0_M_BE = M_BE, BUS = DPLB0, DIR = O, VEC = [0:((C_DPLB0_DWIDTH/8)-1)]
PORT DPLB0_M_MSize = M_MSize, BUS = DPLB0, DIR = O, VEC = [0:1]
PORT DPLB0_M_rdBurst = M_rdBurst, BUS = DPLB0, DIR = O
PORT DPLB0_M_request = M_request, BUS = DPLB0, DIR = O
PORT DPLB0_M_RNW = M_RNW, BUS = DPLB0, DIR = O
PORT DPLB0_M_size = M_size, BUS = DPLB0, DIR = O, VEC = [0:3]
PORT DPLB0_M_wrBurst = M_wrBurst, BUS = DPLB0, DIR = O
PORT DPLB0_M_wrDBus = M_wrDBus, BUS = DPLB0, DIR = O, VEC = [0:(C_DPLB0_DWIDTH-1)]
PORT DPLB0_M_abort = M_abort, BUS = DPLB0, DIR = O
PORT DPLB0_M_UABus = M_UABus, BUS = DPLB0, DIR = O, VEC = [0:31]
PORT DPLB0_M_busLock = M_busLock, BUS = DPLB0, DIR = O
PORT DPLB0_M_lockErr = M_lockErr, BUS = DPLB0, DIR = O
PORT DPLB0_M_priority = M_priority, BUS = DPLB0, DIR = O, VEC = [0:1]
PORT DPLB0_M_type = M_type, BUS = DPLB0, DIR = O, VEC = [0:2]
PORT DPLB0_M_TAttribute = M_TAttribute, BUS = DPLB0, DIR = O, VEC = [0:15]
PORT IPLB1_PLB_Clk = "", BUS = IPLB1, DIR = I, SIGIS = CLK
PORT IPLB1_PLB_Rst = MPLB_Rst, BUS = IPLB1, DIR = I, SIGIS = RST
PORT IPLB1_PLB_MBusy = PLB_MBusy, BUS = IPLB1, DIR = I
PORT IPLB1_PLB_MRdErr = PLB_MRdErr, BUS = IPLB1, DIR = I
PORT IPLB1_PLB_MWrErr = PLB_MWrErr, BUS = IPLB1, DIR = I
PORT IPLB1_PLB_MWrBTerm = PLB_MWrBTerm, BUS = IPLB1, DIR = I
PORT IPLB1_PLB_MWrDAck = PLB_MWrDAck, BUS = IPLB1, DIR = I
PORT IPLB1_PLB_MAddrAck = PLB_MAddrAck, BUS = IPLB1, DIR = I
PORT IPLB1_PLB_MRdBTerm = PLB_MRdBTerm, BUS = IPLB1, DIR = I
PORT IPLB1_PLB_MRdDAck = PLB_MRdDAck, BUS = IPLB1, DIR = I
PORT IPLB1_PLB_MRdDBus = PLB_MRdDBus, BUS = IPLB1, DIR = I, VEC = [0:(C_IPLB1_DWIDTH-1)]
PORT IPLB1_PLB_MRearbitrate = PLB_MRearbitrate, BUS = IPLB1, DIR = I
PORT IPLB1_PLB_MSSize = PLB_MSSize, BUS = IPLB1, DIR = I, VEC = [0:1]
PORT IPLB1_PLB_MTimeout = PLB_MTimeout, BUS = IPLB1, DIR = I
PORT IPLB1_PLB_MRdWdAddr = PLB_MRdWdAddr, BUS = IPLB1, DIR = I, VEC = [0:3]
PORT IPLB1_M_ABus = M_ABus, BUS = IPLB1, DIR = O, VEC = [0:31]
PORT IPLB1_M_BE = M_BE, BUS = IPLB1, DIR = O, VEC = [0:((C_IPLB1_DWIDTH/8)-1)]
PORT IPLB1_M_MSize = M_MSize, BUS = IPLB1, DIR = O, VEC = [0:1]
PORT IPLB1_M_rdBurst = M_rdBurst, BUS = IPLB1, DIR = O
PORT IPLB1_M_request = M_request, BUS = IPLB1, DIR = O
PORT IPLB1_M_RNW = M_RNW, BUS = IPLB1, DIR = O
PORT IPLB1_M_size = M_size, BUS = IPLB1, DIR = O, VEC = [0:3]
PORT IPLB1_M_wrBurst = M_wrBurst, BUS = IPLB1, DIR = O
PORT IPLB1_M_wrDBus = M_wrDBus, BUS = IPLB1, DIR = O, VEC = [0:(C_IPLB1_DWIDTH-1)]
PORT IPLB1_M_abort = M_abort, BUS = IPLB1, DIR = O
PORT IPLB1_M_UABus = M_UABus, BUS = IPLB1, DIR = O, VEC = [0:31]
PORT IPLB1_M_busLock = M_busLock, BUS = IPLB1, DIR = O
PORT IPLB1_M_lockErr = M_lockErr, BUS = IPLB1, DIR = O
PORT IPLB1_M_priority = M_priority, BUS = IPLB1, DIR = O, VEC = [0:1]
PORT IPLB1_M_type = M_type, BUS = IPLB1, DIR = O, VEC = [0:2]
PORT IPLB1_M_TAttribute = M_TAttribute, BUS = IPLB1, DIR = O, VEC = [0:15]
PORT DPLB1_PLB_Clk = "", BUS = DPLB1, DIR = I, SIGIS = CLK
PORT DPLB1_PLB_Rst = MPLB_Rst, BUS = DPLB1, DIR = I, SIGIS = RST
PORT DPLB1_PLB_MBusy = PLB_MBusy, BUS = DPLB1, DIR = I
PORT DPLB1_PLB_MRdErr = PLB_MRdErr, BUS = DPLB1, DIR = I
PORT DPLB1_PLB_MWrErr = PLB_MWrErr, BUS = DPLB1, DIR = I
PORT DPLB1_PLB_MWrBTerm = PLB_MWrBTerm, BUS = DPLB1, DIR = I
PORT DPLB1_PLB_MWrDAck = PLB_MWrDAck, BUS = DPLB1, DIR = I
PORT DPLB1_PLB_MAddrAck = PLB_MAddrAck, BUS = DPLB1, DIR = I
PORT DPLB1_PLB_MRdBTerm = PLB_MRdBTerm, BUS = DPLB1, DIR = I
PORT DPLB1_PLB_MRdDAck = PLB_MRdDAck, BUS = DPLB1, DIR = I
PORT DPLB1_PLB_MRdDBus = PLB_MRdDBus, BUS = DPLB1, DIR = I, VEC = [0:(C_DPLB1_DWIDTH-1)]
PORT DPLB1_PLB_MRearbitrate = PLB_MRearbitrate, BUS = DPLB1, DIR = I
PORT DPLB1_PLB_MSSize = PLB_MSSize, BUS = DPLB1, DIR = I, VEC = [0:1]
PORT DPLB1_PLB_MTimeout = PLB_MTimeout, BUS = DPLB1, DIR = I
PORT DPLB1_PLB_MRdWdAddr = PLB_MRdWdAddr, BUS = DPLB1, DIR = I, VEC = [0:3]
PORT DPLB1_M_ABus = M_ABus, BUS = DPLB1, DIR = O, VEC = [0:31]
PORT DPLB1_M_BE = M_BE, BUS = DPLB1, DIR = O, VEC = [0:((C_DPLB1_DWIDTH/8)-1)]
PORT DPLB1_M_MSize = M_MSize, BUS = DPLB1, DIR = O, VEC = [0:1]
PORT DPLB1_M_rdBurst = M_rdBurst, BUS = DPLB1, DIR = O
PORT DPLB1_M_request = M_request, BUS = DPLB1, DIR = O
PORT DPLB1_M_RNW = M_RNW, BUS = DPLB1, DIR = O
PORT DPLB1_M_size = M_size, BUS = DPLB1, DIR = O, VEC = [0:3]
PORT DPLB1_M_wrBurst = M_wrBurst, BUS = DPLB1, DIR = O
PORT DPLB1_M_wrDBus = M_wrDBus, BUS = DPLB1, DIR = O, VEC = [0:(C_DPLB1_DWIDTH-1)]
PORT DPLB1_M_abort = M_abort, BUS = DPLB1, DIR = O
PORT DPLB1_M_UABus = M_UABus, BUS = DPLB1, DIR = O, VEC = [0:31]
PORT DPLB1_M_busLock = M_busLock, BUS = DPLB1, DIR = O
PORT DPLB1_M_lockErr = M_lockErr, BUS = DPLB1, DIR = O
PORT DPLB1_M_priority = M_priority, BUS = DPLB1, DIR = O, VEC = [0:1]
PORT DPLB1_M_type = M_type, BUS = DPLB1, DIR = O, VEC = [0:2]
PORT DPLB1_M_TAttribute = M_TAttribute, BUS = DPLB1, DIR = O, VEC = [0:15]
PORT BRAMDSOCMCLK = "", DIR = I, SIGIS = CLK, BUS = DSOCM, INITIALVAL = VCC
PORT BRAMDSOCMRDDBUS = BRAMDSOCMRDDBUS, DIR = I, VEC = [0:31], BUS = DSOCM
PORT DSARCVALUE = DSARCVALUE, DIR = I, VEC = [0:7], BUS = DSOCM
PORT DSCNTLVALUE = DSCNTLVALUE, DIR = I, VEC = [0:7], BUS = DSOCM
PORT DSOCMBRAMABUS = M_DSOCMBRAMABUS, DIR = O, VEC = [8:29], BUS = DSOCM
PORT DSOCMBRAMBYTEWRITE = M_DSOCMBRAMBYTEWRITE, DIR = O, VEC = [0:3], BUS = DSOCM
PORT DSOCMBRAMEN = M_DSOCMBRAMEN, DIR = O, BUS = DSOCM
PORT DSOCMBRAMWRDBUS = M_DSOCMBRAMWRDBUS, DIR = O, VEC = [0:31], BUS = DSOCM
PORT DSOCMBUSY = M_DSOCMBUSY, DIR = O, BUS = DSOCM
PORT DSOCMRDADDRVALID = M_DSOCMRDADDRVALID, DIR = O, BUS = DSOCM
PORT DSOCMWRADDRVALID = M_DSOCMWRADDRVALID, DIR = O, BUS = DSOCM
PORT DSOCMRWCOMPLETE = DSOCMRWCOMPLETE, DIR = I, BUS = DSOCM, INITIALVAL = VCC
PORT BRAMISOCMCLK = "", DIR = I, SIGIS = CLK, BUS = ISOCM, INITIALVAL = VCC
PORT BRAMISOCMRDDBUS = BRAMISOCMRDDBUS, DIR = I, VEC = [0:63], BUS = ISOCM
PORT BRAMISOCMDCRRDDBUS = BRAMISOCMDCRRDDBUS, DIR = I, VEC = [0:31], BUS = ISOCM
PORT ISARCVALUE = ISARCVALUE, DIR = I, VEC = [0:7], BUS = ISOCM
PORT ISCNTLVALUE = ISCNTLVALUE, DIR = I, VEC = [0:7], BUS = ISOCM
PORT ISOCMBRAMEN = M_ISOCMBRAMEN, DIR = O, BUS = ISOCM
PORT ISOCMBRAMEVENWRITEEN = M_ISOCMBRAMEVENWRITEEN, DIR = O, BUS = ISOCM
PORT ISOCMBRAMODDWRITEEN = M_ISOCMBRAMODDWRITEEN, DIR = O, BUS = ISOCM
PORT ISOCMBRAMRDABUS = M_ISOCMBRAMRDABUS, DIR = O, VEC = [8:28], BUS = ISOCM
PORT ISOCMBRAMWRABUS = M_ISOCMBRAMWRABUS, DIR = O, VEC = [8:28], BUS = ISOCM
PORT ISOCMBRAMWRDBUS = M_ISOCMBRAMWRDBUS, DIR = O, VEC = [0:31], BUS = ISOCM
PORT ISOCMDCRBRAMEVENEN = M_ISOCMDCRBRAMEVENEN, DIR = O, BUS = ISOCM
PORT ISOCMDCRBRAMODDEN = M_ISOCMDCRBRAMODDEN, DIR = O, BUS = ISOCM
PORT ISOCMDCRBRAMRDSELECT = M_ISOCMDCRBRAMRDSELECT, DIR = O, BUS = ISOCM
PORT DCREMACABUS = DCREMACABUS, DIR = O, VEC = [8:9], BUS = EMACDCR
PORT DCREMACCLK = DCREMACCLK, DIR = O, BUS = EMACDCR
PORT DCREMACDBUS = DCREMACDBUS, DIR = O, VEC = [0:31], BUS = EMACDCR
PORT DCREMACENABLER = DCREMACENABLER, DIR = O, BUS = EMACDCR
PORT DCREMACREAD = DCREMACREAD, DIR = O, BUS = EMACDCR
PORT DCREMACWRITE = DCREMACWRITE, DIR = O, BUS = EMACDCR
PORT EMACDCRACK = EMACDCRACK, DIR = I, BUS = EMACDCR
PORT EMACDCRDBUS = EMACDCRDBUS, DIR = I, VEC = [0:31], BUS = EMACDCR
PORT EXTDCRABUS = M_dcrABus, DIR = O, VEC = [0:9], BUS = MDCR
PORT EXTDCRDBUSOUT = M_dcrDBus, DIR = O, VEC = [0:31], BUS = MDCR
PORT EXTDCRREAD = M_dcrRead, DIR = O, BUS = MDCR
PORT EXTDCRWRITE = M_dcrWrite, DIR = O, BUS = MDCR
PORT EXTDCRACK = DCR_Ack, DIR = I, BUS = MDCR
PORT EXTDCRDBUSIN = DCR_M_DBus, DIR = I, VEC = [0:31], BUS = MDCR
PORT EICC405CRITINPUTIRQ = "", DIR = I, SIGIS = INTERRUPT
PORT EICC405EXTINPUTIRQ = "", DIR = I, SIGIS = INTERRUPT
PORT C405JTGCAPTUREDR = "", DIR = O
PORT C405JTGEXTEST = "", DIR = O
PORT C405JTGPGMOUT = "", DIR = O
PORT C405JTGSHIFTDR = "", DIR = O
PORT C405JTGTDO = C405JTGTDO, DIR = O, BUS = JTAGPPC, PERMIT = BASE_USER, DESC = 'JTAG TDO', IO_IF = cpudbg_0, IO_IS = cpu_tdo
PORT C405JTGTDOEN = C405JTGTDOEN, DIR = O, BUS = JTAGPPC
PORT C405JTGUPDATEDR = "", DIR = O
PORT MCBJTAGEN = "", DIR = I, INITIALVAL = VCC
PORT JTGC405BNDSCANTDO = "", DIR = I
PORT JTGC405TCK = JTGC405TCK, DIR = I, INITIALVAL = VCC, BUS = JTAGPPC, PERMIT = BASE_USER, DESC = 'JTAG TCK', IO_IF = cpudbg_0, IO_IS = cpu_tck
PORT JTGC405TDI = JTGC405TDI, DIR = I, INITIALVAL = VCC, BUS = JTAGPPC, PERMIT = BASE_USER, DESC = 'JTAG TDI', IO_IF = cpudbg_0, IO_IS = cpu_tdi
PORT JTGC405TMS = JTGC405TMS, DIR = I, INITIALVAL = VCC, BUS = JTAGPPC, PERMIT = BASE_USER, DESC = 'JTAG TMS', IO_IF = cpudbg_0, IO_IS = cpu_tms
PORT JTGC405TRSTNEG = JTGC405TRSTNEG, DIR = I, INITIALVAL = VCC, BUS = JTAGPPC, PERMIT = BASE_USER, DESC = 'JTAG TRST', IO_IF = cpudbg_0, IO_IS = cpu_trst
PORT C405DBGMSRWE = "", DIR = O
PORT C405DBGSTOPACK = "", DIR = O
PORT C405DBGWBCOMPLETE = "", DIR = O
PORT C405DBGWBFULL = "", DIR = O
PORT C405DBGWBIAR = "", DIR = O, VEC = [0:29]
PORT DBGC405DEBUGHALT = "", DIR = I, PERMIT = BASE_USER, DESC = 'JTAG HALT', IO_IF = cpudbg_0, IO_IS = cpu_halt
PORT DBGC405DEBUGHALTNEG = "", DIR = I, INITIALVAL = VCC, PERMIT = BASE_USER, DESC = 'JTAG HALT INV', IO_IF = cpudbg_0, IO_IS = cpu_halt_neg
PORT DBGC405EXTBUSHOLDACK = "", DIR = I
PORT DBGC405UNCONDDEBUGEVENT = "", DIR = I
PORT C405DBGLOADDATAONAPUDBUS = "", DIR = O
PORT C405TRCCYCLE = "", DIR = O, PERMIT = BASE_USER, DESC = 'Trace Clock', IO_IF = trace_0, IO_IS = trace_clk
PORT C405TRCEVENEXECUTIONSTATUS = "", DIR = O, VEC = [0:1], PERMIT = BASE_USER, DESC = 'Trace Execution Status Even', IO_IF = trace_0, IO_IS = exec_status_even
PORT C405TRCODDEXECUTIONSTATUS = "", DIR = O, VEC = [0:1], PERMIT = BASE_USER, DESC = 'Trace Execution Status Odd', IO_IF = trace_0, IO_IS = exec_status_odd
PORT C405TRCTRACESTATUS = "", DIR = O, VEC = [0:3], PERMIT = BASE_USER, DESC = 'Trace Status', IO_IF = trace_0, IO_IS = trace_status
PORT C405TRCTRIGGEREVENTOUT = "", DIR = O, PERMIT = BASE_USER, DESC = 'Trace Trigger Event Out', IO_IF = trace_0, IO_IS = trace_trigger_event_out
PORT C405TRCTRIGGEREVENTTYPE = "", DIR = O, VEC = [0:10]
PORT TRCC405TRACEDISABLE = "", DIR = I
PORT TRCC405TRIGGEREVENTIN = "", DIR = I, PERMIT = BASE_USER, DESC = 'Trace Trigger Event In', IO_IF = trace_0, IO_IS = trace_trigger_event_in

END

FINISH_SINGLE_MPD

START_SINGLE_MPD plbv46_opb_bridge_v1_01_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : plbv46_opb_bridge
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN plbv46_opb_bridge

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION STYLE = HDL
OPTION DESC = PLBV46 to OPB Bridge
OPTION LONG_DESC = PLBV46 to OPB bridge.
OPTION IP_GROUP = Bus and Bridge:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=SUPERSEDED, spartan3=SUPERSEDED, spartan3an=SUPERSEDED, spartan3a=SUPERSEDED, spartan3e=SUPERSEDED, spartan3adsp=SUPERSEDED, virtex4lx=SUPERSEDED, virtex4sx=SUPERSEDED, virtex4fx=SUPERSEDED, virtex5lx=SUPERSEDED, virtex5sx=SUPERSEDED, virtex5fx=SUPERSEDED, aspartan3e=SUPERSEDED, aspartan3a=SUPERSEDED, aspartan3adsp=SUPERSEDED, qvirtex4lx=SUPERSEDED, qvirtex4sx=SUPERSEDED, qvirtex4fx=SUPERSEDED, qrvirtex4lx=SUPERSEDED, qrvirtex4sx=SUPERSEDED, qrvirtex4fx=SUPERSEDED, spartan6t=SUPERSEDED, spartan6=SUPERSEDED, spartan6l=SUPERSEDED, qspartan6t=SUPERSEDED, qspartan6=SUPERSEDED, aspartan6t=SUPERSEDED, aspartan6=SUPERSEDED, virtex6lx=SUPERSEDED, virtex6sx=SUPERSEDED, virtex6hx=SUPERSEDED, virtex6cx=SUPERSEDED, virtex6llx=SUPERSEDED, virtex6lsx=SUPERSEDED, qspartan6l=SUPERSEDED, qrvirtex5=SUPERSEDED, qvirtex6lx=SUPERSEDED, qvirtex6sx=SUPERSEDED, qvirtex6fx=SUPERSEDED, qvirtex6tx=SUPERSEDED)
OPTION RUN_NGCBUILD = FALSE


## Bus Interfaces
BUS_INTERFACE BUS = SPLB, BUS_TYPE = SLAVE, BUS_STD = PLBV46
BUS_INTERFACE BUS = MOPB, BUS_TYPE = MASTER, BUS_STD = OPB

## Generics for VHDL or Parameters for Verilog
PARAMETER C_NUM_ADDR_RNG = 1, DT = INTEGER, RANGE = (1:4)
PARAMETER C_RNG0_BASEADDR = 0xffffffff, DT = std_logic_vector, ADDRESS = BASE, PAIR = C_RNG0_HIGHADDR, BUS = SPLB, BRIDGE_TO = MOPB, ISVALID = (C_NUM_ADDR_RNG>=1), ASSIGNMENT = REQUIRE
PARAMETER C_RNG0_HIGHADDR = 0x00000000, DT = std_logic_vector, ADDRESS = HIGH, PAIR = C_RNG0_BASEADDR, BUS = SPLB, BRIDGE_TO = MOPB, ISVALID = (C_NUM_ADDR_RNG>=1), ASSIGNMENT = REQUIRE
PARAMETER C_RNG1_BASEADDR = 0xffffffff, DT = std_logic_vector, ADDRESS = BASE, PAIR = C_RNG1_HIGHADDR, BUS = SPLB, BRIDGE_TO = MOPB, ISVALID = (C_NUM_ADDR_RNG>=2), ASSIGNMENT = REQUIRE
PARAMETER C_RNG1_HIGHADDR = 0x00000000, DT = std_logic_vector, ADDRESS = HIGH, PAIR = C_RNG1_BASEADDR, BUS = SPLB, BRIDGE_TO = MOPB, ISVALID = (C_NUM_ADDR_RNG>=2), ASSIGNMENT = REQUIRE
PARAMETER C_RNG2_BASEADDR = 0xffffffff, DT = std_logic_vector, ADDRESS = BASE, PAIR = C_RNG2_HIGHADDR, BUS = SPLB, BRIDGE_TO = MOPB, ISVALID = (C_NUM_ADDR_RNG>=3), ASSIGNMENT = REQUIRE
PARAMETER C_RNG2_HIGHADDR = 0x00000000, DT = std_logic_vector, ADDRESS = HIGH, PAIR = C_RNG2_BASEADDR, BUS = SPLB, BRIDGE_TO = MOPB, ISVALID = (C_NUM_ADDR_RNG>=3), ASSIGNMENT = REQUIRE
PARAMETER C_RNG3_BASEADDR = 0xffffffff, DT = std_logic_vector, ADDRESS = BASE, PAIR = C_RNG3_HIGHADDR, BUS = SPLB, BRIDGE_TO = MOPB, ISVALID = (C_NUM_ADDR_RNG>=4), ASSIGNMENT = REQUIRE
PARAMETER C_RNG3_HIGHADDR = 0x00000000, DT = std_logic_vector, ADDRESS = HIGH, PAIR = C_RNG3_BASEADDR, BUS = SPLB, BRIDGE_TO = MOPB, ISVALID = (C_NUM_ADDR_RNG>=4), ASSIGNMENT = REQUIRE
PARAMETER C_SPLB_P2P = 0, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_MID_WIDTH = 3, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_NUM_MASTERS = 8, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_DWIDTH = 32, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB, TYPE = NON_HDL
PARAMETER C_SPLB_AWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_BUS_CLOCK_PERIOD_RATIO = 1, DT = INTEGER, RANGE = (1:2), VALUES = (1= 1:1 ratio , 2= 1:2 plb to opb ratio )
PARAMETER C_FAMILY = virtex4, DT = STRING

## Ports
PORT SPLB_Clk = "", DIR = I, BUS = SPLB, SIGIS = CLK
PORT SPLB_Rst = SPLB_Rst, DIR = I, BUS = SPLB
PORT PLB_ABus = PLB_ABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB
PORT PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB
PORT PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB
PORT PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB
PORT PLB_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB_MID_WIDTH-1)], BUS = SPLB
PORT PLB_abort = PLB_abort, DIR = I, BUS = SPLB
PORT PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB
PORT PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB
PORT PLB_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB_DWIDTH/8)-1)], BUS = SPLB
PORT PLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB
PORT PLB_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB
PORT PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB
PORT PLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB
PORT PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB
PORT PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB
PORT PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB
PORT PLB_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB
PORT Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB
PORT Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB
PORT Sl_wait = Sl_wait, DIR = O, BUS = SPLB
PORT Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB
PORT Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB
PORT Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB
PORT Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB
PORT Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB
PORT Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB
PORT Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB
PORT Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB
PORT Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT OPB_Clk = "", DIR = I, BUS = MOPB
PORT OPB_Rst = OPB_Rst, DIR = I, BUS = MOPB
PORT Mn_request = M_request, DIR = O, BUS = MOPB
PORT Mn_busLock = M_busLock, DIR = O, BUS = MOPB
PORT Mn_select = M_select, DIR = O, BUS = MOPB
PORT Mn_RNW = M_RNW, DIR = O, BUS = MOPB
PORT Mn_BE = M_BE, DIR = O, VEC = [0:3], BUS = MOPB
PORT Mn_seqAddr = M_seqAddr, DIR = O, BUS = MOPB
PORT Mn_DBus = M_DBus, DIR = O, VEC = [0:31], BUS = MOPB
PORT Mn_ABus = M_ABus, DIR = O, VEC = [0:31], BUS = MOPB
PORT OPB_MGrant = OPB_MGrant, DIR = I, BUS = MOPB
PORT OPB_xferAck = OPB_xferAck, DIR = I, BUS = MOPB
PORT OPB_errAck = OPB_errAck, DIR = I, BUS = MOPB
PORT OPB_retry = OPB_retry, DIR = I, BUS = MOPB
PORT OPB_timeout = OPB_timeout, DIR = I, BUS = MOPB
PORT OPB_DBus = OPB_DBus, DIR = I, VEC = [0:31], BUS = MOPB

END

FINISH_SINGLE_MPD

START_SINGLE_MPD opb_plbv46_bridge_v1_01_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : opb_plbv46_bridge
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN opb_plbv46_bridge

## Peripheral Options
OPTION HDL = VHDL
OPTION STYLE = HDL
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION DESC = OPB to PLBV46 Bridge
OPTION LONG_DESC = OPB to PLBV46 bridge
OPTION IP_GROUP = Bus and Bridge:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=SUPERSEDED, spartan3=SUPERSEDED, spartan3an=SUPERSEDED, spartan3a=SUPERSEDED, spartan3e=SUPERSEDED, spartan3adsp=SUPERSEDED, virtex4lx=SUPERSEDED, virtex4sx=SUPERSEDED, virtex4fx=SUPERSEDED, virtex5lx=SUPERSEDED, virtex5sx=SUPERSEDED, virtex5fx=SUPERSEDED, aspartan3e=SUPERSEDED, aspartan3a=SUPERSEDED, aspartan3adsp=SUPERSEDED, qvirtex4lx=SUPERSEDED, qvirtex4sx=SUPERSEDED, qvirtex4fx=SUPERSEDED, qrvirtex4lx=SUPERSEDED, qrvirtex4sx=SUPERSEDED, qrvirtex4fx=SUPERSEDED, spartan6t=SUPERSEDED, spartan6=SUPERSEDED, spartan6l=SUPERSEDED, qspartan6t=SUPERSEDED, qspartan6=SUPERSEDED, aspartan6t=SUPERSEDED, aspartan6=SUPERSEDED, virtex6lx=SUPERSEDED, virtex6sx=SUPERSEDED, virtex6hx=SUPERSEDED, virtex6cx=SUPERSEDED, virtex6llx=SUPERSEDED, virtex6lsx=SUPERSEDED, qspartan6l=SUPERSEDED, qrvirtex5=SUPERSEDED, qvirtex6lx=SUPERSEDED, qvirtex6sx=SUPERSEDED, qvirtex6fx=SUPERSEDED, qvirtex6tx=SUPERSEDED)
OPTION RUN_NGCBUILD = FALSE


## Bus Interfaces
BUS_INTERFACE BUS = MPLB, BUS_TYPE = MASTER, BUS_STD = PLBV46
BUS_INTERFACE BUS = SOPB, BUS_TYPE = SLAVE, BUS_STD = OPB

## Generics for VHDL or Parameters for Verilog
PARAMETER C_NUM_ADDR_RNG = 1, DT = INTEGER, RANGE = (1:4)
PARAMETER C_RNG0_BASEADDR = 0xffffffff, DT = std_logic_vector(0 to 31), BUS = SOPB, ADDRESS = BASE, PAIR = C_RNG0_HIGHADDR, BRIDGE_TO = MPLB, ISVALID = (C_NUM_ADDR_RNG>=1), ASSIGNMENT = REQUIRE
PARAMETER C_RNG0_HIGHADDR = 0x00000000, DT = std_logic_vector(0 to 31), BUS = SOPB, ADDRESS = HIGH, PAIR = C_RNG0_BASEADDR, BRIDGE_TO = MPLB, ISVALID = (C_NUM_ADDR_RNG>=1), ASSIGNMENT = REQUIRE
PARAMETER C_RNG1_BASEADDR = 0xffffffff, DT = std_logic_vector(0 to 31), BUS = SOPB, ADDRESS = BASE, PAIR = C_RNG1_HIGHADDR, BRIDGE_TO = MPLB, ISVALID = (C_NUM_ADDR_RNG>=2), ASSIGNMENT = REQUIRE
PARAMETER C_RNG1_HIGHADDR = 0x00000000, DT = std_logic_vector(0 to 31), BUS = SOPB, ADDRESS = HIGH, PAIR = C_RNG1_BASEADDR, BRIDGE_TO = MPLB, ISVALID = (C_NUM_ADDR_RNG>=2), ASSIGNMENT = REQUIRE
PARAMETER C_RNG2_BASEADDR = 0xffffffff, DT = std_logic_vector(0 to 31), BUS = SOPB, ADDRESS = BASE, PAIR = C_RNG2_HIGHADDR, BRIDGE_TO = MPLB, ISVALID = (C_NUM_ADDR_RNG>=3), ASSIGNMENT = REQUIRE
PARAMETER C_RNG2_HIGHADDR = 0x00000000, DT = std_logic_vector(0 to 31), BUS = SOPB, ADDRESS = HIGH, PAIR = C_RNG2_BASEADDR, BRIDGE_TO = MPLB, ISVALID = (C_NUM_ADDR_RNG>=3), ASSIGNMENT = REQUIRE
PARAMETER C_RNG3_BASEADDR = 0xffffffff, DT = std_logic_vector(0 to 31), BUS = SOPB, ADDRESS = BASE, PAIR = C_RNG3_HIGHADDR, BRIDGE_TO = MPLB, ISVALID = (C_NUM_ADDR_RNG>=4), ASSIGNMENT = REQUIRE
PARAMETER C_RNG3_HIGHADDR = 0x00000000, DT = std_logic_vector(0 to 31), BUS = SOPB, ADDRESS = HIGH, PAIR = C_RNG3_BASEADDR, BRIDGE_TO = MPLB, ISVALID = (C_NUM_ADDR_RNG>=4), ASSIGNMENT = REQUIRE
PARAMETER C_BUS_CLOCK_PERIOD_RATIO = 1, DT = INTEGER, RANGE = (1:2)
PARAMETER C_PREFETCH_TIMEOUT = 10, DT = INTEGER, RANGE = (5:32)
PARAMETER C_MPLB_AWIDTH = 32, DT = INTEGER, BUS = MPLB, ASSIGNMENT = CONSTANT
PARAMETER C_MPLB_DWIDTH = 32, DT = INTEGER, BUS = MPLB
PARAMETER C_MPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = MPLB, ASSIGNMENT = CONSTANT
PARAMETER C_FAMILY = virtex4, DT = STRING

## Ports
PORT MPLB_Clk = "", DIR = I, SIGIS = CLK, BUS = MPLB
PORT MPLB_Rst = MPLB_Rst, DIR = I, SIGIS = RST, BUS = MPLB
PORT MD_Error = "", DIR = O
PORT M_request = M_request, DIR = O, BUS = MPLB
PORT M_priority = M_priority, DIR = O, VEC = [0:1], BUS = MPLB
PORT M_busLock = M_busLock, DIR = O, BUS = MPLB
PORT M_RNW = M_RNW, DIR = O, BUS = MPLB
PORT M_BE = M_BE, DIR = O, VEC = [0:((C_MPLB_DWIDTH/8)-1)], BUS = MPLB
PORT M_MSize = M_MSize, DIR = O, VEC = [0:1], BUS = MPLB
PORT M_size = M_size, DIR = O, VEC = [0:3], BUS = MPLB
PORT M_type = M_type, DIR = O, VEC = [0:2], BUS = MPLB
PORT M_ABus = M_ABus, DIR = O, VEC = [0:31], BUS = MPLB
PORT M_wrBurst = M_wrBurst, DIR = O, BUS = MPLB
PORT M_rdBurst = M_rdBurst, DIR = O, BUS = MPLB
PORT M_wrDBus = M_wrDBus, DIR = O, VEC = [0:(C_MPLB_DWIDTH-1)], BUS = MPLB
PORT PLB_MAddrAck = PLB_MAddrAck, DIR = I, BUS = MPLB
PORT PLB_MSSize = PLB_MSSize, DIR = I, VEC = [0:1], BUS = MPLB
PORT PLB_MRearbitrate = PLB_MRearbitrate, DIR = I, BUS = MPLB
PORT PLB_MTimeout = PLB_MTimeout, DIR = I, BUS = MPLB
PORT PLB_MRdErr = PLB_MRdErr, DIR = I, BUS = MPLB
PORT PLB_MWrErr = PLB_MWrErr, DIR = I, BUS = MPLB
PORT PLB_MRdDBus = PLB_MRdDBus, DIR = I, VEC = [0:(C_MPLB_DWIDTH-1)], BUS = MPLB
PORT PLB_MRdDAck = PLB_MRdDAck, DIR = I, BUS = MPLB
PORT PLB_MRdBTerm = PLB_MRdBTerm, DIR = I, BUS = MPLB
PORT PLB_MWrDAck = PLB_MWrDAck, DIR = I, BUS = MPLB
PORT PLB_MWrBTerm = PLB_MWrBTerm, DIR = I, BUS = MPLB
PORT M_TAttribute = M_TAttribute, DIR = O, VEC = [0:15], BUS = MPLB
PORT M_lockErr = M_lockErr, DIR = O, BUS = MPLB
PORT M_abort = M_abort, DIR = O, BUS = MPLB
PORT M_UABus = M_UABus, DIR = O, VEC = [0:31], BUS = MPLB
PORT PLB_MBusy = PLB_MBusy, DIR = I, BUS = MPLB
PORT PLB_MIRQ = PLB_MIRQ, DIR = I, BUS = MPLB
PORT PLB_MRdWdAddr = PLB_MRdWdAddr, DIR = I, VEC = [0:3], BUS = MPLB
PORT SOPB_rst = OPB_Rst, DIR = I, SIGIS = RST, BUS = SOPB
PORT SOPB_clk = "", DIR = I, SIGIS = CLK, BUS = SOPB
PORT OPB_Select = OPB_select, DIR = I, BUS = SOPB
PORT OPB_RNW = OPB_RNW, DIR = I, BUS = SOPB
PORT OPB_BE = OPB_BE, DIR = I, VEC = [0:3], BUS = SOPB
PORT OPB_seqAddr = OPB_seqAddr, DIR = I, BUS = SOPB
PORT OPB_DBus = OPB_DBus, DIR = I, VEC = [0:31], BUS = SOPB
PORT OPB_ABus = OPB_ABus, DIR = I, VEC = [0:31], BUS = SOPB
PORT Sl_xferAck = Sl_xferAck, DIR = O, BUS = SOPB
PORT Sl_errAck = Sl_errAck, DIR = O, BUS = SOPB
PORT Sl_retry = Sl_retry, DIR = O, BUS = SOPB
PORT Sl_ToutSup = Sl_toutSup, DIR = O, BUS = SOPB
PORT Sl_DBus = Sl_DBus, DIR = O, VEC = [0:31], BUS = SOPB

END

FINISH_SINGLE_MPD

START_SINGLE_MPD xps_uartlite_v1_01_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : xps_uartlite
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN xps_uartlite

## Peripheral Options
OPTION RUN_NGCBUILD = TRUE
OPTION IMP_NETLIST = TRUE
OPTION STYLE = HDL
OPTION HDL = VHDL
OPTION IPTYPE = PERIPHERAL
OPTION USAGE_LEVEL = BASE_USER
OPTION DESC = XPS UART (Lite)
OPTION LONG_DESC = Generic UART (Universal Asynchronous Receiver/Transmitter) for PLBV46 bus.
OPTION IP_GROUP = Communication Low-Speed:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=PRODUCTION, spartan3=PRODUCTION, spartan3an=PRODUCTION, spartan3a=PRODUCTION, spartan3e=PRODUCTION, spartan3adsp=PRODUCTION, virtex4lx=PRODUCTION, virtex4sx=PRODUCTION, virtex4fx=PRODUCTION, virtex5lx=PRODUCTION, virtex5sx=PRODUCTION, virtex5fx=PRODUCTION, aspartan3e=PRODUCTION, aspartan3a=PRODUCTION, aspartan3adsp=PRODUCTION, qvirtex4lx=PRODUCTION, qvirtex4sx=PRODUCTION, qvirtex4fx=PRODUCTION, qrvirtex4lx=PRODUCTION, qrvirtex4sx=PRODUCTION, qrvirtex4fx=PRODUCTION, spartan6t=PRODUCTION, spartan6=PRODUCTION, spartan6l=PRE_PRODUCTION, qspartan6t=PRODUCTION, qspartan6=PRODUCTION, aspartan6t=PRODUCTION, aspartan6=PRODUCTION, virtex6lx=PRODUCTION, virtex6sx=PRODUCTION, virtex6hx=PRODUCTION, virtex6cx=PRODUCTION, virtex6llx=PRE_PRODUCTION, virtex6lsx=PRE_PRODUCTION, qspartan6l=PRE_PRODUCTION, qrvirtex5=PRE_PRODUCTION, qvirtex6lx=PRE_PRODUCTION, qvirtex6sx=PRE_PRODUCTION, qvirtex6fx=PRE_PRODUCTION, qvirtex6tx=PRE_PRODUCTION)

IO_INTERFACE IO_IF = uart_0, IO_TYPE = XIL_UART_V1

## Bus Interfaces
BUS_INTERFACE BUS = SPLB, BUS_TYPE = SLAVE, BUS_STD = PLBV46

## Generics for VHDL or Parameters for Verilog
PARAMETER C_FAMILY = virtex5, DT = STRING
PARAMETER C_SPLB_CLK_FREQ_HZ = 100000000, DT = INTEGER, BUS = SPLB, IO_IS = clk_freq, CLK_PORT = SPLB_Clk, CLK_UNIT = HZ
PARAMETER C_BASEADDR = 0xffffffff, DT = std_logic_vector(0 to 31), BUS = SPLB, ADDRESS = BASE, PAIR = C_HIGHADDR, MIN_SIZE = 0x10, ASSIGNMENT = REQUIRE
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector(0 to 31), BUS = SPLB, ADDRESS = HIGH, PAIR = C_BASEADDR, ASSIGNMENT = REQUIRE
PARAMETER C_SPLB_AWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_DWIDTH = 32, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_P2P = 0, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_BAUDRATE = 9600, DT = INTEGER, DESC = Baudrate, PERMIT = BASE_USER, VALUES = (110= 110 , 300= 300 , 1200= 1200 , 2400= 2400 , 4800= 4800 , 9600= 9600 , 19200= 19200 , 38400= 38400 , 57600= 57600 , 115200= 115200 , 128000= 128000 , 230400= 230400 , 460800= 460800 , 921600= 921600 )
PARAMETER C_DATA_BITS = 8, DT = INTEGER, RANGE = (5:8), DESC = Num Data Bits, PERMIT = BASE_USER
PARAMETER C_USE_PARITY = 1, DT = INTEGER, RANGE = (0,1), DESC = Use Parity, PERMIT = BASE_USER, VALUES = (0=FALSE, 1=TRUE)
PARAMETER C_ODD_PARITY = 1, DT = INTEGER, RANGE = (0,1), DESC = Parity Type, PERMIT = BASE_USER, VALUES = (0= EVEN , 1= ODD )

## Ports
PORT SPLB_Clk = "", DIR = I, SIGIS = CLK, BUS = SPLB
PORT SPLB_Rst = SPLB_Rst, DIR = I, SIGIS = RST, BUS = SPLB
PORT PLB_ABus = PLB_ABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB
PORT PLB_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB_MID_WIDTH-1)], BUS = SPLB
PORT PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB
PORT PLB_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB_DWIDTH/8)-1)], BUS = SPLB
PORT PLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB
PORT PLB_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB
PORT PLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT PLB_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB
PORT PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB
PORT PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB
PORT PLB_abort = PLB_abort, DIR = I, BUS = SPLB
PORT PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB
PORT PLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB
PORT PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB
PORT PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB
PORT PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB
PORT PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB
PORT PLB_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB
PORT Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB
PORT Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB
PORT Sl_wait = Sl_wait, DIR = O, BUS = SPLB
PORT Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB
PORT Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB
PORT Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB
PORT Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB
PORT Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB
PORT Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB
PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB
PORT Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB
PORT Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT RX = "", DIR = I, PERMIT = BASE_USER, DESC = 'Serial Data In', IO_IF = uart_0, IO_IS = serial_in
PORT TX = "", DIR = O, PERMIT = BASE_USER, DESC = 'Serial Data Out', IO_IF = uart_0, IO_IS = serial_out
PORT Interrupt = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = EDGE_RISING, INTERRUPT_PRIORITY = LOW

END

FINISH_SINGLE_MPD

START_SINGLE_MPD plbv46_pci_v1_03_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : plbv46_pci
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN plbv46_pci

## Peripheral Options
OPTION ALERT = An example UCF is available for this core and must be modified for use in the system. Please refer to the EDK Getting Started guide for the location of this file.
OPTION HDL = vhdl
OPTION PAY_CORE = plbv46_pci_v1
OPTION STYLE = mix
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION IPLEVEL_DRC_PROC = check_iplevel_settings
OPTION SYSLEVEL_DRC_PROC = check_syslevel_settings
OPTION PLATGEN_SYSLEVEL_UPDATE_PROC = generate_corelevel_ucf
OPTION USAGE_LEVEL = BASE_USER
OPTION DESC = PLBv46 IP Interface (IPIF) to LogicCORE PCI32 Bridge
OPTION LONG_DESC = Bridge between the PLBv46 IPIF and the Xilinx LogiCORE PCI32 Interface v3.0 core
OPTION IP_GROUP = PCI:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (spartan3=PRODUCTION, spartan3an=PRE_PRODUCTION, spartan3a=PRE_PRODUCTION, spartan3e=PRE_PRODUCTION, spartan3adsp=PRE_PRODUCTION, virtex4lx=PRODUCTION, virtex4sx=PRODUCTION, virtex4fx=PRODUCTION, virtex5lx=PRODUCTION, virtex5sx=PRODUCTION, virtex5fx=PRODUCTION, qrvirtex5=PRE_PRODUCTION)
OPTION RUN_NGCBUILD = TRUE

IO_INTERFACE IO_IF = pci32_0, IO_TYPE = XIL_PCI32_V1

## Bus Interfaces
BUS_INTERFACE BUS = MPLB, BUS_STD = PLBV46, BUS_TYPE = MASTER, GENERATE_BURSTS = TRUE
BUS_INTERFACE BUS = SPLB, BUS_STD = PLBV46, BUS_TYPE = SLAVE

## Generics for VHDL or Parameters for Verilog
PARAMETER C_FAMILY = virtex4, DT = STRING
PARAMETER C_SPLB_AWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_DWIDTH = 32, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB, TYPE = NON_HDL
PARAMETER C_SPLB_MID_WIDTH = 3, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_NUM_MASTERS = 8, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SPLB
PARAMETER C_MPLB_AWIDTH = 32, DT = INTEGER, BUS = MPLB, ASSIGNMENT = CONSTANT
PARAMETER C_MPLB_DWIDTH = 32, DT = INTEGER, BUS = MPLB
PARAMETER C_MPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = MPLB, TYPE = NON_HDL
PARAMETER C_MPLB_SMALLEST_SLAVE = 32, DT = INTEGER, BUS = MPLB
PARAMETER C_TRIG_IPIF_WRBURST_OCC_LEVEL = 8, DT = INTEGER, IO_IF = pci32_0, IO_IS = C_TRIG_IPIF_WRBURST_OCC_LEVEL
PARAMETER C_DEV_DPHASE_TIMEOUT = 255, DT = INTEGER
PARAMETER C_INCLUDE_BAROFFSET_REG = 0, DT = INTEGER, RANGE = (0:1), IO_IF = pci32_0, IO_IS = C_INCLUDE_BAROFFSET_REG
PARAMETER C_INCLUDE_DEVNUM_REG = 0, DT = INTEGER, RANGE = (0:1), IO_IF = pci32_0, IO_IS = C_INCLUDE_DEVNUM_REG
PARAMETER C_NUM_IDELAYCTRL = 2, DT = INTEGER, RANGE = (2:6), IO_IF = pci32_0, IO_IS = C_NUM_IDELAYCTRL
PARAMETER C_IDELAYCTRL_LOC = NOT_SET, DT = STRING, IO_IF = pci32_0, IO_IS = C_IDELAYCTRL_LOC
PARAMETER C_INCLUDE_GNT_DELAY = 0, DT = INTEGER, RANGE = (0:1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_include_gnt_delay
PARAMETER C_INCLUDE_INTR_A_BUF = 1, DT = INTEGER, RANGE = (0:1), IO_IF = pci32_0, IO_IS = C_INCLUDE_INTR_A_BUF
PARAMETER C_INCLUDE_REQ_N_BUF = 1, DT = INTEGER, RANGE = (0:1), IO_IF = pci32_0, IO_IS = C_INCLUDE_REQ_N_BUF
PARAMETER C_TRIG_PCI_DATA_XFER_OCC_LEVEL = 8, DT = INTEGER, IO_IF = pci32_0, IO_IS = C_TRIG_PCI_DATA_XFER_OCC_LEVEL
PARAMETER C_PCI_ABUS_WIDTH = 32, DT = INTEGER, ASSIGNMENT = CONSTANT
PARAMETER C_PCI_DBUS_WIDTH = 32, DT = INTEGER, ASSIGNMENT = CONSTANT
PARAMETER C_IPIF2PCI_FIFO_ABUS_WIDTH = 9, DT = INTEGER, RANGE = (7:11), IO_IF = pci32_0, IO_IS = C_IPIF2PCI_FIFO_ABUS_WIDTH
PARAMETER C_PCI2IPIF_FIFO_ABUS_WIDTH = 9, DT = INTEGER, RANGE = (7:11), IO_IF = pci32_0, IO_IS = C_PCI2IPIF_FIFO_ABUS_WIDTH
PARAMETER C_NUM_PCI_RETRIES_IN_WRITES = 3, DT = INTEGER, IO_IF = pci32_0, IO_IS = C_NUM_PCI_RETRIES_IN_WRITES
PARAMETER C_NUM_PCI_PRDS_BETWN_RETRIES_IN_WRITES = 6, DT = INTEGER, IO_IF = pci32_0, IO_IS = C_NUM_PCI_PRDS_BETWN_RETRIES_IN_WRITES
PARAMETER C_PCI_INIT_RD_BURST_LENGTH = 16, DT = INTEGER, RANGE = (2:128)
PARAMETER C_PCI_DISCARD_TIMER = 10, DT = INTEGER, RANGE = (10,15)
PARAMETER C_PLB_DISCARD_TIMER = 10, DT = INTEGER, RANGE = (10,15)
PARAMETER C_IPIFBAR_NUM = 6, DT = INTEGER, RANGE = (1:6), IO_IF = pci32_0, IO_IS = C_IPIFBAR_NUM
PARAMETER C_IPIFBAR_0 = 0xffffffff, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_IPIF_HIGHADDR_0, MIN_SIZE = 0x10, ADDR_TYPE = BRIDGE, ASSIGNMENT = REQUIRE, IO_IF = pci32_0, IO_IS = C_IPIFBAR_0, DESC = PCI Base Address, ISVALID = (C_IPIFBAR_NUM>=1)
PARAMETER C_IPIF_HIGHADDR_0 = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_IPIFBAR_0, ASSIGNMENT = REQUIRE, IO_IF = pci32_0, IO_IS = C_IPIF_HIGHADDR_0, DESC = PCI High Address, ISVALID = (C_IPIFBAR_NUM>=1)
PARAMETER C_IPIFBAR2PCIBAR_0 = 0x00000000, DT = std_logic_vector, IO_IF = pci32_0, IO_IS = C_IPIFBAR2PCIBAR_0
PARAMETER C_IPIF_SPACETYPE_0 = 1, DT = integer, RANGE = (0:1), IO_IF = pci32_0, IO_IS = C_IPIF_SPACETYPE_0
PARAMETER C_IPIFBAR_1 = 0xffffffff, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_IPIF_HIGHADDR_1, MIN_SIZE = 0x10, ADDR_TYPE = BRIDGE, IO_IF = pci32_0, IO_IS = C_IPIFBAR_1, ISVALID = (C_IPIFBAR_NUM>=2)
PARAMETER C_IPIF_HIGHADDR_1 = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_IPIFBAR_1, IO_IF = pci32_0, IO_IS = C_IPIF_HIGHADDR_1, ISVALID = (C_IPIFBAR_NUM>=2)
PARAMETER C_IPIFBAR2PCIBAR_1 = 0x00000000, DT = std_logic_vector, IO_IF = pci32_0, IO_IS = C_IPIFBAR2PCIBAR_1
PARAMETER C_IPIF_SPACETYPE_1 = 1, DT = integer, RANGE = (0:1), IO_IF = pci32_0, IO_IS = C_IPIF_SPACETYPE_1
PARAMETER C_IPIFBAR_2 = 0xffffffff, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_IPIF_HIGHADDR_2, MIN_SIZE = 0x10, ADDR_TYPE = BRIDGE, IO_IF = pci32_0, IO_IS = C_IPIFBAR_2, ISVALID = (C_IPIFBAR_NUM>=3)
PARAMETER C_IPIF_HIGHADDR_2 = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_IPIFBAR_2, IO_IF = pci32_0, IO_IS = C_IPIF_HIGHADDR_2, ISVALID = (C_IPIFBAR_NUM>=3)
PARAMETER C_IPIFBAR2PCIBAR_2 = 0x00000000, DT = std_logic_vector, IO_IF = pci32_0, IO_IS = C_IPIFBAR2PCIBAR_2
PARAMETER C_IPIF_SPACETYPE_2 = 1, DT = integer, RANGE = (0:1), IO_IF = pci32_0, IO_IS = C_IPIF_SPACETYPE_2
PARAMETER C_IPIFBAR_3 = 0xffffffff, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_IPIF_HIGHADDR_3, MIN_SIZE = 0x10, ADDR_TYPE = BRIDGE, IO_IF = pci32_0, IO_IS = C_IPIFBAR_3, ISVALID = (C_IPIFBAR_NUM>=4)
PARAMETER C_IPIF_HIGHADDR_3 = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_IPIFBAR_3, IO_IF = pci32_0, IO_IS = C_IPIF_HIGHADDR_3, ISVALID = (C_IPIFBAR_NUM>=4)
PARAMETER C_IPIFBAR2PCIBAR_3 = 0x00000000, DT = std_logic_vector, IO_IF = pci32_0, IO_IS = C_IPIFBAR2PCIBAR_3
PARAMETER C_IPIF_SPACETYPE_3 = 1, DT = integer, RANGE = (0:1), IO_IF = pci32_0, IO_IS = C_IPIF_SPACETYPE_3
PARAMETER C_IPIFBAR_4 = 0xffffffff, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_IPIF_HIGHADDR_4, MIN_SIZE = 0x10, ADDR_TYPE = BRIDGE, IO_IF = pci32_0, IO_IS = C_IPIFBAR_4, ISVALID = (C_IPIFBAR_NUM>=5)
PARAMETER C_IPIF_HIGHADDR_4 = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_IPIFBAR_4, IO_IF = pci32_0, IO_IS = C_IPIF_HIGHADDR_4, ISVALID = (C_IPIFBAR_NUM>=5)
PARAMETER C_IPIFBAR2PCIBAR_4 = 0x00000000, DT = std_logic_vector, IO_IF = pci32_0, IO_IS = C_IPIFBAR2PCIBAR_4
PARAMETER C_IPIF_SPACETYPE_4 = 1, DT = integer, RANGE = (0:1), IO_IF = pci32_0, IO_IS = C_IPIF_SPACETYPE_4
PARAMETER C_IPIFBAR_5 = 0xffffffff, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_IPIF_HIGHADDR_5, MIN_SIZE = 0x10, ADDR_TYPE = BRIDGE, IO_IF = pci32_0, IO_IS = C_IPIFBAR_5, ISVALID = (C_IPIFBAR_NUM>=6)
PARAMETER C_IPIF_HIGHADDR_5 = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_IPIFBAR_5, IO_IF = pci32_0, IO_IS = C_IPIF_HIGHADDR_5, ISVALID = (C_IPIFBAR_NUM>=6)
PARAMETER C_IPIFBAR2PCIBAR_5 = 0x00000000, DT = std_logic_vector, IO_IF = pci32_0, IO_IS = C_IPIFBAR2PCIBAR_5
PARAMETER C_IPIF_SPACETYPE_5 = 1, DT = integer, RANGE = (0:1), IO_IF = pci32_0, IO_IS = C_IPIF_SPACETYPE_5
PARAMETER C_PCIBAR_NUM = 3, DT = INTEGER, RANGE = (1:3), IO_IF = pci32_0, IO_IS = C_PCIBAR_NUM
PARAMETER C_PCIBAR2IPIFBAR_0 = 0x00000000, DT = std_logic_vector, IO_IF = pci32_0, IO_IS = C_PCIBAR2IPIFBAR_0
PARAMETER C_PCIBAR_LEN_0 = 16, DT = INTEGER, RANGE = (5:30), IO_IF = pci32_0, IO_IS = C_PCIBAR_LEN_0
PARAMETER C_PCIBAR2IPIFBAR_1 = 0x00000000, DT = std_logic_vector, IO_IF = pci32_0, IO_IS = C_PCIBAR2IPIFBAR_1
PARAMETER C_PCIBAR_LEN_1 = 16, DT = INTEGER, RANGE = (5:30), IO_IF = pci32_0, IO_IS = C_PCIBAR_LEN_1
PARAMETER C_PCIBAR2IPIFBAR_2 = 0x00000000, DT = std_logic_vector, IO_IF = pci32_0, IO_IS = C_PCIBAR2IPIFBAR_2
PARAMETER C_PCIBAR_LEN_2 = 16, DT = INTEGER, RANGE = (5:30), IO_IF = pci32_0, IO_IS = C_PCIBAR_LEN_2
PARAMETER C_BASEADDR = 0xffffffff, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, MIN_SIZE = 0x200, ADDR_TYPE = REGISTER, ASSIGNMENT = REQUIRE, IO_IF = pci32_0, IO_IS = C_BASEADDR
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, ASSIGNMENT = REQUIRE, IO_IF = pci32_0, IO_IS = C_HIGHADDR
PARAMETER C_DEVICE_ID = 0x0000, DT = std_logic_vector, IO_IF = pci32_0, IO_IS = C_DEVICE_ID
PARAMETER C_VENDOR_ID = 0x0000, DT = std_logic_vector, IO_IF = pci32_0, IO_IS = C_VENDOR_ID
PARAMETER C_CLASS_CODE = 0x000000, DT = std_logic_vector, IO_IF = pci32_0, IO_IS = C_CLASS_CODE
PARAMETER C_REV_ID = 0x00, DT = std_logic_vector, IO_IF = pci32_0, IO_IS = C_REV_ID
PARAMETER C_SUBSYSTEM_ID = 0x0000, DT = std_logic_vector, IO_IF = pci32_0, IO_IS = C_SUBSYSTEM_ID
PARAMETER C_SUBSYSTEM_VENDOR_ID = 0x0000, DT = std_logic_vector, IO_IF = pci32_0, IO_IS = C_SUBSYSTEM_VENDOR_ID
PARAMETER C_MAX_LAT = 0x0F, DT = std_logic_vector, IO_IF = pci32_0, IO_IS = C_MAX_LAT
PARAMETER C_MIN_GNT = 0x04, DT = std_logic_vector, IO_IF = pci32_0, IO_IS = C_MIN_GNT
PARAMETER C_INCLUDE_PCI_CONFIG = 1, DT = INTEGER, RANGE = (0:1), IO_IF = pci32_0, IO_IS = C_INCLUDE_PCI_CONFIG
PARAMETER C_NUM_IDSEL = 8, DT = INTEGER, RANGE = (1:16), IO_IF = pci32_0, IO_IS = C_NUM_IDSEL
PARAMETER C_BRIDGE_IDSEL_ADDR_BIT = 16, DT = INTEGER, RANGE = (16:C_NUM_IDSEL+15), IO_IF = pci32_0, IO_IS = C_BRIDGE_IDSEL_ADDR_BIT

## Ports
PORT SPLB_Clk = "", DIR = I, SIGIS = CLK, BUS = SPLB
PORT SPLB_Rst = SPLB_Rst, DIR = I, BUS = SPLB
PORT PLB_Abort = PLB_Abort, DIR = I, BUS = SPLB
PORT PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB
PORT PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB
PORT PLB_ABus = PLB_ABus, DIR = I, VEC = [0:(C_SPLB_AWIDTH-1)], BUS = SPLB
PORT PLB_UABus = PLB_UABus, DIR = I, VEC = [0:(C_SPLB_AWIDTH-1)], BUS = SPLB
PORT PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB
PORT PLB_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB_DWIDTH/8)-1)], BUS = SPLB
PORT PLB_Type = PLB_Type, DIR = I, VEC = [0:2], BUS = SPLB
PORT PLB_Size = PLB_Size, DIR = I, VEC = [0:3], BUS = SPLB
PORT PLB_MasterID = PLB_MasterID, DIR = I, VEC = [0:(C_SPLB_MID_WIDTH-1)], BUS = SPLB
PORT PLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_BusLock = PLB_BusLock, DIR = I, BUS = SPLB
PORT PLB_LockErr = PLB_LockErr, DIR = I, BUS = SPLB
PORT PLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB
PORT PLB_RdBurst = PLB_RdBurst, DIR = I, BUS = SPLB
PORT PLB_WrBurst = PLB_WrBurst, DIR = I, BUS = SPLB
PORT PLB_WrDBus = PLB_WrDBus, DIR = I, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT PLB_RdPrim = PLB_RdPrim, DIR = I, BUS = SPLB
PORT PLB_WrPrim = PLB_WrPrim, DIR = I, BUS = SPLB
PORT PLB_RdPendPri = PLB_RdPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_WrPendPri = PLB_WrPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_RdPendReq = PLB_RdPendReq, DIR = I, BUS = SPLB
PORT PLB_WrPendReq = PLB_WrPendReq, DIR = I, BUS = SPLB
PORT PLB_ReqPri = PLB_ReqPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT Sl_AddrAck = Sl_AddrAck, DIR = O, BUS = SPLB
PORT Sl_Wait = Sl_Wait, DIR = O, BUS = SPLB
PORT Sl_Rearbitrate = Sl_Rearbitrate, DIR = O, BUS = SPLB
PORT Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB
PORT Sl_WrDAck = Sl_WrDAck, DIR = O, BUS = SPLB
PORT Sl_WrComp = Sl_WrComp, DIR = O, BUS = SPLB
PORT Sl_WrBTerm = Sl_WrBTerm, DIR = O, BUS = SPLB
PORT Sl_RdDBus = Sl_RdDBus, DIR = O, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT Sl_RdDAck = Sl_RdDAck, DIR = O, BUS = SPLB
PORT Sl_RdComp = Sl_RdComp, DIR = O, BUS = SPLB
PORT Sl_RdBTerm = Sl_RdBTerm, DIR = O, BUS = SPLB
PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB
PORT Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT MPLB_Clk = "", DIR = I, SIGIS = CLK, BUS = MPLB
PORT MPLB_Rst = MPLB_Rst, DIR = I, BUS = MPLB
PORT M_Request = M_Request, DIR = O, BUS = MPLB
PORT M_Abort = M_Abort, DIR = O, BUS = MPLB
PORT M_Priority = M_Priority, DIR = O, VEC = [0:1], BUS = MPLB
PORT M_Buslock = M_BusLock, DIR = O, BUS = MPLB
PORT M_LockErr = M_LockErr, DIR = O, BUS = MPLB
PORT M_TAttribute = M_TAttribute, DIR = O, VEC = [0:15], BUS = MPLB
PORT M_Type = M_Type, DIR = O, VEC = [0:2], BUS = MPLB
PORT M_BE = M_BE, DIR = O, VEC = [0:((C_MPLB_DWIDTH/8)-1)], BUS = MPLB
PORT M_RNW = M_RNW, DIR = O, BUS = MPLB
PORT M_UABus = M_UABus, DIR = O, VEC = [0:(C_MPLB_AWIDTH-1)], BUS = MPLB
PORT M_ABus = M_ABus, DIR = O, VEC = [0:(C_MPLB_AWIDTH-1)], BUS = MPLB
PORT M_MSize = M_MSize, DIR = O, VEC = [0:1], BUS = MPLB
PORT M_size = M_size, DIR = O, VEC = [0:3], BUS = MPLB
PORT M_WrBurst = M_WrBurst, DIR = O, BUS = MPLB
PORT M_RdBurst = M_RdBurst, DIR = O, BUS = MPLB
PORT M_WrDBus = M_WrDBus, DIR = O, VEC = [0:(C_MPLB_DWIDTH-1)], BUS = MPLB
PORT PLB_MAddrAck = PLB_MAddrAck, DIR = I, BUS = MPLB
PORT PLB_MSSize = PLB_MSSize, DIR = I, VEC = [0:1], BUS = MPLB
PORT PLB_MRearbitrate = PLB_MRearbitrate, DIR = I, BUS = MPLB
PORT PLB_MTimeout = PLB_MTimeout, DIR = I, BUS = MPLB
PORT PLB_MWrDAck = PLB_MWrDAck, DIR = I, BUS = MPLB
PORT PLB_MWrBTerm = PLB_MWrBTerm, DIR = I, BUS = MPLB
PORT PLB_MRdDBus = PLB_MRdDBus, DIR = I, VEC = [0:(C_MPLB_DWIDTH-1)], BUS = MPLB
PORT PLB_MRdWdAddr = PLB_MRdWdAddr, DIR = I, VEC = [0:3], BUS = MPLB
PORT PLB_MRdDAck = PLB_MRdDAck, DIR = I, BUS = MPLB
PORT PLB_MRdBTerm = PLB_MRdBTerm, DIR = I, BUS = MPLB
PORT PLB_MBusy = PLB_MBusy, DIR = I, BUS = MPLB
PORT PLB_MRdErr = PLB_MRdErr, DIR = I, BUS = MPLB
PORT PLB_MWrErr = PLB_MWrErr, DIR = I, BUS = MPLB
PORT PLB_MIRQ = PLB_MIRQ, DIR = I, BUS = MPLB
PORT AD = "", DIR = IO, VEC = [(C_PCI_DBUS_WIDTH-1):0], IOB_STATE = buf, THREE_STATE = false, PERMIT = BASE_USER, IO_IF = pci32_0, IO_IS = AD
PORT CBE = "", DIR = IO, VEC = [((C_PCI_DBUS_WIDTH/8)-1):0], IOB_STATE = buf, THREE_STATE = false, PERMIT = BASE_USER, IO_IF = pci32_0, IO_IS = CBE
PORT PAR = "", DIR = IO, IOB_STATE = buf, THREE_STATE = false, PERMIT = BASE_USER, IO_IF = pci32_0, IO_IS = PAR
PORT FRAME_N = "", DIR = IO, IOB_STATE = buf, THREE_STATE = false, PERMIT = BASE_USER, IO_IF = pci32_0, IO_IS = FRAME_N
PORT TRDY_N = "", DIR = IO, IOB_STATE = buf, THREE_STATE = false, PERMIT = BASE_USER, IO_IF = pci32_0, IO_IS = TRDY_N
PORT IRDY_N = "", DIR = IO, IOB_STATE = buf, THREE_STATE = false, PERMIT = BASE_USER, IO_IF = pci32_0, IO_IS = IRDY_N
PORT STOP_N = "", DIR = IO, IOB_STATE = buf, THREE_STATE = false, PERMIT = BASE_USER, IO_IF = pci32_0, IO_IS = STOP_N
PORT DEVSEL_N = "", DIR = IO, IOB_STATE = buf, THREE_STATE = false, PERMIT = BASE_USER, IO_IF = pci32_0, IO_IS = DEVSEL_N
PORT IDSEL = "", DIR = I, PERMIT = BASE_USER, IO_IF = pci32_0, IO_IS = IDSEL
PORT INTR_A = "", DIR = O, IOB_STATE = buf, PERMIT = BASE_USER, IO_IF = pci32_0, IO_IS = INTR_A
PORT PERR_N = "", DIR = IO, IOB_STATE = buf, THREE_STATE = false, PERMIT = BASE_USER, IO_IF = pci32_0, IO_IS = PERR_N
PORT SERR_N = "", DIR = IO, IOB_STATE = buf, THREE_STATE = false, PERMIT = BASE_USER, IO_IF = pci32_0, IO_IS = SERR_N
PORT REQ_N = "", DIR = O, IOB_STATE = buf, PERMIT = BASE_USER, IO_IF = pci32_0, IO_IS = REQ_N
PORT GNT_N = "", DIR = I, PERMIT = BASE_USER, IO_IF = pci32_0, IO_IS = GNT_N
PORT RST_N = "", DIR = I, PERMIT = BASE_USER, IO_IF = pci32_0, IO_IS = RST_N
PORT PCLK = "", DIR = I, SIGIS = CLK, PERMIT = BASE_USER, IO_IF = pci32_0, IO_IS = PCLK
PORT RCLK = "", DIR = I, SIGIS = CLK
PORT Bus2PCI_INTR = "", DIR = I
PORT INTR_A_int = "", DIR = O, PERMIT = BASE_USER, IO_IF = pci32_0, IO_IS = INTR_A_int
PORT REQ_N_toArb = "", DIR = O, PERMIT = BASE_USER, IO_IF = pci32_0, IO_IS = REQ_N_toArb
PORT FRAME_I = "", DIR = O, PERMIT = BASE_USER, IO_IF = pci32_0, IO_IS = FRAME_I
PORT IRDY_I = "", DIR = O, PERMIT = BASE_USER, IO_IF = pci32_0, IO_IS = IRDY_I
PORT PCI_monitor = "", DIR = O, VEC = [0:(12 + C_PCI_DBUS_WIDTH + C_PCI_DBUS_WIDTH/8- 1)]
PORT IP2INTC_Irpt = "", DIR = O, SIGIS = INTERRUPT, LEVEL = HIGH, INTERRUPT_PRIORITY = LOW

END

FINISH_SINGLE_MPD

START_SINGLE_MPD xps_bram_if_cntlr_v1_00_b 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : xps_bram_if_cntlr
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN xps_bram_if_cntlr

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION HDL = VHDL
OPTION IMP_NETLIST = TRUE
OPTION SPECIAL = BRAM_CNTLR
OPTION USAGE_LEVEL = BASE_USER
OPTION SYSLEVEL_DRC_PROC = check_syslevel_settings
OPTION DESC = XPS BRAM Controller
OPTION LONG_DESC = Attaches BRAM to the PLBV46
OPTION IP_GROUP = Memory and Memory Controller:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=PRODUCTION, spartan3=PRODUCTION, spartan3an=PRODUCTION, spartan3a=PRODUCTION, spartan3e=PRODUCTION, spartan3adsp=PRODUCTION, virtex4lx=PRODUCTION, virtex4sx=PRODUCTION, virtex4fx=PRODUCTION, virtex5lx=PRODUCTION, virtex5sx=PRODUCTION, virtex5fx=PRODUCTION, aspartan3e=PRODUCTION, aspartan3a=PRODUCTION, aspartan3adsp=PRODUCTION, qvirtex4lx=PRODUCTION, qvirtex4sx=PRODUCTION, qvirtex4fx=PRODUCTION, qrvirtex4lx=PRODUCTION, qrvirtex4sx=PRODUCTION, qrvirtex4fx=PRODUCTION, spartan6t=PRODUCTION, spartan6=PRODUCTION, spartan6l=PRE_PRODUCTION, qspartan6t=PRODUCTION, qspartan6=PRODUCTION, aspartan6t=PRODUCTION, aspartan6=PRODUCTION, virtex6lx=PRODUCTION, virtex6sx=PRODUCTION, virtex6hx=PRODUCTION, virtex6cx=PRODUCTION, virtex6llx=PRE_PRODUCTION, virtex6lsx=PRE_PRODUCTION, qspartan6l=PRE_PRODUCTION, qrvirtex5=PRE_PRODUCTION, qvirtex6lx=PRE_PRODUCTION, qvirtex6sx=PRE_PRODUCTION, qvirtex6fx=PRE_PRODUCTION, qvirtex6tx=PRE_PRODUCTION)
OPTION RUN_NGCBUILD = FALSE
OPTION STYLE = HDL
OPTION ADDR_SLICE = 29


## Bus Interfaces
BUS_INTERFACE BUS = SPLB, BUS_STD = PLBV46, BUS_TYPE = SLAVE
BUS_INTERFACE BUS = PORTA, BUS_STD = XIL_BRAM, BUS_TYPE = INITIATOR

## Generics for VHDL or Parameters for Verilog
PARAMETER C_BASEADDR = 0xffffffff, DT = std_logic_vector, BUS = SPLB, CACHEABLE = TRUE, ADDR_TYPE = MEMORY, ASSIGNMENT = REQUIRE
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = SPLB, ASSIGNMENT = REQUIRE
PARAMETER C_SPLB_NATIVE_DWIDTH = 32, DT = integer, BUS = SPLB, ASSIGNMENT = REQUIRE
PARAMETER C_SPLB_AWIDTH = 32, DT = integer, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_DWIDTH = 32, DT = integer, BUS = SPLB
PARAMETER C_SPLB_NUM_MASTERS = 2, DT = integer, BUS = SPLB
PARAMETER C_SPLB_MID_WIDTH = 1, DT = integer, BUS = SPLB
PARAMETER C_SPLB_SUPPORT_BURSTS = 1, DT = integer, BUS = SPLB
PARAMETER C_SPLB_P2P = 0, DT = integer, BUS = SPLB
PARAMETER C_SPLB_SMALLEST_MASTER = 32, DT = integer, BUS = SPLB
PARAMETER C_FAMILY = virtex5, DT = string

## Ports
PORT SPLB_Clk = "", DIR = I, SIGIS = CLK, BUS = SPLB
PORT SPLB_Rst = SPLB_Rst, DIR = I, SIGIS = RST, BUS = SPLB
PORT PLB_ABus = PLB_ABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB
PORT PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB
PORT PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB
PORT PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB
PORT PLB_masterID = PLB_masterID, DIR = I, VEC = [0:C_SPLB_MID_WIDTH-1], BUS = SPLB
PORT PLB_abort = PLB_abort, DIR = I, BUS = SPLB
PORT PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB
PORT PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB
PORT PLB_BE = PLB_BE, DIR = I, VEC = [0:(C_SPLB_DWIDTH/8)-1], BUS = SPLB
PORT PLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB
PORT PLB_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB
PORT PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB
PORT PLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:C_SPLB_DWIDTH-1], BUS = SPLB
PORT PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB
PORT PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB
PORT PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB
PORT PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB
PORT PLB_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB
PORT Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB
PORT Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB
PORT Sl_wait = Sl_wait, DIR = O, BUS = SPLB
PORT Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB
PORT Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB
PORT Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB
PORT Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB
PORT Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:C_SPLB_DWIDTH-1], BUS = SPLB
PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB
PORT Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB
PORT Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB
PORT Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB
PORT Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:C_SPLB_NUM_MASTERS-1], BUS = SPLB
PORT Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:C_SPLB_NUM_MASTERS-1], BUS = SPLB
PORT Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:C_SPLB_NUM_MASTERS-1], BUS = SPLB
PORT Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:C_SPLB_NUM_MASTERS-1], BUS = SPLB
PORT BRAM_Rst = BRAM_Rst, DIR = O, BUS = PORTA
PORT BRAM_Clk = BRAM_Clk, DIR = O, BUS = PORTA
PORT BRAM_EN = BRAM_EN, DIR = O, BUS = PORTA
PORT BRAM_WEN = BRAM_WEN, DIR = O, VEC = [0:(C_SPLB_NATIVE_DWIDTH/8)-1], BUS = PORTA
PORT BRAM_Addr = BRAM_Addr, DIR = O, VEC = [0:C_SPLB_AWIDTH-1], BUS = PORTA
PORT BRAM_Din = BRAM_Din, DIR = I, VEC = [0:C_SPLB_NATIVE_DWIDTH-1], BUS = PORTA
PORT BRAM_Dout = BRAM_Dout, DIR = O, VEC = [0:C_SPLB_NATIVE_DWIDTH-1], BUS = PORTA

END

FINISH_SINGLE_MPD

START_SINGLE_MPD xps_ll_fifo_v1_02_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : xps_ll_fifo
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN xps_ll_fifo

## Peripheral Options
OPTION RUN_NGCBUILD = TRUE
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION DESC = XPS LocalLink FIFO
OPTION IP_GROUP = Communication High-Speed:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=PRODUCTION, spartan3=PRODUCTION, spartan3an=PRODUCTION, spartan3a=PRODUCTION, spartan3e=PRODUCTION, spartan3adsp=PRODUCTION, virtex4lx=PRODUCTION, virtex4sx=PRODUCTION, virtex4fx=PRODUCTION, virtex5lx=PRODUCTION, virtex5sx=PRODUCTION, virtex5fx=PRODUCTION, aspartan3e=PRODUCTION, aspartan3a=PRODUCTION, aspartan3adsp=PRODUCTION, qvirtex4lx=PRODUCTION, qvirtex4sx=PRODUCTION, qvirtex4fx=PRODUCTION, qrvirtex4lx=PRODUCTION, qrvirtex4sx=PRODUCTION, qrvirtex4fx=PRODUCTION, spartan6t=PRODUCTION, spartan6=PRODUCTION, spartan6l=PRE_PRODUCTION, qspartan6t=PRODUCTION, qspartan6=PRODUCTION, aspartan6t=PRODUCTION, aspartan6=PRODUCTION, virtex6lx=PRODUCTION, virtex6sx=PRODUCTION, virtex6hx=PRODUCTION, virtex6cx=PRODUCTION, virtex6llx=PRE_PRODUCTION, virtex6lsx=PRE_PRODUCTION, qspartan6l=PRE_PRODUCTION, qvirtex6lx=PRE_PRODUCTION, qvirtex6sx=PRE_PRODUCTION, qvirtex6fx=PRE_PRODUCTION, qvirtex6tx=PRE_PRODUCTION)
OPTION STYLE = HDL


## Bus Interfaces
BUS_INTERFACE BUS = SPLB, BUS_TYPE = SLAVE, BUS_STD = PLBV46
BUS_INTERFACE BUS = LLINK, BUS_STD = XIL_LL_DMA, BUS_TYPE = TARGET

## Generics for VHDL or Parameters for Verilog
PARAMETER C_SPLB_MID_WIDTH = 3, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_NUM_MASTERS = 8, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_SMALLEST_MASTER = 128, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB, TYPE = NON_HDL, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_AWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_BASEADDR = 0xffffffff, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_HIGHADDR, MIN_SIZE = 0x4000, ASSIGNMENT = REQUIRE
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_BASEADDR, ASSIGNMENT = REQUIRE
PARAMETER C_SPLB_DWIDTH = 32, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_P2P = 0, DT = INTEGER, BUS = SPLB
PARAMETER C_FAMILY = virtex5, DT = STRING

## Ports
PORT SPLB_Clk = "", DIR = I, SIGIS = CLK, BUS = SPLB
PORT SPLB_Rst = SPLB_Rst, DIR = I, SIGIS = RST, BUS = SPLB
PORT PLB_ABus = PLB_ABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB
PORT PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB
PORT PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB
PORT PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB
PORT PLB_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB_MID_WIDTH-1)], BUS = SPLB
PORT PLB_abort = PLB_abort, DIR = I, BUS = SPLB
PORT PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB
PORT PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB
PORT PLB_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB_DWIDTH/8)-1)], BUS = SPLB
PORT PLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB
PORT PLB_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB
PORT PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB
PORT PLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB
PORT PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB
PORT PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB
PORT PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB
PORT PLB_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB
PORT Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB
PORT Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB
PORT Sl_wait = Sl_wait, DIR = O, BUS = SPLB
PORT Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB
PORT Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB
PORT Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB
PORT Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB
PORT Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB
PORT Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB
PORT Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB
PORT Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB
PORT Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT IP2INTC_Irpt = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH
PORT llink_rst = LL_RST_ACK, DIR = O, BUS = LLINK
PORT tx_llink_din = LL_Tx_Data, DIR = O, BUS = LLINK, VEC = [0:31]
PORT tx_llink_src_rdy_n = LL_Tx_SrcRdy_n, DIR = O, BUS = LLINK
PORT tx_llink_dest_rdy_n = LL_Tx_DstRdy_n, DIR = I, BUS = LLINK, INITIALVAL = VCC
PORT tx_llink_sof_n = LL_Tx_SOF_n, DIR = O, BUS = LLINK
PORT tx_llink_sop_n = LL_Tx_SOP_n, DIR = O, BUS = LLINK
PORT tx_llink_eof_n = LL_Tx_EOF_n, DIR = O, BUS = LLINK
PORT tx_llink_eop_n = LL_Tx_EOP_n, DIR = O, BUS = LLINK
PORT tx_llink_rem_n = LL_Tx_Rem, DIR = O, BUS = LLINK, VEC = [0:3]
PORT rx_llink_din = LL_Rx_Data, DIR = I, BUS = LLINK, INITIALVAL = GND, VEC = [0:31]
PORT rx_llink_src_rdy_n = LL_Rx_SrcRdy_n, DIR = I, BUS = LLINK, INITIALVAL = VCC
PORT rx_llink_dest_rdy_n = LL_Rx_DstRdy_n, DIR = O, BUS = LLINK
PORT rx_llink_sof_n = LL_Rx_SOF_n, DIR = I, BUS = LLINK, INITIALVAL = VCC
PORT rx_llink_sop_n = LL_Rx_SOP_n, DIR = I, BUS = LLINK, INITIALVAL = VCC
PORT rx_llink_eof_n = LL_Rx_EOF_n, DIR = I, BUS = LLINK, INITIALVAL = VCC
PORT rx_llink_eop_n = LL_Rx_EOP_n, DIR = I, BUS = LLINK, INITIALVAL = VCC
PORT rx_llink_rem_n = LL_Rx_Rem, DIR = I, BUS = LLINK, INITIALVAL = VCC, VEC = [0:3]

END

FINISH_SINGLE_MPD

START_SINGLE_MPD plb_v46_v1_04_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : plb_v46
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN plb_v46

## Peripheral Options
OPTION IPTYPE = BUS
OPTION HDL = VHDL
OPTION IMP_NETLIST = TRUE
OPTION BUS_STD = PLBV46
OPTION IPLEVEL_DRC_PROC = check_iplevel_settings
OPTION DESC = Processor Local Bus (PLB) 4.6
OPTION LONG_DESC = 'Xilinx 64-bit Processor Local Bus (PLB) consists of a bus control unit, a watchdog timer, and separate address, write, and read data path units with a a three-cycle only arbitration feature'
OPTION IP_GROUP = Bus and Bridge:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=PRODUCTION, spartan3=PRODUCTION, spartan3an=PRODUCTION, spartan3a=PRODUCTION, spartan3e=PRODUCTION, spartan3adsp=PRODUCTION, virtex4lx=PRODUCTION, virtex4sx=PRODUCTION, virtex4fx=PRODUCTION, virtex5lx=PRODUCTION, virtex5sx=PRODUCTION, virtex5fx=PRODUCTION, aspartan3e=PRODUCTION, aspartan3a=PRODUCTION, aspartan3adsp=PRODUCTION, qvirtex4lx=PRODUCTION, qvirtex4sx=PRODUCTION, qvirtex4fx=PRODUCTION, qrvirtex4lx=PRODUCTION, qrvirtex4sx=PRODUCTION, qrvirtex4fx=PRODUCTION, spartan6t=PRODUCTION, spartan6=PRODUCTION, spartan6l=PRE_PRODUCTION, qspartan6t=PRODUCTION, qspartan6=PRODUCTION, aspartan6t=PRODUCTION, aspartan6=PRODUCTION, virtex6lx=PRODUCTION, virtex6sx=PRODUCTION, virtex6hx=PRODUCTION, virtex6cx=PRODUCTION, virtex6llx=PRE_PRODUCTION, virtex6lsx=PRE_PRODUCTION, qspartan6l=PRE_PRODUCTION, qrvirtex5=PRE_PRODUCTION, qvirtex6lx=PRE_PRODUCTION, qvirtex6sx=PRE_PRODUCTION, qvirtex6fx=PRE_PRODUCTION, qvirtex6tx=PRE_PRODUCTION)
OPTION RUN_NGCBUILD = FALSE
OPTION STYLE = HDL
OPTION MAX_MASTERS = 32
OPTION MAX_SLAVES = 64


## Bus Interfaces
BUS_INTERFACE BUS = SDCR, BUS_STD = DCR, BUS_TYPE = SLAVE, ISVALID = (C_DCR_INTFCE==1)

## Generics for VHDL or Parameters for Verilog
PARAMETER C_PLBV46_NUM_MASTERS = 4, DT = integer
PARAMETER C_PLBV46_NUM_SLAVES = 8, DT = integer
PARAMETER C_PLBV46_MID_WIDTH = 2, DT = integer
PARAMETER C_PLBV46_AWIDTH = 32, DT = integer, ASSIGNMENT = CONSTANT
PARAMETER C_PLBV46_DWIDTH = 64, DT = integer
PARAMETER C_DCR_INTFCE = 0, DT = integer, BUS = SDCR, RANGE = (0,1)
PARAMETER C_BASEADDR = 0b1111111111, DT = std_logic_vector, BUS = SDCR, MIN_SIZE = 0x08, ASSIGNMENT = REQUIRE, ISVALID = (C_DCR_INTFCE==1)
PARAMETER C_HIGHADDR = 0b0000000000, DT = std_logic_vector, ASSIGNMENT = REQUIRE, ISVALID = (C_DCR_INTFCE==1)
PARAMETER C_DCR_AWIDTH = 10, DT = integer, BUS = SDCR, ASSIGNMENT = CONSTANT
PARAMETER C_DCR_DWIDTH = 32, DT = integer, BUS = SDCR, ASSIGNMENT = CONSTANT
PARAMETER C_EXT_RESET_HIGH = 1, DT = integer, RANGE = (0,1)
PARAMETER C_IRQ_ACTIVE = 1, DT = std_logic, RANGE = (0,1)
PARAMETER C_NUM_CLK_PLB2OPB_REARB = 5, DT = integer, TYPE = NON_HDL
PARAMETER C_ADDR_PIPELINING_TYPE = 1, DT = integer, RANGE = (0,1)
PARAMETER C_FAMILY = virtex5, DT = string
PARAMETER C_P2P = 0, DT = integer, RANGE = (0,1), ASSIGNMENT = OPTIONAL_UPDATE
PARAMETER C_ARB_TYPE = 0, DT = integer, RANGE = (0,1)

## Ports
PORT PLB_Clk = "", DIR = I, SIGIS = CLK
PORT SYS_Rst = "", DIR = I, SIGIS = RST
PORT PLB_Rst = PLB_Rst, DIR = O, SIGIS = RST
PORT SPLB_Rst = SPLB_Rst, DIR = O, VEC = [0:C_PLBV46_NUM_SLAVES-1], SIGIS = RST
PORT MPLB_Rst = MPLB_Rst, DIR = O, VEC = [0:C_PLBV46_NUM_MASTERS-1], SIGIS = RST
PORT PLB_dcrAck = Sl_dcrAck, DIR = O, BUS = SDCR
PORT PLB_dcrDBus = Sl_dcrDBus, DIR = O, VEC = [0:C_DCR_DWIDTH-1], BUS = SDCR
PORT DCR_ABus = DCR_ABus, DIR = I, VEC = [0:C_DCR_AWIDTH-1], BUS = SDCR
PORT DCR_DBus = DCR_Sl_DBus, DIR = I, VEC = [0:C_DCR_DWIDTH-1], BUS = SDCR
PORT DCR_Read = DCR_Read, DIR = I, BUS = SDCR
PORT DCR_Write = DCR_Write, DIR = I, BUS = SDCR
PORT M_ABus = M_ABus, DIR = I, VEC = [0:(C_PLBV46_NUM_MASTERS*32)-1]
PORT M_UABus = M_UABus, DIR = I, VEC = [0:(C_PLBV46_NUM_MASTERS*32)-1]
PORT M_BE = M_BE, DIR = I, VEC = [0:(C_PLBV46_NUM_MASTERS*(C_PLBV46_DWIDTH/8))-1]
PORT M_RNW = M_RNW, DIR = I, VEC = [0:C_PLBV46_NUM_MASTERS-1]
PORT M_abort = M_abort, DIR = I, VEC = [0:C_PLBV46_NUM_MASTERS-1]
PORT M_busLock = M_busLock, DIR = I, VEC = [0:C_PLBV46_NUM_MASTERS-1]
PORT M_TAttribute = M_TAttribute, DIR = I, VEC = [0:(C_PLBV46_NUM_MASTERS*16)-1]
PORT M_lockErr = M_lockErr, DIR = I, VEC = [0:C_PLBV46_NUM_MASTERS-1]
PORT M_MSize = M_MSize, DIR = I, VEC = [0:(C_PLBV46_NUM_MASTERS*2)-1]
PORT M_priority = M_priority, DIR = I, VEC = [0:(C_PLBV46_NUM_MASTERS*2)-1]
PORT M_rdBurst = M_rdBurst, DIR = I, VEC = [0:C_PLBV46_NUM_MASTERS-1]
PORT M_request = M_request, DIR = I, VEC = [0:C_PLBV46_NUM_MASTERS-1]
PORT M_size = M_size, DIR = I, VEC = [0:(C_PLBV46_NUM_MASTERS*4)-1]
PORT M_type = M_type, DIR = I, VEC = [0:(C_PLBV46_NUM_MASTERS*3)-1]
PORT M_wrBurst = M_wrBurst, DIR = I, VEC = [0:C_PLBV46_NUM_MASTERS-1]
PORT M_wrDBus = M_wrDBus, DIR = I, VEC = [0:(C_PLBV46_NUM_MASTERS*C_PLBV46_DWIDTH)-1]
PORT Sl_addrAck = Sl_addrAck, DIR = I, VEC = [0:C_PLBV46_NUM_SLAVES-1]
PORT Sl_MRdErr = Sl_MRdErr, DIR = I, VEC = [0:(C_PLBV46_NUM_SLAVES*C_PLBV46_NUM_MASTERS)-1]
PORT Sl_MWrErr = Sl_MWrErr, DIR = I, VEC = [0:(C_PLBV46_NUM_SLAVES*C_PLBV46_NUM_MASTERS)-1]
PORT Sl_MBusy = Sl_MBusy, DIR = I, VEC = [0:C_PLBV46_NUM_SLAVES*C_PLBV46_NUM_MASTERS - 1 ]
PORT Sl_rdBTerm = Sl_rdBTerm, DIR = I, VEC = [0:C_PLBV46_NUM_SLAVES-1]
PORT Sl_rdComp = Sl_rdComp, DIR = I, VEC = [0:C_PLBV46_NUM_SLAVES-1]
PORT Sl_rdDAck = Sl_rdDAck, DIR = I, VEC = [0:C_PLBV46_NUM_SLAVES-1]
PORT Sl_rdDBus = Sl_rdDBus, DIR = I, VEC = [0:C_PLBV46_NUM_SLAVES*C_PLBV46_DWIDTH-1]
PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = I, VEC = [0:C_PLBV46_NUM_SLAVES*4-1]
PORT Sl_rearbitrate = Sl_rearbitrate, DIR = I, VEC = [0:C_PLBV46_NUM_SLAVES-1]
PORT Sl_SSize = Sl_SSize, DIR = I, VEC = [0:C_PLBV46_NUM_SLAVES*2-1]
PORT Sl_wait = Sl_wait, DIR = I, VEC = [0:C_PLBV46_NUM_SLAVES-1]
PORT Sl_wrBTerm = Sl_wrBTerm, DIR = I, VEC = [0:C_PLBV46_NUM_SLAVES-1]
PORT Sl_wrComp = Sl_wrComp, DIR = I, VEC = [0:C_PLBV46_NUM_SLAVES-1]
PORT Sl_wrDAck = Sl_wrDAck, DIR = I, VEC = [0:C_PLBV46_NUM_SLAVES-1]
PORT Sl_MIRQ = Sl_MIRQ, DIR = I, VEC = [0:C_PLBV46_NUM_SLAVES*C_PLBV46_NUM_MASTERS-1]
PORT PLB_MIRQ = PLB_MIRQ, DIR = O, VEC = [0:C_PLBV46_NUM_MASTERS-1]
PORT PLB_ABus = PLB_ABus, DIR = O, VEC = [0:31]
PORT PLB_UABus = PLB_UABus, DIR = O, VEC = [0:31]
PORT PLB_BE = PLB_BE, DIR = O, VEC = [0:(C_PLBV46_DWIDTH/8)-1]
PORT PLB_MAddrAck = PLB_MAddrAck, DIR = O, VEC = [0:C_PLBV46_NUM_MASTERS-1]
PORT PLB_MTimeout = PLB_MTimeout, DIR = O, VEC = [0:C_PLBV46_NUM_MASTERS-1]
PORT PLB_MBusy = PLB_MBusy, DIR = O, VEC = [0:C_PLBV46_NUM_MASTERS-1]
PORT PLB_MRdErr = PLB_MRdErr, DIR = O, VEC = [0:C_PLBV46_NUM_MASTERS-1]
PORT PLB_MWrErr = PLB_MWrErr, DIR = O, VEC = [0:C_PLBV46_NUM_MASTERS-1]
PORT PLB_MRdBTerm = PLB_MRdBTerm, DIR = O, VEC = [0:C_PLBV46_NUM_MASTERS-1]
PORT PLB_MRdDAck = PLB_MRdDAck, DIR = O, VEC = [0:C_PLBV46_NUM_MASTERS-1]
PORT PLB_MRdDBus = PLB_MRdDBus, DIR = O, VEC = [0:(C_PLBV46_NUM_MASTERS*C_PLBV46_DWIDTH)-1]
PORT PLB_MRdWdAddr = PLB_MRdWdAddr, DIR = O, VEC = [0:(C_PLBV46_NUM_MASTERS*4)-1]
PORT PLB_MRearbitrate = PLB_MRearbitrate, DIR = O, VEC = [0:C_PLBV46_NUM_MASTERS-1]
PORT PLB_MWrBTerm = PLB_MWrBTerm, DIR = O, VEC = [0:C_PLBV46_NUM_MASTERS-1]
PORT PLB_MWrDAck = PLB_MWrDAck, DIR = O, VEC = [0:C_PLBV46_NUM_MASTERS-1]
PORT PLB_MSSize = PLB_MSSize, DIR = O, VEC = [0:(C_PLBV46_NUM_MASTERS*2)-1]
PORT PLB_PAValid = PLB_PAValid, DIR = O
PORT PLB_RNW = PLB_RNW, DIR = O
PORT PLB_SAValid = PLB_SAValid, DIR = O
PORT PLB_abort = PLB_abort, DIR = O
PORT PLB_busLock = PLB_busLock, DIR = O
PORT PLB_TAttribute = PLB_TAttribute, DIR = O, VEC = [0:15]
PORT PLB_lockErr = PLB_lockErr, DIR = O
PORT PLB_masterID = PLB_masterID, DIR = O, VEC = [0:C_PLBV46_MID_WIDTH-1]
PORT PLB_MSize = PLB_MSize, DIR = O, VEC = [0:1]
PORT PLB_rdPendPri = PLB_rdPendPri, DIR = O, VEC = [0:1]
PORT PLB_wrPendPri = PLB_wrPendPri, DIR = O, VEC = [0:1]
PORT PLB_rdPendReq = PLB_rdPendReq, DIR = O
PORT PLB_wrPendReq = PLB_wrPendReq, DIR = O
PORT PLB_rdBurst = PLB_rdBurst, DIR = O
PORT PLB_rdPrim = PLB_rdPrim, DIR = O, VEC = [0:C_PLBV46_NUM_SLAVES-1]
PORT PLB_reqPri = PLB_reqPri, DIR = O, VEC = [0:1]
PORT PLB_size = PLB_size, DIR = O, VEC = [0:3]
PORT PLB_type = PLB_type, DIR = O, VEC = [0:2]
PORT PLB_wrBurst = PLB_wrBurst, DIR = O
PORT PLB_wrDBus = PLB_wrDBus, DIR = O, VEC = [0:C_PLBV46_DWIDTH-1]
PORT PLB_wrPrim = PLB_wrPrim, DIR = O, VEC = [0:C_PLBV46_NUM_SLAVES-1]
PORT PLB_SaddrAck = PLB_SaddrAck, DIR = O
PORT PLB_SMRdErr = PLB_SMRdErr, DIR = O, VEC = [0:C_PLBV46_NUM_MASTERS-1]
PORT PLB_SMWrErr = PLB_SMWrErr, DIR = O, VEC = [0:C_PLBV46_NUM_MASTERS-1]
PORT PLB_SMBusy = PLB_SMBusy, DIR = O, VEC = [0:C_PLBV46_NUM_MASTERS-1]
PORT PLB_SrdBTerm = PLB_SrdBTerm, DIR = O
PORT PLB_SrdComp = PLB_SrdComp, DIR = O
PORT PLB_SrdDAck = PLB_SrdDAck, DIR = O
PORT PLB_SrdDBus = PLB_SrdDBus, DIR = O, VEC = [0:C_PLBV46_DWIDTH-1]
PORT PLB_SrdWdAddr = PLB_SrdWdAddr, DIR = O, VEC = [0:3]
PORT PLB_Srearbitrate = PLB_Srearbitrate, DIR = O
PORT PLB_Sssize = PLB_Sssize, DIR = O, VEC = [0:1]
PORT PLB_Swait = PLB_Swait, DIR = O
PORT PLB_SwrBTerm = PLB_SwrBTerm, DIR = O
PORT PLB_SwrComp = PLB_SwrComp, DIR = O
PORT PLB_SwrDAck = PLB_SwrDAck, DIR = O
PORT Bus_Error_Det = "", DIR = O, EDGE = RISING, SIGIS = INTERRUPT

END

FINISH_SINGLE_MPD

START_SINGLE_MPD xps_deltasigma_adc_v1_01_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : xps_deltasigma_adc
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN xps_deltasigma_adc

## Peripheral Options
OPTION STYLE = HDL
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION DESC = XPS Delta-Sigma Analog to Digital Converter
OPTION LONG_DESC = Delta Sigma Analog to Digital Converter for the PLBV46 bus
OPTION IP_GROUP = Analog:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=PRODUCTION, spartan3=PRODUCTION, spartan3an=PRODUCTION, spartan3a=PRODUCTION, spartan3e=PRODUCTION, spartan3adsp=PRODUCTION, virtex4lx=PRODUCTION, virtex4sx=PRODUCTION, virtex4fx=PRODUCTION, virtex5lx=PRODUCTION, virtex5sx=PRODUCTION, virtex5fx=PRODUCTION, aspartan3e=PRODUCTION, aspartan3a=PRODUCTION, aspartan3adsp=PRODUCTION, qvirtex4lx=PRODUCTION, qvirtex4sx=PRODUCTION, qvirtex4fx=PRODUCTION, qrvirtex4lx=PRODUCTION, qrvirtex4sx=PRODUCTION, qrvirtex4fx=PRODUCTION, spartan6t=PRODUCTION, spartan6=PRODUCTION, spartan6l=PRE_PRODUCTION, qspartan6t=PRODUCTION, qspartan6=PRODUCTION, aspartan6t=PRODUCTION, aspartan6=PRODUCTION, virtex6lx=PRODUCTION, virtex6sx=PRODUCTION, virtex6hx=PRODUCTION, virtex6cx=PRODUCTION, virtex6llx=PRE_PRODUCTION, virtex6lsx=PRE_PRODUCTION, qspartan6l=PRE_PRODUCTION, qvirtex6lx=PRE_PRODUCTION, qvirtex6sx=PRE_PRODUCTION, qvirtex6fx=PRE_PRODUCTION, qvirtex6tx=PRE_PRODUCTION)
OPTION RUN_NGCBUILD = FALSE


## Bus Interfaces
BUS_INTERFACE BUS = SPLB, BUS_TYPE = SLAVE, BUS_STD = PLBV46

## Generics for VHDL or Parameters for Verilog
PARAMETER C_DACIN_WIDTH = 9, DT = INTEGER, RANGE = (9,11)
PARAMETER C_FSTM_WIDTH = 4, DT = INTEGER, RANGE = (4:8)
PARAMETER C_BASEADDR = 0xffffffff, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_HIGHADDR, MIN_SIZE = 0x200, ASSIGNMENT = REQUIRE
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_BASEADDR, ASSIGNMENT = REQUIRE
PARAMETER C_SPLB_AWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_DWIDTH = 32, DT = INTEGER, BUS = SPLB, RANGE = (32,64,128)
PARAMETER C_SPLB_P2P = 0, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB, RANGE = (1:16)
PARAMETER C_SPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_FAMILY = virtex5, DT = STRING

## Ports
PORT PLB_ABus = PLB_ABus, DIR = I, VEC = [0:(C_SPLB_AWIDTH-1)], BUS = SPLB
PORT PLB_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB_DWIDTH/8)-1)], BUS = SPLB
PORT SPLB_Clk = "", DIR = I, SIGIS = Clk, BUS = SPLB
PORT SPLB_Rst = SPLB_Rst, DIR = I, SIGIS = Rst, BUS = SPLB
PORT PLB_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB
PORT PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB
PORT PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB
PORT PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB
PORT PLB_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB_MID_WIDTH-1)], BUS = SPLB
PORT PLB_abort = PLB_abort, DIR = I, BUS = SPLB
PORT PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB
PORT PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB
PORT PLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB
PORT PLB_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB
PORT PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB
PORT PLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB
PORT PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB
PORT PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB
PORT PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB
PORT PLB_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB
PORT Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB
PORT Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB
PORT Sl_wait = Sl_wait, DIR = O, BUS = SPLB
PORT Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB
PORT Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB
PORT Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB
PORT Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB
PORT Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB
PORT Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB
PORT Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB
PORT Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB
PORT Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT IP2INTC_Irpt = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH
PORT AgtR = "", DIR = I
PORT DACout = "", DIR = O
PORT Sample = "", DIR = O

END

FINISH_SINGLE_MPD

START_SINGLE_MPD dcr_intc_v2_00_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : dcr_intc
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN dcr_intc

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION SPECIAL = INTERRUPT_CONTROLLER
OPTION DESC = DCR Interrupt Controller
OPTION LONG_DESC = IntC core and a DCR bus interface
OPTION IP_GROUP = 'Clock, Reset and Interrupt:PPC'
OPTION ARCH_SUPPORT_MAP = (virtex4lx=PRODUCTION, virtex4sx=PRODUCTION, virtex4fx=PRODUCTION, virtex5lx=PRODUCTION, virtex5sx=PRODUCTION, virtex5fx=PRODUCTION, qvirtex4lx=PRODUCTION, qvirtex4sx=PRODUCTION, qvirtex4fx=PRODUCTION, qrvirtex4lx=PRODUCTION, qrvirtex4sx=PRODUCTION, qrvirtex4fx=PRODUCTION)
OPTION HDL = MIXED
OPTION RUN_NGCBUILD = FALSE
OPTION STYLE = HDL


## Bus Interfaces
BUS_INTERFACE BUS = SDCR, BUS_STD = DCR, BUS_TYPE = SLAVE

## Generics for VHDL or Parameters for Verilog
PARAMETER C_DCR_AWIDTH = 10, DT = integer, BUS = SDCR
PARAMETER C_DCR_DWIDTH = 32, DT = integer, BUS = SDCR
PARAMETER C_BASEADDR = 0b1111111111, DT = std_logic_vector, BUS = SDCR, MIN_SIZE = 0b1000
PARAMETER C_HIGHADDR = 0b0000000000, DT = std_logic_vector
PARAMETER C_NUM_INTR_INPUTS = 2, DT = integer, RANGE = (1:C_DCR_DWIDTH), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_num_intr_inputs
PARAMETER C_KIND_OF_INTR = 0b11111111111111111111111111111111, DT = std_logic_vector, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_kind_of_intr
PARAMETER C_KIND_OF_EDGE = 0b11111111111111111111111111111111, DT = std_logic_vector, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_kind_of_edge
PARAMETER C_KIND_OF_LVL = 0b11111111111111111111111111111111, DT = std_logic_vector, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_kind_of_lvl
PARAMETER C_HAS_IPR = 1, DT = integer, RANGE = (0, 1)
PARAMETER C_HAS_SIE = 1, DT = integer, RANGE = (0, 1)
PARAMETER C_HAS_CIE = 1, DT = integer, RANGE = (0, 1)
PARAMETER C_HAS_IVR = 1, DT = integer, RANGE = (0, 1)
PARAMETER C_IRQ_IS_LEVEL = 1, DT = integer, RANGE = (0, 1)
PARAMETER C_IRQ_ACTIVE = 1, DT = std_logic, RANGE = (0, 1)

## Ports
PORT DCR_Clk = "", DIR = I, SIGIS = CLK
PORT Intr = "", DIR = I, VEC = [C_NUM_INTR_INPUTS-1:0], SIGIS = INTERRUPT, ENDIAN = LITTLE
PORT DCR_Rst = "", DIR = I
PORT DCR_Read = DCR_Read, DIR = I, BUS = SDCR
PORT DCR_Write = DCR_Write, DIR = I, BUS = SDCR
PORT DCR_ABus = DCR_ABus, DIR = I, VEC = [0:C_DCR_AWIDTH-1], BUS = SDCR
PORT DCR_DBus = DCR_Sl_DBus, DIR = I, VEC = [0:C_DCR_DWIDTH-1], BUS = SDCR
PORT Intc_dcrDBus = Sl_dcrDBus, DIR = O, VEC = [0:C_DCR_DWIDTH-1], BUS = SDCR
PORT Intc_dcrAck = Sl_dcrAck, DIR = O, BUS = SDCR
PORT Irq = "", DIR = O, SIGIS = INTERRUPT

END

FINISH_SINGLE_MPD

START_SINGLE_MPD xps_intc_v2_00_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : xps_intc
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN xps_intc

## Peripheral Options
OPTION RUN_NGCBUILD = TRUE
OPTION IMP_NETLIST = TRUE
OPTION STYLE = HDL
OPTION HDL = VHDL
OPTION IPTYPE = PERIPHERAL
OPTION SPECIAL = INTERRUPT_CONTROLLER
OPTION USAGE_LEVEL = BASE_USER
OPTION SYSLEVEL_DRC_PROC = syslevel_check_interrupt_sensitivity
OPTION DESC = XPS Interrupt Controller
OPTION LONG_DESC = intc core attached to the PLBV46
OPTION IP_GROUP = 'Clock, Reset and Interrupt:MICROBLAZE:PPC'
OPTION ARCH_SUPPORT_MAP = (aspartan3=SUPERSEDED, spartan3=SUPERSEDED, spartan3an=SUPERSEDED, spartan3a=SUPERSEDED, spartan3e=SUPERSEDED, spartan3adsp=SUPERSEDED, virtex4lx=SUPERSEDED, virtex4sx=SUPERSEDED, virtex4fx=SUPERSEDED, virtex5lx=SUPERSEDED, virtex5sx=SUPERSEDED, virtex5fx=SUPERSEDED, aspartan3e=SUPERSEDED, aspartan3a=SUPERSEDED, aspartan3adsp=SUPERSEDED, qvirtex4lx=SUPERSEDED, qvirtex4sx=SUPERSEDED, qvirtex4fx=SUPERSEDED, qrvirtex4lx=SUPERSEDED, qrvirtex4sx=SUPERSEDED, qrvirtex4fx=SUPERSEDED, spartan6t=SUPERSEDED, spartan6=SUPERSEDED, spartan6l=SUPERSEDED, qspartan6t=SUPERSEDED, qspartan6=SUPERSEDED, aspartan6t=SUPERSEDED, aspartan6=SUPERSEDED, virtex6lx=SUPERSEDED, virtex6sx=SUPERSEDED, virtex6hx=SUPERSEDED, virtex6cx=SUPERSEDED, virtex6llx=SUPERSEDED, virtex6lsx=SUPERSEDED, qspartan6l=SUPERSEDED, qrvirtex5=SUPERSEDED, qvirtex6lx=SUPERSEDED, qvirtex6sx=SUPERSEDED, qvirtex6fx=SUPERSEDED, qvirtex6tx=SUPERSEDED)


## Bus Interfaces
BUS_INTERFACE BUS = SPLB, BUS_TYPE = SLAVE, BUS_STD = PLBV46

## Generics for VHDL or Parameters for Verilog
PARAMETER C_FAMILY = virtex5, DT = STRING
PARAMETER C_BASEADDR = 0xffffffff, DT = std_logic_vector(0 to 31), BUS = SPLB, ADDRESS = BASE, PAIR = C_HIGHADDR, MIN_SIZE = 0x20, ASSIGNMENT = REQUIRE
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector(0 to 31), BUS = SPLB, ADDRESS = HIGH, PAIR = C_BASEADDR, ASSIGNMENT = REQUIRE
PARAMETER C_SPLB_AWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_DWIDTH = 32, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_P2P = 0, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_NUM_INTR_INPUTS = 2, DT = INTEGER, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_num_intr_inputs, RANGE = (1:C_SPLB_NATIVE_DWIDTH)
PARAMETER C_KIND_OF_INTR = 0xffffffff, DT = std_logic_vector(31 downto 0), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_kind_of_intr
PARAMETER C_KIND_OF_EDGE = 0xffffffff, DT = std_logic_vector(31 downto 0), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_kind_of_edge
PARAMETER C_KIND_OF_LVL = 0xffffffff, DT = std_logic_vector(31 downto 0), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_kind_of_lvl
PARAMETER C_HAS_IPR = 1, DT = INTEGER, PERMIT = BASE_USER, RANGE = (0,1), DESC = Interrupt Pending Register
PARAMETER C_HAS_SIE = 1, DT = INTEGER, PERMIT = BASE_USER, RANGE = (0,1), DESC = Set Interrupt Enables
PARAMETER C_HAS_CIE = 1, DT = INTEGER, PERMIT = BASE_USER, RANGE = (0,1), DESC = Clear Interrupt Enables
PARAMETER C_HAS_IVR = 1, DT = INTEGER, PERMIT = BASE_USER, RANGE = (0,1), DESC = Interrupt Vector Register
PARAMETER C_IRQ_IS_LEVEL = 1, DT = INTEGER, PERMIT = BASE_USER, RANGE = (0,1), VALUES = (0 = Edge, 1 = Level )
PARAMETER C_IRQ_ACTIVE = 1, DT = std_logic, RANGE = (0,1), VALUES = (0 = Falling/Low, 1 = Rising/High )

## Ports
PORT SPLB_Clk = "", DIR = I, SIGIS = Clk, BUS = SPLB
PORT SPLB_Rst = SPLB_Rst, DIR = I, SIGIS = Rst, BUS = SPLB
PORT PLB_ABus = PLB_ABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB
PORT PLB_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB_MID_WIDTH-1)], BUS = SPLB
PORT PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB
PORT PLB_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB_DWIDTH/8)-1)], BUS = SPLB
PORT PLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB
PORT PLB_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB
PORT PLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT PLB_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB
PORT PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB
PORT PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB
PORT PLB_abort = PLB_abort, DIR = I, BUS = SPLB
PORT PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB
PORT PLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB
PORT PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB
PORT PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB
PORT PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB
PORT PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB
PORT PLB_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB
PORT Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB
PORT Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB
PORT Sl_wait = Sl_wait, DIR = O, BUS = SPLB
PORT Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB
PORT Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB
PORT Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB
PORT Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB
PORT Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB
PORT Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB
PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB
PORT Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB
PORT Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Intr = "", DIR = I, VEC = [(C_NUM_INTR_INPUTS-1):0], SIGIS = INTERRUPT, ENDIAN = LITTLE
PORT Irq = "", DIR = O, SIGIS = INTERRUPT

END

FINISH_SINGLE_MPD

START_SINGLE_MPD xps_usb2_device_v2_00_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : xps_usb2_device
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN xps_usb2_device

## Peripheral Options
OPTION RUN_NGCBUILD = TRUE
OPTION PAY_CORE = xps_usb2_device_v2
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = MIXED
OPTION DESC = XPS USB2 Peripheral
OPTION LONG_DESC = USB with PLBV46 Interface.
OPTION IP_GROUP = Communication High-Speed:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=SUPERSEDED, spartan3=SUPERSEDED, spartan3an=SUPERSEDED, spartan3a=SUPERSEDED, spartan3e=SUPERSEDED, spartan3adsp=SUPERSEDED, virtex4lx=SUPERSEDED, virtex4sx=SUPERSEDED, virtex4fx=SUPERSEDED, virtex5lx=SUPERSEDED, virtex5sx=SUPERSEDED, virtex5fx=SUPERSEDED, aspartan3e=SUPERSEDED, aspartan3a=SUPERSEDED, aspartan3adsp=SUPERSEDED, qvirtex4lx=SUPERSEDED, qvirtex4sx=SUPERSEDED, qvirtex4fx=SUPERSEDED, qrvirtex4lx=SUPERSEDED, qrvirtex4sx=SUPERSEDED, qrvirtex4fx=SUPERSEDED, spartan6t=SUPERSEDED, spartan6=SUPERSEDED, spartan6l=SUPERSEDED, qspartan6t=SUPERSEDED, qspartan6=SUPERSEDED, aspartan6t=SUPERSEDED, aspartan6=SUPERSEDED, virtex6lx=SUPERSEDED, virtex6sx=SUPERSEDED, virtex6hx=SUPERSEDED, virtex6cx=SUPERSEDED, virtex6llx=SUPERSEDED, virtex6lsx=SUPERSEDED, qspartan6l=SUPERSEDED, qrvirtex5=SUPERSEDED, qvirtex6lx=SUPERSEDED, qvirtex6sx=SUPERSEDED, qvirtex6fx=SUPERSEDED, qvirtex6tx=SUPERSEDED)
OPTION STYLE = HDL


## Bus Interfaces
BUS_INTERFACE BUS = MPLB, BUS_TYPE = MASTER, BUS_STD = PLBV46, GENERATE_BURSTS = TRUE, ISVALID = (C_INCLUDE_DMA == 1)
BUS_INTERFACE BUS = SPLB, BUS_TYPE = SLAVE, BUS_STD = PLBV46

## Generics for VHDL or Parameters for Verilog
PARAMETER C_BASEADDR = 0xffffffff, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_HIGHADDR, MIN_SIZE = 0x8000, ASSIGNMENT = REQUIRE
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_BASEADDR, ASSIGNMENT = REQUIRE
PARAMETER C_FAMILY = virtex5, DT = STRING
PARAMETER C_SPLB_DWIDTH = 32, DT = INTEGER, BUS = SPLB, RANGE = (32,64,128)
PARAMETER C_SPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB, RANGE = (1,2,3,4)
PARAMETER C_SPLB_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB, RANGE = (1:16)
PARAMETER C_SPLB_AWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_INCLUDE_DMA = 0, DT = INTEGER, RANGE = (0,1)
PARAMETER C_MPLB_AWIDTH = 32, DT = INTEGER, BUS = MPLB, ASSIGNMENT = CONSTANT, ISVALID = (C_INCLUDE_DMA == 1)
PARAMETER C_MPLB_DWIDTH = 32, DT = INTEGER, BUS = MPLB, RANGE = (32,64,128), ISVALID = (C_INCLUDE_DMA == 1)
PARAMETER C_MPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = MPLB, ASSIGNMENT = CONSTANT, ISVALID = (C_INCLUDE_DMA == 1)

## Ports
PORT SPLB_Clk = "", DIR = I, SIGIS = Clk, BUS = SPLB
PORT SPLB_Rst = SPLB_Rst, DIR = I, SIGIS = Rst, BUS = SPLB
PORT MPLB_Clk = "", DIR = I, SIGIS = Clk, BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT MPLB_Rst = MPLB_Rst, DIR = I, SIGIS = Rst, BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT SPLB_ABus = PLB_ABus, DIR = I, VEC = [0:(C_SPLB_AWIDTH-1)], BUS = SPLB
PORT SPLB_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB_DWIDTH/8)-1)], BUS = SPLB
PORT SPLB_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT SPLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB
PORT SPLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB
PORT SPLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB
PORT SPLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB
PORT SPLB_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB_MID_WIDTH-1)], BUS = SPLB
PORT SPLB_abort = PLB_abort, DIR = I, BUS = SPLB
PORT SPLB_busLock = PLB_busLock, DIR = I, BUS = SPLB
PORT SPLB_RNW = PLB_RNW, DIR = I, BUS = SPLB
PORT SPLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB
PORT SPLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB
PORT SPLB_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB
PORT SPLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB
PORT SPLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT SPLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB
PORT SPLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB
PORT SPLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB
PORT SPLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB
PORT SPLB_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT SPLB_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT SPLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT SPLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB
PORT Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB
PORT Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB
PORT Sl_wait = Sl_wait, DIR = O, BUS = SPLB
PORT Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB
PORT Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB
PORT Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB
PORT Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB
PORT Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB
PORT Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB
PORT Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB
PORT Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB
PORT Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT MPLB_MAddrAck = PLB_MAddrAck, DIR = I, BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT MPLB_MSSize = PLB_MSSize, DIR = I, VEC = [0:1], BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT MPLB_MRearbitrate = PLB_MRearbitrate, DIR = I, BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT MPLB_MTimeout = PLB_MTimeout, DIR = I, BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT MPLB_MBusy = PLB_MBusy, DIR = I, BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT MPLB_MRdErr = PLB_MRdErr, DIR = I, BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT MPLB_MWrErr = PLB_MWrErr, DIR = I, BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT MPLB_MIRQ = PLB_MIRQ, DIR = I, BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT MPLB_MRdDBus = PLB_MRdDBus, DIR = I, VEC = [0:(C_MPLB_DWIDTH-1)], BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT MPLB_MRdWdAddr = PLB_MRdWdAddr, DIR = I, VEC = [0:3], BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT MPLB_MRdDAck = PLB_MRdDAck, DIR = I, BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT MPLB_MRdBTerm = PLB_MRdBTerm, DIR = I, BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT MPLB_MWrDAck = PLB_MWrDAck, DIR = I, BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT MPLB_MWrBTerm = PLB_MWrBTerm, DIR = I, BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT M_request = M_request, DIR = O, BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT M_priority = M_priority, DIR = O, VEC = [0:1], BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT M_busLock = M_busLock, DIR = O, BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT M_RNW = M_RNW, DIR = O, BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT M_BE = M_BE, DIR = O, VEC = [0:((C_MPLB_DWIDTH/8)-1)], BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT M_MSize = M_MSize, DIR = O, VEC = [0:1], BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT M_size = M_size, DIR = O, VEC = [0:3], BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT M_type = M_type, DIR = O, VEC = [0:2], BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT M_TAttribute = M_TAttribute, DIR = O, VEC = [0:15], BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT M_lockErr = M_lockErr, DIR = O, BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT M_abort = M_abort, DIR = O, BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT M_UABus = M_UABus, DIR = O, VEC = [0:31], BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT M_ABus = M_ABus, DIR = O, VEC = [0:(C_MPLB_AWIDTH-1)], BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT M_wrDBus = M_wrDBus, DIR = O, VEC = [0:(C_MPLB_DWIDTH-1)], BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT M_wrBurst = M_wrBurst, DIR = O, BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT M_rdBurst = M_rdBurst, DIR = O, BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT usb_irpt = "", DIR = O, SIGIS = INTERRUPT
PORT ULPI_Clock = "", DIR = I, SIGIS = Clk
PORT ULPI_Dir = "", DIR = I
PORT ULPI_Next = "", DIR = I
PORT ULPI_Stop = "", DIR = O
PORT ULPI_Reset = "", DIR = O
PORT ULPI_Data_I = "", DIR = I, VEC = [7:0]
PORT ULPI_Data_O = "", DIR = O, VEC = [7:0]
PORT ULPI_Data_T = "", DIR = O
PORT vbus_detect = "", DIR = O
PORT show_currentspeed = "", DIR = O
PORT running = "", DIR = O
PORT suspended = "", DIR = O
PORT disconnected = "", DIR = O
PORT configured = "", DIR = O
PORT spare1 = "", DIR = O
PORT spare2 = "", DIR = O
PORT ULPI_Data = "", DIR = IO, VEC = [7:0], ENABLE = SINGLE, THREE_STATE = TRUE, TRI_I = ULPI_Data_I, TRI_O = ULPI_Data_O, TRI_T = ULPI_Data_T

END

FINISH_SINGLE_MPD

START_SINGLE_MPD xps_timebase_wdt_v1_01_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : xps_timebase_wdt
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN xps_timebase_wdt

## Peripheral Options
OPTION STYLE = HDL
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION USAGE_LEVEL = BASE_USER
OPTION DESC = XPS Watchdog Timer
OPTION LONG_DESC = Watchdog Timer with PLBV46 interface
OPTION IP_GROUP = DMA and Timer:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=SUPERSEDED, spartan3=SUPERSEDED, spartan3an=SUPERSEDED, spartan3a=SUPERSEDED, spartan3e=SUPERSEDED, spartan3adsp=SUPERSEDED, virtex4lx=SUPERSEDED, virtex4sx=SUPERSEDED, virtex4fx=SUPERSEDED, virtex5lx=SUPERSEDED, virtex5sx=SUPERSEDED, virtex5fx=SUPERSEDED, aspartan3e=SUPERSEDED, aspartan3a=SUPERSEDED, aspartan3adsp=SUPERSEDED, qvirtex4lx=SUPERSEDED, qvirtex4sx=SUPERSEDED, qvirtex4fx=SUPERSEDED, qrvirtex4lx=SUPERSEDED, qrvirtex4sx=SUPERSEDED, qrvirtex4fx=SUPERSEDED, spartan6t=SUPERSEDED, spartan6=SUPERSEDED, spartan6l=SUPERSEDED, qspartan6t=SUPERSEDED, qspartan6=SUPERSEDED, aspartan6t=SUPERSEDED, aspartan6=SUPERSEDED, virtex6lx=SUPERSEDED, virtex6sx=SUPERSEDED, virtex6hx=SUPERSEDED, virtex6cx=SUPERSEDED, virtex6llx=SUPERSEDED, virtex6lsx=SUPERSEDED, qspartan6l=SUPERSEDED, qrvirtex5=SUPERSEDED, qvirtex6lx=SUPERSEDED, qvirtex6sx=SUPERSEDED, qvirtex6fx=SUPERSEDED, qvirtex6tx=SUPERSEDED)
OPTION RUN_NGCBUILD = FALSE


## Bus Interfaces
BUS_INTERFACE BUS = SPLB, BUS_TYPE = SLAVE, BUS_STD = PLBV46

## Generics for VHDL or Parameters for Verilog
PARAMETER C_WDT_INTERVAL = 30, DT = INTEGER, RANGE = (8:31), PERMIT = BASE_USER, DESC = Interval Length Exponent
PARAMETER C_WDT_ENABLE_ONCE = 1, DT = INTEGER, RANGE = (0,1), PERMIT = BASE_USER, DESC = Enable Behavior
PARAMETER C_BASEADDR = 0xffffffff, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_HIGHADDR, MIN_SIZE = 0x10, ASSIGNMENT = REQUIRE
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_BASEADDR, ASSIGNMENT = REQUIRE
PARAMETER C_FAMILY = virtex5, DT = STRING
PARAMETER C_SPLB_AWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_DWIDTH = 32, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_P2P = 0, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT

## Ports
PORT WDT_Reset = "", DIR = O
PORT Timebase_Interrupt = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = EDGE_RISING, INTERRUPT_PRIORITY = HIGH
PORT WDT_Interrupt = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, INTERRUPT_PRIORITY = HIGH
PORT SPLB_Clk = "", DIR = I, SIGIS = CLK, BUS = SPLB
PORT SPLB_Rst = SPLB_Rst, DIR = I, SIGIS = RST, BUS = SPLB
PORT PLB_ABus = PLB_ABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB
PORT PLB_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB_MID_WIDTH-1)], BUS = SPLB
PORT PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB
PORT PLB_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB_DWIDTH/8)-1)], BUS = SPLB
PORT PLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB
PORT PLB_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB
PORT PLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB
PORT Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB
PORT Sl_wait = Sl_wait, DIR = O, BUS = SPLB
PORT Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB
PORT Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB
PORT Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB
PORT Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB
PORT Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB
PORT Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT PLB_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB
PORT PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB
PORT PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB
PORT PLB_abort = PLB_abort, DIR = I, BUS = SPLB
PORT PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB
PORT PLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB
PORT PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB
PORT PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB
PORT PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB
PORT PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB
PORT PLB_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB
PORT Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB
PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB
PORT Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB
PORT Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB

END

FINISH_SINGLE_MPD

START_SINGLE_MPD xps_deltasigma_dac_v1_01_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : xps_deltasigma_dac
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN xps_deltasigma_dac

## Peripheral Options
OPTION STYLE = HDL
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION DESC = XPS Delta-Sigma Digital to Analog Converter
OPTION LONG_DESC = Delta Sigma Digital to Analog Converter for the PLBV46 bus
OPTION IP_GROUP = Analog:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=PRODUCTION, spartan3=PRODUCTION, spartan3an=PRODUCTION, spartan3a=PRODUCTION, spartan3e=PRODUCTION, spartan3adsp=PRODUCTION, virtex4lx=PRODUCTION, virtex4sx=PRODUCTION, virtex4fx=PRODUCTION, virtex5lx=PRODUCTION, virtex5sx=PRODUCTION, virtex5fx=PRODUCTION, aspartan3e=PRODUCTION, aspartan3a=PRODUCTION, aspartan3adsp=PRODUCTION, qvirtex4lx=PRODUCTION, qvirtex4sx=PRODUCTION, qvirtex4fx=PRODUCTION, qrvirtex4lx=PRODUCTION, qrvirtex4sx=PRODUCTION, qrvirtex4fx=PRODUCTION, spartan6t=PRODUCTION, spartan6=PRODUCTION, spartan6l=PRE_PRODUCTION, qspartan6t=PRODUCTION, qspartan6=PRODUCTION, aspartan6t=PRODUCTION, aspartan6=PRODUCTION, virtex6lx=PRODUCTION, virtex6sx=PRODUCTION, virtex6hx=PRODUCTION, virtex6cx=PRODUCTION, virtex6llx=PRE_PRODUCTION, virtex6lsx=PRE_PRODUCTION, qspartan6l=PRE_PRODUCTION, qvirtex6lx=PRE_PRODUCTION, qvirtex6sx=PRE_PRODUCTION, qvirtex6fx=PRE_PRODUCTION, qvirtex6tx=PRE_PRODUCTION)
OPTION RUN_NGCBUILD = FALSE


## Bus Interfaces
BUS_INTERFACE BUS = SPLB, BUS_TYPE = SLAVE, BUS_STD = PLBV46

## Generics for VHDL or Parameters for Verilog
PARAMETER C_NUM_DAC_BITS = 8, DT = INTEGER, RANGE = (2:16)
PARAMETER C_FULL_RANGE = 0, DT = INTEGER, RANGE = (0,1)
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_BASEADDR, ASSIGNMENT = REQUIRE
PARAMETER C_BASEADDR = 0xffffffff, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_HIGHADDR, MIN_SIZE = 0x200, ASSIGNMENT = REQUIRE
PARAMETER C_SPLB_AWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_DWIDTH = 32, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_P2P = 0, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_MID_WIDTH = 3, DT = INTEGER, BUS = SPLB, RANGE = (1:4)
PARAMETER C_SPLB_NUM_MASTERS = 8, DT = INTEGER, BUS = SPLB, RANGE = (1:16)
PARAMETER C_SPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_FAMILY = virtex5, DT = STRING

## Ports
PORT Dac_clk_en = "", DIR = I
PORT Read_en = "", DIR = I
PORT Dac_Out = "", DIR = O
PORT SPLB_Clk = "", DIR = I, SIGIS = Clk, BUS = SPLB
PORT SPLB_Rst = SPLB_Rst, DIR = I, SIGIS = Rst, BUS = SPLB
PORT PLB_ABus = PLB_ABus, DIR = I, VEC = [0:C_SPLB_AWIDTH-1], BUS = SPLB
PORT PLB_UABus = PLB_UABus, DIR = I, VEC = [0:C_SPLB_AWIDTH-1], BUS = SPLB
PORT PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB
PORT PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB
PORT PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB
PORT PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB
PORT PLB_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB_MID_WIDTH-1)], BUS = SPLB
PORT PLB_abort = PLB_abort, DIR = I, BUS = SPLB
PORT PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB
PORT PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB
PORT PLB_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB_DWIDTH/8)-1)], BUS = SPLB
PORT PLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB
PORT PLB_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB
PORT PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB
PORT PLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB
PORT PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB
PORT PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB
PORT PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB
PORT PLB_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB
PORT Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB
PORT Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB
PORT Sl_wait = Sl_wait, DIR = O, BUS = SPLB
PORT Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB
PORT Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB
PORT Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB
PORT Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB
PORT Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB
PORT Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB
PORT Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB
PORT Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB
PORT Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT IP2INTC_Irpt = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH
PORT Freeze = "", DIR = I

END

FINISH_SINGLE_MPD

START_SINGLE_MPD xps_ps2_v1_01_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : xps_ps2
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN xps_ps2

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION DESC = XPS PS2 Interface
OPTION LONG_DESC = PLBV46 to PS2 Adapter
OPTION IP_GROUP = Communication Low-Speed:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=SUPERSEDED, spartan3=SUPERSEDED, spartan3an=SUPERSEDED, spartan3a=SUPERSEDED, spartan3e=SUPERSEDED, spartan3adsp=SUPERSEDED, virtex4lx=SUPERSEDED, virtex4sx=SUPERSEDED, virtex4fx=SUPERSEDED, virtex5lx=SUPERSEDED, virtex5sx=SUPERSEDED, virtex5fx=SUPERSEDED, aspartan3e=SUPERSEDED, aspartan3a=SUPERSEDED, aspartan3adsp=SUPERSEDED, qvirtex4lx=SUPERSEDED, qvirtex4sx=SUPERSEDED, qvirtex4fx=SUPERSEDED, qrvirtex4lx=SUPERSEDED, qrvirtex4sx=SUPERSEDED, qrvirtex4fx=SUPERSEDED, spartan6t=SUPERSEDED, spartan6=SUPERSEDED, spartan6l=SUPERSEDED, qspartan6t=SUPERSEDED, qspartan6=SUPERSEDED, aspartan6t=SUPERSEDED, aspartan6=SUPERSEDED, virtex6lx=SUPERSEDED, virtex6sx=SUPERSEDED, virtex6hx=SUPERSEDED, virtex6cx=SUPERSEDED, virtex6llx=SUPERSEDED, virtex6lsx=SUPERSEDED, qspartan6l=SUPERSEDED, qrvirtex5=SUPERSEDED, qvirtex6lx=SUPERSEDED, qvirtex6sx=SUPERSEDED, qvirtex6fx=SUPERSEDED, qvirtex6tx=SUPERSEDED)
OPTION RUN_NGCBUILD = FALSE
OPTION STYLE = HDL

IO_INTERFACE IO_IF = ps2_0, IO_TYPE = XIL_PS2_V1

## Bus Interfaces
BUS_INTERFACE BUS = SPLB, BUS_TYPE = SLAVE, BUS_STD = PLBV46

## Generics for VHDL or Parameters for Verilog
PARAMETER C_BASEADDR = 0xffffffff, DT = std_logic_vector(0 to 31), BUS = SPLB, ADDRESS = BASE, PAIR = C_HIGHADDR, MIN_SIZE = 0x200, ASSIGNMENT = REQUIRE
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector(0 to 31), BUS = SPLB, ADDRESS = HIGH, PAIR = C_BASEADDR, ASSIGNMENT = REQUIRE
PARAMETER C_SPLB_AWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_DWIDTH = 32, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_P2P = 0, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_FAMILY = virtex5, DT = STRING
PARAMETER C_IS_DUAL = 0, DT = INTEGER, RANGE = (0,1), DESC = Use Dual PS2, IO_IF = ps2_0, IO_IS = is_dual
PARAMETER C_SPLB_CLK_FREQ_HZ = 100000000, DT = INTEGER, ASSIGNMENT = REQUIRE

## Ports
PORT SPLB_Clk = "", DIR = I, SIGIS = Clk, BUS = SPLB
PORT SPLB_Rst = SPLB_Rst, DIR = I, SIGIS = Rst, BUS = SPLB
PORT PLB_ABus = PLB_ABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB
PORT PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB
PORT PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB
PORT PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB
PORT PLB_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB_MID_WIDTH-1)], BUS = SPLB
PORT PLB_abort = PLB_abort, DIR = I, BUS = SPLB
PORT PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB
PORT PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB
PORT PLB_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB_DWIDTH/8)-1)], BUS = SPLB
PORT PLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB
PORT PLB_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB
PORT PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB
PORT PLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB
PORT PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB
PORT PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB
PORT PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB
PORT PLB_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB
PORT Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB
PORT Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB
PORT Sl_wait = Sl_wait, DIR = O, BUS = SPLB
PORT Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB
PORT Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB
PORT Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB
PORT Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB
PORT Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB
PORT Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB
PORT Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB
PORT Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB
PORT Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT IP2INTC_Irpt_1 = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, INTERRUPT_PRIORITY = MEDIUM
PORT IP2INTC_Irpt_2 = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, INTERRUPT_PRIORITY = MEDIUM, ISVALID = (C_IS_DUAL==1)
PORT PS2_1_DATA_I = "", DIR = I
PORT PS2_1_DATA_O = "", DIR = O
PORT PS2_1_DATA_T = "", DIR = O
PORT PS2_1_CLK_I = "", DIR = I
PORT PS2_1_CLK_O = "", DIR = O
PORT PS2_1_CLK_T = "", DIR = O
PORT PS2_2_DATA_I = "", DIR = I, ISVALID = (C_IS_DUAL==1)
PORT PS2_2_DATA_O = "", DIR = O, ISVALID = (C_IS_DUAL==1)
PORT PS2_2_DATA_T = "", DIR = O, ISVALID = (C_IS_DUAL==1)
PORT PS2_2_CLK_I = "", DIR = I, ISVALID = (C_IS_DUAL==1)
PORT PS2_2_CLK_O = "", DIR = O, ISVALID = (C_IS_DUAL==1)
PORT PS2_2_CLK_T = "", DIR = O, ISVALID = (C_IS_DUAL==1)
PORT PS2_1_DATA = "", DIR = IO, THREE_STATE = TRUE, TRI_I = PS2_1_DATA_I, TRI_O = PS2_1_DATA_O, TRI_T = PS2_1_DATA_T, ENABLE = MULTI, PERMIT = BASE_USER, DESC = 'PS2 1 Data IO', IO_IF = ps2_0, IO_IS = ps2_1_data
PORT PS2_1_CLK = "", DIR = IO, THREE_STATE = TRUE, TRI_I = PS2_1_CLK_I, TRI_O = PS2_1_CLK_O, TRI_T = PS2_1_CLK_T, ENABLE = MULTI, PERMIT = BASE_USER, DESC = 'PS2 1 Clock IO', IO_IF = ps2_0, IO_IS = ps2_1_clk
PORT PS2_2_DATA = "", DIR = IO, THREE_STATE = TRUE, TRI_I = PS2_2_DATA_I, TRI_O = PS2_2_DATA_O, TRI_T = PS2_2_DATA_T, ENABLE = MULTI, PERMIT = BASE_USER, DESC = 'PS2 2 Data IO', IO_IF = ps2_0, IO_IS = ps2_2_data, ISVALID = (C_IS_DUAL==1)
PORT PS2_2_CLK = "", DIR = IO, THREE_STATE = TRUE, TRI_I = PS2_2_CLK_I, TRI_O = PS2_2_CLK_O, TRI_T = PS2_2_CLK_T, ENABLE = MULTI, PERMIT = BASE_USER, DESC = 'PS2 2 Clock IO', IO_IF = ps2_0, IO_IS = ps2_2_clk, ISVALID = (C_IS_DUAL==1)

END

FINISH_SINGLE_MPD

START_SINGLE_MPD lmb_bram_if_cntlr_v2_10_b 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : lmb_bram_if_cntlr
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN lmb_bram_if_cntlr

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION SPECIAL = BRAM_CNTLR
OPTION NUM_WRITE_ENABLES = 4
OPTION ADDR_SLICE = 29
OPTION DWIDTH = 32
OPTION AWIDTH = 32
OPTION USAGE_LEVEL = BASE_USER
OPTION SYSLEVEL_DRC_PROC = check_syslevel_settings
OPTION IPLEVEL_DRC_PROC = check_iplevel_settings
OPTION DESC = LMB BRAM Controller
OPTION LONG_DESC = Local Memory Bus (LMB) Block RAM (BRAM) Interface Controller connects to an lmb bus
OPTION IP_GROUP = Memory and Memory Controller:MICROBLAZE
OPTION ARCH_SUPPORT_MAP = (aspartan3=PRODUCTION, spartan3=PRODUCTION, spartan3an=PRODUCTION, spartan3a=PRODUCTION, spartan3e=PRODUCTION, spartan3adsp=PRODUCTION, virtex4lx=PRODUCTION, virtex4sx=PRODUCTION, virtex4fx=PRODUCTION, virtex5lx=PRODUCTION, virtex5sx=PRODUCTION, virtex5fx=PRODUCTION, aspartan3e=PRODUCTION, aspartan3a=PRODUCTION, aspartan3adsp=PRODUCTION, qvirtex4lx=PRODUCTION, qvirtex4sx=PRODUCTION, qvirtex4fx=PRODUCTION, qrvirtex4lx=PRODUCTION, qrvirtex4sx=PRODUCTION, qrvirtex4fx=PRODUCTION, spartan6t=PRODUCTION, spartan6=PRODUCTION, spartan6l=PRE_PRODUCTION, qspartan6t=PRODUCTION, qspartan6=PRODUCTION, aspartan6t=PRODUCTION, aspartan6=PRODUCTION, virtex6lx=PRODUCTION, virtex6sx=PRODUCTION, virtex6hx=PRODUCTION, virtex6cx=PRODUCTION, virtex6llx=PRE_PRODUCTION, virtex6lsx=PRE_PRODUCTION, qspartan6l=PRE_PRODUCTION, qrvirtex5=PRE_PRODUCTION, qvirtex6lx=PRE_PRODUCTION, qvirtex6sx=PRE_PRODUCTION, qvirtex6fx=PRE_PRODUCTION, qvirtex6tx=PRE_PRODUCTION)
OPTION HDL = MIXED
OPTION RUN_NGCBUILD = FALSE
OPTION STYLE = HDL


## Bus Interfaces
BUS_INTERFACE BUS = SLMB, BUS_STD = LMB, BUS_TYPE = SLAVE
BUS_INTERFACE BUS = BRAM_PORT, BUS_STD = XIL_BRAM, BUS_TYPE = INITIATOR

## Generics for VHDL or Parameters for Verilog
PARAMETER C_BASEADDR = 0xFFFFFFFF, DT = std_logic_vector(0 to 31), BUS = SLMB, MIN_SIZE = 0x800, ADDR_TYPE = MEMORY
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector(0 to 31), BUS = SLMB
PARAMETER C_MASK = 0x00800000, DT = std_logic_vector(0 to 31), SYSLEVEL_UPDATE_VALUE_PROC = update_syslevel_mask, ASSIGNMENT = OPTIONAL_UPDATE
PARAMETER C_LMB_AWIDTH = 32, DT = integer, BUS = SLMB, RANGE = (32:32)
PARAMETER C_LMB_DWIDTH = 32, DT = integer, BUS = SLMB, RANGE = (32:32)

## Ports
PORT LMB_Clk = "", DIR = I, SIGIS = CLK, BUS = SLMB
PORT LMB_Rst = LMB_Rst, DIR = I, BUS = SLMB
PORT LMB_ABus = LMB_ABus, DIR = I, VEC = [0:C_LMB_AWIDTH-1], BUS = SLMB
PORT LMB_WriteDBus = LMB_WriteDBus, DIR = I, VEC = [0:C_LMB_DWIDTH-1], BUS = SLMB
PORT LMB_AddrStrobe = LMB_AddrStrobe, DIR = I, BUS = SLMB
PORT LMB_ReadStrobe = LMB_ReadStrobe, DIR = I, BUS = SLMB
PORT LMB_WriteStrobe = LMB_WriteStrobe, DIR = I, BUS = SLMB
PORT LMB_BE = LMB_BE, DIR = I, VEC = [0:C_LMB_DWIDTH/8-1], BUS = SLMB
PORT Sl_DBus = Sl_DBus, DIR = O, VEC = [0:C_LMB_DWIDTH-1], BUS = SLMB
PORT Sl_Ready = Sl_Ready, DIR = O, BUS = SLMB
PORT BRAM_Rst_A = BRAM_Rst, DIR = O, BUS = BRAM_PORT
PORT BRAM_Clk_A = BRAM_Clk, DIR = O, BUS = BRAM_PORT
PORT BRAM_EN_A = BRAM_EN, DIR = O, BUS = BRAM_PORT
PORT BRAM_WEN_A = BRAM_WEN, DIR = O, VEC = [0:(C_LMB_DWIDTH/8)-1], BUS = BRAM_PORT
PORT BRAM_Addr_A = BRAM_Addr, DIR = O, VEC = [0:C_LMB_AWIDTH-1], BUS = BRAM_PORT
PORT BRAM_Din_A = BRAM_Din, DIR = I, VEC = [0:C_LMB_DWIDTH-1], BUS = BRAM_PORT
PORT BRAM_Dout_A = BRAM_Dout, DIR = O, VEC = [0:C_LMB_DWIDTH-1], BUS = BRAM_PORT

END

FINISH_SINGLE_MPD

START_SINGLE_MPD xps_sysace_v1_01_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : xps_sysace
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN xps_sysace

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION USAGE_LEVEL = BASE_USER
OPTION DESC = XPS System ACE Interface Controller(Compact Flash)
OPTION LONG_DESC = Interface between the PLBV46 and the Microprocessor Interface (MPU) of the System ACE Compact Flash solution peripheral
OPTION IP_GROUP = Memory and Memory Controller:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=PRODUCTION, spartan3=PRODUCTION, spartan3an=PRODUCTION, spartan3a=PRODUCTION, spartan3e=PRODUCTION, spartan3adsp=PRODUCTION, virtex4lx=PRODUCTION, virtex4sx=PRODUCTION, virtex4fx=PRODUCTION, virtex5lx=PRODUCTION, virtex5sx=PRODUCTION, virtex5fx=PRODUCTION, aspartan3e=PRODUCTION, aspartan3a=PRODUCTION, aspartan3adsp=PRODUCTION, qvirtex4lx=PRODUCTION, qvirtex4sx=PRODUCTION, qvirtex4fx=PRODUCTION, qrvirtex4lx=PRODUCTION, qrvirtex4sx=PRODUCTION, qrvirtex4fx=PRODUCTION, spartan6t=PRODUCTION, spartan6=PRODUCTION, spartan6l=PRE_PRODUCTION, qspartan6t=PRODUCTION, qspartan6=PRODUCTION, aspartan6t=PRODUCTION, aspartan6=PRODUCTION, virtex6lx=PRODUCTION, virtex6sx=PRODUCTION, virtex6hx=PRODUCTION, virtex6cx=PRODUCTION, virtex6llx=PRE_PRODUCTION, virtex6lsx=PRE_PRODUCTION, qspartan6l=PRE_PRODUCTION, qrvirtex5=PRE_PRODUCTION, qvirtex6lx=PRE_PRODUCTION, qvirtex6sx=PRE_PRODUCTION, qvirtex6fx=PRE_PRODUCTION, qvirtex6tx=PRE_PRODUCTION)
OPTION RUN_NGCBUILD = FALSE
OPTION STYLE = HDL

IO_INTERFACE IO_IF = sysace_0, IO_TYPE = XIL_SYSACE_V1

## Bus Interfaces
BUS_INTERFACE BUS = SPLB, BUS_TYPE = SLAVE, BUS_STD = PLBV46

## Generics for VHDL or Parameters for Verilog
PARAMETER C_BASEADDR = 0xffffffff, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_HIGHADDR, ASSIGNMENT = REQUIRE, MIN_SIZE = 0x80
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_BASEADDR, ASSIGNMENT = REQUIRE
PARAMETER C_MEM_WIDTH = 16, DT = INTEGER, RANGE = (8,16), PERMIT = BASE_USER, IO_IF = sysace_0, IO_IS = mem_data_bus_width
PARAMETER C_SPLB_AWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_DWIDTH = 32, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_P2P = 0, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_MID_WIDTH = 3, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_NUM_MASTERS = 8, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_FAMILY = virtex5, DT = STRING

## Ports
PORT SPLB_Clk = "", DIR = I, SIGIS = Clk, BUS = SPLB
PORT SPLB_Rst = SPLB_Rst, DIR = I, SIGIS = Rst, BUS = SPLB
PORT PLB_ABus = PLB_ABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB
PORT PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB
PORT PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB
PORT PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB
PORT PLB_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB_MID_WIDTH-1)], BUS = SPLB
PORT PLB_abort = PLB_abort, DIR = I, BUS = SPLB
PORT PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB
PORT PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB
PORT PLB_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB_DWIDTH/8)-1)], BUS = SPLB
PORT PLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB
PORT PLB_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB
PORT PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB
PORT PLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB
PORT PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB
PORT PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB
PORT PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB
PORT PLB_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB
PORT Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB
PORT Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB
PORT Sl_wait = Sl_wait, DIR = O, BUS = SPLB
PORT Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB
PORT Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB
PORT Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB
PORT Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB
PORT Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB
PORT Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB
PORT Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB
PORT Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB
PORT Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT SysACE_MPA = "", DIR = O, VEC = [6:0], PERMIT = BASE_USER, DESC = 'Address Input', IO_IF = sysace_0, IO_IS = address
PORT SysACE_CLK = "", DIR = I, PERMIT = BASE_USER, DESC = 'Clock Input', IO_IF = sysace_0, IO_IS = clk_in, buffer_type = BUFGP
PORT SysACE_MPIRQ = "", DIR = I, PERMIT = BASE_USER, DESC = 'Active high Interrupt Output', IO_IF = sysace_0, IO_IS = intr_out
PORT SysACE_MPD_I = "", DIR = I, VEC = [(C_MEM_WIDTH-1):0], ENDIAN = LITTLE
PORT SysACE_MPD_O = "", DIR = O, VEC = [(C_MEM_WIDTH-1):0], ENDIAN = LITTLE
PORT SysACE_MPD_T = "", DIR = O, VEC = [(C_MEM_WIDTH-1):0], ENDIAN = LITTLE
PORT SysACE_CEN = "", DIR = O, PERMIT = BASE_USER, DESC = 'Active LOW Chip Enable', IO_IF = sysace_0, IO_IS = chip_enable
PORT SysACE_OEN = "", DIR = O, PERMIT = BASE_USER, DESC = 'Active LOW Output Enable', IO_IF = sysace_0, IO_IS = output_enable
PORT SysACE_WEN = "", DIR = O, PERMIT = BASE_USER, DESC = 'Active LOW Write Enable', IO_IF = sysace_0, IO_IS = write_enable
PORT SysACE_IRQ = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, INTERRUPT_PRIORITY = LOW
PORT SysACE_MPD = "", DIR = IO, VEC = [(C_MEM_WIDTH-1):0], ENDIAN = LITTLE, THREE_STATE = TRUE, TRI_I = SysACE_MPD_I, TRI_O = SysACE_MPD_O, TRI_T = SysACE_MPD_T, ENABLE = MULTI, PERMIT = BASE_USER, DESC = 'Data Input/Output', IO_IF = sysace_0, IO_IS = data

END

FINISH_SINGLE_MPD

START_SINGLE_MPD xps_gpio_v2_00_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : xps_gpio
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN xps_gpio

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION USAGE_LEVEL = BASE_USER
OPTION DESC = XPS General Purpose IO
OPTION LONG_DESC = General Purpose Input/Output (GPIO) core for the PLBV46 bus.
OPTION IP_GROUP = General Purpose IO:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=PRODUCTION, spartan3=PRODUCTION, spartan3an=PRODUCTION, spartan3a=PRODUCTION, spartan3e=PRODUCTION, spartan3adsp=PRODUCTION, virtex4lx=PRODUCTION, virtex4sx=PRODUCTION, virtex4fx=PRODUCTION, virtex5lx=PRODUCTION, virtex5sx=PRODUCTION, virtex5fx=PRODUCTION, aspartan3e=PRODUCTION, aspartan3a=PRODUCTION, aspartan3adsp=PRODUCTION, qvirtex4lx=PRODUCTION, qvirtex4sx=PRODUCTION, qvirtex4fx=PRODUCTION, qrvirtex4lx=PRODUCTION, qrvirtex4sx=PRODUCTION, qrvirtex4fx=PRODUCTION, spartan6t=PRODUCTION, spartan6=PRODUCTION, spartan6l=PRE_PRODUCTION, qspartan6t=PRODUCTION, qspartan6=PRODUCTION, aspartan6t=PRODUCTION, aspartan6=PRODUCTION, virtex6lx=PRODUCTION, virtex6sx=PRODUCTION, virtex6hx=PRODUCTION, virtex6cx=PRODUCTION, virtex6llx=PRE_PRODUCTION, virtex6lsx=PRE_PRODUCTION, qspartan6l=PRE_PRODUCTION, qvirtex6lx=PRE_PRODUCTION, qvirtex6sx=PRE_PRODUCTION, qvirtex6fx=PRE_PRODUCTION, qvirtex6tx=PRE_PRODUCTION)
OPTION RUN_NGCBUILD = FALSE
OPTION STYLE = HDL

IO_INTERFACE IO_IF = gpio_0, IO_TYPE = XIL_GPIO_V1

## Bus Interfaces
BUS_INTERFACE BUS = SPLB, BUS_TYPE = SLAVE, BUS_STD = PLBV46

## Generics for VHDL or Parameters for Verilog
PARAMETER C_BASEADDR = 0xffffffff, DT = std_logic_vector(0 to 31), BUS = SPLB, ADDRESS = BASE, PAIR = C_HIGHADDR, MIN_SIZE = 0x200, ASSIGNMENT = REQUIRE
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector(0 to 31), BUS = SPLB, ADDRESS = HIGH, PAIR = C_BASEADDR, ASSIGNMENT = REQUIRE
PARAMETER C_SPLB_AWIDTH = 32, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_DWIDTH = 32, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_P2P = 0, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_FAMILY = virtex5, DT = STRING
PARAMETER C_ALL_INPUTS = 0, DT = INTEGER, RANGE = (0,1), PERMIT = BASE_USER, DESC = Dummy data pins are all inputs for SW usage, IO_IF = gpio_0, IO_IS = all_inputs, VALUES = (0= FALSE , 1= TRUE)
PARAMETER C_ALL_INPUTS_2 = 0, DT = INTEGER, RANGE = (0,1), DESC = GPIO2 Dummy data All Inputs for SW usage, IO_IF = gpio_0, IO_IS = all_inputs_2, VALUES = (0=FALSE, 1=TRUE), ISVALID = (C_IS_DUAL == 1)
PARAMETER C_GPIO_WIDTH = 32, DT = INTEGER, RANGE = (1:32), PERMIT = BASE_USER, DESC = GPIO Data Width, IO_IF = gpio_0, IO_IS = num_bits
PARAMETER C_GPIO2_WIDTH = 32, DT = INTEGER, RANGE = (1:32), PERMIT = BASE_USER, DESC = GPIO2 Data Width, IO_IF = gpio_0, IO_IS = num_bits_2, ISVALID = (C_IS_DUAL == 1)
PARAMETER C_INTERRUPT_PRESENT = 0, DT = INTEGER, RANGE = (0,1)
PARAMETER C_DOUT_DEFAULT = 0x00000000, DT = std_logic_vector
PARAMETER C_TRI_DEFAULT = 0xffffffff, DT = std_logic_vector
PARAMETER C_IS_DUAL = 0, DT = INTEGER, RANGE = (0,1), DESC = Use Dual GPIO, IO_IF = gpio_0, IO_IS = is_dual
PARAMETER C_DOUT_DEFAULT_2 = 0x00000000, DT = std_logic_vector, ISVALID = (C_IS_DUAL == 1)
PARAMETER C_TRI_DEFAULT_2 = 0xffffffff, DT = std_logic_vector, ISVALID = (C_IS_DUAL == 1)

## Ports
PORT SPLB_Clk = "", DIR = I, SIGIS = Clk, BUS = SPLB
PORT SPLB_Rst = SPLB_Rst, DIR = I, SIGIS = Rst, BUS = SPLB
PORT PLB_ABus = PLB_ABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB
PORT PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB
PORT PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB
PORT PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB
PORT PLB_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB_MID_WIDTH-1)], BUS = SPLB
PORT PLB_abort = PLB_abort, DIR = I, BUS = SPLB
PORT PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB
PORT PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB
PORT PLB_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB_DWIDTH/8)-1)], BUS = SPLB
PORT PLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB
PORT PLB_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB
PORT PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB
PORT PLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB
PORT PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB
PORT PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB
PORT PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB
PORT PLB_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB
PORT Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB
PORT Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB
PORT Sl_wait = Sl_wait, DIR = O, BUS = SPLB
PORT Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB
PORT Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB
PORT Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB
PORT Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB
PORT Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB
PORT Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB
PORT Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB
PORT Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB
PORT Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT IP2INTC_Irpt = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, INTERRUPT_PRIORITY = MEDIUM, ISVALID = (C_INTERRUPT_PRESENT == 1)
PORT GPIO_IO_I = "", DIR = I, VEC = [0:(C_GPIO_WIDTH-1)], IO_IF = gpio_0, IO_IS = gpio_data_in
PORT GPIO_IO_O = "", DIR = O, VEC = [0:(C_GPIO_WIDTH-1)], IO_IF = gpio_0, IO_IS = gpio_data_out
PORT GPIO_IO_T = "", DIR = O, VEC = [0:(C_GPIO_WIDTH-1)], IO_IF = gpio_0, IO_IS = gpio_tri_out
PORT GPIO2_IO_I = "", DIR = I, VEC = [0:(C_GPIO2_WIDTH-1)], ISVALID = (C_IS_DUAL == 1), IO_IF = gpio_0, IO_IS = gpio_data_in_2
PORT GPIO2_IO_O = "", DIR = O, VEC = [0:(C_GPIO2_WIDTH-1)], ISVALID = (C_IS_DUAL == 1), IO_IF = gpio_0, IO_IS = gpio_data_out_2
PORT GPIO2_IO_T = "", DIR = O, VEC = [0:(C_GPIO2_WIDTH-1)], ISVALID = (C_IS_DUAL == 1), IO_IF = gpio_0, IO_IS = gpio_tri_out_2
PORT GPIO_IO = "", DIR = IO, VEC = [0:(C_GPIO_WIDTH-1)], THREE_STATE = TRUE, TRI_I = GPIO_IO_I, TRI_O = GPIO_IO_O, TRI_T = GPIO_IO_T, ENABLE = MULTI, PERMIT = BASE_USER, DESC = 'GPIO1 Data IO', IO_IF = gpio_0, IO_IS = gpio_io
PORT GPIO2_IO = "", DIR = IO, VEC = [0:(C_GPIO2_WIDTH-1)], THREE_STATE = TRUE, TRI_I = GPIO2_IO_I, TRI_O = GPIO2_IO_O, TRI_T = GPIO2_IO_T, ENABLE = MULTI, PERMIT = BASE_USER, DESC = 'GPIO2 Data IO', IO_IF = gpio_0, IO_IS = gpio_io_2, ISVALID = (C_IS_DUAL == 1)

END

FINISH_SINGLE_MPD

START_SINGLE_MPD chipscope_icon_v1_04_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : chipscope_icon
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN chipscope_icon

## Peripheral Options
OPTION IMP_NETLIST = TRUE
OPTION IPTYPE = PERIPHERAL
OPTION STYLE = HDL
OPTION RUN_NGCBUILD = TRUE
OPTION IPLEVEL_DRC_PROC = icon_drc
OPTION ELABORATE_PROC = icon_generate
OPTION LAST_UPDATED = 12.2
OPTION DESC = Chipscope Integrated Controller
OPTION LONG_DESC = 'The Chipscope ICON core provides a communication path between the FPGA Boundary Scan port and the other Chipscope Cores OPB IBA, PLB IBA, VIO, and the ILA.'
OPTION IP_GROUP = Debug:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=PRODUCTION, spartan3=PRODUCTION, spartan3an=PRODUCTION, spartan3a=PRODUCTION, spartan3e=PRODUCTION, spartan3adsp=PRODUCTION, virtex4lx=PRODUCTION, virtex4sx=PRODUCTION, virtex4fx=PRODUCTION, virtex5lx=PRODUCTION, virtex5sx=PRODUCTION, virtex5fx=PRODUCTION, aspartan3e=PRODUCTION, aspartan3a=PRODUCTION, aspartan3adsp=PRODUCTION, qvirtex4lx=PRODUCTION, qvirtex4sx=PRODUCTION, qvirtex4fx=PRODUCTION, qrvirtex4lx=PRODUCTION, qrvirtex4sx=PRODUCTION, qrvirtex4fx=PRODUCTION, spartan6t=PRODUCTION, spartan6=PRODUCTION, spartan6l=PRE_PRODUCTION, qspartan6t=PRODUCTION, qspartan6=PRODUCTION, aspartan6t=PRODUCTION, aspartan6=PRODUCTION, virtex6lx=PRODUCTION, virtex6sx=PRODUCTION, virtex6hx=PRODUCTION, virtex6cx=PRODUCTION, virtex6llx=PRE_PRODUCTION, virtex6lsx=PRE_PRODUCTION, qspartan6l=PRE_PRODUCTION, qvirtex6lx=PRE_PRODUCTION, qvirtex6sx=PRE_PRODUCTION, qvirtex6fx=PRE_PRODUCTION, qvirtex6tx=PRE_PRODUCTION)
OPTION HDL = MIXED


## Bus Interfaces

## Generics for VHDL or Parameters for Verilog
PARAMETER C_FAMILY = virtex5, DT = string
PARAMETER C_DEVICE = xc5vlx50, DT = string
PARAMETER C_PACKAGE = ffg676, DT = string
PARAMETER C_SPEEDGRADE = -11, DT = string
PARAMETER C_NUM_CONTROL_PORTS = 1, DT = integer, RANGE = (1:15)
PARAMETER C_SYSTEM_CONTAINS_MDM = 0, DT = integer, RANGE = (0,1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_mdm_param
PARAMETER C_FORCE_BSCAN_USER_PORT = 1, DT = integer, RANGE = (1:4), VALUES = (1=USER1, 2=USER2, 3=USER3, 4=USER4), ISVALID = (([xstrncmp C_FAMILY  virtex4 ]) || ([xstrncmp C_FAMILY  virtex5 ]))

## Ports
PORT control0 = "", DIR = O, VEC = [35:0], ASSIGNMENT = REQUIRE
PORT control1 = "", DIR = O, VEC = [35:0], ISVALID = (C_NUM_CONTROL_PORTS > 1)
PORT control2 = "", DIR = O, VEC = [35:0], ISVALID = (C_NUM_CONTROL_PORTS > 2)
PORT control3 = "", DIR = O, VEC = [35:0], ISVALID = (C_NUM_CONTROL_PORTS > 3)
PORT control4 = "", DIR = O, VEC = [35:0], ISVALID = (C_NUM_CONTROL_PORTS > 4)
PORT control5 = "", DIR = O, VEC = [35:0], ISVALID = (C_NUM_CONTROL_PORTS > 5)
PORT control6 = "", DIR = O, VEC = [35:0], ISVALID = (C_NUM_CONTROL_PORTS > 6)
PORT control7 = "", DIR = O, VEC = [35:0], ISVALID = (C_NUM_CONTROL_PORTS > 7)
PORT control8 = "", DIR = O, VEC = [35:0], ISVALID = (C_NUM_CONTROL_PORTS > 8)
PORT control9 = "", DIR = O, VEC = [35:0], ISVALID = (C_NUM_CONTROL_PORTS > 9)
PORT control10 = "", DIR = O, VEC = [35:0], ISVALID = (C_NUM_CONTROL_PORTS > 10)
PORT control11 = "", DIR = O, VEC = [35:0], ISVALID = (C_NUM_CONTROL_PORTS > 11)
PORT control12 = "", DIR = O, VEC = [35:0], ISVALID = (C_NUM_CONTROL_PORTS > 12)
PORT control13 = "", DIR = O, VEC = [35:0], ISVALID = (C_NUM_CONTROL_PORTS > 13)
PORT control14 = "", DIR = O, VEC = [35:0], ISVALID = (C_NUM_CONTROL_PORTS > 14)
PORT control15 = "", DIR = O, VEC = [35:0], ISVALID = (C_NUM_CONTROL_PORTS > 15)
PORT tdi_in = bscan_tdi, DIR = I
PORT reset_in = bscan_reset, DIR = I
PORT shift_in = bscan_shift, DIR = I
PORT update_in = bscan_update, DIR = I
PORT sel_in = bscan_sel1, DIR = I
PORT drck_in = bscan_drck1, DIR = I
PORT tdo_out = bscan_tdo1, DIR = O

END

FINISH_SINGLE_MPD

START_SINGLE_MPD chipscope_ila_v1_03_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : chipscope_ila
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN chipscope_ila

## Peripheral Options
OPTION IMP_NETLIST = TRUE
OPTION IPTYPE = PERIPHERAL
OPTION STYLE = MIX
OPTION RUN_NGCBUILD = TRUE
OPTION IPLEVEL_DRC_PROC = ila_drc
OPTION ELABORATE_PROC = ila_generate
OPTION LAST_UPDATED = 12.2
OPTION DESC = Chipscope Integrated Logic Analyzer (ILA)
OPTION LONG_DESC = The Chipscope Integrated Logic Analyzer (ILA) core is used to monitor internal FPGA signals in real time.
OPTION IP_GROUP = Debug:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=PRODUCTION, spartan3=PRODUCTION, spartan3an=PRODUCTION, spartan3a=PRODUCTION, spartan3e=PRODUCTION, spartan3adsp=PRODUCTION, virtex4lx=PRODUCTION, virtex4sx=PRODUCTION, virtex4fx=PRODUCTION, virtex5lx=PRODUCTION, virtex5sx=PRODUCTION, virtex5fx=PRODUCTION, aspartan3e=PRODUCTION, aspartan3a=PRODUCTION, aspartan3adsp=PRODUCTION, qvirtex4lx=PRODUCTION, qvirtex4sx=PRODUCTION, qvirtex4fx=PRODUCTION, qrvirtex4lx=PRODUCTION, qrvirtex4sx=PRODUCTION, qrvirtex4fx=PRODUCTION, spartan6t=PRODUCTION, spartan6=PRODUCTION, spartan6l=PRE_PRODUCTION, qspartan6t=PRODUCTION, qspartan6=PRODUCTION, aspartan6t=PRODUCTION, aspartan6=PRODUCTION, virtex6lx=PRODUCTION, virtex6sx=PRODUCTION, virtex6hx=PRODUCTION, virtex6cx=PRODUCTION, virtex6llx=PRE_PRODUCTION, virtex6lsx=PRE_PRODUCTION, qspartan6l=PRE_PRODUCTION, qvirtex6lx=PRE_PRODUCTION, qvirtex6sx=PRE_PRODUCTION, qvirtex6fx=PRE_PRODUCTION, qvirtex6tx=PRE_PRODUCTION)
OPTION HDL = MIXED


## Bus Interfaces

## Generics for VHDL or Parameters for Verilog
PARAMETER C_FAMILY = virtex5, DT = string
PARAMETER C_DEVICE = xc5vlx50, DT = string
PARAMETER C_PACKAGE = ffg676, DT = string
PARAMETER C_SPEEDGRADE = -11, DT = string
PARAMETER C_NUM_DATA_SAMPLES = 1024, DT = integer, RANGE = (512, 1024, 2048, 4096, 8192, 16384, 32768, 65536, 131072)
PARAMETER C_DATA_SAME_AS_TRIGGER = 1, DT = integer, RANGE = (0,1)
PARAMETER C_DATA_IN_WIDTH = 32, DT = integer, RANGE = (1:1024), ISVALID = (C_DATA_SAME_AS_TRIGGER == 0)
PARAMETER C_ENABLE_TRIGGER_OUT = 1, DT = integer, RANGE = (0,1)
PARAMETER C_DISABLE_RPM = 0, DT = integer, RANGE = (0,1)
PARAMETER C_RISING_CLOCK_EDGE = 1, DT = integer, RANGE = (0,1)
PARAMETER C_MAX_SEQUENCER_LEVELS = 1, DT = integer, RANGE = (1:16)
PARAMETER C_ENABLE_STORAGE_QUALIFICATION = 1, DT = integer, RANGE = (0,1)
PARAMETER C_TRIG0_UNITS = 1, DT = integer, RANGE = (0:16)
PARAMETER C_TRIG0_TRIGGER_IN_WIDTH = 8, DT = integer, RANGE = (1:1024), ISVALID = (C_TRIG0_UNITS >= 1)
PARAMETER C_TRIG0_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32), ISVALID = (C_TRIG0_UNITS >= 1)
PARAMETER C_TRIG0_UNIT_MATCH_TYPE = basic, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended=extended, extended with edges=extended with edges, range=range, range with edges=range with edges), ISVALID = (C_TRIG0_UNITS >= 1)
PARAMETER C_TRIG1_UNITS = 0, DT = integer, RANGE = (0:16)
PARAMETER C_TRIG1_TRIGGER_IN_WIDTH = 8, DT = integer, RANGE = (1:1024), ISVALID = (C_TRIG1_UNITS >= 1)
PARAMETER C_TRIG1_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32), ISVALID = (C_TRIG1_UNITS >= 1)
PARAMETER C_TRIG1_UNIT_MATCH_TYPE = basic, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended=extended, extended with edges=extended with edges, range=range, range with edges=range with edges), ISVALID = (C_TRIG1_UNITS >= 1)
PARAMETER C_TRIG2_UNITS = 0, DT = integer, RANGE = (0:16)
PARAMETER C_TRIG2_TRIGGER_IN_WIDTH = 8, DT = integer, RANGE = (1:1024), ISVALID = (C_TRIG2_UNITS >= 1)
PARAMETER C_TRIG2_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32), ISVALID = (C_TRIG2_UNITS >= 1)
PARAMETER C_TRIG2_UNIT_MATCH_TYPE = basic, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended=extended, extended with edges=extended with edges, range=range, range with edges=range with edges), ISVALID = (C_TRIG2_UNITS >= 1)
PARAMETER C_TRIG3_UNITS = 0, DT = integer, RANGE = (0:16)
PARAMETER C_TRIG3_TRIGGER_IN_WIDTH = 8, DT = integer, RANGE = (1:1024), ISVALID = (C_TRIG3_UNITS >= 1)
PARAMETER C_TRIG3_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32), ISVALID = (C_TRIG3_UNITS >= 1)
PARAMETER C_TRIG3_UNIT_MATCH_TYPE = basic, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended=extended, extended with edges=extended with edges, range=range, range with edges=range with edges), ISVALID = (C_TRIG3_UNITS >= 1)
PARAMETER C_TRIG4_UNITS = 0, DT = integer, RANGE = (0:16)
PARAMETER C_TRIG4_TRIGGER_IN_WIDTH = 8, DT = integer, RANGE = (1:1024), ISVALID = (C_TRIG4_UNITS >= 1)
PARAMETER C_TRIG4_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32), ISVALID = (C_TRIG4_UNITS >= 1)
PARAMETER C_TRIG4_UNIT_MATCH_TYPE = basic, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended=extended, extended with edges=extended with edges, range=range, range with edges=range with edges), ISVALID = (C_TRIG4_UNITS >= 1)
PARAMETER C_TRIG5_UNITS = 0, DT = integer, RANGE = (0:16)
PARAMETER C_TRIG5_TRIGGER_IN_WIDTH = 8, DT = integer, RANGE = (1:1024), ISVALID = (C_TRIG5_UNITS >= 1)
PARAMETER C_TRIG5_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32), ISVALID = (C_TRIG5_UNITS >= 1)
PARAMETER C_TRIG5_UNIT_MATCH_TYPE = basic, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended=extended, extended with edges=extended with edges, range=range, range with edges=range with edges), ISVALID = (C_TRIG5_UNITS >= 1)
PARAMETER C_TRIG6_UNITS = 0, DT = integer, RANGE = (0:16)
PARAMETER C_TRIG6_TRIGGER_IN_WIDTH = 8, DT = integer, RANGE = (1:1024), ISVALID = (C_TRIG6_UNITS >= 1)
PARAMETER C_TRIG6_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32), ISVALID = (C_TRIG6_UNITS >= 1)
PARAMETER C_TRIG6_UNIT_MATCH_TYPE = basic, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended=extended, extended with edges=extended with edges, range=range, range with edges=range with edges), ISVALID = (C_TRIG6_UNITS >= 1)
PARAMETER C_TRIG7_UNITS = 0, DT = integer, RANGE = (0:16)
PARAMETER C_TRIG7_TRIGGER_IN_WIDTH = 8, DT = integer, RANGE = (1:1024), ISVALID = (C_TRIG7_UNITS >= 1)
PARAMETER C_TRIG7_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32), ISVALID = (C_TRIG7_UNITS >= 1)
PARAMETER C_TRIG7_UNIT_MATCH_TYPE = basic, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended=extended, extended with edges=extended with edges, range=range, range with edges=range with edges), ISVALID = (C_TRIG7_UNITS >= 1)
PARAMETER C_TRIG8_UNITS = 0, DT = integer, RANGE = (0:16)
PARAMETER C_TRIG8_TRIGGER_IN_WIDTH = 8, DT = integer, RANGE = (1:1024), ISVALID = (C_TRIG8_UNITS >= 1)
PARAMETER C_TRIG8_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32), ISVALID = (C_TRIG8_UNITS >= 1)
PARAMETER C_TRIG8_UNIT_MATCH_TYPE = basic, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended=extended, extended with edges=extended with edges, range=range, range with edges=range with edges), ISVALID = (C_TRIG8_UNITS >= 1)
PARAMETER C_TRIG9_UNITS = 0, DT = integer, RANGE = (0:16)
PARAMETER C_TRIG9_TRIGGER_IN_WIDTH = 8, DT = integer, RANGE = (1:1024), ISVALID = (C_TRIG9_UNITS >= 1)
PARAMETER C_TRIG9_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32), ISVALID = (C_TRIG9_UNITS >= 1)
PARAMETER C_TRIG9_UNIT_MATCH_TYPE = basic, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended=extended, extended with edges=extended with edges, range=range, range with edges=range with edges), ISVALID = (C_TRIG9_UNITS >= 1)
PARAMETER C_TRIG10_UNITS = 0, DT = integer, RANGE = (0:16)
PARAMETER C_TRIG10_TRIGGER_IN_WIDTH = 8, DT = integer, RANGE = (1:1024), ISVALID = (C_TRIG10_UNITS >= 1)
PARAMETER C_TRIG10_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32), ISVALID = (C_TRIG10_UNITS >= 1)
PARAMETER C_TRIG10_UNIT_MATCH_TYPE = basic, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended=extended, extended with edges=extended with edges, range=range, range with edges=range with edges), ISVALID = (C_TRIG10_UNITS >= 1)
PARAMETER C_TRIG11_UNITS = 0, DT = integer, RANGE = (0:16)
PARAMETER C_TRIG11_TRIGGER_IN_WIDTH = 8, DT = integer, RANGE = (1:1024), ISVALID = (C_TRIG11_UNITS >= 1)
PARAMETER C_TRIG11_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32), ISVALID = (C_TRIG11_UNITS >= 1)
PARAMETER C_TRIG11_UNIT_MATCH_TYPE = basic, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended=extended, extended with edges=extended with edges, range=range, range with edges=range with edges), ISVALID = (C_TRIG11_UNITS >= 1)
PARAMETER C_TRIG12_UNITS = 0, DT = integer, RANGE = (0:16)
PARAMETER C_TRIG12_TRIGGER_IN_WIDTH = 8, DT = integer, RANGE = (1:1024), ISVALID = (C_TRIG12_UNITS >= 1)
PARAMETER C_TRIG12_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32), ISVALID = (C_TRIG12_UNITS >= 1)
PARAMETER C_TRIG12_UNIT_MATCH_TYPE = basic, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended=extended, extended with edges=extended with edges, range=range, range with edges=range with edges), ISVALID = (C_TRIG12_UNITS >= 1)
PARAMETER C_TRIG13_UNITS = 0, DT = integer, RANGE = (0:16)
PARAMETER C_TRIG13_TRIGGER_IN_WIDTH = 8, DT = integer, RANGE = (1:1024), ISVALID = (C_TRIG13_UNITS >= 1)
PARAMETER C_TRIG13_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32), ISVALID = (C_TRIG13_UNITS >= 1)
PARAMETER C_TRIG13_UNIT_MATCH_TYPE = basic, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended=extended, extended with edges=extended with edges, range=range, range with edges=range with edges), ISVALID = (C_TRIG13_UNITS >= 1)
PARAMETER C_TRIG14_UNITS = 0, DT = integer, RANGE = (0:16)
PARAMETER C_TRIG14_TRIGGER_IN_WIDTH = 8, DT = integer, RANGE = (1:1024), ISVALID = (C_TRIG14_UNITS >= 1)
PARAMETER C_TRIG14_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32), ISVALID = (C_TRIG14_UNITS >= 1)
PARAMETER C_TRIG14_UNIT_MATCH_TYPE = basic, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended=extended, extended with edges=extended with edges, range=range, range with edges=range with edges), ISVALID = (C_TRIG14_UNITS >= 1)
PARAMETER C_TRIG15_UNITS = 0, DT = integer, RANGE = (0:16)
PARAMETER C_TRIG15_TRIGGER_IN_WIDTH = 8, DT = integer, RANGE = (1:1024), ISVALID = (C_TRIG15_UNITS >= 1)
PARAMETER C_TRIG15_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32), ISVALID = (C_TRIG15_UNITS >= 1)
PARAMETER C_TRIG15_UNIT_MATCH_TYPE = basic, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended=extended, extended with edges=extended with edges, range=range, range with edges=range with edges), ISVALID = (C_TRIG15_UNITS >= 1)

## Ports
PORT CHIPSCOPE_ILA_CONTROL = "", DIR = I, VEC = [35:0]
PORT CLK = "", DIR = I, SIGIS = CLK
PORT DATA = "", DIR = I, VEC = [(C_DATA_IN_WIDTH-1):0]
PORT TRIG0 = "", DIR = I, VEC = [(C_TRIG0_TRIGGER_IN_WIDTH-1):0], ISVALID = (C_TRIG0_UNITS >= 1)
PORT TRIG1 = "", DIR = I, VEC = [(C_TRIG1_TRIGGER_IN_WIDTH-1):0], ISVALID = (C_TRIG1_UNITS >= 1)
PORT TRIG2 = "", DIR = I, VEC = [(C_TRIG2_TRIGGER_IN_WIDTH-1):0], ISVALID = (C_TRIG2_UNITS >= 1)
PORT TRIG3 = "", DIR = I, VEC = [(C_TRIG3_TRIGGER_IN_WIDTH-1):0], ISVALID = (C_TRIG3_UNITS >= 1)
PORT TRIG4 = "", DIR = I, VEC = [(C_TRIG4_TRIGGER_IN_WIDTH-1):0], ISVALID = (C_TRIG4_UNITS >= 1)
PORT TRIG5 = "", DIR = I, VEC = [(C_TRIG5_TRIGGER_IN_WIDTH-1):0], ISVALID = (C_TRIG5_UNITS >= 1)
PORT TRIG6 = "", DIR = I, VEC = [(C_TRIG6_TRIGGER_IN_WIDTH-1):0], ISVALID = (C_TRIG6_UNITS >= 1)
PORT TRIG7 = "", DIR = I, VEC = [(C_TRIG7_TRIGGER_IN_WIDTH-1):0], ISVALID = (C_TRIG7_UNITS >= 1)
PORT TRIG8 = "", DIR = I, VEC = [(C_TRIG8_TRIGGER_IN_WIDTH-1):0], ISVALID = (C_TRIG8_UNITS >= 1)
PORT TRIG9 = "", DIR = I, VEC = [(C_TRIG9_TRIGGER_IN_WIDTH-1):0], ISVALID = (C_TRIG9_UNITS >= 1)
PORT TRIG10 = "", DIR = I, VEC = [(C_TRIG10_TRIGGER_IN_WIDTH-1):0], ISVALID = (C_TRIG10_UNITS >= 1)
PORT TRIG11 = "", DIR = I, VEC = [(C_TRIG11_TRIGGER_IN_WIDTH-1):0], ISVALID = (C_TRIG11_UNITS >= 1)
PORT TRIG12 = "", DIR = I, VEC = [(C_TRIG12_TRIGGER_IN_WIDTH-1):0], ISVALID = (C_TRIG12_UNITS >= 1)
PORT TRIG13 = "", DIR = I, VEC = [(C_TRIG13_TRIGGER_IN_WIDTH-1):0], ISVALID = (C_TRIG13_UNITS >= 1)
PORT TRIG14 = "", DIR = I, VEC = [(C_TRIG14_TRIGGER_IN_WIDTH-1):0], ISVALID = (C_TRIG14_UNITS >= 1)
PORT TRIG15 = "", DIR = I, VEC = [(C_TRIG15_TRIGGER_IN_WIDTH-1):0], ISVALID = (C_TRIG15_UNITS >= 1)
PORT TRIG_OUT = "", DIR = O

END

FINISH_SINGLE_MPD

START_SINGLE_MPD chipscope_plbv46_iba_v1_03_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : chipscope_plbv46_iba
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN chipscope_plbv46_iba

## Peripheral Options
OPTION IMP_NETLIST = TRUE
OPTION IPTYPE = PERIPHERAL
OPTION STYLE = MIX
OPTION RUN_NGCBUILD = TRUE
OPTION IPLEVEL_DRC_PROC = plbv46_iba_drc
OPTION ELABORATE_PROC = plbv46_iba_generate
OPTION LAST_UPDATED = 12.2
OPTION DESC = Chipscope PLBv46 Integrated Bus Analyzer (IBA)
OPTION LONG_DESC = Chipscope PLBv46 Bus Analyzer
OPTION IP_GROUP = Debug:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=PRODUCTION, spartan3=PRODUCTION, spartan3an=PRODUCTION, spartan3a=PRODUCTION, spartan3e=PRODUCTION, spartan3adsp=PRODUCTION, virtex4lx=PRODUCTION, virtex4sx=PRODUCTION, virtex4fx=PRODUCTION, virtex5lx=PRODUCTION, virtex5sx=PRODUCTION, virtex5fx=PRODUCTION, aspartan3e=PRODUCTION, aspartan3a=PRODUCTION, aspartan3adsp=PRODUCTION, qvirtex4lx=PRODUCTION, qvirtex4sx=PRODUCTION, qvirtex4fx=PRODUCTION, qrvirtex4lx=PRODUCTION, qrvirtex4sx=PRODUCTION, qrvirtex4fx=PRODUCTION, spartan6t=PRODUCTION, spartan6=PRODUCTION, spartan6l=PRE_PRODUCTION, qspartan6t=PRODUCTION, qspartan6=PRODUCTION, aspartan6t=PRODUCTION, aspartan6=PRODUCTION, virtex6lx=PRODUCTION, virtex6sx=PRODUCTION, virtex6hx=PRODUCTION, virtex6cx=PRODUCTION, virtex6llx=PRE_PRODUCTION, virtex6lsx=PRE_PRODUCTION, qspartan6l=PRE_PRODUCTION, qvirtex6lx=PRE_PRODUCTION, qvirtex6sx=PRE_PRODUCTION, qvirtex6fx=PRE_PRODUCTION, qvirtex6tx=PRE_PRODUCTION)
OPTION HDL = MIXED


## Bus Interfaces
BUS_INTERFACE BUS = MON_PLB, BUS_STD = PLBV46, BUS_TYPE = MONITOR

## Generics for VHDL or Parameters for Verilog
PARAMETER C_FAMILY = virtex5, DT = string
PARAMETER C_DEVICE = xc5vlx50, DT = string
PARAMETER C_PACKAGE = ff1136, DT = string
PARAMETER C_SPEEDGRADE = -3, DT = string
PARAMETER C_PLBV46_NUM_MASTERS = 1, DT = integer, BUS = MON_PLB
PARAMETER C_PLBV46_NUM_SLAVES = 1, DT = integer, BUS = MON_PLB
PARAMETER C_PLBV46_MID_WIDTH = 1, DT = integer, BUS = MON_PLB, RANGE = (1:5)
PARAMETER C_PLBV46_AWIDTH = 32, DT = integer, BUS = MON_PLB, RANGE = (32:64)
PARAMETER C_PLBV46_DWIDTH = 64, DT = integer, BUS = MON_PLB, RANGE = (32,64,128)
PARAMETER C_NUM_DATA_SAMPLES = 1024, DT = integer, RANGE = (512,1024,2048,4096,8192,16384,32768,65536,131072)
PARAMETER C_MAX_SEQUENCER_LEVELS = 2, DT = integer, RANGE = (0:16)
PARAMETER C_ENABLE_STORAGE_QUALIFICATION = 1, DT = integer, RANGE = (0,1)
PARAMETER C_ENABLE_TRIGGER_OUT = 0, DT = integer, RANGE = (0,1)
PARAMETER C_USE_MU_1A_RST_ERR_STAT = 1, DT = integer, RANGE = (0,1)
PARAMETER C_USE_MU_1B_MSTR_RST_ERR_STAT = 0, DT = integer, RANGE = (0,1)
PARAMETER C_USE_MU_1C_TRIG_IN = 0, DT = integer, RANGE = (0,1)
PARAMETER C_MU_1_TRIG_IN_WIDTH = 1, DT = integer, RANGE = (1:189)
PARAMETER C_MU_1_TYPE_TRIG_RST_ERR_STAT = basic with edges, DT = string, VALUES = (basic=basic, basic with edges=basic with edges)
PARAMETER C_MU_1_CNT_W_TRIG_RST_ERR_STAT = 0, DT = integer, RANGE = (0:32)
PARAMETER C_MU_1_EN_STORE_TRIG_RST_ERR_STAT = 1, DT = integer, RANGE = (0,1), ISVALID = ((C_USE_MU_1A_RST_ERR_STAT>=1) || (C_USE_MU_1B_MSTR_RST_ERR_STAT>=1) || (C_USE_MU_1C_TRIG_IN>=1))
PARAMETER C_USE_MU_2A_STD_CTL = 1, DT = integer, RANGE = (0,1)
PARAMETER C_USE_MU_2B_SIZE_BE = 0, DT = integer, RANGE = (0,1)
PARAMETER C_USE_MU_2C_TATTR = 0, DT = integer, RANGE = (0,1)
PARAMETER C_MU_2_NUM_GRP_CTL = 1, DT = integer, RANGE = (1,2)
PARAMETER C_MU_2_TYPE_GRP_CTL = basic with edges, DT = string, VALUES = (basic=basic, basic with edges=basic with edges)
PARAMETER C_MU_2_CNT_W_GRP_CTL = 0, DT = integer, RANGE = (0:32)
PARAMETER C_MU_2_EN_STORE_GRP_CTL = 1, DT = integer, RANGE = (0,1), ISVALID = (C_USE_MU_2A_STD_CTL>=1)
PARAMETER C_USE_MU_3A_ABUS = 1, DT = integer, RANGE = (0,1)
PARAMETER C_USE_MU_3B_UABUS = 0, DT = integer, RANGE = (0,1)
PARAMETER C_MU_3_TYPE_ADDR = range with edges, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended=extended, extended with edges=extended with edges, range=range, range with edges=range with edges)
PARAMETER C_MU_3_CNT_W_ADDR = 0, DT = integer, RANGE = (0:32)
PARAMETER C_MU_3_EN_STORE_ADDR = 1, DT = integer, RANGE = (0,1), ISVALID = ((C_USE_MU_3A_ABUS>=1) || (C_USE_MU_3B_UABUS>=1))
PARAMETER C_USE_MU_4_WR_DBUS = 0, DT = integer, RANGE = (0,1)
PARAMETER C_MU_4_TYPE_WR_DBUS = extended with edges, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended=extended, extended with edges=extended with edges, range=range, range with edges=range with edges)
PARAMETER C_MU_4_CNT_W_WR_DBUS = 0, DT = integer, RANGE = (0:32)
PARAMETER C_MU_4_EN_STORE_WR_DBUS = 1, DT = integer, RANGE = (0,1), ISVALID = (C_USE_MU_4_WR_DBUS>=1)
PARAMETER C_USE_MU_5_RD_DBUS = 0, DT = integer, RANGE = (0,1)
PARAMETER C_MU_5_TYPE_RD_DBUS = extended with edges, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended=extended, extended with edges=extended with edges, range=range, range with edges=range with edges)
PARAMETER C_MU_5_CNT_W_RD_DBUS = 0, DT = integer, RANGE = (0:32)
PARAMETER C_MU_5_EN_STORE_RD_DBUS = 1, DT = integer, RANGE = (0,1), ISVALID = (C_USE_MU_5_RD_DBUS>=1)
PARAMETER C_USE_MU_6A_SLV_CTL = 0, DT = integer, RANGE = (0,1)
PARAMETER C_USE_MU_6B_SLV_SZ_WADDR = 0, DT = integer, RANGE = (0,1)
PARAMETER C_MU_6_NUM_SLV_CTL_BUS = 1, DT = integer, RANGE = (1,2)
PARAMETER C_MU_6_TYPE_SLV_CTL_BUS = basic with edges, DT = string, VALUES = (basic=basic, basic with edges=basic with edges)
PARAMETER C_MU_6_CNT_W_SLV_CTL_BUS = 0, DT = integer, RANGE = (0:32)
PARAMETER C_MU_6_EN_STORE_SLV_CTL_BUS = 1, DT = integer, RANGE = (0,1), ISVALID = ((C_USE_MU_6A_SLV_CTL>=1)||(C_USE_MU_6B_SLV_SZ_WADDR>=1))
PARAMETER C_USE_MU_7_SLV_BSY = 0, DT = integer, RANGE = (0,1)
PARAMETER C_MU_7_TYPE_SLV_BSY = basic with edges, DT = string, VALUES = (basic=basic, basic with edges=basic with edges)
PARAMETER C_MU_7_CNT_W_SLV_BSY = 0, DT = integer, RANGE = (0:32)
PARAMETER C_MU_7_EN_STORE_SLV_BSY = 1, DT = integer, RANGE = (0,1), ISVALID = (C_USE_MU_7_SLV_BSY>=1)
PARAMETER C_USE_MU_8_SLV_RD_ERR = 0, DT = integer, RANGE = (0,1)
PARAMETER C_MU_8_TYPE_SLV_RD_ERR = basic with edges, DT = string, VALUES = (basic=basic, basic with edges=basic with edges)
PARAMETER C_MU_8_CNT_W_SLV_RD_ERR = 0, DT = integer, RANGE = (0:32)
PARAMETER C_MU_8_EN_STORE_SLV_RD_ERR = 1, DT = integer, RANGE = (0,1), ISVALID = (C_USE_MU_8_SLV_RD_ERR>=1)
PARAMETER C_USE_MU_9_SLV_WR_ERR = 0, DT = integer, RANGE = (0,1)
PARAMETER C_MU_9_TYPE_SLV_WR_ERR = basic with edges, DT = string, VALUES = (basic=basic, basic with edges=basic with edges)
PARAMETER C_MU_9_CNT_W_SLV_WR_ERR = 0, DT = integer, RANGE = (0:32)
PARAMETER C_MU_9_EN_STORE_SLV_WR_ERR = 1, DT = integer, RANGE = (0,1), ISVALID = (C_USE_MU_9_SLV_WR_ERR>=1)
PARAMETER C_USE_MU_10_ARB_CTL = 0, DT = integer, RANGE = (0,1)
PARAMETER C_MU_10_TYPE_ARB_CTL = basic with edges, DT = string, VALUES = (basic=basic, basic with edges=basic with edges)
PARAMETER C_MU_10_CNT_W_ARB_CTL = 0, DT = integer, RANGE = (0:32)
PARAMETER C_MU_10_EN_STORE_ARB_CTL = 1, DT = integer, RANGE = (0,1), ISVALID = (C_USE_MU_10_ARB_CTL>=1)
PARAMETER C_USE_MU_11_MSTR_CTL = 0, DT = integer, RANGE = (0,1)
PARAMETER C_MU_11_NUM_MSTR_CTL = 1, DT = integer, RANGE = (1,2)
PARAMETER C_MU_11_TYPE_MSTR_CTL = basic with edges, DT = string, VALUES = (basic=basic, basic with edges=basic with edges)
PARAMETER C_MU_11_CNT_W_MSTR_CTL = 0, DT = integer, RANGE = (0:32)
PARAMETER C_MU_11_EN_STORE_MSTR_CTL = 1, DT = integer, RANGE = (0,1), ISVALID = (C_USE_MU_11_MSTR_CTL>=1)
PARAMETER C_USE_MU_12_MSTR_SZ = 0, DT = integer, RANGE = (0,1)
PARAMETER C_MU_12_TYPE_MSTR_SZ = basic with edges, DT = string, VALUES = (basic=basic, basic with edges=basic with edges)
PARAMETER C_MU_12_CNT_W_MSTR_SZ = 0, DT = integer, RANGE = (0:32)
PARAMETER C_MU_12_EN_STORE_MSTR_SZ = 1, DT = integer, RANGE = (0,1), ISVALID = (C_USE_MU_12_MSTR_SZ>=1)
PARAMETER C_USE_MU_13_MSTR_BE = 0, DT = integer, RANGE = (0,1)
PARAMETER C_MU_13_TYPE_MSTR_BE = basic with edges, DT = string, VALUES = (basic=basic, basic with edges=basic with edges)
PARAMETER C_MU_13_CNT_W_MSTR_BE = 0, DT = integer, RANGE = (0:32)
PARAMETER C_MU_13_EN_STORE_MSTR_BE = 1, DT = integer, RANGE = (0,1), ISVALID = (C_USE_MU_13_MSTR_BE>=1)

## Ports
PORT chipscope_icon_control = "", DIR = I, VEC = [35:0]
PORT iba_trig_out = "", DIR = O, ISVALID = (C_ENABLE_TRIGGER_OUT >= 1)
PORT PLB_Clk = "", DIR = I, SIGIS = CLK, BUS = MON_PLB
PORT iba_trig_in = "", DIR = I, VEC = [0:(C_MU_1_TRIG_IN_WIDTH)-1], ISVALID = (C_USE_MU_1C_TRIG_IN >= 1)
PORT PLB_Rst = PLB_Rst, DIR = I, BUS = MON_PLB
PORT Bus_Error_Det = Bus_Error_Det, DIR = I, BUS = MON_PLB
PORT PLB_lockErr = PLB_lockErr, DIR = I, BUS = MON_PLB
PORT PLB_MRdErr = PLB_MRdErr, DIR = I, VEC = [0:(C_PLBV46_NUM_MASTERS)-1], BUS = MON_PLB
PORT PLB_MWrErr = PLB_MWrErr, DIR = I, VEC = [0:(C_PLBV46_NUM_MASTERS)-1], BUS = MON_PLB
PORT PLB_MIRQ = PLB_MIRQ, DIR = I, VEC = [0:(C_PLBV46_NUM_MASTERS)-1], BUS = MON_PLB
PORT PLB_MTimeout = PLB_MTimeout, DIR = I, VEC = [0:(C_PLBV46_NUM_MASTERS)-1], BUS = MON_PLB
PORT PLB_PAValid = PLB_PAValid, DIR = I, BUS = MON_PLB
PORT PLB_SAValid = PLB_SAValid, DIR = I, BUS = MON_PLB
PORT PLB_busLock = PLB_busLock, DIR = I, BUS = MON_PLB
PORT PLB_abort = PLB_abort, DIR = I, BUS = MON_PLB
PORT PLB_Swait = PLB_Swait, DIR = I, BUS = MON_PLB
PORT PLB_SaddrAck = PLB_SaddrAck, DIR = I, BUS = MON_PLB
PORT PLB_Srearbitrate = PLB_Srearbitrate, DIR = I, BUS = MON_PLB
PORT PLB_RNW = PLB_RNW, DIR = I, BUS = MON_PLB
PORT PLB_SwrDAck = PLB_SwrDAck, DIR = I, BUS = MON_PLB
PORT PLB_SwrComp = PLB_SwrComp, DIR = I, BUS = MON_PLB
PORT PLB_SwrBTerm = PLB_SwrBTerm, DIR = I, BUS = MON_PLB
PORT PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = MON_PLB
PORT PLB_SrdDAck = PLB_SrdDAck, DIR = I, BUS = MON_PLB
PORT PLB_SrdComp = PLB_SrdComp, DIR = I, BUS = MON_PLB
PORT PLB_SrdBTerm = PLB_SrdBTerm, DIR = I, BUS = MON_PLB
PORT PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = MON_PLB
PORT PLB_size = PLB_size, DIR = I, VEC = [0:4-1], BUS = MON_PLB
PORT PLB_type = PLB_type, DIR = I, VEC = [0:3-1], BUS = MON_PLB
PORT PLB_MSize = PLB_MSize, DIR = I, VEC = [0:2-1], BUS = MON_PLB
PORT PLB_masterID = PLB_masterID, DIR = I, VEC = [0:(C_PLBV46_MID_WIDTH)-1], BUS = MON_PLB
PORT PLB_BE = PLB_BE, DIR = I, VEC = [0:((C_PLBV46_DWIDTH)/8)-1], BUS = MON_PLB
PORT PLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:16-1], BUS = MON_PLB
PORT PLB_ABus = PLB_ABus, DIR = I, VEC = [0:32-1], BUS = MON_PLB
PORT PLB_UABus = PLB_UABus, DIR = I, VEC = [0:32-1], BUS = MON_PLB
PORT PLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_PLBV46_DWIDTH)-1], BUS = MON_PLB
PORT PLB_SrdDBus = PLB_SrdDBus, DIR = I, VEC = [0:(C_PLBV46_DWIDTH)-1], BUS = MON_PLB
PORT PLB_rdPrim = PLB_rdPrim, DIR = I, VEC = [0:(C_PLBV46_NUM_SLAVES)-1], BUS = MON_PLB
PORT PLB_wrPrim = PLB_wrPrim, DIR = I, VEC = [0:(C_PLBV46_NUM_SLAVES)-1], BUS = MON_PLB
PORT Sl_AddrAck = Sl_AddrAck, DIR = I, VEC = [0:(C_PLBV46_NUM_SLAVES)-1], BUS = MON_PLB
PORT Sl_Rearbitrate = Sl_Rearbitrate, DIR = I, VEC = [0:(C_PLBV46_NUM_SLAVES)-1], BUS = MON_PLB
PORT Sl_wait = Sl_wait, DIR = I, VEC = [0:(C_PLBV46_NUM_SLAVES)-1], BUS = MON_PLB
PORT Sl_rdBTerm = Sl_rdBTerm, DIR = I, VEC = [0:(C_PLBV46_NUM_SLAVES)-1], BUS = MON_PLB
PORT Sl_rdComp = Sl_rdComp, DIR = I, VEC = [0:(C_PLBV46_NUM_SLAVES)-1], BUS = MON_PLB
PORT Sl_rdDAck = Sl_rdDAck, DIR = I, VEC = [0:(C_PLBV46_NUM_SLAVES)-1], BUS = MON_PLB
PORT Sl_wrBTerm = Sl_wrBTerm, DIR = I, VEC = [0:(C_PLBV46_NUM_SLAVES)-1], BUS = MON_PLB
PORT Sl_wrComp = Sl_wrComp, DIR = I, VEC = [0:(C_PLBV46_NUM_SLAVES)-1], BUS = MON_PLB
PORT Sl_wrDAck = Sl_wrDAck, DIR = I, VEC = [0:(C_PLBV46_NUM_SLAVES)-1], BUS = MON_PLB
PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = I, VEC = [0:((C_PLBV46_NUM_SLAVES)*4)-1], BUS = MON_PLB
PORT Sl_SSize = Sl_SSize, DIR = I, VEC = [0:((C_PLBV46_NUM_SLAVES)*2)-1], BUS = MON_PLB
PORT Sl_MBusy = Sl_MBusy, DIR = I, VEC = [0:((C_PLBV46_NUM_SLAVES)*(C_PLBV46_NUM_MASTERS))-1], BUS = MON_PLB
PORT Sl_MRdErr = Sl_MRdErr, DIR = I, VEC = [0:((C_PLBV46_NUM_SLAVES)*(C_PLBV46_NUM_MASTERS))-1], BUS = MON_PLB
PORT Sl_MWrErr = Sl_MWrErr, DIR = I, VEC = [0:((C_PLBV46_NUM_SLAVES)*(C_PLBV46_NUM_MASTERS))-1], BUS = MON_PLB
PORT M_request = M_request, DIR = I, VEC = [0:(C_PLBV46_NUM_MASTERS)-1], BUS = MON_PLB
PORT M_priority = M_priority, DIR = I, VEC = [0:((C_PLBV46_NUM_MASTERS)*2)-1], BUS = MON_PLB
PORT M_busLock = M_busLock, DIR = I, VEC = [0:(C_PLBV46_NUM_MASTERS)-1], BUS = MON_PLB
PORT M_abort = M_abort, DIR = I, VEC = [0:(C_PLBV46_NUM_MASTERS)-1], BUS = MON_PLB
PORT PLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:2-1], BUS = MON_PLB
PORT M_lockErr = M_lockErr, DIR = I, VEC = [0:(C_PLBV46_NUM_MASTERS)-1], BUS = MON_PLB
PORT M_rdBurst = M_rdBurst, DIR = I, VEC = [0:(C_PLBV46_NUM_MASTERS)-1], BUS = MON_PLB
PORT M_wrBurst = M_wrBurst, DIR = I, VEC = [0:(C_PLBV46_NUM_MASTERS)-1], BUS = MON_PLB
PORT M_RNW = M_RNW, DIR = I, VEC = [0:(C_PLBV46_NUM_MASTERS)-1], BUS = MON_PLB
PORT PLB_MBusy = PLB_MBusy, DIR = I, VEC = [0:(C_PLBV46_NUM_MASTERS)-1], BUS = MON_PLB
PORT PLB_MAddrAck = PLB_MAddrAck, DIR = I, VEC = [0:(C_PLBV46_NUM_MASTERS)-1], BUS = MON_PLB
PORT PLB_MRdBTerm = PLB_MRdBTerm, DIR = I, VEC = [0:(C_PLBV46_NUM_MASTERS)-1], BUS = MON_PLB
PORT PLB_MRdDAck = PLB_MRdDAck, DIR = I, VEC = [0:(C_PLBV46_NUM_MASTERS)-1], BUS = MON_PLB
PORT PLB_MRearbitrate = PLB_MRearbitrate, DIR = I, VEC = [0:(C_PLBV46_NUM_MASTERS)-1], BUS = MON_PLB
PORT PLB_MWrBTerm = PLB_MWrBTerm, DIR = I, VEC = [0:(C_PLBV46_NUM_MASTERS)-1], BUS = MON_PLB
PORT PLB_MWrDAck = PLB_MWrDAck, DIR = I, VEC = [0:(C_PLBV46_NUM_MASTERS)-1], BUS = MON_PLB
PORT M_mSize = M_mSize, DIR = I, VEC = [0:((C_PLBV46_NUM_MASTERS)*2)-1], BUS = MON_PLB
PORT M_size = M_size, DIR = I, VEC = [0:((C_PLBV46_NUM_MASTERS)*4)-1], BUS = MON_PLB
PORT PLB_MSSize = PLB_MSSize, DIR = I, VEC = [0:((C_PLBV46_NUM_MASTERS)*2)-1], BUS = MON_PLB
PORT M_type = M_type, DIR = I, VEC = [0:((C_PLBV46_NUM_MASTERS)*3)-1], BUS = MON_PLB
PORT M_BE = M_BE, DIR = I, VEC = [0:((C_PLBV46_NUM_MASTERS)*(C_PLBV46_DWIDTH)/8)-1], BUS = MON_PLB

END

FINISH_SINGLE_MPD

START_SINGLE_MPD chipscope_vio_v1_03_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : chipscope_vio
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN chipscope_vio

## Peripheral Options
OPTION IPLEVEL_DRC_PROC = vio_drc
OPTION ELABORATE_PROC = vio_generate
OPTION IMP_NETLIST = TRUE
OPTION IPTYPE = PERIPHERAL
OPTION STYLE = MIX
OPTION RUN_NGCBUILD = TRUE
OPTION LAST_UPDATED = 12.2
OPTION DESC = Chipscope Virtual IO (VIO)
OPTION LONG_DESC = Chipscope VIO (Virtual IO) core both monitors and drives internal FPGA signals in real time.
OPTION IP_GROUP = Debug:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=PRODUCTION, spartan3=PRODUCTION, spartan3an=PRODUCTION, spartan3a=PRODUCTION, spartan3e=PRODUCTION, spartan3adsp=PRODUCTION, virtex4lx=PRODUCTION, virtex4sx=PRODUCTION, virtex4fx=PRODUCTION, virtex5lx=PRODUCTION, virtex5sx=PRODUCTION, virtex5fx=PRODUCTION, aspartan3e=PRODUCTION, aspartan3a=PRODUCTION, aspartan3adsp=PRODUCTION, qvirtex4lx=PRODUCTION, qvirtex4sx=PRODUCTION, qvirtex4fx=PRODUCTION, qrvirtex4lx=PRODUCTION, qrvirtex4sx=PRODUCTION, qrvirtex4fx=PRODUCTION, spartan6t=PRODUCTION, spartan6=PRODUCTION, spartan6l=PRE_PRODUCTION, qspartan6t=PRODUCTION, qspartan6=PRODUCTION, aspartan6t=PRODUCTION, aspartan6=PRODUCTION, virtex6lx=PRODUCTION, virtex6sx=PRODUCTION, virtex6hx=PRODUCTION, virtex6cx=PRODUCTION, virtex6llx=PRE_PRODUCTION, virtex6lsx=PRE_PRODUCTION, qspartan6l=PRE_PRODUCTION, qvirtex6lx=PRE_PRODUCTION, qvirtex6sx=PRE_PRODUCTION, qvirtex6fx=PRE_PRODUCTION, qvirtex6tx=PRE_PRODUCTION)
OPTION HDL = MIXED


## Bus Interfaces

## Generics for VHDL or Parameters for Verilog
PARAMETER C_FAMILY = virtex2, DT = string
PARAMETER C_DEVICE = xc4vfx12, DT = string
PARAMETER C_PACKAGE = ff1016, DT = string
PARAMETER C_SPEEDGRADE = -11, DT = string
PARAMETER C_ASYNC_INPUT_ENABLE = 0, DT = integer, RANGE = (0,1)
PARAMETER C_ASYNC_INPUT_WIDTH = 8, DT = integer, RANGE = (1:256)
PARAMETER C_ASYNC_OUTPUT_ENABLE = 0, DT = integer, RANGE = (0,1)
PARAMETER C_ASYNC_OUTPUT_WIDTH = 8, DT = integer, RANGE = (1:256)
PARAMETER C_SYNC_INPUT_ENABLE = 0, DT = integer, RANGE = (0,1)
PARAMETER C_SYNC_INPUT_WIDTH = 8, DT = integer, RANGE = (1:256)
PARAMETER C_SYNC_OUTPUT_ENABLE = 0, DT = integer, RANGE = (0,1)
PARAMETER C_SYNC_OUTPUT_WIDTH = 8, DT = integer, RANGE = (1:256)
PARAMETER C_RISING_CLOCK_EDGE = 1, DT = integer, RANGE = (0,1)

## Ports
PORT chipscope_icon_control = "", DIR = I, VEC = [35:0]
PORT async_in = "", DIR = I, VEC = [C_ASYNC_INPUT_WIDTH-1:0]
PORT async_out = "", DIR = O, VEC = [C_ASYNC_OUTPUT_WIDTH-1:0]
PORT clk = "", DIR = I
PORT sync_in = "", DIR = I, VEC = [C_SYNC_INPUT_WIDTH-1:0]
PORT sync_out = "", DIR = O, VEC = [C_SYNC_OUTPUT_WIDTH-1:0]

END

FINISH_SINGLE_MPD

START_SINGLE_MPD xps_most_nic_v1_01_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : xps_most_nic
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN xps_most_nic

## Peripheral Options
OPTION RUN_NGCBUILD = TRUE
OPTION PAY_CORE = xps_most_nic_v1
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = MIXED
OPTION PLATGEN_SYSLEVEL_UPDATE_PROC = generate_corelevel_ucf
OPTION DESC = XPS MOST
OPTION IP_GROUP = Communication High-Speed:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=SUPERSEDED, spartan3=SUPERSEDED, spartan3an=SUPERSEDED, spartan3a=SUPERSEDED, spartan3e=SUPERSEDED, spartan3adsp=SUPERSEDED, virtex4lx=SUPERSEDED, virtex4sx=SUPERSEDED, virtex4fx=SUPERSEDED, virtex5lx=SUPERSEDED, virtex5sx=SUPERSEDED, virtex5fx=SUPERSEDED, aspartan3e=SUPERSEDED, aspartan3a=SUPERSEDED, aspartan3adsp=SUPERSEDED, qvirtex4lx=SUPERSEDED, qvirtex4sx=SUPERSEDED, qvirtex4fx=SUPERSEDED, qrvirtex4lx=SUPERSEDED, qrvirtex4sx=SUPERSEDED, qrvirtex4fx=SUPERSEDED, spartan6t=SUPERSEDED, spartan6=SUPERSEDED, spartan6l=SUPERSEDED, qspartan6t=SUPERSEDED, qspartan6=SUPERSEDED, aspartan6t=SUPERSEDED, aspartan6=SUPERSEDED, virtex6lx=SUPERSEDED, virtex6sx=SUPERSEDED, virtex6hx=SUPERSEDED, virtex6cx=SUPERSEDED, virtex6llx=SUPERSEDED, virtex6lsx=SUPERSEDED, qspartan6l=SUPERSEDED, qrvirtex5=SUPERSEDED, qvirtex6lx=SUPERSEDED, qvirtex6sx=SUPERSEDED, qvirtex6fx=SUPERSEDED, qvirtex6tx=SUPERSEDED)
OPTION STYLE = HDL


## Bus Interfaces
BUS_INTERFACE BUS = SPLB, BUS_TYPE = SLAVE, BUS_STD = PLBV46

## Generics for VHDL or Parameters for Verilog
PARAMETER C_BASEADDR = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_HIGHADDR, ASSIGNMENT = REQUIRE, MIN_SIZE = 0x4000
PARAMETER C_HIGHADDR = 0x0000ffff, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_BASEADDR, ASSIGNMENT = REQUIRE
PARAMETER C_SPLB_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_DWIDTH = 32, DT = INTEGER, BUS = SPLB
PARAMETER C_FAMILY = spartan3, DT = STRING
PARAMETER C_OPMODE = 1, DT = INTEGER, RANGE = (0,1), VALUES = (0=  Master/Slave core  ,1=  Slave only core )
PARAMETER C_FWC = 16, DT = INTEGER, RANGE = (8,16)
PARAMETER C_EWC = 16, DT = INTEGER, RANGE = (8,16)

## Ports
PORT SPLB_Clk = "", DIR = I, SIGIS = Clk, BUS = SPLB
PORT SPLB_Rst = SPLB_Rst, DIR = I, SIGIS = Rst, BUS = SPLB
PORT PLB_ABus = PLB_ABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB
PORT PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB
PORT PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB
PORT PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB
PORT PLB_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB_MID_WIDTH-1)], BUS = SPLB
PORT PLB_abort = PLB_abort, DIR = I, BUS = SPLB
PORT PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB
PORT PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB
PORT PLB_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB_DWIDTH/8)-1)], BUS = SPLB
PORT PLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB
PORT PLB_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB
PORT PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB
PORT PLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB
PORT PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB
PORT PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB
PORT PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB
PORT PLB_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB
PORT Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB
PORT Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB
PORT Sl_wait = Sl_wait, DIR = O, BUS = SPLB
PORT Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB
PORT Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB
PORT Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB
PORT Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB
PORT Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB
PORT Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB
PORT Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB
PORT Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB
PORT Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT MOST_Irpt = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = EDGE_RISING
PORT BUFFER_Irpt = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = EDGE_RISING
PORT MOST_TX = "", DIR = O
PORT MOST_RX = "", DIR = I
PORT MOST_COM_CLK = "", DIR = I
PORT MOST_PLL_CLK = "", DIR = I
PORT MOST_PLL_LOCK = "", DIR = I
PORT MOST_FOR_STATUS = "", DIR = I
PORT MOST_MASTER = "", DIR = O
PORT MOST_EXT_NRESET = "", DIR = O
PORT MOST_EXT_BYPASS = "", DIR = O
PORT STR_CLK = "", DIR = O
PORT STR_RST = "", DIR = O
PORT STR_MMR_REQ = "", DIR = O
PORT STR_MMR_RNW = "", DIR = O
PORT STR_MMR_ADDR = "", DIR = O, VEC = [7:0]
PORT STR_MMR_BE = "", DIR = O, VEC = [3:0]
PORT STR_MMR_WDATA = "", DIR = O, VEC = [31:0]
PORT STR_MMR_RDATA = "", DIR = I, VEC = [31:0]
PORT STR_MMR_ACK = "", DIR = I
PORT STR_MMR_INT = "", DIR = I
PORT STR_RE_LC = "", DIR = I, VEC = [1:0]
PORT STR_RE_DATA = "", DIR = O, VEC = [7:0]
PORT STR_RE_SRC_RDY = "", DIR = O
PORT STR_RE_DST_RDY = "", DIR = I
PORT STR_RE_WCINT = "", DIR = O, VEC = [3:0]
PORT STR_RE_BIF_AVAIL = "", DIR = O, VEC = [3:0]
PORT STR_RI_LC = "", DIR = I, VEC = [1:0]
PORT STR_RI_DATA = "", DIR = I, VEC = [7:0]
PORT STR_RI_SRC_RDY = "", DIR = I
PORT STR_RI_DST_RDY = "", DIR = O
PORT STR_RI_WCINT = "", DIR = O, VEC = [3:0]
PORT STR_RI_BIF_AVAIL = "", DIR = O, VEC = [3:0]
PORT STR_TE_LC = "", DIR = I, VEC = [1:0]
PORT STR_TE_DATA = "", DIR = O, VEC = [7:0]
PORT STR_TE_SRC_RDY = "", DIR = O
PORT STR_TE_DST_RDY = "", DIR = I
PORT STR_TE_WCINT = "", DIR = O, VEC = [3:0]
PORT STR_TE_BIF_AVAIL = "", DIR = O, VEC = [3:0]
PORT STR_TI_LC = "", DIR = I, VEC = [1:0]
PORT STR_TI_DATA = "", DIR = I, VEC = [7:0]
PORT STR_TI_SRC_RDY = "", DIR = I
PORT STR_TI_DST_RDY = "", DIR = O
PORT STR_TI_WCINT = "", DIR = O, VEC = [3:0]
PORT STR_TI_BIF_AVAIL = "", DIR = O, VEC = [3:0]

END

FINISH_SINGLE_MPD

START_SINGLE_MPD plbv46_dcr_bridge_v1_01_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : plbv46_dcr_bridge
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN plbv46_dcr_bridge

## Peripheral Options
OPTION STYLE = HDL
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION DESC = PLBV46 to DCR Bridge
OPTION LONG_DESC = PLBV46 to DCR bridge.
OPTION IP_GROUP = Bus and Bridge:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (virtex4lx=PRODUCTION, virtex4sx=PRODUCTION, virtex4fx=PRODUCTION, virtex5lx=PRODUCTION, virtex5sx=PRODUCTION, virtex5fx=PRODUCTION)
OPTION RUN_NGCBUILD = FALSE


## Bus Interfaces
BUS_INTERFACE BUS = SPLB, BUS_TYPE = SLAVE, BUS_STD = PLBV46
BUS_INTERFACE BUS = MDCR, BUS_TYPE = MASTER, BUS_STD = DCR

## Generics for VHDL or Parameters for Verilog
PARAMETER C_FAMILY = virtex5, DT = STRING
PARAMETER C_BASEADDR = 0xffffffff, DT = std_logic_vector, BRIDGE_TO = MDCR, BUS = SPLB, ADDRESS = BASE, PAIR = C_HIGHADDR, MIN_SIZE = 0x1000, ASSIGNMENT = REQUIRE
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_BASEADDR, ASSIGNMENT = REQUIRE
PARAMETER C_SPLB_AWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_DWIDTH = 32, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_P2P = 0, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT

## Ports
PORT SPLB_Clk = "", DIR = I, BUS = SPLB, SIGIS = Clk
PORT SPLB_Rst = SPLB_Rst, DIR = I, SIGIS = Rst, BUS = SPLB
PORT PLB_ABus = PLB_ABus, DIR = I, VEC = [0:(C_SPLB_AWIDTH-1)], BUS = SPLB
PORT PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB
PORT PLB_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB_MID_WIDTH-1)], BUS = SPLB
PORT PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB
PORT PLB_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB_DWIDTH/8)-1)], BUS = SPLB
PORT PLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB
PORT PLB_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB
PORT PLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB
PORT Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB
PORT Sl_wait = Sl_wait, DIR = O, BUS = SPLB
PORT Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB
PORT Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB
PORT Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB
PORT Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB
PORT Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB
PORT Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT PLB_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB
PORT PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB
PORT PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB
PORT PLB_abort = PLB_abort, DIR = I, BUS = SPLB
PORT PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB
PORT PLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB
PORT PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB
PORT PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB
PORT PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB
PORT PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB
PORT PLB_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB
PORT Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB
PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB
PORT Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB
PORT Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT DCR_plbAck = DCR_Ack, DIR = I, BUS = MDCR
PORT DCR_plbDBusIn = DCR_M_DBus, DIR = I, VEC = [0:(C_SPLB_NATIVE_DWIDTH-1)], BUS = MDCR
PORT PLB_dcrRead = M_dcrRead, DIR = O, BUS = MDCR
PORT PLB_dcrWrite = M_dcrWrite, DIR = O, BUS = MDCR
PORT PLB_dcrABus = M_dcrABus, DIR = O, VEC = [0:9], BUS = MDCR
PORT PLB_dcrDBusOut = M_dcrDBus, DIR = O, VEC = [0:(C_SPLB_NATIVE_DWIDTH-1)], BUS = MDCR
PORT PLB_dcrClk = "", DIR = O, SIGIS = Clk
PORT PLB_dcrRst = "", DIR = O

END

FINISH_SINGLE_MPD

START_SINGLE_MPD xps_iic_v2_01_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : xps_iic
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN xps_iic

## Peripheral Options
OPTION STYLE = HDL
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION USAGE_LEVEL = BASE_USER
OPTION DESC = XPS IIC Interface
OPTION LONG_DESC = PLBV46 interface to Philips I2C bus v2.1
OPTION IP_GROUP = Communication Low-Speed:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=SUPERSEDED, spartan3=SUPERSEDED, spartan3an=SUPERSEDED, spartan3a=SUPERSEDED, spartan3e=SUPERSEDED, spartan3adsp=SUPERSEDED, virtex4lx=SUPERSEDED, virtex4sx=SUPERSEDED, virtex4fx=SUPERSEDED, virtex5lx=SUPERSEDED, virtex5sx=SUPERSEDED, virtex5fx=SUPERSEDED, aspartan3e=SUPERSEDED, aspartan3a=SUPERSEDED, aspartan3adsp=SUPERSEDED, qvirtex4lx=SUPERSEDED, qvirtex4sx=SUPERSEDED, qvirtex4fx=SUPERSEDED, qrvirtex4lx=SUPERSEDED, qrvirtex4sx=SUPERSEDED, qrvirtex4fx=SUPERSEDED, spartan6t=SUPERSEDED, spartan6=SUPERSEDED, spartan6l=SUPERSEDED, qspartan6t=SUPERSEDED, qspartan6=SUPERSEDED, aspartan6t=SUPERSEDED, aspartan6=SUPERSEDED, virtex6lx=SUPERSEDED, virtex6sx=SUPERSEDED, virtex6hx=SUPERSEDED, virtex6cx=SUPERSEDED, virtex6llx=SUPERSEDED, virtex6lsx=SUPERSEDED, qspartan6l=SUPERSEDED, qrvirtex5=SUPERSEDED, qvirtex6lx=SUPERSEDED, qvirtex6sx=SUPERSEDED, qvirtex6fx=SUPERSEDED, qvirtex6tx=SUPERSEDED)
OPTION RUN_NGCBUILD = FALSE

IO_INTERFACE IO_IF = iic_0, IO_TYPE = XIL_IIC_V1

## Bus Interfaces
BUS_INTERFACE BUS = SPLB, BUS_TYPE = SLAVE, BUS_STD = PLBV46

## Generics for VHDL or Parameters for Verilog
PARAMETER C_IIC_FREQ = 100000, DT = INTEGER, DESC = IIC (SCL) Clock Frequency, IO_IF = iic_0, IO_IS = clk_out_freq
PARAMETER C_TEN_BIT_ADR = 0, DT = INTEGER, RANGE = (0,1), DESC = IIC Address Width, IO_IF = iic_0, IO_IS = slave_respond_mode, VALUES = (0= 7-bit addresses , 1= 10-bit addresses )
PARAMETER C_GPO_WIDTH = 1, DT = INTEGER, RANGE = (1:8), DESC = General Purpose Output Bus Width, IO_IF = iic_0, IO_IS = gpo
PARAMETER C_CLK_FREQ = 25000000, DT = INTEGER, IO_IS = clk_freq, CLK_PORT = SPLB_Clk, CLK_UNIT = HZ
PARAMETER C_SCL_INERTIAL_DELAY = 0, DT = INTEGER, RANGE = (0:255), DESC = SCL intertial delay filter value in clocks, IO_IF = iic_0
PARAMETER C_SDA_INERTIAL_DELAY = 0, DT = INTEGER, RANGE = (0:255), DESC = SDA intertial delay filter value in clocks, IO_IF = iic_0
PARAMETER C_BASEADDR = 0xffffffff, DT = std_logic_vector(0 to 31), BUS = SPLB, ADDRESS = BASE, PAIR = C_HIGHADDR, MIN_SIZE = 0x00200, ASSIGNMENT = REQUIRE
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector(0 to 31), BUS = SPLB, ADDRESS = HIGH, PAIR = C_BASEADDR, ASSIGNMENT = REQUIRE
PARAMETER C_SPLB_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_AWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_DWIDTH = 32, DT = INTEGER, BUS = SPLB, RANGE = (32,64, 128)
PARAMETER C_SPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB, TYPE = NON_HDL, ASSIGNMENT = CONSTANT
PARAMETER C_FAMILY = virtex5, DT = STRING

## Ports
PORT Sda_I = "", DIR = I
PORT Sda_O = "", DIR = O
PORT Sda_T = "", DIR = O
PORT Scl_I = "", DIR = I
PORT Scl_O = "", DIR = O
PORT Scl_T = "", DIR = O
PORT Gpo = "", DIR = O, VEC = [(32-C_GPO_WIDTH):(32-1)], PERMIT = BASE_USER, DESC = ''IIC General Purpose Output'', IO_IF = iic_0, IO_IS = gpo
PORT IIC2INTC_Irpt = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, INTERRUPT_PRIORITY = LOW
PORT SPLB_Clk = "", DIR = I, SIGIS = CLK, BUS = SPLB
PORT SPLB_Rst = SPLB_Rst, DIR = I, SIGIS = RST, BUS = SPLB
PORT PLB_ABus = PLB_ABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB
PORT PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB
PORT PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB
PORT PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB
PORT PLB_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB_MID_WIDTH-1)], BUS = SPLB
PORT PLB_abort = PLB_abort, DIR = I, BUS = SPLB
PORT PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB
PORT PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB
PORT PLB_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB_DWIDTH/8)-1)], BUS = SPLB
PORT PLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB
PORT PLB_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB
PORT PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB
PORT PLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB
PORT PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB
PORT PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB
PORT PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB
PORT PLB_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB
PORT Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB
PORT Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB
PORT Sl_wait = Sl_wait, DIR = O, BUS = SPLB
PORT Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB
PORT Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB
PORT Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB
PORT Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB
PORT Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB
PORT Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB
PORT Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB
PORT Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB
PORT Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sda = "", DIR = IO, THREE_STATE = TRUE, TRI_I = Sda_I, TRI_O = Sda_O, TRI_T = Sda_T, PERMIT = BASE_USER, DESC = ''IIC Serial Data'', IO_IF = iic_0, IO_IS = Serial_Data
PORT Scl = "", DIR = IO, THREE_STATE = TRUE, TRI_I = Scl_I, TRI_O = Scl_O, TRI_T = Scl_T, PERMIT = BASE_USER, DESC = ''IIC Serial Clock'', IO_IF = iic_0, IO_IS = Serial_Clock

END

FINISH_SINGLE_MPD

START_SINGLE_MPD agilent_atc2_v1_02_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : agilent_atc2
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN agilent_atc2

## Peripheral Options
OPTION IMP_NETLIST = TRUE
OPTION IPTYPE = PERIPHERAL
OPTION STYLE = MIX
OPTION RUN_NGCBUILD = TRUE
OPTION IPLEVEL_DRC_PROC = atc2_drc
OPTION ELABORATE_PROC = atc2_generate
OPTION LAST_UPDATED = 11.1
OPTION DESC = Agilent Trace Core
OPTION LONG_DESC = Agilent trace core used with an Agilent logic analyzer.
OPTION IP_GROUP = Debug:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=PRODUCTION, spartan3=PRODUCTION, spartan3an=PRODUCTION, spartan3a=PRODUCTION, spartan3e=PRODUCTION, spartan3adsp=PRODUCTION, virtex4lx=PRODUCTION, virtex4sx=PRODUCTION, virtex4fx=PRODUCTION, virtex5lx=PRODUCTION, virtex5sx=PRODUCTION, virtex5fx=PRODUCTION, aspartan3e=PRODUCTION, aspartan3a=PRODUCTION, aspartan3adsp=PRODUCTION, qvirtex4lx=PRODUCTION, qvirtex4sx=PRODUCTION, qvirtex4fx=PRODUCTION, qrvirtex4lx=PRODUCTION, qrvirtex4sx=PRODUCTION, qrvirtex4fx=PRODUCTION)
OPTION HDL = MIXED


## Bus Interfaces

## Generics for VHDL or Parameters for Verilog
PARAMETER C_FAMILY = virtex5, DT = string
PARAMETER C_DEVICE = xc5vlx50, DT = string
PARAMETER C_PACKAGE = ffg676, DT = string
PARAMETER C_SPEEDGRADE = -11, DT = string
PARAMETER C_RISING_CLOCK_EDGE = 1, DT = INTEGER, DESC = Sample on Rising Edge of Clock, VALUES = (0= FALSE , 1= TRUE )
PARAMETER C_CAPTURE_MODE = 0, DT = INTEGER, RANGE = (0:1), DESC = ATC2 Data Capture Mode, VALUES = (0 = SYNCHRONOUS, 1 = ASYNCHRONOUS )
PARAMETER C_TDM_RATE = 1, DT = INTEGER, RANGE = (1:2), DESC = Time Division Multiplexing Rate, VALUES = (1= 1X, 2 = 2x)
PARAMETER C_NUM_BANKS = 1, DT = INTEGER, RANGE = (1, 2, 4, 8, 16, 32, 64), DESC = Number of ATC2 Signal Banks
PARAMETER C_ATD_PIN_COUNT = 4, DT = INTEGER, RANGE = (4:128), DESC = ATD Pin Count
PARAMETER C_PIN_EDIT_MODE = 0, DT = INTEGER, RANGE = (0, 1), DESC = Enable Individual Pin Edit Mode, VALUES = (0 = Same as ATCK, 1 = Individual)
PARAMETER C_ENABLE_AUTO_SETUP = 1, DT = INTEGER, RANGE = (0:1), DESC = Enable Auto setup of ATC2 core, VALUES = (0 = FALSE, 1 = TRUE)
PARAMETER C_MAX_FREQUENCY = 100, DT = INTEGER, RANGE = (100, 200, 300, 500), DESC = Maximum Frequency of ATC2 Core
PARAMETER C_ENABLE_ALWAYS_ON = 0, DT = INTEGER, RANGE = (0:1), DESC = Enable Always-ON Mode, VALUES = (0 = FALSE, 1 = TRUE)
PARAMETER C_ATCK_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATCK Pin
PARAMETER C_ATCK_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATCK, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD0_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD0_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD1_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD1_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD2_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD2_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD3_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD3_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD4_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD4_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD5_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD5_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD6_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD6_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD7_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD7_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD8_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD8_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD9_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD9_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD10_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD10_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD11_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD11_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD12_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD12_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD13_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD13_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD14_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD14_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD15_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD15_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD16_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD16_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD17_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD17_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD18_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD18_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD19_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD19_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD20_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD20_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD21_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD21_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD22_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD22_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD23_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD23_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD24_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD24_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD25_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD25_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD26_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD26_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD27_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD27_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD28_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD28_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD29_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD29_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD30_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD30_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD31_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD31_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD32_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD32_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD33_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD33_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD34_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD34_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD35_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD35_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD36_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD36_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD37_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD37_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD38_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD38_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD39_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD39_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD40_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD40_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD41_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD41_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD42_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD42_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD43_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD43_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD44_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD44_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD45_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD45_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD46_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD46_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD47_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD47_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD48_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD48_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD49_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD49_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD50_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD50_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD51_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD51_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD52_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD52_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD53_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD53_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD54_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD54_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD55_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD55_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD56_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD56_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD57_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD57_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD58_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD58_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD59_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD59_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD60_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD60_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD61_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD61_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD62_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD62_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD63_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD63_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD64_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD64_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD65_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD65_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD66_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD66_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD67_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD67_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD68_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD68_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD69_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD69_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD70_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD70_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD71_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD71_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD72_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD72_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD73_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD73_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD74_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD74_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD75_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD75_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD76_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD76_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD77_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD77_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD78_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD78_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD79_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD79_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD80_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD80_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD81_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD81_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD82_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD82_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD83_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD83_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD84_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD84_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD85_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD85_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD86_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD86_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD87_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD87_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD88_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD88_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD89_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD89_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD90_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD90_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD91_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD91_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD92_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD92_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD93_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD93_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD94_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD94_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD95_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD95_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD96_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD96_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD97_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD97_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD98_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD98_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD99_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD99_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD100_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD100_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD101_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD101_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD102_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD102_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD103_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD103_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD104_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD104_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD105_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD105_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD106_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD106_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD107_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD107_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD108_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD108_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD109_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD109_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD110_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD110_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD111_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD111_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD112_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD112_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD113_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD113_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD114_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD114_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD115_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD115_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD116_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD116_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD117_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD117_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD118_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD118_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD119_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD119_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD120_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD120_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD121_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD121_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD122_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD122_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD123_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD123_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD124_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD124_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD125_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD125_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD126_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD126_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)
PARAMETER C_ATD127_PIN_LOC = XYnn, DT = STRING, DESC = UCF PIN Location for ATD Pin
PARAMETER C_ATD127_PIN_IOSTANDARD = 80, DT = INTEGER, RANGE = (0:142), DESC = IOStandard for ATD Pin, VALUES = (1 = AGP, 2 = BLVDS_25, 3 = CTT, 4 = GTL, 5 = GTL_DCI, 6 = GTLP, 7 = GTLP_DCI, 8 = HSTL_I, 9 = HSTL_I_18, 10 = HSTL_I_DCI, 11 = HSTL_I_DCI_18, 12 = HSTL_II, 13 = HSTL_II_18, 14 = HSTL_II_DCI, 15 = HSTL_II_DCI_18, 16 = HSTL_III, 17 = HSTL_III_18, 18 = HSTL_III_DCI, 19 = HSTL_III_DCI_18, 20 = HSTL_IV, 21 = HSTL_IV_18, 22 = HSTL_IV_DCI, 23 = HSTL_IV_DCI_18, 24 = LDT_25, 25 = LVCMOS12_SLEW_SLOW_DRIVE_2, 26 = LVCMOS12_SLEW_SLOW_DRIVE_4, 27 = LVCMOS12_SLEW_SLOW_DRIVE_6, 28 = LVCMOS12_SLEW_FAST_DRIVE_2, 29 = LVCMOS12_SLEW_FAST_DRIVE_4, 30 = LVCMOS12_SLEW_FAST_DRIVE_6, 31 = LVCMOS15_SLEW_SLOW_DRIVE_2, 32 = LVCMOS15_SLEW_SLOW_DRIVE_4, 33 = LVCMOS15_SLEW_SLOW_DRIVE_6, 34 = LVCMOS15_SLEW_SLOW_DRIVE_8, 35 = LVCMOS15_SLEW_SLOW_DRIVE_12, 36 = LVCMOS15_SLEW_FAST_DRIVE_2, 37 = LVCMOS15_SLEW_FAST_DRIVE_4, 38 = LVCMOS15_SLEW_FAST_DRIVE_6, 39 = LVCMOS15_SLEW_FAST_DRIVE_8, 40 = LVCMOS15_SLEW_FAST_DRIVE_12, 41 = LVCMOS18_SLEW_SLOW_DRIVE_2, 42 = LVCMOS18_SLEW_SLOW_DRIVE_4, 43 = LVCMOS18_SLEW_SLOW_DRIVE_6, 44 = LVCMOS18_SLEW_SLOW_DRIVE_8, 45 = LVCMOS18_SLEW_SLOW_DRIVE_12, 46 = LVCMOS18_SLEW_SLOW_DRIVE_16, 47 = LVCMOS18_SLEW_FAST_DRIVE_2, 48 = LVCMOS18_SLEW_FAST_DRIVE_4, 49 = LVCMOS18_SLEW_FAST_DRIVE_6, 50 = LVCMOS18_SLEW_FAST_DRIVE_8, 51 = LVCMOS18_SLEW_FAST_DRIVE_12, 52 = LVCMOS18_SLEW_FAST_DRIVE_16, 53 = LVCMOS2_SLEW_SLOW_DRIVE_2, 54 = LVCMOS2_SLEW_SLOW_DRIVE_4, 55 = LVCMOS2_SLEW_SLOW_DRIVE_6, 56 = LVCMOS2_SLEW_SLOW_DRIVE_8, 57 = LVCMOS2_SLEW_SLOW_DRIVE_12, 58 = LVCMOS2_SLEW_SLOW_DRIVE_16, 59 = LVCMOS2_SLEW_SLOW_DRIVE_24, 60 = LVCMOS2_SLEW_FAST_DRIVE_2, 61 = LVCMOS2_SLEW_FAST_DRIVE_4, 62 = LVCMOS2_SLEW_FAST_DRIVE_6, 63 = LVCMOS2_SLEW_FAST_DRIVE_8, 64 = LVCMOS2_SLEW_FAST_DRIVE_12, 65 = LVCMOS2_SLEW_FAST_DRIVE_16, 66 = LVCMOS2_SLEW_FAST_DRIVE_24, 67 = LVCMOS25_SLEW_SLOW_DRIVE_2, 68 = LVCMOS25_SLEW_SLOW_DRIVE_4, 69 = LVCMOS25_SLEW_SLOW_DRIVE_6, 70 = LVCMOS25_SLEW_SLOW_DRIVE_8, 71 = LVCMOS25_SLEW_SLOW_DRIVE_12, 72 = LVCMOS25_SLEW_SLOW_DRIVE_16, 73 = LVCMOS25_SLEW_SLOW_DRIVE_24, 74 = LVCMOS25_SLEW_FAST_DRIVE_2, 75 = LVCMOS25_SLEW_FAST_DRIVE_4, 76 = LVCMOS25_SLEW_FAST_DRIVE_6, 77 = LVCMOS25_SLEW_FAST_DRIVE_8, 78 = LVCMOS25_SLEW_FAST_DRIVE_12, 79 = LVCMOS25_SLEW_FAST_DRIVE_16, 80 = LVCMOS25_SLEW_FAST_DRIVE_24, 81 = LVCMOS33_SLEW_SLOW_DRIVE_2, 82 = LVCMOS33_SLEW_SLOW_DRIVE_4, 83 = LVCMOS33_SLEW_SLOW_DRIVE_6, 84 = LVCMOS33_SLEW_SLOW_DRIVE_8, 85 = LVCMOS33_SLEW_SLOW_DRIVE_12, 86 = LVCMOS33_SLEW_SLOW_DRIVE_16, 87 = LVCMOS33_SLEW_SLOW_DRIVE_24, 88 = LVCMOS33_SLEW_FAST_DRIVE_2, 89 = LVCMOS33_SLEW_FAST_DRIVE_4, 90 = LVCMOS33_SLEW_FAST_DRIVE_6, 91 = LVCMOS33_SLEW_FAST_DRIVE_8, 92 = LVCMOS33_SLEW_FAST_DRIVE_12, 93 = LVCMOS33_SLEW_FAST_DRIVE_16, 94 = LVCMOS33_SLEW_FAST_DRIVE_24, 95 = LVDCI_15, 96 = LVDCI_18, 97 = LVDCI_25, 98 = LVDCI_33, 99 = LVDCI_DV2_15, 100 = LVDCI_DV2_18, 101 = LVDCI_DV2_25, 102 = LVDCI_DV2_33, 103 = LVDS, 104 = LVDS_25, 105 = LVDS_33, 106 = LVDSEXT_25, 107 = LVDSEXT_33, 108 = LVPECL, 109 = LVPECL_25, 110 = LVPECL_33, 111 = LVTTL_SLEW_SLOW_DRIVE_2, 112 = LVTTL_SLEW_SLOW_DRIVE_4, 113 = LVTTL_SLEW_SLOW_DRIVE_6, 114 = LVTTL_SLEW_SLOW_DRIVE_8, 115 = LVTTL_SLEW_SLOW_DRIVE_12, 116 = LVTTL_SLEW_SLOW_DRIVE_16, 117 = LVTTL_SLEW_SLOW_DRIVE_24, 118 = LVTTL_SLEW_FAST_DRIVE_2, 119 = LVTTL_SLEW_FAST_DRIVE_4, 120 = LVTTL_SLEW_FAST_DRIVE_6, 121 = LVTTL_SLEW_FAST_DRIVE_8, 122 = LVTTL_SLEW_FAST_DRIVE_12, 123 = LVTTL_SLEW_FAST_DRIVE_16, 124 = LVTTL_SLEW_FAST_DRIVE_24, 125 = PCI33_3, 126 = PCI33_5, 127 = PCI66_3, 128 = PCIX, 129 = PCIX66_3, 130 = SSTL18_I, 131 = SSTL18_I_DCI, 132 = SSTL18_II, 133 = SSTL18_II_DCI, 134 = SSTL2_I, 135 = SSTL2_I_DCI, 136 = SSTL2_II, 137 = SSTL2_II_DCI, 138 = SSTL3_I, 139 = SSTL3_I_DCI, 140 = SSTL3_II, 141 = SSTL3_II_DCI, 142 = ULVDS_25)

## Ports
PORT AGILENT_ATC2_CONTROL = "", DIR = I, VEC = [35:0]
PORT CLK = "", DIR = I, SIGIS = CLK
PORT DATA0 = "", DIR = I, VEC = [((C_ATD_PIN_COUNT*(C_TDM_RATE)+(1*C_CAPTURE_MODE))-1):0]
PORT DATA1 = "", DIR = I, VEC = [((C_ATD_PIN_COUNT*(C_TDM_RATE)+(1*C_CAPTURE_MODE))-1):0]
PORT DATA2 = "", DIR = I, VEC = [((C_ATD_PIN_COUNT*(C_TDM_RATE)+(1*C_CAPTURE_MODE))-1):0]
PORT DATA3 = "", DIR = I, VEC = [((C_ATD_PIN_COUNT*(C_TDM_RATE)+(1*C_CAPTURE_MODE))-1):0]
PORT DATA4 = "", DIR = I, VEC = [((C_ATD_PIN_COUNT*(C_TDM_RATE)+(1*C_CAPTURE_MODE))-1):0]
PORT DATA5 = "", DIR = I, VEC = [((C_ATD_PIN_COUNT*(C_TDM_RATE)+(1*C_CAPTURE_MODE))-1):0]
PORT DATA6 = "", DIR = I, VEC = [((C_ATD_PIN_COUNT*(C_TDM_RATE)+(1*C_CAPTURE_MODE))-1):0]
PORT DATA7 = "", DIR = I, VEC = [((C_ATD_PIN_COUNT*(C_TDM_RATE)+(1*C_CAPTURE_MODE))-1):0]
PORT DATA8 = "", DIR = I, VEC = [((C_ATD_PIN_COUNT*(C_TDM_RATE)+(1*C_CAPTURE_MODE))-1):0]
PORT DATA9 = "", DIR = I, VEC = [((C_ATD_PIN_COUNT*(C_TDM_RATE)+(1*C_CAPTURE_MODE))-1):0]
PORT DATA10 = "", DIR = I, VEC = [((C_ATD_PIN_COUNT*(C_TDM_RATE)+(1*C_CAPTURE_MODE))-1):0]
PORT DATA11 = "", DIR = I, VEC = [((C_ATD_PIN_COUNT*(C_TDM_RATE)+(1*C_CAPTURE_MODE))-1):0]
PORT DATA12 = "", DIR = I, VEC = [((C_ATD_PIN_COUNT*(C_TDM_RATE)+(1*C_CAPTURE_MODE))-1):0]
PORT DATA13 = "", DIR = I, VEC = [((C_ATD_PIN_COUNT*(C_TDM_RATE)+(1*C_CAPTURE_MODE))-1):0]
PORT DATA14 = "", DIR = I, VEC = [((C_ATD_PIN_COUNT*(C_TDM_RATE)+(1*C_CAPTURE_MODE))-1):0]
PORT DATA15 = "", DIR = I, VEC = [((C_ATD_PIN_COUNT*(C_TDM_RATE)+(1*C_CAPTURE_MODE))-1):0]
PORT DATA16 = "", DIR = I, VEC = [((C_ATD_PIN_COUNT*(C_TDM_RATE)+(1*C_CAPTURE_MODE))-1):0]
PORT DATA17 = "", DIR = I, VEC = [((C_ATD_PIN_COUNT*(C_TDM_RATE)+(1*C_CAPTURE_MODE))-1):0]
PORT DATA18 = "", DIR = I, VEC = [((C_ATD_PIN_COUNT*(C_TDM_RATE)+(1*C_CAPTURE_MODE))-1):0]
PORT DATA19 = "", DIR = I, VEC = [((C_ATD_PIN_COUNT*(C_TDM_RATE)+(1*C_CAPTURE_MODE))-1):0]
PORT DATA20 = "", DIR = I, VEC = [((C_ATD_PIN_COUNT*(C_TDM_RATE)+(1*C_CAPTURE_MODE))-1):0]
PORT DATA21 = "", DIR = I, VEC = [((C_ATD_PIN_COUNT*(C_TDM_RATE)+(1*C_CAPTURE_MODE))-1):0]
PORT DATA22 = "", DIR = I, VEC = [((C_ATD_PIN_COUNT*(C_TDM_RATE)+(1*C_CAPTURE_MODE))-1):0]
PORT DATA23 = "", DIR = I, VEC = [((C_ATD_PIN_COUNT*(C_TDM_RATE)+(1*C_CAPTURE_MODE))-1):0]
PORT DATA24 = "", DIR = I, VEC = [((C_ATD_PIN_COUNT*(C_TDM_RATE)+(1*C_CAPTURE_MODE))-1):0]
PORT DATA25 = "", DIR = I, VEC = [((C_ATD_PIN_COUNT*(C_TDM_RATE)+(1*C_CAPTURE_MODE))-1):0]
PORT DATA26 = "", DIR = I, VEC = [((C_ATD_PIN_COUNT*(C_TDM_RATE)+(1*C_CAPTURE_MODE))-1):0]
PORT DATA27 = "", DIR = I, VEC = [((C_ATD_PIN_COUNT*(C_TDM_RATE)+(1*C_CAPTURE_MODE))-1):0]
PORT DATA28 = "", DIR = I, VEC = [((C_ATD_PIN_COUNT*(C_TDM_RATE)+(1*C_CAPTURE_MODE))-1):0]
PORT DATA29 = "", DIR = I, VEC = [((C_ATD_PIN_COUNT*(C_TDM_RATE)+(1*C_CAPTURE_MODE))-1):0]
PORT DATA30 = "", DIR = I, VEC = [((C_ATD_PIN_COUNT*(C_TDM_RATE)+(1*C_CAPTURE_MODE))-1):0]
PORT DATA31 = "", DIR = I, VEC = [((C_ATD_PIN_COUNT*(C_TDM_RATE)+(1*C_CAPTURE_MODE))-1):0]
PORT DATA32 = "", DIR = I, VEC = [((C_ATD_PIN_COUNT*(C_TDM_RATE)+(1*C_CAPTURE_MODE))-1):0]
PORT DATA33 = "", DIR = I, VEC = [((C_ATD_PIN_COUNT*(C_TDM_RATE)+(1*C_CAPTURE_MODE))-1):0]
PORT DATA34 = "", DIR = I, VEC = [((C_ATD_PIN_COUNT*(C_TDM_RATE)+(1*C_CAPTURE_MODE))-1):0]
PORT DATA35 = "", DIR = I, VEC = [((C_ATD_PIN_COUNT*(C_TDM_RATE)+(1*C_CAPTURE_MODE))-1):0]
PORT DATA36 = "", DIR = I, VEC = [((C_ATD_PIN_COUNT*(C_TDM_RATE)+(1*C_CAPTURE_MODE))-1):0]
PORT DATA37 = "", DIR = I, VEC = [((C_ATD_PIN_COUNT*(C_TDM_RATE)+(1*C_CAPTURE_MODE))-1):0]
PORT DATA38 = "", DIR = I, VEC = [((C_ATD_PIN_COUNT*(C_TDM_RATE)+(1*C_CAPTURE_MODE))-1):0]
PORT DATA39 = "", DIR = I, VEC = [((C_ATD_PIN_COUNT*(C_TDM_RATE)+(1*C_CAPTURE_MODE))-1):0]
PORT DATA40 = "", DIR = I, VEC = [((C_ATD_PIN_COUNT*(C_TDM_RATE)+(1*C_CAPTURE_MODE))-1):0]
PORT DATA41 = "", DIR = I, VEC = [((C_ATD_PIN_COUNT*(C_TDM_RATE)+(1*C_CAPTURE_MODE))-1):0]
PORT DATA42 = "", DIR = I, VEC = [((C_ATD_PIN_COUNT*(C_TDM_RATE)+(1*C_CAPTURE_MODE))-1):0]
PORT DATA43 = "", DIR = I, VEC = [((C_ATD_PIN_COUNT*(C_TDM_RATE)+(1*C_CAPTURE_MODE))-1):0]
PORT DATA44 = "", DIR = I, VEC = [((C_ATD_PIN_COUNT*(C_TDM_RATE)+(1*C_CAPTURE_MODE))-1):0]
PORT DATA45 = "", DIR = I, VEC = [((C_ATD_PIN_COUNT*(C_TDM_RATE)+(1*C_CAPTURE_MODE))-1):0]
PORT DATA46 = "", DIR = I, VEC = [((C_ATD_PIN_COUNT*(C_TDM_RATE)+(1*C_CAPTURE_MODE))-1):0]
PORT DATA47 = "", DIR = I, VEC = [((C_ATD_PIN_COUNT*(C_TDM_RATE)+(1*C_CAPTURE_MODE))-1):0]
PORT DATA48 = "", DIR = I, VEC = [((C_ATD_PIN_COUNT*(C_TDM_RATE)+(1*C_CAPTURE_MODE))-1):0]
PORT DATA49 = "", DIR = I, VEC = [((C_ATD_PIN_COUNT*(C_TDM_RATE)+(1*C_CAPTURE_MODE))-1):0]
PORT DATA50 = "", DIR = I, VEC = [((C_ATD_PIN_COUNT*(C_TDM_RATE)+(1*C_CAPTURE_MODE))-1):0]
PORT DATA51 = "", DIR = I, VEC = [((C_ATD_PIN_COUNT*(C_TDM_RATE)+(1*C_CAPTURE_MODE))-1):0]
PORT DATA52 = "", DIR = I, VEC = [((C_ATD_PIN_COUNT*(C_TDM_RATE)+(1*C_CAPTURE_MODE))-1):0]
PORT DATA53 = "", DIR = I, VEC = [((C_ATD_PIN_COUNT*(C_TDM_RATE)+(1*C_CAPTURE_MODE))-1):0]
PORT DATA54 = "", DIR = I, VEC = [((C_ATD_PIN_COUNT*(C_TDM_RATE)+(1*C_CAPTURE_MODE))-1):0]
PORT DATA55 = "", DIR = I, VEC = [((C_ATD_PIN_COUNT*(C_TDM_RATE)+(1*C_CAPTURE_MODE))-1):0]
PORT DATA56 = "", DIR = I, VEC = [((C_ATD_PIN_COUNT*(C_TDM_RATE)+(1*C_CAPTURE_MODE))-1):0]
PORT DATA57 = "", DIR = I, VEC = [((C_ATD_PIN_COUNT*(C_TDM_RATE)+(1*C_CAPTURE_MODE))-1):0]
PORT DATA58 = "", DIR = I, VEC = [((C_ATD_PIN_COUNT*(C_TDM_RATE)+(1*C_CAPTURE_MODE))-1):0]
PORT DATA59 = "", DIR = I, VEC = [((C_ATD_PIN_COUNT*(C_TDM_RATE)+(1*C_CAPTURE_MODE))-1):0]
PORT DATA60 = "", DIR = I, VEC = [((C_ATD_PIN_COUNT*(C_TDM_RATE)+(1*C_CAPTURE_MODE))-1):0]
PORT DATA61 = "", DIR = I, VEC = [((C_ATD_PIN_COUNT*(C_TDM_RATE)+(1*C_CAPTURE_MODE))-1):0]
PORT DATA62 = "", DIR = I, VEC = [((C_ATD_PIN_COUNT*(C_TDM_RATE)+(1*C_CAPTURE_MODE))-1):0]
PORT DATA63 = "", DIR = I, VEC = [((C_ATD_PIN_COUNT*(C_TDM_RATE)+(1*C_CAPTURE_MODE))-1):0]
PORT UNUSED = "", DIR = O

END

FINISH_SINGLE_MPD

START_SINGLE_MPD mmcm_module_v1_00_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : mmcm_module
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN mmcm_module

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION LAST_UPDATED = 12.2
OPTION DESC = Mixed-Mode Clock Manager
OPTION LONG_DESC = The multiple clock manager module is a wrapper around the mmcm_adv primitive
OPTION IP_GROUP = 'Clock, Reset and Interrupt:MICROBLAZE'
OPTION ARCH_SUPPORT_MAP = (virtex6lx=PRODUCTION, virtex6sx=PRODUCTION, virtex6hx=PRODUCTION, virtex6cx=PRODUCTION, virtex6llx=PRE_PRODUCTION, virtex6lsx=PRE_PRODUCTION, qvirtex6lx=PRE_PRODUCTION, qvirtex6sx=PRE_PRODUCTION, qvirtex6fx=PRE_PRODUCTION, qvirtex6tx=PRE_PRODUCTION)
OPTION RUN_NGCBUILD = FALSE
OPTION STYLE = HDL


## Bus Interfaces

## Generics for VHDL or Parameters for Verilog
PARAMETER C_BANDWIDTH = OPTIMIZED, DT = STRING
PARAMETER C_CLKFBOUT_MULT_F = 1.000000, DT = REAL
PARAMETER C_CLKFBOUT_PHASE = 0.000000, DT = REAL
PARAMETER C_CLKFBOUT_USE_FINE_PS = false, DT = BOOLEAN
PARAMETER C_CLKIN1_PERIOD = 0.000000, DT = REAL
PARAMETER C_CLKOUT0_DIVIDE_F = 0.000000, DT = REAL
PARAMETER C_CLKOUT0_DUTY_CYCLE = 0.500000, DT = REAL
PARAMETER C_CLKOUT0_PHASE = 0.000000, DT = REAL
PARAMETER C_CLKOUT1_DIVIDE = 1, DT = INTEGER
PARAMETER C_CLKOUT1_DUTY_CYCLE = 0.500000, DT = REAL
PARAMETER C_CLKOUT1_PHASE = 0.000000, DT = REAL
PARAMETER C_CLKOUT2_DIVIDE = 1, DT = INTEGER
PARAMETER C_CLKOUT2_DUTY_CYCLE = 0.500000, DT = REAL
PARAMETER C_CLKOUT2_PHASE = 0.000000, DT = REAL
PARAMETER C_CLKOUT3_DIVIDE = 1, DT = INTEGER
PARAMETER C_CLKOUT3_DUTY_CYCLE = 0.500000, DT = REAL
PARAMETER C_CLKOUT3_PHASE = 0.000000, DT = REAL
PARAMETER C_CLKOUT4_DIVIDE = 1, DT = INTEGER
PARAMETER C_CLKOUT4_DUTY_CYCLE = 0.500000, DT = REAL
PARAMETER C_CLKOUT4_PHASE = 0.000000, DT = REAL
PARAMETER C_CLKOUT5_DIVIDE = 1, DT = INTEGER
PARAMETER C_CLKOUT5_DUTY_CYCLE = 0.500000, DT = REAL
PARAMETER C_CLKOUT5_PHASE = 0.000000, DT = REAL
PARAMETER C_CLKOUT6_DIVIDE = 1, DT = INTEGER
PARAMETER C_CLKOUT6_DUTY_CYCLE = 0.500000, DT = REAL
PARAMETER C_CLKOUT6_PHASE = 0.000000, DT = REAL
PARAMETER C_CLKOUT0_USE_FINE_PS = false, DT = BOOLEAN
PARAMETER C_CLKOUT1_USE_FINE_PS = false, DT = BOOLEAN
PARAMETER C_CLKOUT2_USE_FINE_PS = false, DT = BOOLEAN
PARAMETER C_CLKOUT3_USE_FINE_PS = false, DT = BOOLEAN
PARAMETER C_CLKOUT4_USE_FINE_PS = false, DT = BOOLEAN
PARAMETER C_CLKOUT5_USE_FINE_PS = false, DT = BOOLEAN
PARAMETER C_CLKOUT6_USE_FINE_PS = false, DT = BOOLEAN
PARAMETER C_COMPENSATION = ZHOLD, DT = STRING
PARAMETER C_DIVCLK_DIVIDE = 1, DT = INTEGER
PARAMETER C_REF_JITTER1 = 0.010000, DT = REAL
PARAMETER C_CLKIN1_BUF = false, DT = BOOLEAN
PARAMETER C_CLKFBOUT_BUF = false, DT = BOOLEAN
PARAMETER C_CLKOUT0_BUF = false, DT = BOOLEAN
PARAMETER C_CLKOUT1_BUF = false, DT = BOOLEAN
PARAMETER C_CLKOUT2_BUF = false, DT = BOOLEAN
PARAMETER C_CLKOUT3_BUF = false, DT = BOOLEAN
PARAMETER C_CLKOUT4_BUF = false, DT = BOOLEAN
PARAMETER C_CLKOUT5_BUF = false, DT = BOOLEAN
PARAMETER C_CLKOUT6_BUF = false, DT = BOOLEAN
PARAMETER C_CLOCK_HOLD = false, DT = BOOLEAN
PARAMETER C_STARTUP_WAIT = false, DT = BOOLEAN
PARAMETER C_EXT_RESET_HIGH = 1, DT = INTEGER, IO_IS = polarity, RANGE = (0:1), VALUES = (0 =  0: Active Low , 1 =  1: Active High )
PARAMETER C_FAMILY = virtex6, DT = STRING

## Ports
PORT CLKFBOUT = "", DIR = O
PORT CLKFBOUTB = "", DIR = O
PORT CLKOUT0 = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN1, CLK_FACTOR = 1.0 * C_CLKFBOUT_MULT_F/(C_CLKOUT0_DIVIDE_F * C_DIVCLK_DIVIDE)
PORT CLKOUT1 = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN1, CLK_FACTOR = 1.0 * C_CLKFBOUT_MULT_F/(C_CLKOUT1_DIVIDE * C_DIVCLK_DIVIDE)
PORT CLKOUT2 = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN1, CLK_FACTOR = 1.0 * C_CLKFBOUT_MULT_F/(C_CLKOUT2_DIVIDE * C_DIVCLK_DIVIDE)
PORT CLKOUT3 = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN1, CLK_FACTOR = 1.0 * C_CLKFBOUT_MULT_F/(C_CLKOUT3_DIVIDE * C_DIVCLK_DIVIDE)
PORT CLKOUT4 = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN1, CLK_FACTOR = 1.0 * C_CLKFBOUT_MULT_F/(C_CLKOUT4_DIVIDE * C_DIVCLK_DIVIDE)
PORT CLKOUT5 = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN1, CLK_FACTOR = 1.0 * C_CLKFBOUT_MULT_F/(C_CLKOUT5_DIVIDE * C_DIVCLK_DIVIDE)
PORT CLKOUT6 = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN1, CLK_FACTOR = 1.0 * C_CLKFBOUT_MULT_F/(C_CLKOUT6_DIVIDE * C_DIVCLK_DIVIDE)
PORT CLKOUT0B = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN1, CLK_FACTOR = 1.0 * C_CLKFBOUT_MULT_F/(C_CLKOUT0_DIVIDE_F * C_DIVCLK_DIVIDE)
PORT CLKOUT1B = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN1, CLK_FACTOR = 1.0 * C_CLKFBOUT_MULT_F/(C_CLKOUT1_DIVIDE * C_DIVCLK_DIVIDE)
PORT CLKOUT2B = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN1, CLK_FACTOR = 1.0 * C_CLKFBOUT_MULT_F/(C_CLKOUT2_DIVIDE * C_DIVCLK_DIVIDE)
PORT CLKOUT3B = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN1, CLK_FACTOR = 1.0 * C_CLKFBOUT_MULT_F/(C_CLKOUT3_DIVIDE * C_DIVCLK_DIVIDE)
PORT LOCKED = "", DIR = O
PORT CLKFBSTOPPED = "", DIR = O
PORT CLKINSTOPPED = "", DIR = O
PORT PSDONE = "", DIR = O
PORT CLKFBIN = "", DIR = I
PORT CLKIN1 = "", DIR = I, SIGIS = CLK
PORT PWRDWN = "", DIR = I
PORT PSCLK = "", DIR = I, SIGIS = CLK
PORT PSEN = "", DIR = I
PORT PSINCDEC = "", DIR = I
PORT RST = "", DIR = I, SIGIS = RST

END

FINISH_SINGLE_MPD

START_SINGLE_MPD xps_sysmon_adc_v2_00_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : xps_sysmon_adc
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN xps_sysmon_adc

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION HDL = VHDL
OPTION IMP_NETLIST = TRUE
OPTION SYSLEVEL_DRC_PROC = check_syslevel_settings
OPTION DESC = XPS System Monitor/Analog Digital Converter
OPTION LONG_DESC = System Monitor/Analog-Digital Converter (ADC) for the PLBV46 bus
OPTION IP_GROUP = Analog:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (virtex5lx=PRODUCTION, virtex5sx=PRODUCTION, virtex5fx=PRODUCTION, virtex6lx=PRODUCTION, virtex6sx=PRODUCTION, virtex6hx=PRODUCTION, virtex6cx=PRODUCTION, virtex6llx=PRE_PRODUCTION, virtex6lsx=PRE_PRODUCTION, qvirtex6lx=PRE_PRODUCTION, qvirtex6sx=PRE_PRODUCTION, qvirtex6fx=PRE_PRODUCTION, qvirtex6tx=PRE_PRODUCTION)
OPTION RUN_NGCBUILD = FALSE
OPTION STYLE = HDL


## Bus Interfaces
BUS_INTERFACE BUS = SPLB, BUS_TYPE = SLAVE, BUS_STD = PLBV46

## Generics for VHDL or Parameters for Verilog
PARAMETER C_BASEADDR = 0xffffffff, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_HIGHADDR, MIN_SIZE = 0x3FF, ASSIGNMENT = REQUIRE
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_BASEADDR, ASSIGNMENT = REQUIRE
PARAMETER C_FAMILY = virtex5, DT = STRING
PARAMETER C_SPLB_AWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_DWIDTH = 32, DT = INTEGER, BUS = SPLB, RANGE = (32,64,128)
PARAMETER C_SPLB_P2P = 0, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_INCLUDE_INTR = 1, DT = INTEGER, RANGE = (0,1)
PARAMETER C_SIM_MONITOR_FILE = Sysmon_Design.txt, DT = STRING

## Ports
PORT SPLB_Clk = "", DIR = I, SIGIS = Clk, BUS = SPLB
PORT SPLB_Rst = SPLB_Rst, DIR = I, SIGIS = Rst, BUS = SPLB
PORT PLB_ABus = PLB_ABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB
PORT PLB_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB_MID_WIDTH-1)], BUS = SPLB
PORT PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB
PORT PLB_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB_DWIDTH/8)-1)], BUS = SPLB
PORT PLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB
PORT PLB_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB
PORT PLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB
PORT Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB
PORT Sl_wait = Sl_wait, DIR = O, BUS = SPLB
PORT Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB
PORT Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB
PORT Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB
PORT Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB
PORT Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB
PORT Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT PLB_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB
PORT PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB
PORT PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB
PORT PLB_abort = PLB_abort, DIR = I, BUS = SPLB
PORT PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB
PORT PLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB
PORT PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB
PORT PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB
PORT PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB
PORT PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB
PORT PLB_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB
PORT Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB
PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB
PORT Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB
PORT Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT VAUXP = "", DIR = I, VEC = [15:0], INITIALVAL = GND
PORT VAUXN = "", DIR = I, VEC = [15:0], INITIALVAL = GND
PORT CONVST = "", DIR = I, INITIALVAL = GND
PORT IP2INTC_Irpt = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, ISVALID = (C_INCLUDE_INTR==1)
PORT ALARM = "", DIR = O, VEC = [2:0]

END

FINISH_SINGLE_MPD

START_SINGLE_MPD pll_module_v2_00_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : pll_module
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN pll_module

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION IPLEVEL_DRC_PROC = check_iplevel_settings
OPTION LAST_UPDATED = 12.2
OPTION DESC = Phase Locked Loop
OPTION LONG_DESC = The PLL is a wrapper around PLL primitive which allows it to be used in the EDK tools suite
OPTION IP_GROUP = 'Clock, Reset and Interrupt:PPC'
OPTION ARCH_SUPPORT_MAP = (virtex5lx=PRODUCTION, virtex5sx=PRODUCTION, virtex5fx=PRODUCTION, spartan6t=PRODUCTION, spartan6=PRODUCTION, spartan6l=PRE_PRODUCTION, qspartan6t=PRODUCTION, qspartan6=PRODUCTION, aspartan6t=PRODUCTION, aspartan6=PRODUCTION, qspartan6l=PRE_PRODUCTION)
OPTION RUN_NGCBUILD = FALSE
OPTION STYLE = HDL


## Bus Interfaces

## Generics for VHDL or Parameters for Verilog
PARAMETER C_BANDWIDTH = OPTIMIZED, DT = STRING
PARAMETER C_CLKFBOUT_MULT = 1, DT = INTEGER
PARAMETER C_CLKFBOUT_PHASE = 0.000000, DT = REAL
PARAMETER C_CLKIN1_PERIOD = 0.000000, DT = REAL
PARAMETER C_CLKOUT0_DIVIDE = 1, DT = INTEGER
PARAMETER C_CLKOUT0_DUTY_CYCLE = 0.500000, DT = REAL
PARAMETER C_CLKOUT0_PHASE = 0.000000, DT = REAL
PARAMETER C_CLKOUT1_DIVIDE = 1, DT = INTEGER
PARAMETER C_CLKOUT1_DUTY_CYCLE = 0.500000, DT = REAL
PARAMETER C_CLKOUT1_PHASE = 0.000000, DT = REAL
PARAMETER C_CLKOUT2_DIVIDE = 1, DT = INTEGER
PARAMETER C_CLKOUT2_DUTY_CYCLE = 0.500000, DT = REAL
PARAMETER C_CLKOUT2_PHASE = 0.000000, DT = REAL
PARAMETER C_CLKOUT3_DIVIDE = 1, DT = INTEGER
PARAMETER C_CLKOUT3_DUTY_CYCLE = 0.500000, DT = REAL
PARAMETER C_CLKOUT3_PHASE = 0.000000, DT = REAL
PARAMETER C_CLKOUT4_DIVIDE = 1, DT = INTEGER
PARAMETER C_CLKOUT4_DUTY_CYCLE = 0.500000, DT = REAL
PARAMETER C_CLKOUT4_PHASE = 0.000000, DT = REAL
PARAMETER C_CLKOUT5_DIVIDE = 1, DT = INTEGER
PARAMETER C_CLKOUT5_DUTY_CYCLE = 0.500000, DT = REAL
PARAMETER C_CLKOUT5_PHASE = 0.000000, DT = REAL
PARAMETER C_COMPENSATION = SYSTEM_SYNCHRONOUS, DT = STRING
PARAMETER C_DIVCLK_DIVIDE = 1, DT = INTEGER
PARAMETER C_REF_JITTER = 0.100000, DT = REAL
PARAMETER C_RESET_ON_LOSS_OF_LOCK = false, DT = BOOLEAN
PARAMETER C_RST_DEASSERT_CLK = CLKIN1, DT = STRING
PARAMETER C_CLKOUT0_DESKEW_ADJUST = NONE, DT = STRING
PARAMETER C_CLKOUT1_DESKEW_ADJUST = NONE, DT = STRING
PARAMETER C_CLKOUT2_DESKEW_ADJUST = NONE, DT = STRING
PARAMETER C_CLKOUT3_DESKEW_ADJUST = NONE, DT = STRING
PARAMETER C_CLKOUT4_DESKEW_ADJUST = NONE, DT = STRING
PARAMETER C_CLKOUT5_DESKEW_ADJUST = NONE, DT = STRING
PARAMETER C_CLKFBOUT_DESKEW_ADJUST = NONE, DT = STRING
PARAMETER C_CLKIN1_BUF = false, DT = BOOLEAN
PARAMETER C_CLKFBOUT_BUF = false, DT = BOOLEAN
PARAMETER C_CLKOUT0_BUF = false, DT = BOOLEAN
PARAMETER C_CLKOUT1_BUF = false, DT = BOOLEAN
PARAMETER C_CLKOUT2_BUF = false, DT = BOOLEAN
PARAMETER C_CLKOUT3_BUF = false, DT = BOOLEAN
PARAMETER C_CLKOUT4_BUF = false, DT = BOOLEAN
PARAMETER C_CLKOUT5_BUF = false, DT = BOOLEAN
PARAMETER C_EXT_RESET_HIGH = 1, DT = INTEGER, IO_IS = polarity, RANGE = (0:1), VALUES = (0 =  0: Active Low , 1 =  1: Active High )
PARAMETER C_FAMILY = none, DT = STRING

## Ports
PORT CLKFBDCM = "", DIR = O
PORT CLKFBOUT = "", DIR = O
PORT CLKOUT0 = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN1, CLK_FACTOR = 1.0 * C_CLKFBOUT_MULT/(C_CLKOUT0_DIVIDE * C_DIVCLK_DIVIDE)
PORT CLKOUT1 = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN1, CLK_FACTOR = 1.0 * C_CLKFBOUT_MULT/(C_CLKOUT1_DIVIDE * C_DIVCLK_DIVIDE)
PORT CLKOUT2 = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN1, CLK_FACTOR = 1.0 * C_CLKFBOUT_MULT/(C_CLKOUT2_DIVIDE * C_DIVCLK_DIVIDE)
PORT CLKOUT3 = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN1, CLK_FACTOR = 1.0 * C_CLKFBOUT_MULT/(C_CLKOUT3_DIVIDE * C_DIVCLK_DIVIDE)
PORT CLKOUT4 = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN1, CLK_FACTOR = 1.0 * C_CLKFBOUT_MULT/(C_CLKOUT4_DIVIDE * C_DIVCLK_DIVIDE)
PORT CLKOUT5 = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN1, CLK_FACTOR = 1.0 * C_CLKFBOUT_MULT/(C_CLKOUT5_DIVIDE * C_DIVCLK_DIVIDE)
PORT CLKOUTDCM0 = "", DIR = O
PORT CLKOUTDCM1 = "", DIR = O
PORT CLKOUTDCM2 = "", DIR = O
PORT CLKOUTDCM3 = "", DIR = O
PORT CLKOUTDCM4 = "", DIR = O
PORT CLKOUTDCM5 = "", DIR = O
PORT LOCKED = "", DIR = O
PORT CLKFBIN = "", DIR = I
PORT CLKIN1 = "", DIR = I, SIGIS = CLK
PORT RST = "", DIR = I, SIGIS = RST

END

FINISH_SINGLE_MPD

START_SINGLE_MPD fsl_v20_v2_11_b 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : fsl_v20
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN fsl_v20

## Peripheral Options
OPTION IPTYPE = BUS
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION BUS_STD = FSL
OPTION RUN_NGCBUILD = TRUE
OPTION MAX_MASTERS = 1
OPTION MAX_SLAVES = 1
OPTION SYSLEVEL_DRC_PROC = check_syslevel_settings
OPTION PLATGEN_SYSLEVEL_UPDATE_PROC = generate_corelevel_ucf
OPTION DESC = Fast Simplex Link (FSL) Bus
OPTION LONG_DESC = Fast Simplex Link (FSL) is a fast uni-directional point to point communication channel
OPTION IP_GROUP = Bus and Bridge:MICROBLAZE
OPTION ARCH_SUPPORT_MAP = (aspartan3=SUPERSEDED, spartan3=SUPERSEDED, spartan3an=SUPERSEDED, spartan3a=SUPERSEDED, spartan3e=SUPERSEDED, spartan3adsp=SUPERSEDED, virtex4lx=SUPERSEDED, virtex4sx=SUPERSEDED, virtex4fx=SUPERSEDED, virtex5lx=SUPERSEDED, virtex5sx=SUPERSEDED, virtex5fx=SUPERSEDED, aspartan3e=SUPERSEDED, aspartan3a=SUPERSEDED, aspartan3adsp=SUPERSEDED, qvirtex4lx=SUPERSEDED, qvirtex4sx=SUPERSEDED, qvirtex4fx=SUPERSEDED, qrvirtex4lx=SUPERSEDED, qrvirtex4sx=SUPERSEDED, qrvirtex4fx=SUPERSEDED, spartan6t=SUPERSEDED, spartan6=SUPERSEDED, spartan6l=SUPERSEDED, qspartan6t=SUPERSEDED, qspartan6=SUPERSEDED, aspartan6t=SUPERSEDED, aspartan6=SUPERSEDED, virtex6lx=SUPERSEDED, virtex6sx=SUPERSEDED, virtex6hx=SUPERSEDED, virtex6cx=SUPERSEDED, virtex6llx=SUPERSEDED, virtex6lsx=SUPERSEDED, qspartan6l=SUPERSEDED, qrvirtex5=SUPERSEDED, qvirtex6lx=SUPERSEDED, qvirtex6sx=SUPERSEDED, qvirtex6fx=SUPERSEDED, qvirtex6tx=SUPERSEDED)
OPTION STYLE = HDL


## Bus Interfaces

## Generics for VHDL or Parameters for Verilog
PARAMETER C_EXT_RESET_HIGH = 1, DT = integer, RANGE = (0:1)
PARAMETER C_ASYNC_CLKS = 0, DT = integer, RANGE = (0:1)
PARAMETER C_IMPL_STYLE = 0, DT = integer, RANGE = (0:1)
PARAMETER C_USE_CONTROL = 1, DT = integer, RANGE = (0:1)
PARAMETER C_FSL_DWIDTH = 32, DT = integer
PARAMETER C_FSL_DEPTH = 16, DT = integer, RANGE = (!C_ASYNC_CLKS | C_ASYNC_CLKS*!C_IMPL_STYLE*16 | C_ASYNC_CLKS*C_IMPL_STYLE*512 : !C_ASYNC_CLKS*8192 | C_ASYNC_CLKS*!C_IMPL_STYLE*128 | C_ASYNC_CLKS*C_IMPL_STYLE*8192)
PARAMETER C_READ_CLOCK_PERIOD = 0, DT = integer, CLK_PORT = FSL_S_Clk, CLK_UNIT = PS

## Ports
PORT FSL_Clk = "", DIR = I, SIGIS = CLK
PORT SYS_Rst = "", DIR = I
PORT FSL_Rst = LMB_Rst, DIR = O
PORT FSL_M_Clk = "", DIR = I
PORT FSL_M_Data = FSL_M_Data, DIR = I, VEC = [0:C_FSL_DWIDTH-1]
PORT FSL_M_Control = FSL_M_Control, DIR = I
PORT FSL_M_Write = FSL_M_Write, DIR = I
PORT FSL_M_Full = FSL_M_Full, DIR = O
PORT FSL_S_Clk = "", DIR = I
PORT FSL_S_Data = FSL_S_Data, DIR = O, VEC = [0:C_FSL_DWIDTH-1]
PORT FSL_S_Control = FSL_S_Control, DIR = O
PORT FSL_S_Read = FSL_S_Read, DIR = I
PORT FSL_S_Exists = FSL_S_Exists, DIR = O
PORT FSL_Full = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH
PORT FSL_Has_Data = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH
PORT FSL_Control_IRQ = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH

END

FINISH_SINGLE_MPD

START_SINGLE_MPD xps_usb_host_v1_00_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : xps_usb_host
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN xps_usb_host

## Peripheral Options
OPTION STYLE = HDL
OPTION HDL = VHDL
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION RUN_NGCBUILD = TRUE
OPTION PAY_CORE = xps_usb_host_v1
OPTION PLATGEN_SYSLEVEL_UPDATE_PROC = generate_corelevel_ucf
OPTION DESC = XPS USB Host
OPTION LONG_DESC = USB Host with PLBV46 Interface.
OPTION IP_GROUP = Communication High-Speed:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=SUPERSEDED, spartan3=SUPERSEDED, spartan3an=SUPERSEDED, spartan3a=SUPERSEDED, spartan3e=SUPERSEDED, spartan3adsp=SUPERSEDED, virtex4lx=SUPERSEDED, virtex4sx=SUPERSEDED, virtex4fx=SUPERSEDED, virtex5lx=SUPERSEDED, virtex5sx=SUPERSEDED, virtex5fx=SUPERSEDED, aspartan3e=SUPERSEDED, aspartan3a=SUPERSEDED, aspartan3adsp=SUPERSEDED, qvirtex4lx=SUPERSEDED, qvirtex4sx=SUPERSEDED, qvirtex4fx=SUPERSEDED, qrvirtex4lx=SUPERSEDED, qrvirtex4sx=SUPERSEDED, qrvirtex4fx=SUPERSEDED, spartan6t=SUPERSEDED, spartan6=SUPERSEDED, spartan6l=SUPERSEDED, qspartan6t=SUPERSEDED, qspartan6=SUPERSEDED, aspartan6t=SUPERSEDED, aspartan6=SUPERSEDED, virtex6lx=SUPERSEDED, virtex6sx=SUPERSEDED, virtex6hx=SUPERSEDED, virtex6cx=SUPERSEDED, virtex6llx=SUPERSEDED, virtex6lsx=SUPERSEDED, qspartan6l=SUPERSEDED, qrvirtex5=SUPERSEDED, qvirtex6lx=SUPERSEDED, qvirtex6sx=SUPERSEDED, qvirtex6fx=SUPERSEDED, qvirtex6tx=SUPERSEDED)


## Bus Interfaces
BUS_INTERFACE BUS = MPLB, BUS_STD = PLBV46, BUS_TYPE = MASTER, GENERATE_BURSTS = TRUE
BUS_INTERFACE BUS = SPLB, BUS_STD = PLBV46, BUS_TYPE = SLAVE

## Generics for VHDL or Parameters for Verilog
PARAMETER C_SUPPORT_USB_FS = 0, DT = INTEGER, ASSIGNMENT = CONSTANT, RANGE = (0:1)
PARAMETER C_HAS_PWR_CNTL = 1, DT = INTEGER, RANGE = (0:1)
PARAMETER C_USE_PHY_BUS_PWR = 0, DT = INTEGER, RANGE = (0:1)
PARAMETER C_EXT_VBUS_VALID = 1, DT = INTEGER, RANGE = (0:1)
PARAMETER C_EXT_VBUS_VALID_INVERT = 0, DT = INTEGER, RANGE = (0:1)
PARAMETER C_SPLB_BASEADDR = 0xffffffff, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_SPLB_HIGHADDR, MIN_SIZE = 0x200, ASSIGNMENT = REQUIRE
PARAMETER C_SPLB_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_SPLB_BASEADDR, ASSIGNMENT = REQUIRE
PARAMETER C_SPLB_AWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_DWIDTH = 32, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_P2P = 0, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB, TYPE = NON_HDL, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB, TYPE = NON_HDL, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_CLK_PERIOD_PS = 10000, DT = INTEGER, BUS = SPLB
PARAMETER C_MPLB_AWIDTH = 32, DT = INTEGER, BUS = MPLB, ASSIGNMENT = CONSTANT
PARAMETER C_MPLB_DWIDTH = 32, DT = INTEGER, BUS = MPLB
PARAMETER C_MPLB_P2P = 0, DT = INTEGER, BUS = MPLB
PARAMETER C_MPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = MPLB, TYPE = NON_HDL, ASSIGNMENT = CONSTANT
PARAMETER C_FAMILY = virtex5, DT = STRING

## Ports
PORT SPLB_Clk = "", DIR = I, SIGIS = Clk, BUS = SPLB
PORT SPLB_Rst = SPLB_Rst, DIR = I, SIGIS = Rst, BUS = SPLB
PORT MPLB_Clk = "", DIR = I, SIGIS = Clk, BUS = MPLB
PORT MPLB_Rst = MPLB_Rst, DIR = I, SIGIS = Rst, BUS = MPLB
PORT PLB_ABus = PLB_ABus, DIR = I, VEC = [0:(C_SPLB_AWIDTH-1)], BUS = SPLB
PORT PLB_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB_DWIDTH/8)-1)], BUS = SPLB
PORT PLB_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB
PORT PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB
PORT PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB
PORT PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB
PORT PLB_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB_MID_WIDTH-1)], BUS = SPLB
PORT PLB_abort = PLB_abort, DIR = I, BUS = SPLB
PORT PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB
PORT PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB
PORT PLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB
PORT PLB_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB
PORT PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB
PORT PLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB
PORT PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB
PORT PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB
PORT PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB
PORT PLB_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB
PORT Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB
PORT Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB
PORT Sl_wait = Sl_wait, DIR = O, BUS = SPLB
PORT Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB
PORT Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB
PORT Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB
PORT Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB
PORT Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB
PORT Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB
PORT Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB
PORT Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB
PORT Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT M_request = M_request, DIR = O, BUS = MPLB
PORT M_priority = M_priority, DIR = O, VEC = [0:1], BUS = MPLB
PORT M_busLock = M_busLock, DIR = O, BUS = MPLB
PORT M_RNW = M_RNW, DIR = O, BUS = MPLB
PORT M_BE = M_BE, DIR = O, VEC = [0:((C_MPLB_DWIDTH/8)-1)], BUS = MPLB
PORT M_MSize = M_MSize, DIR = O, VEC = [0:1], BUS = MPLB
PORT M_size = M_size, DIR = O, VEC = [0:3], BUS = MPLB
PORT M_type = M_type, DIR = O, VEC = [0:2], BUS = MPLB
PORT M_TAttribute = M_TAttribute, DIR = O, VEC = [0:15], BUS = MPLB
PORT M_lockErr = M_lockErr, DIR = O, BUS = MPLB
PORT M_abort = M_abort, DIR = O, BUS = MPLB
PORT M_UABus = M_UABus, DIR = O, VEC = [0:31], BUS = MPLB
PORT M_ABus = M_ABus, DIR = O, VEC = [0:(C_MPLB_AWIDTH-1)], BUS = MPLB
PORT M_wrDBus = M_wrDBus, DIR = O, VEC = [0:(C_MPLB_DWIDTH-1)], BUS = MPLB
PORT M_wrBurst = M_wrBurst, DIR = O, BUS = MPLB
PORT M_rdBurst = M_rdBurst, DIR = O, BUS = MPLB
PORT PLB_MAddrAck = PLB_MAddrAck, DIR = I, BUS = MPLB
PORT PLB_MSSize = PLB_MSSize, DIR = I, VEC = [0:1], BUS = MPLB
PORT PLB_MRearbitrate = PLB_MRearbitrate, DIR = I, BUS = MPLB
PORT PLB_MTimeout = PLB_MTimeout, DIR = I, BUS = MPLB
PORT PLB_MBusy = PLB_MBusy, DIR = I, BUS = MPLB
PORT PLB_MRdErr = PLB_MRdErr, DIR = I, BUS = MPLB
PORT PLB_MWrErr = PLB_MWrErr, DIR = I, BUS = MPLB
PORT PLB_MIRQ = PLB_MIRQ, DIR = I, BUS = MPLB
PORT PLB_MRdDBus = PLB_MRdDBus, DIR = I, VEC = [0:(C_MPLB_DWIDTH-1)], BUS = MPLB
PORT PLB_MRdWdAddr = PLB_MRdWdAddr, DIR = I, VEC = [0:3], BUS = MPLB
PORT PLB_MRdDAck = PLB_MRdDAck, DIR = I, BUS = MPLB
PORT PLB_MRdBTerm = PLB_MRdBTerm, DIR = I, BUS = MPLB
PORT PLB_MWrDAck = PLB_MWrDAck, DIR = I, BUS = MPLB
PORT PLB_MWrBTerm = PLB_MWrBTerm, DIR = I, BUS = MPLB
PORT USB_PHY_Reset = "", DIR = O
PORT ULPI_Clock = "", DIR = I
PORT ULPI_Dir = "", DIR = I
PORT ULPI_Nxt = "", DIR = I
PORT ULPI_Stp = "", DIR = O
PORT MD_Error = "", DIR = O
PORT Port_Indicators = "", DIR = O, VEC = [1:0], ENDIAN = LITTLE
PORT Host_Intr_Out = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH
PORT ULPI_Data_I = "", DIR = I, VEC = [7:0], ENDIAN = LITTLE
PORT ULPI_Data_O = "", DIR = O, VEC = [7:0], ENDIAN = LITTLE
PORT ULPI_Data_T = "", DIR = O, VEC = [7:0], ENDIAN = LITTLE
PORT ULPI_Data = "", DIR = IO, VEC = [7:0], THREE_STATE = TRUE, TRI_I = ULPI_Data_I, TRI_O = ULPI_Data_O, TRI_T = ULPI_Data_T, ENABLE = MULTI, ENDIAN = LITTLE

END

FINISH_SINGLE_MPD

START_SINGLE_MPD mdm_v1_00_g 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : mdm
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN mdm

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION HDL = VHDL
OPTION IMP_NETLIST = TRUE
OPTION STYLE = HDL
OPTION SYSLEVEL_DRC_PROC = check_syslevel_settings
OPTION LAST_UPDATED = 11.3
OPTION DESC = MicroBlaze Debug Module (MDM)
OPTION LONG_DESC = Debug module for MicroBlaze Soft Processor.
OPTION IP_GROUP = Debug:MICROBLAZE
OPTION ARCH_SUPPORT_MAP = (aspartan3=PRODUCTION, spartan3=PRODUCTION, spartan3an=PRODUCTION, spartan3a=PRODUCTION, spartan3e=PRODUCTION, spartan3adsp=PRODUCTION, virtex4lx=PRODUCTION, virtex4sx=PRODUCTION, virtex4fx=PRODUCTION, virtex5lx=PRODUCTION, virtex5sx=PRODUCTION, virtex5fx=PRODUCTION, aspartan3e=PRODUCTION, aspartan3a=PRODUCTION, aspartan3adsp=PRODUCTION, qvirtex4lx=PRODUCTION, qvirtex4sx=PRODUCTION, qvirtex4fx=PRODUCTION, qrvirtex4lx=PRODUCTION, qrvirtex4sx=PRODUCTION, qrvirtex4fx=PRODUCTION, spartan6t=PRODUCTION, spartan6=PRODUCTION, spartan6l=PRE_PRODUCTION, qspartan6t=PRODUCTION, qspartan6=PRODUCTION, aspartan6t=PRODUCTION, aspartan6=PRODUCTION, virtex6lx=PRODUCTION, virtex6sx=PRODUCTION, virtex6hx=PRODUCTION, virtex6cx=PRODUCTION, virtex6llx=PRE_PRODUCTION, virtex6lsx=PRE_PRODUCTION, qspartan6l=PRE_PRODUCTION, qrvirtex5=PRE_PRODUCTION, qvirtex6lx=PRE_PRODUCTION, qvirtex6sx=PRE_PRODUCTION, qvirtex6fx=PRE_PRODUCTION, qvirtex6tx=PRE_PRODUCTION)
OPTION RUN_NGCBUILD = FALSE


## Bus Interfaces
BUS_INTERFACE BUS = SPLB, BUS_STD = PLBV46, BUS_TYPE = SLAVE, ISVALID = ((C_INTERCONNECT == 1) && (C_USE_UART == 1))
BUS_INTERFACE BUS = SOPB, BUS_STD = OPB, BUS_TYPE = SLAVE, ISVALID = ((C_INTERCONNECT == 0) && (C_USE_UART == 1))
BUS_INTERFACE BUS = SFSL0, BUS_STD = FSL, BUS_TYPE = SLAVE, ISVALID = 0
BUS_INTERFACE BUS = MFSL0, BUS_STD = FSL, BUS_TYPE = MASTER, ISVALID = (C_WRITE_FSL_PORTS == 1)
BUS_INTERFACE BUS = MBDEBUG_0, BUS_STD = XIL_MBDEBUG2, BUS_TYPE = INITIATOR, ISVALID = (C_MB_DBG_PORTS >= 1)
BUS_INTERFACE BUS = MBDEBUG_1, BUS_STD = XIL_MBDEBUG2, BUS_TYPE = INITIATOR, ISVALID = (C_MB_DBG_PORTS >= 2)
BUS_INTERFACE BUS = MBDEBUG_2, BUS_STD = XIL_MBDEBUG2, BUS_TYPE = INITIATOR, ISVALID = (C_MB_DBG_PORTS >= 3)
BUS_INTERFACE BUS = MBDEBUG_3, BUS_STD = XIL_MBDEBUG2, BUS_TYPE = INITIATOR, ISVALID = (C_MB_DBG_PORTS >= 4)
BUS_INTERFACE BUS = MBDEBUG_4, BUS_STD = XIL_MBDEBUG2, BUS_TYPE = INITIATOR, ISVALID = (C_MB_DBG_PORTS >= 5)
BUS_INTERFACE BUS = MBDEBUG_5, BUS_STD = XIL_MBDEBUG2, BUS_TYPE = INITIATOR, ISVALID = (C_MB_DBG_PORTS >= 6)
BUS_INTERFACE BUS = MBDEBUG_6, BUS_STD = XIL_MBDEBUG2, BUS_TYPE = INITIATOR, ISVALID = (C_MB_DBG_PORTS >= 7)
BUS_INTERFACE BUS = MBDEBUG_7, BUS_STD = XIL_MBDEBUG2, BUS_TYPE = INITIATOR, ISVALID = (C_MB_DBG_PORTS >= 8)
BUS_INTERFACE BUS = XMTC, BUS_STD = XIL_BSCAN, BUS_TYPE = INITIATOR

## Generics for VHDL or Parameters for Verilog
PARAMETER C_FAMILY = virtex6, DT = STRING
PARAMETER C_JTAG_CHAIN = 2, DT = INTEGER, RANGE = (1:4), VALUES = (1=USER1, 2=USER2, 3=USER3, 4=USER4), ISVALID = (([xstrncmp C_FAMILY  virtex4 ]) || ([xstrncmp C_FAMILY  virtex5 ]) || ([xstrncmp C_FAMILY  spartan6 ]) || ([xstrncmp C_FAMILY  virtex6 ]))
PARAMETER C_INTERCONNECT = 1, DT = INTEGER, RANGE = (0,1), VALUES = (0=OPB, 1=PLBv46), ISVALID = (C_USE_UART == 1)
PARAMETER C_BASEADDR = 0xffffffff, DT = STD_LOGIC_VECTOR, PAIR = C_HIGHADDR, BUS = SPLB:SOPB, MIN_SIZE = 0x100, ISVALID = (C_USE_UART == 1)
PARAMETER C_HIGHADDR = 0x00000000, DT = STD_LOGIC_VECTOR, PAIR = C_BASEADDR, BUS = SPLB:SOPB, ISVALID = (C_USE_UART == 1)
PARAMETER C_SPLB_AWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT, ISVALID = ((C_INTERCONNECT == 1) && (C_USE_UART == 1))
PARAMETER C_SPLB_DWIDTH = 32, DT = INTEGER, BUS = SPLB, ISVALID = ((C_INTERCONNECT == 1) && (C_USE_UART == 1))
PARAMETER C_SPLB_P2P = 0, DT = INTEGER, BUS = SPLB, ISVALID = ((C_INTERCONNECT == 1) && (C_USE_UART == 1))
PARAMETER C_SPLB_MID_WIDTH = 3, DT = INTEGER, BUS = SPLB, ISVALID = ((C_INTERCONNECT == 1) && (C_USE_UART == 1))
PARAMETER C_SPLB_NUM_MASTERS = 8, DT = INTEGER, BUS = SPLB, ISVALID = ((C_INTERCONNECT == 1) && (C_USE_UART == 1))
PARAMETER C_SPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT, ISVALID = ((C_INTERCONNECT == 1) && (C_USE_UART == 1))
PARAMETER C_SPLB_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB, ASSIGNEMNT = CONSTANT, ISVALID = ((C_INTERCONNECT == 1) && (C_USE_UART == 1))
PARAMETER C_OPB_DWIDTH = 32, DT = INTEGER, BUS = SOPB, ASSIGNEMT = CONSTANT, ISVALID = ((C_INTERCONNECT == 0) && (C_USE_UART == 1))
PARAMETER C_OPB_AWIDTH = 32, DT = INTEGER, BUS = SOPB, ASSIGNMENT = CONSTANT, ISVALID = ((C_INTERCONNECT == 0) && (C_USE_UART == 1))
PARAMETER C_MB_DBG_PORTS = 1, DT = INTEGER, RANGE = (0:8)
PARAMETER C_USE_UART = 1, DT = INTEGER, RANGE = (0:1)
PARAMETER C_UART_WIDTH = 8, DT = INTEGER, RANGE = (8,16,32), ISVALID = (C_USE_UART == 1)
PARAMETER C_WRITE_FSL_PORTS = 0, DT = INTEGER, RANGE = (0:1)

## Ports
PORT Interrupt = "", DIR = O, EDGE = RISING, SIGIS = INTERRUPT
PORT Debug_SYS_Rst = "", DIR = O
PORT Ext_BRK = Ext_BRK, DIR = O
PORT Ext_NM_BRK = Ext_NM_BRK, DIR = O
PORT SPLB_Clk = "", DIR = I, SIGIS = Clk, BUS = SPLB
PORT SPLB_Rst = SPLB_Rst, DIR = I, SIGIS = Rst, BUS = SPLB
PORT PLB_ABus = PLB_ABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB
PORT PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB
PORT PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB
PORT PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB
PORT PLB_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB_MID_WIDTH-1)], BUS = SPLB
PORT PLB_abort = PLB_abort, DIR = I, BUS = SPLB
PORT PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB
PORT PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB
PORT PLB_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB_DWIDTH/8)-1)], BUS = SPLB
PORT PLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB
PORT PLB_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB
PORT PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB
PORT PLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB
PORT PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB
PORT PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB
PORT PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB
PORT PLB_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB
PORT Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB
PORT Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB
PORT Sl_wait = Sl_wait, DIR = O, BUS = SPLB
PORT Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB
PORT Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB
PORT Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB
PORT Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB
PORT Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB
PORT Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB
PORT Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB
PORT Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB
PORT Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT OPB_Clk = "", DIR = I, SIGIS = Clk, BUS = SOPB
PORT OPB_Rst = OPB_Rst, DIR = I, SIGIS = Rst, BUS = SOPB
PORT OPB_ABus = OPB_ABus, DIR = I, VEC = [0:C_OPB_AWIDTH-1], BUS = SOPB
PORT OPB_BE = OPB_BE, DIR = I, VEC = [0:C_OPB_DWIDTH/8-1], BUS = SOPB
PORT OPB_RNW = OPB_RNW, DIR = I, BUS = SOPB
PORT OPB_select = OPB_select, DIR = I, BUS = SOPB
PORT OPB_seqAddr = OPB_seqAddr, DIR = I, BUS = SOPB
PORT OPB_DBus = OPB_DBus, DIR = I, VEC = [0:C_OPB_DWIDTH-1], BUS = SOPB
PORT MDM_DBus = Sl_DBus, DIR = O, VEC = [0:C_OPB_DWIDTH-1], BUS = SOPB
PORT MDM_errAck = Sl_errAck, DIR = O, BUS = SOPB
PORT MDM_retry = Sl_retry, DIR = O, BUS = SOPB
PORT MDM_toutSup = Sl_toutSup, DIR = O, BUS = SOPB
PORT MDM_xferAck = Sl_xferAck, DIR = O, BUS = SOPB
PORT Dbg_Clk_0 = Dbg_Clk, DIR = O, BUS = MBDEBUG_0
PORT Dbg_TDI_0 = Dbg_TDI, DIR = O, BUS = MBDEBUG_0
PORT Dbg_TDO_0 = Dbg_TDO, DIR = I, BUS = MBDEBUG_0
PORT Dbg_Reg_En_0 = Dbg_Reg_En, DIR = O, VEC = [0:4], BUS = MBDEBUG_0
PORT Dbg_Capture_0 = Dbg_Capture, DIR = O, BUS = MBDEBUG_0
PORT Dbg_Shift_0 = Dbg_Shift, DIR = O, BUS = MBDEBUG_0
PORT Dbg_Update_0 = Dbg_Update, DIR = O, BUS = MBDEBUG_0
PORT Dbg_Rst_0 = Debug_Rst, DIR = O, BUS = MBDEBUG_0
PORT Dbg_Clk_1 = Dbg_Clk, DIR = O, BUS = MBDEBUG_1
PORT Dbg_TDI_1 = Dbg_TDI, DIR = O, BUS = MBDEBUG_1
PORT Dbg_TDO_1 = Dbg_TDO, DIR = I, BUS = MBDEBUG_1
PORT Dbg_Reg_En_1 = Dbg_Reg_En, DIR = O, VEC = [0:4], BUS = MBDEBUG_1
PORT Dbg_Capture_1 = Dbg_Capture, DIR = O, BUS = MBDEBUG_1
PORT Dbg_Shift_1 = Dbg_Shift, DIR = O, BUS = MBDEBUG_1
PORT Dbg_Update_1 = Dbg_Update, DIR = O, BUS = MBDEBUG_1
PORT Dbg_Rst_1 = Debug_Rst, DIR = O, BUS = MBDEBUG_1
PORT Dbg_Clk_2 = Dbg_Clk, DIR = O, BUS = MBDEBUG_2
PORT Dbg_TDI_2 = Dbg_TDI, DIR = O, BUS = MBDEBUG_2
PORT Dbg_TDO_2 = Dbg_TDO, DIR = I, BUS = MBDEBUG_2
PORT Dbg_Reg_En_2 = Dbg_Reg_En, DIR = O, VEC = [0:4], BUS = MBDEBUG_2
PORT Dbg_Capture_2 = Dbg_Capture, DIR = O, BUS = MBDEBUG_2
PORT Dbg_Shift_2 = Dbg_Shift, DIR = O, BUS = MBDEBUG_2
PORT Dbg_Update_2 = Dbg_Update, DIR = O, BUS = MBDEBUG_2
PORT Dbg_Rst_2 = Debug_Rst, DIR = O, BUS = MBDEBUG_2
PORT Dbg_Clk_3 = Dbg_Clk, DIR = O, BUS = MBDEBUG_3
PORT Dbg_TDI_3 = Dbg_TDI, DIR = O, BUS = MBDEBUG_3
PORT Dbg_TDO_3 = Dbg_TDO, DIR = I, BUS = MBDEBUG_3
PORT Dbg_Reg_En_3 = Dbg_Reg_En, DIR = O, VEC = [0:4], BUS = MBDEBUG_3
PORT Dbg_Capture_3 = Dbg_Capture, DIR = O, BUS = MBDEBUG_3
PORT Dbg_Shift_3 = Dbg_Shift, DIR = O, BUS = MBDEBUG_3
PORT Dbg_Update_3 = Dbg_Update, DIR = O, BUS = MBDEBUG_3
PORT Dbg_Rst_3 = Debug_Rst, DIR = O, BUS = MBDEBUG_3
PORT Dbg_Clk_4 = Dbg_Clk, DIR = O, BUS = MBDEBUG_4
PORT Dbg_TDI_4 = Dbg_TDI, DIR = O, BUS = MBDEBUG_4
PORT Dbg_TDO_4 = Dbg_TDO, DIR = I, BUS = MBDEBUG_4
PORT Dbg_Reg_En_4 = Dbg_Reg_En, DIR = O, VEC = [0:4], BUS = MBDEBUG_4
PORT Dbg_Capture_4 = Dbg_Capture, DIR = O, BUS = MBDEBUG_4
PORT Dbg_Shift_4 = Dbg_Shift, DIR = O, BUS = MBDEBUG_4
PORT Dbg_Update_4 = Dbg_Update, DIR = O, BUS = MBDEBUG_4
PORT Dbg_Rst_4 = Debug_Rst, DIR = O, BUS = MBDEBUG_4
PORT Dbg_Clk_5 = Dbg_Clk, DIR = O, BUS = MBDEBUG_5
PORT Dbg_TDI_5 = Dbg_TDI, DIR = O, BUS = MBDEBUG_5
PORT Dbg_TDO_5 = Dbg_TDO, DIR = I, BUS = MBDEBUG_5
PORT Dbg_Reg_En_5 = Dbg_Reg_En, DIR = O, VEC = [0:4], BUS = MBDEBUG_5
PORT Dbg_Capture_5 = Dbg_Capture, DIR = O, BUS = MBDEBUG_5
PORT Dbg_Shift_5 = Dbg_Shift, DIR = O, BUS = MBDEBUG_5
PORT Dbg_Update_5 = Dbg_Update, DIR = O, BUS = MBDEBUG_5
PORT Dbg_Rst_5 = Debug_Rst, DIR = O, BUS = MBDEBUG_5
PORT Dbg_Clk_6 = Dbg_Clk, DIR = O, BUS = MBDEBUG_6
PORT Dbg_TDI_6 = Dbg_TDI, DIR = O, BUS = MBDEBUG_6
PORT Dbg_TDO_6 = Dbg_TDO, DIR = I, BUS = MBDEBUG_6
PORT Dbg_Reg_En_6 = Dbg_Reg_En, DIR = O, VEC = [0:4], BUS = MBDEBUG_6
PORT Dbg_Capture_6 = Dbg_Capture, DIR = O, BUS = MBDEBUG_6
PORT Dbg_Shift_6 = Dbg_Shift, DIR = O, BUS = MBDEBUG_6
PORT Dbg_Update_6 = Dbg_Update, DIR = O, BUS = MBDEBUG_6
PORT Dbg_Rst_6 = Debug_Rst, DIR = O, BUS = MBDEBUG_6
PORT Dbg_Clk_7 = Dbg_Clk, DIR = O, BUS = MBDEBUG_7
PORT Dbg_TDI_7 = Dbg_TDI, DIR = O, BUS = MBDEBUG_7
PORT Dbg_TDO_7 = Dbg_TDO, DIR = I, BUS = MBDEBUG_7
PORT Dbg_Reg_En_7 = Dbg_Reg_En, DIR = O, VEC = [0:4], BUS = MBDEBUG_7
PORT Dbg_Capture_7 = Dbg_Capture, DIR = O, BUS = MBDEBUG_7
PORT Dbg_Shift_7 = Dbg_Shift, DIR = O, BUS = MBDEBUG_7
PORT Dbg_Update_7 = Dbg_Update, DIR = O, BUS = MBDEBUG_7
PORT Dbg_Rst_7 = Debug_Rst, DIR = O, BUS = MBDEBUG_7
PORT bscan_tdi = bscan_tdi, DIR = O
PORT bscan_reset = bscan_reset, DIR = O
PORT bscan_shift = bscan_shift, DIR = O
PORT bscan_update = bscan_update, DIR = O
PORT bscan_capture = bscan_capture, DIR = O
PORT bscan_sel1 = bscan_sel1, DIR = O
PORT bscan_drck1 = bscan_drck1, DIR = O
PORT bscan_tdo1 = bscan_tdo1, DIR = I
PORT FSL0_S_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = SFSL0
PORT FSL0_S_READ = FSL_S_Read, DIR = O, BUS = SFSL0
PORT FSL0_S_DATA = FSL_S_Data, DIR = I, VEC = [0:31], BUS = SFSL0
PORT FSL0_S_CONTROL = FSL_S_Control, DIR = I, BUS = SFSL0
PORT FSL0_S_EXISTS = FSL_S_Exists, DIR = I, BUS = SFSL0
PORT FSL0_M_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = MFSL0
PORT FSL0_M_WRITE = FSL_M_Write, DIR = O, BUS = MFSL0
PORT FSL0_M_DATA = FSL_M_Data, DIR = O, VEC = [0:31], BUS = MFSL0
PORT FSL0_M_CONTROL = FSL_M_Control, DIR = O, BUS = MFSL0
PORT FSL0_M_FULL = FSL_M_Full, DIR = I, BUS = MFSL0
PORT Ext_JTAG_DRCK = DRCK, DIR = O, BUS = XMTC
PORT Ext_JTAG_RESET = RESET, DIR = O, BUS = XMTC
PORT Ext_JTAG_SEL = SEL, DIR = O, BUS = XMTC
PORT Ext_JTAG_CAPTURE = CAPTURE, DIR = O, BUS = XMTC
PORT Ext_JTAG_SHIFT = SHIFT, DIR = O, BUS = XMTC
PORT Ext_JTAG_UPDATE = UPDATE, DIR = O, BUS = XMTC
PORT Ext_JTAG_TDI = TDI, DIR = O, BUS = XMTC
PORT Ext_JTAG_TDO = TDO, DIR = I, BUS = XMTC

END

FINISH_SINGLE_MPD

START_SINGLE_MPD plbv46_pcie_v4_01_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : plbv46_pcie
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN plbv46_pcie

## Peripheral Options
OPTION RUN_NGCBUILD = TRUE
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = MIXED
OPTION STYLE = MIX
OPTION IPLEVEL_DRC_PROC = check_iplevel_settings
OPTION IPLEVEL_UPDATE_VALUE_PROC = update_native_dwidth
OPTION SYSLEVEL_DRC_PROC = check_syslevel_settings
OPTION PLATGEN_SYSLEVEL_UPDATE_PROC = generate_corelevel_ucf
OPTION USAGE_LEVEL = BASE_USER
OPTION DESC = PLBv46 IP Interface (IPIF) to LogicCORE PCI Express Bridge
OPTION LONG_DESC = Bridge between the PLBv46 IPIF and the Xilinx LogiCORE PCI Express Interface core
OPTION IP_GROUP = PCI:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=SUPERSEDED, spartan3=SUPERSEDED, spartan3an=SUPERSEDED, spartan3a=SUPERSEDED, spartan3e=SUPERSEDED, spartan3adsp=SUPERSEDED, virtex4lx=SUPERSEDED, virtex4sx=SUPERSEDED, virtex4fx=SUPERSEDED, virtex5lx=SUPERSEDED, virtex5sx=SUPERSEDED, virtex5fx=SUPERSEDED, aspartan3e=SUPERSEDED, aspartan3a=SUPERSEDED, aspartan3adsp=SUPERSEDED, qvirtex4lx=SUPERSEDED, qvirtex4sx=SUPERSEDED, qvirtex4fx=SUPERSEDED, qrvirtex4lx=SUPERSEDED, qrvirtex4sx=SUPERSEDED, qrvirtex4fx=SUPERSEDED, spartan6t=SUPERSEDED, spartan6=SUPERSEDED, spartan6l=SUPERSEDED, qspartan6t=SUPERSEDED, qspartan6=SUPERSEDED, aspartan6t=SUPERSEDED, aspartan6=SUPERSEDED, virtex6lx=SUPERSEDED, virtex6sx=SUPERSEDED, virtex6hx=SUPERSEDED, virtex6cx=SUPERSEDED, virtex6llx=SUPERSEDED, virtex6lsx=SUPERSEDED, qspartan6l=SUPERSEDED, qrvirtex5=SUPERSEDED, qvirtex6lx=SUPERSEDED, qvirtex6sx=SUPERSEDED, qvirtex6fx=SUPERSEDED, qvirtex6tx=SUPERSEDED)

IO_INTERFACE IO_IF = pcie_0, IO_TYPE = XIL_PCIE_V1

## Bus Interfaces
BUS_INTERFACE BUS = SPLB, BUS_TYPE = SLAVE, BUS_STD = PLBV46
BUS_INTERFACE BUS = MPLB, BUS_TYPE = MASTER, BUS_STD = PLBV46, GENERATE_BURSTS = TRUE

## Generics for VHDL or Parameters for Verilog
PARAMETER C_FAMILY = virtex5, DT = STRING
PARAMETER C_SUBFAMILY = lx, DT = STRING
PARAMETER C_IPIFBAR_NUM = 1, DT = INTEGER, RANGE = (1:6), IO_IF = pcie_0, IO_IS = C_IPIFBAR_NUM
PARAMETER C_INCLUDE_BAROFFSET_REG = 0, DT = INTEGER, RANGE = (0,1), IO_IF = pcie_0, IO_IS = C_INCLUDE_BAROFFSET_REG
PARAMETER C_PCIBAR_NUM = 1, DT = INTEGER, RANGE = (1:3), IO_IF = pcie_0, IO_IS = C_PCIBAR_NUM
PARAMETER C_NO_OF_LANES = 1, DT = INTEGER, RANGE = (1, 4, 8), IO_IF = pcie_0, IO_IS = C_NO_OF_LANES
PARAMETER C_DEVICE_ID = 0x0000, DT = std_logic_vector, IO_IF = pcie_0, IO_IS = C_DEVICE_ID
PARAMETER C_VENDOR_ID = 0x0000, DT = std_logic_vector, IO_IF = pcie_0, IO_IS = C_VENDOR_ID
PARAMETER C_CLASS_CODE = 0x000000, DT = std_logic_vector, IO_IF = pcie_0, IO_IS = C_CLASS_CODE
PARAMETER C_REV_ID = 0x00, DT = std_logic_vector, IO_IF = pcie_0, IO_IS = C_REV_ID
PARAMETER C_SUBSYSTEM_ID = 0x0000, DT = std_logic_vector, IO_IF = pcie_0, IO_IS = C_SUBSYSTEM_ID
PARAMETER C_SUBSYSTEM_VENDOR_ID = 0x0000, DT = std_logic_vector, IO_IF = pcie_0, IO_IS = C_SUBSYSTEM_VENDOR_ID
PARAMETER C_COMP_TIMEOUT = 0, DT = INTEGER, RANGE = (0,1), IO_IF = pcie_0, IO_IS = C_COMP_TIMEOUT
PARAMETER C_MPLB_AWIDTH = 32, DT = INTEGER, BUS = MPLB, ASSIGNMENT = CONSTANT
PARAMETER C_MPLB_DWIDTH = 64, DT = INTEGER, BUS = MPLB
PARAMETER C_MPLB_SMALLEST_SLAVE = 32, BUS = MPLB, DT = INTEGER
PARAMETER C_MPLB_NATIVE_DWIDTH = 64, DT = INTEGER, BUS = MPLB, RANGE = (32, 64), IO_IF = pcie_0, IO_IS = C_MPLB_NATIVE_DWIDTH, ASSIGNMENT = UPDATE, IPLEVEL_UPDATE_VALUE_PROC = update_mplb_native_dwidth
PARAMETER C_SPLB_MID_WIDTH = 3, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_NUM_MASTERS = 8, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_AWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_BASEADDR = 0xffffffff, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_HIGHADDR, ADDR_TYPE = REGISTER
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_BASEADDR, ADDR_TYPE = REGISTER
PARAMETER C_SPLB_DWIDTH = 64, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_NATIVE_DWIDTH = 64, DT = INTEGER, BUS = SPLB, RANGE = (32, 64), IO_IF = pcie_0, IO_IS = C_SPLB_NATIVE_DWIDTH, ASSIGNMENT = UPDATE, IPLEVEL_UPDATE_VALUE_PROC = update_splb_native_dwidth
PARAMETER C_SPLB_P2P = 0, DT = INTEGER, BUS = SPLB, TYPE = NON_HDL
PARAMETER C_IPIFBAR_0 = 0xFFFFFFFF, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_IPIFBAR_HIGHADDR_0, ADDR_TYPE = BRIDGE, ISVALID = (C_IPIFBAR_NUM>=1), IO_IF = pcie_0, IO_IS = C_IPIFBAR_0
PARAMETER C_IPIFBAR_1 = 0xFFFFFFFF, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_IPIFBAR_HIGHADDR_1, ADDR_TYPE = BRIDGE, ISVALID = (C_IPIFBAR_NUM>=2), IO_IF = pcie_0, IO_IS = C_IPIFBAR_1
PARAMETER C_IPIFBAR_2 = 0xFFFFFFFF, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_IPIFBAR_HIGHADDR_2, ADDR_TYPE = BRIDGE, ISVALID = (C_IPIFBAR_NUM>=3), IO_IF = pcie_0, IO_IS = C_IPIFBAR_2
PARAMETER C_IPIFBAR_3 = 0xFFFFFFFF, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_IPIFBAR_HIGHADDR_3, ADDR_TYPE = BRIDGE, ISVALID = (C_IPIFBAR_NUM>=4), IO_IF = pcie_0, IO_IS = C_IPIFBAR_3
PARAMETER C_IPIFBAR_4 = 0xFFFFFFFF, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_IPIFBAR_HIGHADDR_4, ADDR_TYPE = BRIDGE, ISVALID = (C_IPIFBAR_NUM>=5), IO_IF = pcie_0, IO_IS = C_IPIFBAR_4
PARAMETER C_IPIFBAR_5 = 0xFFFFFFFF, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_IPIFBAR_HIGHADDR_5, ADDR_TYPE = BRIDGE, ISVALID = (C_IPIFBAR_NUM>=6), IO_IF = pcie_0, IO_IS = C_IPIFBAR_5
PARAMETER C_IPIFBAR_HIGHADDR_0 = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_IPIFBAR_0, ADDR_TYPE = BRIDGE, ISVALID = (C_IPIFBAR_NUM>=1), IO_IF = pcie_0, IO_IS = C_IPIFBAR_HIGHADDR_0
PARAMETER C_IPIFBAR_HIGHADDR_1 = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_IPIFBAR_1, ADDR_TYPE = BRIDGE, ISVALID = (C_IPIFBAR_NUM>=2), IO_IF = pcie_0, IO_IS = C_IPIFBAR_HIGHADDR_1
PARAMETER C_IPIFBAR_HIGHADDR_2 = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_IPIFBAR_2, ADDR_TYPE = BRIDGE, ISVALID = (C_IPIFBAR_NUM>=3), IO_IF = pcie_0, IO_IS = C_IPIFBAR_HIGHADDR_2
PARAMETER C_IPIFBAR_HIGHADDR_3 = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_IPIFBAR_3, ADDR_TYPE = BRIDGE, ISVALID = (C_IPIFBAR_NUM>=4), IO_IF = pcie_0, IO_IS = C_IPIFBAR_HIGHADDR_3
PARAMETER C_IPIFBAR_HIGHADDR_4 = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_IPIFBAR_4, ADDR_TYPE = BRIDGE, ISVALID = (C_IPIFBAR_NUM>=5), IO_IF = pcie_0, IO_IS = C_IPIFBAR_HIGHADDR_4
PARAMETER C_IPIFBAR_HIGHADDR_5 = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_IPIFBAR_5, ADDR_TYPE = BRIDGE, ISVALID = (C_IPIFBAR_NUM>=6), IO_IF = pcie_0, IO_IS = C_IPIFBAR_HIGHADDR_5
PARAMETER C_IPIFBAR2PCIBAR_0 = 0xFFFFFFFF, DT = std_logic_vector, ISVALID = (C_IPIFBAR_NUM>=1), IO_IF = pcie_0, IO_IS = C_IPIFBAR2PCIBAR_0
PARAMETER C_IPIFBAR2PCIBAR_1 = 0xFFFFFFFF, DT = std_logic_vector, ISVALID = (C_IPIFBAR_NUM>=2), IO_IF = pcie_0, IO_IS = C_IPIFBAR2PCIBAR_1
PARAMETER C_IPIFBAR2PCIBAR_2 = 0xFFFFFFFF, DT = std_logic_vector, ISVALID = (C_IPIFBAR_NUM>=3), IO_IF = pcie_0, IO_IS = C_IPIFBAR2PCIBAR_2
PARAMETER C_IPIFBAR2PCIBAR_3 = 0xFFFFFFFF, DT = std_logic_vector, ISVALID = (C_IPIFBAR_NUM>=4), IO_IF = pcie_0, IO_IS = C_IPIFBAR2PCIBAR_3
PARAMETER C_IPIFBAR2PCIBAR_4 = 0xFFFFFFFF, DT = std_logic_vector, ISVALID = (C_IPIFBAR_NUM>=5), IO_IF = pcie_0, IO_IS = C_IPIFBAR2PCIBAR_4
PARAMETER C_IPIFBAR2PCIBAR_5 = 0xFFFFFFFF, DT = std_logic_vector, ISVALID = (C_IPIFBAR_NUM>=6), IO_IF = pcie_0, IO_IS = C_IPIFBAR2PCIBAR_5
PARAMETER C_IPIFBAR_AS_0 = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_IPIFBAR_NUM>=1), IO_IF = pcie_0, IO_IS = C_IPIFBAR_AS_0
PARAMETER C_IPIFBAR_AS_1 = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_IPIFBAR_NUM>=2), IO_IF = pcie_0, IO_IS = C_IPIFBAR_AS_1
PARAMETER C_IPIFBAR_AS_2 = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_IPIFBAR_NUM>=3), IO_IF = pcie_0, IO_IS = C_IPIFBAR_AS_2
PARAMETER C_IPIFBAR_AS_3 = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_IPIFBAR_NUM>=4), IO_IF = pcie_0, IO_IS = C_IPIFBAR_AS_3
PARAMETER C_IPIFBAR_AS_4 = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_IPIFBAR_NUM>=5), IO_IF = pcie_0, IO_IS = C_IPIFBAR_AS_4
PARAMETER C_IPIFBAR_AS_5 = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_IPIFBAR_NUM>=6), IO_IF = pcie_0, IO_IS = C_IPIFBAR_AS_5
PARAMETER C_PCIBAR2IPIFBAR_0 = 0xFFFFFFFF, DT = std_logic_vector, ISVALID = (C_PCIBAR_NUM>=1), IO_IF = pcie_0, IO_IS = C_PCIBAR2IPIFBAR_0
PARAMETER C_PCIBAR2IPIFBAR_1 = 0xFFFFFFFF, DT = std_logic_vector, ISVALID = (C_PCIBAR_NUM>=2), IO_IF = pcie_0, IO_IS = C_PCIBAR2IPIFBAR_1
PARAMETER C_PCIBAR2IPIFBAR_2 = 0xFFFFFFFF, DT = std_logic_vector, ISVALID = (C_PCIBAR_NUM>=3), IO_IF = pcie_0, IO_IS = C_PCIBAR2IPIFBAR_2
PARAMETER C_PCIBAR_LEN_0 = 16, DT = INTEGER, RANGE = (13:29), ISVALID = (C_PCIBAR_NUM>=1), IO_IF = pcie_0, IO_IS = C_PCIBAR_LEN_0
PARAMETER C_PCIBAR_LEN_1 = 16, DT = INTEGER, RANGE = (13:29), ISVALID = (C_PCIBAR_NUM>=2), IO_IF = pcie_0, IO_IS = C_PCIBAR_LEN_1
PARAMETER C_PCIBAR_LEN_2 = 16, DT = INTEGER, RANGE = (13:29), ISVALID = (C_PCIBAR_NUM>=3), IO_IF = pcie_0, IO_IS = C_PCIBAR_LEN_2
PARAMETER C_PCIBAR_AS = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PCIBAR_NUM>=1), IO_IF = pcie_0, IO_IS = C_PCIBAR_AS
PARAMETER C_BOARD = none, DT = STRING, TYPE = NON_HDL, IO_IF = pcie_0, IO_IS = C_BOARD, VALUES = (ml505=ml505, ml555=ml555, ml507=ml507, none=none)
PARAMETER C_DEVICE = DEFAULT, DT = STRING, TYPE = NON_HDL, ASSIGNMENT = UPDATE

## Ports
PORT MPLB_Clk = "", DIR = I, BUS = MPLB, SIGIS = CLK
PORT MPLB_Rst = MPLB_Rst, DIR = I, BUS = MPLB
PORT PLB_MTimeout = PLB_MTimeout, DIR = I, BUS = MPLB
PORT PLB_MIRQ = PLB_MIRQ, DIR = I, BUS = MPLB
PORT PLB_MAddrAck = PLB_MAddrAck, DIR = I, BUS = MPLB
PORT PLB_MSSize = PLB_MSSize, DIR = I, VEC = [0:1], BUS = MPLB
PORT PLB_MRearbitrate = PLB_MRearbitrate, DIR = I, BUS = MPLB
PORT PLB_MBusy = PLB_MBusy, DIR = I, BUS = MPLB
PORT PLB_MRdErr = PLB_MRdErr, DIR = I, BUS = MPLB
PORT PLB_MWrErr = PLB_MWrErr, DIR = I, BUS = MPLB
PORT PLB_MWrDAck = PLB_MWrDAck, DIR = I, BUS = MPLB
PORT PLB_MRdDBus = PLB_MRdDBus, DIR = I, VEC = [0:(C_MPLB_DWIDTH-1)], BUS = MPLB
PORT PLB_MRdWdAddr = PLB_MRdWdAddr, DIR = I, VEC = [0:3], BUS = MPLB
PORT PLB_MRdDAck = PLB_MRdDAck, DIR = I, BUS = MPLB
PORT PLB_MRdBTerm = PLB_MRdBTerm, DIR = I, BUS = MPLB
PORT PLB_MWrBTerm = PLB_MWrBTerm, DIR = I, BUS = MPLB
PORT M_request = M_request, DIR = O, BUS = MPLB
PORT M_priority = M_priority, DIR = O, VEC = [0:1], BUS = MPLB
PORT M_buslock = M_busLock, DIR = O, BUS = MPLB
PORT M_RNW = M_RNW, DIR = O, BUS = MPLB
PORT M_BE = M_BE, DIR = O, VEC = [0:((C_MPLB_DWIDTH/8)-1)], BUS = MPLB
PORT M_MSize = M_MSize, DIR = O, VEC = [0:1], BUS = MPLB
PORT M_size = M_size, DIR = O, VEC = [0:3], BUS = MPLB
PORT M_type = M_type, DIR = O, VEC = [0:2], BUS = MPLB
PORT M_lockErr = M_lockErr, DIR = O, BUS = MPLB
PORT M_abort = M_abort, DIR = O, BUS = MPLB
PORT M_TAttribute = M_TAttribute, DIR = O, VEC = [0:15], BUS = MPLB
PORT M_UABus = M_UABus, DIR = O, VEC = [0:31], BUS = MPLB
PORT M_ABus = M_ABus, DIR = O, VEC = [0:(C_MPLB_AWIDTH-1)], BUS = MPLB
PORT M_wrDBus = M_wrDBus, DIR = O, VEC = [0:(C_MPLB_DWIDTH-1)], BUS = MPLB
PORT M_wrBurst = M_wrBurst, DIR = O, BUS = MPLB
PORT M_rdBurst = M_rdBurst, DIR = O, BUS = MPLB
PORT SPLB_Clk = "", DIR = I, SIGIS = CLK, BUS = SPLB
PORT SPLB_Rst = SPLB_Rst, DIR = I, SIGIS = RST, BUS = SPLB
PORT PLB_ABus = PLB_ABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB
PORT PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB
PORT PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB
PORT PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB
PORT PLB_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB_MID_WIDTH-1)], BUS = SPLB
PORT PLB_abort = PLB_abort, DIR = I, BUS = SPLB
PORT PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB
PORT PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB
PORT PLB_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB_DWIDTH/8)-1)], BUS = SPLB
PORT PLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB
PORT PLB_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB
PORT PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB
PORT PLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB
PORT PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB
PORT PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB
PORT PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB
PORT PLB_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB
PORT Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB
PORT Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB
PORT Sl_wait = Sl_wait, DIR = O, BUS = SPLB
PORT Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB
PORT Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB
PORT Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB
PORT Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB
PORT Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB
PORT Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB
PORT Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB
PORT Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB
PORT Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT REFCLK = "", DIR = I, IO_IF = pcie_0, IO_IS = REFCLK
PORT Bridge_Clk = "", DIR = O, IO_IF = pcie_0, IO_IS = Bridge_Clk
PORT RXN = "", DIR = I, VEC = [(C_NO_OF_LANES-1):0], IOB_STATE = BUF, IO_IF = pcie_0, IO_IS = RXN
PORT RXP = "", DIR = I, VEC = [(C_NO_OF_LANES-1):0], IOB_STATE = BUF, IO_IF = pcie_0, IO_IS = RXP
PORT TXN = "", DIR = O, VEC = [(C_NO_OF_LANES-1):0], IOB_STATE = BUF, IO_IF = pcie_0, IO_IS = TXN
PORT TXP = "", DIR = O, VEC = [(C_NO_OF_LANES-1):0], IOB_STATE = BUF, IO_IF = pcie_0, IO_IS = TXP
PORT IP2INTC_Irpt = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH
PORT MSI_request = "", DIR = I, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, IO_IF = pcie_0, IO_IS = MSI_request

END

FINISH_SINGLE_MPD

START_SINGLE_MPD xps_central_dma_v2_01_b 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : xps_central_dma
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN xps_central_dma

## Peripheral Options
OPTION STYLE = HDL
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION DESC = XPS Central DMA Controller
OPTION LONG_DESC = Simple Direct Memory Access (DMA) services for PLBV46
OPTION IP_GROUP = DMA and Timer:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=SUPERSEDED, spartan3=SUPERSEDED, spartan3an=SUPERSEDED, spartan3a=SUPERSEDED, spartan3e=SUPERSEDED, spartan3adsp=SUPERSEDED, virtex4lx=SUPERSEDED, virtex4sx=SUPERSEDED, virtex4fx=SUPERSEDED, virtex5lx=SUPERSEDED, virtex5sx=SUPERSEDED, virtex5fx=SUPERSEDED, aspartan3e=SUPERSEDED, aspartan3a=SUPERSEDED, aspartan3adsp=SUPERSEDED, qvirtex4lx=SUPERSEDED, qvirtex4sx=SUPERSEDED, qvirtex4fx=SUPERSEDED, qrvirtex4lx=SUPERSEDED, qrvirtex4sx=SUPERSEDED, qrvirtex4fx=SUPERSEDED, spartan6t=SUPERSEDED, spartan6=SUPERSEDED, spartan6l=SUPERSEDED, qspartan6t=SUPERSEDED, qspartan6=SUPERSEDED, aspartan6t=SUPERSEDED, aspartan6=SUPERSEDED, virtex6lx=SUPERSEDED, virtex6sx=SUPERSEDED, virtex6hx=SUPERSEDED, virtex6cx=SUPERSEDED, virtex6llx=SUPERSEDED, virtex6lsx=SUPERSEDED, qspartan6l=SUPERSEDED, qrvirtex5=SUPERSEDED, qvirtex6lx=SUPERSEDED, qvirtex6sx=SUPERSEDED, qvirtex6fx=SUPERSEDED, qvirtex6tx=SUPERSEDED)
OPTION RUN_NGCBUILD = FALSE


## Bus Interfaces
BUS_INTERFACE BUS = MPLB, BUS_TYPE = MASTER, BUS_STD = PLBV46, GENERATE_BURSTS = TRUE
BUS_INTERFACE BUS = SPLB, BUS_TYPE = SLAVE, BUS_STD = PLBV46

## Generics for VHDL or Parameters for Verilog
PARAMETER C_FIFO_DEPTH = 8, DT = INTEGER, RANGE = (1,8,16,32,48)
PARAMETER C_RD_BURST_SIZE = 8, DT = INTEGER, RANGE = (1,8,16)
PARAMETER C_WR_BURST_SIZE = 8, DT = INTEGER, RANGE = (1,8,16)
PARAMETER C_BASEADDR = 0xffffffff, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_HIGHADDR, MIN_SIZE = 0x40, ASSIGNMENT = REQUIRE
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_BASEADDR, ASSIGNMENT = REQUIRE
PARAMETER C_SPLB_DWIDTH = 32, DT = INTEGER, BUS = SPLB, RANGE = (32, 64, 128)
PARAMETER C_SPLB_AWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB, RANGE = (1:16)
PARAMETER C_SPLB_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB, RANGE = (1:4)
PARAMETER C_SPLB_P2P = 0, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_MPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = MPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_MPLB_AWIDTH = 32, DT = INTEGER, BUS = MPLB, ASSIGNMENT = CONSTANT
PARAMETER C_MPLB_DWIDTH = 32, DT = INTEGER, BUS = MPLB, RANGE = (32, 64, 128)
PARAMETER C_FAMILY = virtex5, DT = STRING

## Ports
PORT SPLB_Clk = "", DIR = I, SIGIS = Clk, BUS = SPLB
PORT SPLB_Rst = SPLB_Rst, DIR = I, SIGIS = Rst, BUS = SPLB
PORT MPLB_Clk = "", DIR = I, SIGIS = Clk, BUS = MPLB
PORT MPLB_Rst = MPLB_Rst, DIR = I, SIGIS = Rst, BUS = MPLB
PORT SPLB_ABus = PLB_ABus, DIR = I, VEC = [0:(C_SPLB_AWIDTH-1)], BUS = SPLB
PORT SPLB_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB_DWIDTH/8)-1)], BUS = SPLB
PORT SPLB_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT SPLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB
PORT SPLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB
PORT SPLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB
PORT SPLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB
PORT SPLB_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB_MID_WIDTH-1)], BUS = SPLB
PORT SPLB_abort = PLB_abort, DIR = I, BUS = SPLB
PORT SPLB_busLock = PLB_busLock, DIR = I, BUS = SPLB
PORT SPLB_RNW = PLB_RNW, DIR = I, BUS = SPLB
PORT SPLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB
PORT SPLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB
PORT SPLB_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB
PORT SPLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB
PORT SPLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT SPLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB
PORT SPLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB
PORT SPLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB
PORT SPLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB
PORT SPLB_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT SPLB_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT SPLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT SPLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB
PORT Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB
PORT Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB
PORT Sl_wait = Sl_wait, DIR = O, BUS = SPLB
PORT Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB
PORT Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB
PORT Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB
PORT Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB
PORT Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB
PORT Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB
PORT Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB
PORT Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB
PORT Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT IP2INTC_Irpt = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH
PORT MPLB_MAddrAck = PLB_MAddrAck, DIR = I, BUS = MPLB
PORT MPLB_MSSize = PLB_MSSize, DIR = I, VEC = [0:1], BUS = MPLB
PORT MPLB_MRearbitrate = PLB_MRearbitrate, DIR = I, BUS = MPLB
PORT MPLB_MTimeout = PLB_MTimeout, DIR = I, BUS = MPLB
PORT MPLB_MBusy = PLB_MBusy, DIR = I, BUS = MPLB
PORT MPLB_MRdErr = PLB_MRdErr, DIR = I, BUS = MPLB
PORT MPLB_MWrErr = PLB_MWrErr, DIR = I, BUS = MPLB
PORT MPLB_MIRQ = PLB_MIRQ, DIR = I, BUS = MPLB
PORT MPLB_MRdDBus = PLB_MRdDBus, DIR = I, VEC = [0:(C_MPLB_DWIDTH-1)], BUS = MPLB
PORT MPLB_MRdWdAddr = PLB_MRdWdAddr, DIR = I, VEC = [0:3], BUS = MPLB
PORT MPLB_MRdDAck = PLB_MRdDAck, DIR = I, BUS = MPLB
PORT MPLB_MRdBTerm = PLB_MRdBTerm, DIR = I, BUS = MPLB
PORT MPLB_MWrDAck = PLB_MWrDAck, DIR = I, BUS = MPLB
PORT MPLB_MWrBTerm = PLB_MWrBTerm, DIR = I, BUS = MPLB
PORT M_request = M_request, DIR = O, BUS = MPLB
PORT M_priority = M_priority, DIR = O, VEC = [0:1], BUS = MPLB
PORT M_busLock = M_busLock, DIR = O, BUS = MPLB
PORT M_RNW = M_RNW, DIR = O, BUS = MPLB
PORT M_BE = M_BE, DIR = O, VEC = [0:((C_MPLB_DWIDTH/8)-1)], BUS = MPLB
PORT M_MSize = M_MSize, DIR = O, VEC = [0:1], BUS = MPLB
PORT M_size = M_size, DIR = O, VEC = [0:3], BUS = MPLB
PORT M_type = M_type, DIR = O, VEC = [0:2], BUS = MPLB
PORT M_TAttribute = M_TAttribute, DIR = O, VEC = [0:15], BUS = MPLB
PORT M_lockErr = M_lockErr, DIR = O, BUS = MPLB
PORT M_abort = M_abort, DIR = O, BUS = MPLB
PORT M_UABus = M_UABus, DIR = O, VEC = [0:31], BUS = MPLB
PORT M_ABus = M_ABus, DIR = O, VEC = [0:(C_MPLB_AWIDTH-1)], BUS = MPLB
PORT M_wrDBus = M_wrDBus, DIR = O, VEC = [0:(C_MPLB_DWIDTH-1)], BUS = MPLB
PORT M_wrBurst = M_wrBurst, DIR = O, BUS = MPLB
PORT M_rdBurst = M_rdBurst, DIR = O, BUS = MPLB

END

FINISH_SINGLE_MPD

START_SINGLE_MPD microblaze_v7_20_d 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : microblaze
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN microblaze

## Peripheral Options
OPTION IPTYPE = PROCESSOR
OPTION IMP_NETLIST = TRUE
OPTION STYLE = HDL
OPTION HDL = VHDL
OPTION IPLEVEL_DRC_PROC = check_iplevel_settings
OPTION SYSLEVEL_DRC_PROC = check_syslevel_settings
OPTION SPECIAL = MICROBLAZE
OPTION DESC = MicroBlaze
OPTION LONG_DESC = The MicroBlaze 32 bit soft processor
OPTION IP_GROUP = Processor:MICROBLAZE
OPTION ARCH_SUPPORT_MAP = (aspartan3=SUPERSEDED, spartan3=SUPERSEDED, spartan3an=SUPERSEDED, spartan3a=SUPERSEDED, spartan3e=SUPERSEDED, spartan3adsp=SUPERSEDED, virtex4lx=SUPERSEDED, virtex4sx=SUPERSEDED, virtex4fx=SUPERSEDED, virtex5lx=SUPERSEDED, virtex5sx=SUPERSEDED, virtex5fx=SUPERSEDED, aspartan3e=SUPERSEDED, aspartan3a=SUPERSEDED, aspartan3adsp=SUPERSEDED, qvirtex4lx=SUPERSEDED, qvirtex4sx=SUPERSEDED, qvirtex4fx=SUPERSEDED, qrvirtex4lx=SUPERSEDED, qrvirtex4sx=SUPERSEDED, qrvirtex4fx=SUPERSEDED, spartan6t=SUPERSEDED, spartan6=SUPERSEDED, spartan6l=SUPERSEDED, qspartan6t=SUPERSEDED, qspartan6=SUPERSEDED, aspartan6t=SUPERSEDED, aspartan6=SUPERSEDED, virtex6lx=SUPERSEDED, virtex6sx=SUPERSEDED, virtex6hx=SUPERSEDED, virtex6cx=SUPERSEDED, virtex6llx=SUPERSEDED, virtex6lsx=SUPERSEDED, qspartan6l=SUPERSEDED, qrvirtex5=SUPERSEDED, qvirtex6lx=SUPERSEDED, qvirtex6sx=SUPERSEDED, qvirtex6fx=SUPERSEDED, qvirtex6tx=SUPERSEDED)
OPTION RUN_NGCBUILD = FALSE


## Bus Interfaces
BUS_INTERFACE BUS = DLMB, BUS_STD = LMB, BUS_TYPE = MASTER, SHARES_ADDR = DOPB:DPLB
BUS_INTERFACE BUS = ILMB, BUS_STD = LMB, BUS_TYPE = MASTER, SHARES_ADDR = IOPB:IPLB
BUS_INTERFACE BUS = DOPB, BUS_STD = OPB, BUS_TYPE = MASTER, SHARES_ADDR = DLMB, EXCLUDE_BUSIF = DPLB:IPLB, ISVALID = (C_INTERCONNECT == 0)
BUS_INTERFACE BUS = IOPB, BUS_STD = OPB, BUS_TYPE = MASTER, SHARES_ADDR = ILMB, EXCLUDE_BUSIF = DPLB:IPLB, ISVALID = (C_INTERCONNECT == 0)
BUS_INTERFACE BUS = DPLB, BUS_STD = PLBV46, BUS_TYPE = MASTER, SHARES_ADDR = DLMB, EXCLUDE_BUSIF = DOPB:IOPB, ISVALID = (C_INTERCONNECT == 1)
BUS_INTERFACE BUS = IPLB, BUS_STD = PLBV46, BUS_TYPE = MASTER, SHARES_ADDR = ILMB, EXCLUDE_BUSIF = DOPB:IOPB, ISVALID = (C_INTERCONNECT == 1)
BUS_INTERFACE BUS = SFSL0, BUS_STD = FSL, BUS_TYPE = SLAVE, EXCLUDE_BUSIF = DRFSL0, ISVALID = (C_FSL_LINKS >= 1)
BUS_INTERFACE BUS = MFSL0, BUS_STD = FSL, BUS_TYPE = MASTER, EXCLUDE_BUSIF = DWFSL0, ISVALID = (C_FSL_LINKS >= 1)
BUS_INTERFACE BUS = SFSL1, BUS_STD = FSL, BUS_TYPE = SLAVE, EXCLUDE_BUSIF = DRFSL1, ISVALID = (C_FSL_LINKS >= 2)
BUS_INTERFACE BUS = MFSL1, BUS_STD = FSL, BUS_TYPE = MASTER, EXCLUDE_BUSIF = DWFSL1, ISVALID = (C_FSL_LINKS >= 2)
BUS_INTERFACE BUS = SFSL2, BUS_STD = FSL, BUS_TYPE = SLAVE, EXCLUDE_BUSIF = DRFSL2, ISVALID = (C_FSL_LINKS >= 3)
BUS_INTERFACE BUS = MFSL2, BUS_STD = FSL, BUS_TYPE = MASTER, EXCLUDE_BUSIF = DWFSL2, ISVALID = (C_FSL_LINKS >= 3)
BUS_INTERFACE BUS = SFSL3, BUS_STD = FSL, BUS_TYPE = SLAVE, EXCLUDE_BUSIF = DRFSL3, ISVALID = (C_FSL_LINKS >= 4)
BUS_INTERFACE BUS = MFSL3, BUS_STD = FSL, BUS_TYPE = MASTER, EXCLUDE_BUSIF = DWFSL3, ISVALID = (C_FSL_LINKS >= 4)
BUS_INTERFACE BUS = SFSL4, BUS_STD = FSL, BUS_TYPE = SLAVE, EXCLUDE_BUSIF = DRFSL4, ISVALID = (C_FSL_LINKS >= 5)
BUS_INTERFACE BUS = MFSL4, BUS_STD = FSL, BUS_TYPE = MASTER, EXCLUDE_BUSIF = DWFSL4, ISVALID = (C_FSL_LINKS >= 5)
BUS_INTERFACE BUS = SFSL5, BUS_STD = FSL, BUS_TYPE = SLAVE, EXCLUDE_BUSIF = DRFSL5, ISVALID = (C_FSL_LINKS >= 6)
BUS_INTERFACE BUS = MFSL5, BUS_STD = FSL, BUS_TYPE = MASTER, EXCLUDE_BUSIF = DWFSL5, ISVALID = (C_FSL_LINKS >= 6)
BUS_INTERFACE BUS = SFSL6, BUS_STD = FSL, BUS_TYPE = SLAVE, EXCLUDE_BUSIF = DRFSL6, ISVALID = (C_FSL_LINKS >= 7)
BUS_INTERFACE BUS = MFSL6, BUS_STD = FSL, BUS_TYPE = MASTER, EXCLUDE_BUSIF = DWFSL6, ISVALID = (C_FSL_LINKS >= 7)
BUS_INTERFACE BUS = SFSL7, BUS_STD = FSL, BUS_TYPE = SLAVE, EXCLUDE_BUSIF = DRFSL7, ISVALID = (C_FSL_LINKS >= 8)
BUS_INTERFACE BUS = MFSL7, BUS_STD = FSL, BUS_TYPE = MASTER, EXCLUDE_BUSIF = DWFSL7, ISVALID = (C_FSL_LINKS >= 8)
BUS_INTERFACE BUS = SFSL8, BUS_STD = FSL, BUS_TYPE = SLAVE, EXCLUDE_BUSIF = DRFSL8, ISVALID = (C_FSL_LINKS >= 9)
BUS_INTERFACE BUS = MFSL8, BUS_STD = FSL, BUS_TYPE = MASTER, EXCLUDE_BUSIF = DWFSL8, ISVALID = (C_FSL_LINKS >= 9)
BUS_INTERFACE BUS = SFSL9, BUS_STD = FSL, BUS_TYPE = SLAVE, EXCLUDE_BUSIF = DRFSL9, ISVALID = (C_FSL_LINKS >= 10)
BUS_INTERFACE BUS = MFSL9, BUS_STD = FSL, BUS_TYPE = MASTER, EXCLUDE_BUSIF = DWFSL9, ISVALID = (C_FSL_LINKS >= 10)
BUS_INTERFACE BUS = SFSL10, BUS_STD = FSL, BUS_TYPE = SLAVE, EXCLUDE_BUSIF = DRFSL10, ISVALID = (C_FSL_LINKS >= 11)
BUS_INTERFACE BUS = MFSL10, BUS_STD = FSL, BUS_TYPE = MASTER, EXCLUDE_BUSIF = DWFSL10, ISVALID = (C_FSL_LINKS >= 11)
BUS_INTERFACE BUS = SFSL11, BUS_STD = FSL, BUS_TYPE = SLAVE, EXCLUDE_BUSIF = DRFSL11, ISVALID = (C_FSL_LINKS >= 12)
BUS_INTERFACE BUS = MFSL11, BUS_STD = FSL, BUS_TYPE = MASTER, EXCLUDE_BUSIF = DWFSL11, ISVALID = (C_FSL_LINKS >= 12)
BUS_INTERFACE BUS = SFSL12, BUS_STD = FSL, BUS_TYPE = SLAVE, EXCLUDE_BUSIF = DRFSL12, ISVALID = (C_FSL_LINKS >= 13)
BUS_INTERFACE BUS = MFSL12, BUS_STD = FSL, BUS_TYPE = MASTER, EXCLUDE_BUSIF = DWFSL12, ISVALID = (C_FSL_LINKS >= 13)
BUS_INTERFACE BUS = SFSL13, BUS_STD = FSL, BUS_TYPE = SLAVE, EXCLUDE_BUSIF = DRFSL13, ISVALID = (C_FSL_LINKS >= 14)
BUS_INTERFACE BUS = MFSL13, BUS_STD = FSL, BUS_TYPE = MASTER, EXCLUDE_BUSIF = DWFSL13, ISVALID = (C_FSL_LINKS >= 14)
BUS_INTERFACE BUS = SFSL14, BUS_STD = FSL, BUS_TYPE = SLAVE, EXCLUDE_BUSIF = DRFSL14, ISVALID = (C_FSL_LINKS >= 15)
BUS_INTERFACE BUS = MFSL14, BUS_STD = FSL, BUS_TYPE = MASTER, EXCLUDE_BUSIF = DWFSL14, ISVALID = (C_FSL_LINKS >= 15)
BUS_INTERFACE BUS = SFSL15, BUS_STD = FSL, BUS_TYPE = SLAVE, EXCLUDE_BUSIF = DRFSL15, ISVALID = (C_FSL_LINKS >= 16)
BUS_INTERFACE BUS = MFSL15, BUS_STD = FSL, BUS_TYPE = MASTER, EXCLUDE_BUSIF = DWFSL15, ISVALID = (C_FSL_LINKS >= 16)
BUS_INTERFACE BUS = DRFSL0, BUS_STD = XIL_DRFSL, BUS_TYPE = TARGET, EXCLUDE_BUSIF = SFSL0, ISVALID = (C_FSL_LINKS >= 1)
BUS_INTERFACE BUS = DWFSL0, BUS_STD = XIL_DWFSL, BUS_TYPE = INITIATOR, EXCLUDE_BUSIF = MFSL0, ISVALID = (C_FSL_LINKS >= 1)
BUS_INTERFACE BUS = DRFSL1, BUS_STD = XIL_DRFSL, BUS_TYPE = TARGET, EXCLUDE_BUSIF = SFSL1, ISVALID = (C_FSL_LINKS >= 2)
BUS_INTERFACE BUS = DWFSL1, BUS_STD = XIL_DWFSL, BUS_TYPE = INITIATOR, EXCLUDE_BUSIF = MFSL1, ISVALID = (C_FSL_LINKS >= 2)
BUS_INTERFACE BUS = DRFSL2, BUS_STD = XIL_DRFSL, BUS_TYPE = TARGET, EXCLUDE_BUSIF = SFSL2, ISVALID = (C_FSL_LINKS >= 3)
BUS_INTERFACE BUS = DWFSL2, BUS_STD = XIL_DWFSL, BUS_TYPE = INITIATOR, EXCLUDE_BUSIF = MFSL2, ISVALID = (C_FSL_LINKS >= 3)
BUS_INTERFACE BUS = DRFSL3, BUS_STD = XIL_DRFSL, BUS_TYPE = TARGET, EXCLUDE_BUSIF = SFSL3, ISVALID = (C_FSL_LINKS >= 4)
BUS_INTERFACE BUS = DWFSL3, BUS_STD = XIL_DWFSL, BUS_TYPE = INITIATOR, EXCLUDE_BUSIF = MFSL3, ISVALID = (C_FSL_LINKS >= 4)
BUS_INTERFACE BUS = DRFSL4, BUS_STD = XIL_DRFSL, BUS_TYPE = TARGET, EXCLUDE_BUSIF = SFSL4, ISVALID = (C_FSL_LINKS >= 5)
BUS_INTERFACE BUS = DWFSL4, BUS_STD = XIL_DWFSL, BUS_TYPE = INITIATOR, EXCLUDE_BUSIF = MFSL4, ISVALID = (C_FSL_LINKS >= 5)
BUS_INTERFACE BUS = DRFSL5, BUS_STD = XIL_DRFSL, BUS_TYPE = TARGET, EXCLUDE_BUSIF = SFSL5, ISVALID = (C_FSL_LINKS >= 6)
BUS_INTERFACE BUS = DWFSL5, BUS_STD = XIL_DWFSL, BUS_TYPE = INITIATOR, EXCLUDE_BUSIF = MFSL5, ISVALID = (C_FSL_LINKS >= 6)
BUS_INTERFACE BUS = DRFSL6, BUS_STD = XIL_DRFSL, BUS_TYPE = TARGET, EXCLUDE_BUSIF = SFSL6, ISVALID = (C_FSL_LINKS >= 7)
BUS_INTERFACE BUS = DWFSL6, BUS_STD = XIL_DWFSL, BUS_TYPE = INITIATOR, EXCLUDE_BUSIF = MFSL6, ISVALID = (C_FSL_LINKS >= 7)
BUS_INTERFACE BUS = DRFSL7, BUS_STD = XIL_DRFSL, BUS_TYPE = TARGET, EXCLUDE_BUSIF = SFSL7, ISVALID = (C_FSL_LINKS >= 8)
BUS_INTERFACE BUS = DWFSL7, BUS_STD = XIL_DWFSL, BUS_TYPE = INITIATOR, EXCLUDE_BUSIF = MFSL7, ISVALID = (C_FSL_LINKS >= 8)
BUS_INTERFACE BUS = DRFSL8, BUS_STD = XIL_DRFSL, BUS_TYPE = TARGET, EXCLUDE_BUSIF = SFSL8, ISVALID = (C_FSL_LINKS >= 9)
BUS_INTERFACE BUS = DWFSL8, BUS_STD = XIL_DWFSL, BUS_TYPE = INITIATOR, EXCLUDE_BUSIF = MFSL8, ISVALID = (C_FSL_LINKS >= 9)
BUS_INTERFACE BUS = DRFSL9, BUS_STD = XIL_DRFSL, BUS_TYPE = TARGET, EXCLUDE_BUSIF = SFSL9, ISVALID = (C_FSL_LINKS >= 10)
BUS_INTERFACE BUS = DWFSL9, BUS_STD = XIL_DWFSL, BUS_TYPE = INITIATOR, EXCLUDE_BUSIF = MFSL9, ISVALID = (C_FSL_LINKS >= 10)
BUS_INTERFACE BUS = DRFSL10, BUS_STD = XIL_DRFSL, BUS_TYPE = TARGET, EXCLUDE_BUSIF = SFSL10, ISVALID = (C_FSL_LINKS >= 11)
BUS_INTERFACE BUS = DWFSL10, BUS_STD = XIL_DWFSL, BUS_TYPE = INITIATOR, EXCLUDE_BUSIF = MFSL10, ISVALID = (C_FSL_LINKS >= 11)
BUS_INTERFACE BUS = DRFSL11, BUS_STD = XIL_DRFSL, BUS_TYPE = TARGET, EXCLUDE_BUSIF = SFSL11, ISVALID = (C_FSL_LINKS >= 12)
BUS_INTERFACE BUS = DWFSL11, BUS_STD = XIL_DWFSL, BUS_TYPE = INITIATOR, EXCLUDE_BUSIF = MFSL11, ISVALID = (C_FSL_LINKS >= 12)
BUS_INTERFACE BUS = DRFSL12, BUS_STD = XIL_DRFSL, BUS_TYPE = TARGET, EXCLUDE_BUSIF = SFSL12, ISVALID = (C_FSL_LINKS >= 13)
BUS_INTERFACE BUS = DWFSL12, BUS_STD = XIL_DWFSL, BUS_TYPE = INITIATOR, EXCLUDE_BUSIF = MFSL12, ISVALID = (C_FSL_LINKS >= 13)
BUS_INTERFACE BUS = DRFSL13, BUS_STD = XIL_DRFSL, BUS_TYPE = TARGET, EXCLUDE_BUSIF = SFSL13, ISVALID = (C_FSL_LINKS >= 14)
BUS_INTERFACE BUS = DWFSL13, BUS_STD = XIL_DWFSL, BUS_TYPE = INITIATOR, EXCLUDE_BUSIF = MFSL13, ISVALID = (C_FSL_LINKS >= 14)
BUS_INTERFACE BUS = DRFSL14, BUS_STD = XIL_DRFSL, BUS_TYPE = TARGET, EXCLUDE_BUSIF = SFSL14, ISVALID = (C_FSL_LINKS >= 15)
BUS_INTERFACE BUS = DWFSL14, BUS_STD = XIL_DWFSL, BUS_TYPE = INITIATOR, EXCLUDE_BUSIF = MFSL14, ISVALID = (C_FSL_LINKS >= 15)
BUS_INTERFACE BUS = DRFSL15, BUS_STD = XIL_DRFSL, BUS_TYPE = TARGET, EXCLUDE_BUSIF = SFSL15, ISVALID = (C_FSL_LINKS >= 16)
BUS_INTERFACE BUS = DWFSL15, BUS_STD = XIL_DWFSL, BUS_TYPE = INITIATOR, EXCLUDE_BUSIF = MFSL15, ISVALID = (C_FSL_LINKS >= 16)
BUS_INTERFACE BUS = DXCL, BUS_STD = XIL_MEMORY_CHANNEL, BUS_TYPE = INITIATOR
BUS_INTERFACE BUS = IXCL, BUS_STD = XIL_MEMORY_CHANNEL, BUS_TYPE = INITIATOR
BUS_INTERFACE BUS = DEBUG, BUS_STD = XIL_MBDEBUG2, BUS_TYPE = TARGET
BUS_INTERFACE BUS = TRACE, BUS_STD = XIL_MBTRACE2, BUS_TYPE = INITIATOR

## Generics for VHDL or Parameters for Verilog
PARAMETER C_SCO = 0, DT = integer, ASSIGNMENT = CONSTANT
PARAMETER C_DATA_SIZE = 32, DT = integer, ASSIGNMENT = CONSTANT
PARAMETER C_DYNAMIC_BUS_SIZING = 1, DT = integer, ASSIGNMENT = CONSTANT
PARAMETER C_FAMILY = virtex5, DT = string
PARAMETER C_INSTANCE = microblaze, DT = string
PARAMETER C_AREA_OPTIMIZED = 0, DT = integer, RANGE = (0:1)
PARAMETER C_INTERCONNECT = 1, DT = integer, RANGE = (0,1), VALUES = (0=OPB, 1=PLBv46)
PARAMETER C_DPLB_DWIDTH = 32, DT = integer, RANGE = (32,64,128), BUS = DPLB
PARAMETER C_DPLB_NATIVE_DWIDTH = 32, DT = integer, RANGE = (32:32), ASSIGNMENT = CONSTANT, BUS = DPLB
PARAMETER C_DPLB_BURST_EN = 0, DT = integer, RANGE = (0:0), ASSIGNMENT = CONSTANT, BUS = DPLB
PARAMETER C_DPLB_P2P = 0, DT = integer, RANGE = (0:1), BUS = DPLB
PARAMETER C_IPLB_DWIDTH = 32, DT = integer, RANGE = (32,64,128), BUS = IPLB
PARAMETER C_IPLB_NATIVE_DWIDTH = 32, DT = integer, RANGE = (32:32), ASSIGNMENT = CONSTANT, BUS = IPLB
PARAMETER C_IPLB_BURST_EN = 0, DT = integer, RANGE = (0:0), ASSIGNMENT = CONSTANT, BUS = IPLB
PARAMETER C_IPLB_P2P = 0, DT = integer, RANGE = (0:1), BUS = IPLB
PARAMETER C_D_PLB = 0, DT = integer, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_d_plb
PARAMETER C_D_OPB = 1, DT = integer, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_d_opb
PARAMETER C_D_LMB = 1, DT = integer, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_d_lmb
PARAMETER C_I_PLB = 0, DT = integer, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_i_plb
PARAMETER C_I_OPB = 1, DT = integer, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_i_opb
PARAMETER C_I_LMB = 1, DT = integer, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_i_lmb
PARAMETER C_USE_MSR_INSTR = 1, DT = integer, RANGE = (0:1)
PARAMETER C_USE_PCMP_INSTR = 1, DT = integer, RANGE = (0:1)
PARAMETER C_USE_BARREL = 0, DT = integer, RANGE = (0:1)
PARAMETER C_USE_DIV = 0, DT = integer, RANGE = (0:1)
PARAMETER C_USE_HW_MUL = 1, DT = integer, VALUES = (0= NONE, 1= MUL32, 2= MUL64)
PARAMETER C_USE_FPU = 0, DT = integer, VALUES = (0= NONE, 1= BASIC, 2= EXTENDED)
PARAMETER C_UNALIGNED_EXCEPTIONS = 0, DT = integer, RANGE = (0:1)
PARAMETER C_ILL_OPCODE_EXCEPTION = 0, DT = integer, RANGE = (0:1)
PARAMETER C_IOPB_BUS_EXCEPTION = 0, DT = integer, RANGE = (0:1), ISVALID = (C_INTERCONNECT == 0)
PARAMETER C_DOPB_BUS_EXCEPTION = 0, DT = integer, RANGE = (0:1), ISVALID = (C_INTERCONNECT == 0)
PARAMETER C_IPLB_BUS_EXCEPTION = 0, DT = integer, RANGE = (0:1), ISVALID = (C_INTERCONNECT == 1)
PARAMETER C_DPLB_BUS_EXCEPTION = 0, DT = integer, RANGE = (0:1), ISVALID = (C_INTERCONNECT == 1)
PARAMETER C_DIV_ZERO_EXCEPTION = 0, DT = integer, RANGE = (0:1), ISVALID = (C_USE_DIV == 1)
PARAMETER C_FPU_EXCEPTION = 0, DT = integer, RANGE = (0:1), ISVALID = (C_USE_FPU >= 1)
PARAMETER C_FSL_EXCEPTION = 0, DT = integer, RANGE = (0:1), ISVALID = (C_FSL_LINKS >= 1 && C_USE_EXTENDED_FSL_INSTR >= 1)
PARAMETER C_PVR = 0, DT = integer, VALUES = (0= NONE, 1= BASIC, 2= FULL)
PARAMETER C_PVR_USER1 = 0x00, DT = std_logic_vector(0 to 7)
PARAMETER C_PVR_USER2 = 0x00000000, DT = std_logic_vector(0 to 31)
PARAMETER C_DEBUG_ENABLED = 0, DT = integer, RANGE = (0:1)
PARAMETER C_NUMBER_OF_PC_BRK = 1, DT = integer, RANGE = (0:8)
PARAMETER C_NUMBER_OF_RD_ADDR_BRK = 0, DT = integer, RANGE = (0:4)
PARAMETER C_NUMBER_OF_WR_ADDR_BRK = 0, DT = integer, RANGE = (0:4)
PARAMETER C_INTERRUPT_IS_EDGE = 0, DT = integer, RANGE = (0:1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_interrupt_edge
PARAMETER C_EDGE_IS_POSITIVE = 1, DT = integer, RANGE = (0:1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_edge_positive
PARAMETER C_RESET_MSR = 0x00000000, DT = std_logic_vector, VALUES = (0x0000= NONE, 0x0020= ICE, 0x0080= DCE, 0x00a0= ICE_DCE)
PARAMETER C_OPCODE_0x0_ILLEGAL = 0, DT = integer, RANGE = (0:1)
PARAMETER C_FSL_LINKS = 0, DT = integer, RANGE = (0:16)
PARAMETER C_FSL_DATA_SIZE = 32, DT = integer, ASSIGNMENT = CONSTANT
PARAMETER C_USE_EXTENDED_FSL_INSTR = 0, DT = integer, RANGE = (0:1), ISVALID = (C_FSL_LINKS >= 1)
PARAMETER C_ICACHE_BASEADDR = 0x00000000, DT = std_logic_vector, ADDRESS = NONE, ASSIGNMENT = OPTIONAL, SYSLEVEL_UPDATE_VALUE_PROC = update_icache_baseaddr
PARAMETER C_ICACHE_HIGHADDR = 0x3FFFFFFF, DT = std_logic_vector, ADDRESS = NONE, ASSIGNMENT = OPTIONAL, SYSLEVEL_UPDATE_VALUE_PROC = update_icache_highaddr
PARAMETER C_USE_ICACHE = 0, DT = integer, RANGE = (0:1)
PARAMETER C_ALLOW_ICACHE_WR = 1, DT = integer, RANGE = (0:1)
PARAMETER C_ADDR_TAG_BITS = 17, DT = integer, RANGE = (0:25), ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = update_icache_tag_bits
PARAMETER C_CACHE_BYTE_SIZE = 8192, DT = integer, VALUES = (64= 64B, 128= 128B, 256= 256B, 512= 512B, 1024= 1kB, 2048= 2kB,4096= 4kB,8192= 8kB,16384= 16kB,32768= 32kB,65536= 64kB)
PARAMETER C_ICACHE_USE_FSL = 1, DT = integer, ASSIGNMENT = CONSTANT
PARAMETER C_ICACHE_LINE_LEN = 4, DT = integer, RANGE = (4, 8)
PARAMETER C_ICACHE_ALWAYS_USED = 0, DT = integer, RANGE = (0:1)
PARAMETER C_ICACHE_INTERFACE = 0, DT = integer, RANGE = (0,1), VALUES = (0=IXCL, 1=IXCL2)
PARAMETER C_DCACHE_BASEADDR = 0x00000000, DT = std_logic_vector, ADDRESS = NONE, ASSIGNMENT = OPTIONAL, SYSLEVEL_UPDATE_VALUE_PROC = update_dcache_baseaddr
PARAMETER C_DCACHE_HIGHADDR = 0x3FFFFFFF, DT = std_logic_vector, ADDRESS = NONE, ASSIGNMENT = OPTIONAL, SYSLEVEL_UPDATE_VALUE_PROC = update_dcache_highaddr
PARAMETER C_USE_DCACHE = 0, DT = integer, RANGE = (0:1)
PARAMETER C_ALLOW_DCACHE_WR = 1, DT = integer, RANGE = (0:1)
PARAMETER C_DCACHE_ADDR_TAG = 17, DT = integer, RANGE = (0:25), ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = update_dcache_tag_bits
PARAMETER C_DCACHE_BYTE_SIZE = 8192, DT = integer, VALUES = (64= 64B, 128= 128B, 256= 256B, 512= 512B, 1024= 1kB, 2048= 2kB,4096= 4kB,8192= 8kB,16384= 16kB,32768= 32kB,65536= 64kB)
PARAMETER C_DCACHE_USE_FSL = 1, DT = integer, ASSIGNMENT = CONSTANT
PARAMETER C_DCACHE_LINE_LEN = 4, DT = integer, RANGE = (4, 8)
PARAMETER C_DCACHE_ALWAYS_USED = 0, DT = integer, RANGE = (0:1)
PARAMETER C_DCACHE_INTERFACE = 0, DT = integer, RANGE = (0,1), VALUES = (0=DXCL, 1=DXCL2), ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_dcache_interface
PARAMETER C_DCACHE_USE_WRITEBACK = 0, DT = integer, RANGE = (0:1)
PARAMETER C_USE_MMU = 0, DT = integer, VALUES = (0= NONE, 1=USERMODE, 2=PROTECTION, 3=VIRTUAL), ISVALID = (C_AREA_OPTIMIZED == 0)
PARAMETER C_MMU_DTLB_SIZE = 4, DT = integer, VALUES = (1= 1, 2= 2, 4= 4, 8= 8), ISVALID = (C_USE_MMU >= 2 && C_AREA_OPTIMIZED == 0)
PARAMETER C_MMU_ITLB_SIZE = 2, DT = integer, VALUES = (1= 1, 2= 2, 4= 4, 8= 8), ISVALID = (C_USE_MMU >= 2 && C_AREA_OPTIMIZED == 0)
PARAMETER C_MMU_TLB_ACCESS = 3, DT = integer, VALUES = (0=MINIMAL, 1=READ, 2=WRITE, 3=FULL), ISVALID = (C_USE_MMU >= 2 && C_AREA_OPTIMIZED == 0)
PARAMETER C_MMU_ZONES = 16, DT = integer, RANGE = (0:16), ISVALID = (C_USE_MMU >= 2 && C_AREA_OPTIMIZED == 0)
PARAMETER C_USE_INTERRUPT = 0, DT = integer, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_use_interrupt
PARAMETER C_USE_EXT_BRK = 0, DT = integer, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_use_ext_brk
PARAMETER C_USE_EXT_NM_BRK = 0, DT = integer, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_use_ext_nm_brk

## Ports
PORT CLK = "", DIR = I, SIGIS = CLK, BUS = DPLB:IPLB:DOPB:IOPB:DLMB:ILMB, ASSIGNMENT = REQUIRE
PORT RESET = LMB_Rst, DIR = I, SIGIS = RST, BUS = DOPB:IOPB:DLMB:ILMB
PORT MB_RESET = "", DIR = I, SIGIS = RST
PORT INTERRUPT = "", DIR = I, LEVEL = HIGH, SIGIS = INTERRUPT
PORT EXT_BRK = Ext_BRK, DIR = I
PORT EXT_NM_BRK = Ext_NM_BRK, DIR = I
PORT DBG_STOP = "", DIR = I
PORT MB_Halted = "", DIR = O
PORT INSTR = LMB_ReadDBus, DIR = I, VEC = [0:31], BUS = ILMB
PORT I_ADDRTAG = M_ADDRTAG, DIR = O, VEC = [0:3], BUS = ILMB
PORT IREADY = LMB_Ready, DIR = I, BUS = ILMB
PORT IWAIT = LMB_Wait, DIR = I, BUS = ILMB
PORT INSTR_ADDR = M_ABus, DIR = O, VEC = [0:31], BUS = ILMB
PORT IFETCH = M_ReadStrobe, DIR = O, BUS = ILMB
PORT I_AS = M_AddrStrobe, DIR = O, BUS = ILMB
PORT IPLB_M_ABort = M_ABort, DIR = O, BUS = IPLB
PORT IPLB_M_ABus = M_ABus, DIR = O, VEC = [0:31], BUS = IPLB
PORT IPLB_M_UABus = M_UABus, DIR = O, VEC = [0:31], BUS = IPLB
PORT IPLB_M_BE = M_BE, DIR = O, VEC = [0:(C_IPLB_DWIDTH-1)/8], BUS = IPLB
PORT IPLB_M_busLock = M_busLock, DIR = O, BUS = IPLB
PORT IPLB_M_lockErr = M_lockErr, DIR = O, BUS = IPLB
PORT IPLB_M_MSize = M_MSize, DIR = O, VEC = [0:1], BUS = IPLB
PORT IPLB_M_priority = M_priority, DIR = O, VEC = [0:1], BUS = IPLB
PORT IPLB_M_rdBurst = M_rdBurst, DIR = O, BUS = IPLB
PORT IPLB_M_request = M_request, DIR = O, BUS = IPLB
PORT IPLB_M_RNW = M_RNW, DIR = O, BUS = IPLB
PORT IPLB_M_size = M_size, DIR = O, VEC = [0:3], BUS = IPLB
PORT IPLB_M_TAttribute = M_TAttribute, DIR = O, VEC = [0:15], BUS = IPLB
PORT IPLB_M_type = M_type, DIR = O, VEC = [0:2], BUS = IPLB
PORT IPLB_M_wrBurst = M_wrBurst, DIR = O, BUS = IPLB
PORT IPLB_M_wrDBus = M_wrDBus, DIR = O, VEC = [0:C_IPLB_DWIDTH-1], BUS = IPLB
PORT IPLB_MBusy = PLB_MBusy, DIR = I, BUS = IPLB
PORT IPLB_MRdErr = PLB_MRdErr, DIR = I, BUS = IPLB
PORT IPLB_MWrErr = PLB_MWrErr, DIR = I, BUS = IPLB
PORT IPLB_MIRQ = PLB_MIRQ, DIR = I, BUS = IPLB
PORT IPLB_MWrBTerm = PLB_MWrBTerm, DIR = I, BUS = IPLB
PORT IPLB_MWrDAck = PLB_MWrDAck, DIR = I, BUS = IPLB
PORT IPLB_MAddrAck = PLB_MAddrAck, DIR = I, BUS = IPLB
PORT IPLB_MRdBTerm = PLB_MRdBTerm, DIR = I, BUS = IPLB
PORT IPLB_MRdDAck = PLB_MRdDAck, DIR = I, BUS = IPLB
PORT IPLB_MRdDBus = PLB_MRdDBus, DIR = I, VEC = [0:C_IPLB_DWIDTH-1], BUS = IPLB
PORT IPLB_MRdWdAddr = PLB_MRdWdAddr, DIR = I, VEC = [0:3], BUS = IPLB
PORT IPLB_MRearbitrate = PLB_MRearbitrate, DIR = I, BUS = IPLB
PORT IPLB_MSSize = PLB_MSSize, DIR = I, VEC = [0:1], BUS = IPLB
PORT IPLB_MTimeout = PLB_MTimeout, DIR = I, BUS = IPLB
PORT DATA_READ = LMB_ReadDBus, DIR = I, VEC = [0:31], BUS = DLMB
PORT DREADY = LMB_Ready, DIR = I, BUS = DLMB
PORT DWAIT = LMB_Wait, DIR = I, BUS = DLMB
PORT DATA_WRITE = M_DBus, DIR = O, VEC = [0:31], BUS = DLMB
PORT DATA_ADDR = M_ABus, DIR = O, VEC = [0:31], BUS = DLMB
PORT D_ADDRTAG = M_ADDRTAG, DIR = O, VEC = [0:3], BUS = DLMB
PORT D_AS = M_AddrStrobe, DIR = O, BUS = DLMB
PORT READ_STROBE = M_ReadStrobe, DIR = O, BUS = DLMB
PORT WRITE_STROBE = M_WriteStrobe, DIR = O, BUS = DLMB
PORT BYTE_ENABLE = M_BE, DIR = O, VEC = [0:3], BUS = DLMB
PORT DM_ABUS = M_ABus, DIR = O, VEC = [0:31], BUS = DOPB
PORT DM_BE = M_BE, DIR = O, VEC = [0:3], BUS = DOPB
PORT DM_BUSLOCK = M_busLock, DIR = O, BUS = DOPB
PORT DM_DBUS = M_DBus, DIR = O, VEC = [0:31], BUS = DOPB
PORT DM_REQUEST = M_request, DIR = O, BUS = DOPB
PORT DM_RNW = M_RNW, DIR = O, BUS = DOPB
PORT DM_SELECT = M_select, DIR = O, BUS = DOPB
PORT DM_SEQADDR = M_seqAddr, DIR = O, BUS = DOPB
PORT DOPB_DBUS = OPB_DBus, DIR = I, VEC = [0:31], BUS = DOPB
PORT DOPB_ERRACK = OPB_errAck, DIR = I, BUS = DOPB
PORT DOPB_MGRANT = OPB_MGrant, DIR = I, BUS = DOPB
PORT DOPB_RETRY = OPB_retry, DIR = I, BUS = DOPB
PORT DOPB_TIMEOUT = OPB_timeout, DIR = I, BUS = DOPB
PORT DOPB_XFERACK = OPB_xferAck, DIR = I, BUS = DOPB
PORT DPLB_M_ABort = M_ABort, DIR = O, BUS = DPLB
PORT DPLB_M_ABus = M_ABus, DIR = O, VEC = [0:31], BUS = DPLB
PORT DPLB_M_UABus = M_UABus, DIR = O, VEC = [0:31], BUS = DPLB
PORT DPLB_M_BE = M_BE, DIR = O, VEC = [0:(C_DPLB_DWIDTH-1)/8], BUS = DPLB
PORT DPLB_M_busLock = M_busLock, DIR = O, BUS = DPLB
PORT DPLB_M_lockErr = M_lockErr, DIR = O, BUS = DPLB
PORT DPLB_M_MSize = M_MSize, DIR = O, VEC = [0:1], BUS = DPLB
PORT DPLB_M_priority = M_priority, DIR = O, VEC = [0:1], BUS = DPLB
PORT DPLB_M_rdBurst = M_rdBurst, DIR = O, BUS = DPLB
PORT DPLB_M_request = M_request, DIR = O, BUS = DPLB
PORT DPLB_M_RNW = M_RNW, DIR = O, BUS = DPLB
PORT DPLB_M_size = M_size, DIR = O, VEC = [0:3], BUS = DPLB
PORT DPLB_M_TAttribute = M_TAttribute, DIR = O, VEC = [0:15], BUS = DPLB
PORT DPLB_M_type = M_type, DIR = O, VEC = [0:2], BUS = DPLB
PORT DPLB_M_wrBurst = M_wrBurst, DIR = O, BUS = DPLB
PORT DPLB_M_wrDBus = M_wrDBus, DIR = O, VEC = [0:C_DPLB_DWIDTH-1], BUS = DPLB
PORT DPLB_MBusy = PLB_MBusy, DIR = I, BUS = DPLB
PORT DPLB_MRdErr = PLB_MRdErr, DIR = I, BUS = DPLB
PORT DPLB_MWrErr = PLB_MWrErr, DIR = I, BUS = DPLB
PORT DPLB_MIRQ = PLB_MIRQ, DIR = I, BUS = DPLB
PORT DPLB_MWrBTerm = PLB_MWrBTerm, DIR = I, BUS = DPLB
PORT DPLB_MWrDAck = PLB_MWrDAck, DIR = I, BUS = DPLB
PORT DPLB_MAddrAck = PLB_MAddrAck, DIR = I, BUS = DPLB
PORT DPLB_MRdBTerm = PLB_MRdBTerm, DIR = I, BUS = DPLB
PORT DPLB_MRdDAck = PLB_MRdDAck, DIR = I, BUS = DPLB
PORT DPLB_MRdDBus = PLB_MRdDBus, DIR = I, VEC = [0:C_DPLB_DWIDTH-1], BUS = DPLB
PORT DPLB_MRdWdAddr = PLB_MRdWdAddr, DIR = I, VEC = [0:3], BUS = DPLB
PORT DPLB_MRearbitrate = PLB_MRearbitrate, DIR = I, BUS = DPLB
PORT DPLB_MSSize = PLB_MSSize, DIR = I, VEC = [0:1], BUS = DPLB
PORT DPLB_MTimeout = PLB_MTimeout, DIR = I, BUS = DPLB
PORT IM_ABUS = M_ABus, DIR = O, VEC = [0:31], BUS = IOPB
PORT IM_BE = M_BE, DIR = O, VEC = [0:3], BUS = IOPB
PORT IM_BUSLOCK = M_busLock, DIR = O, BUS = IOPB
PORT IM_DBUS = M_DBus, DIR = O, VEC = [0:31], BUS = IOPB
PORT IM_REQUEST = M_request, DIR = O, BUS = IOPB
PORT IM_RNW = M_RNW, DIR = O, BUS = IOPB
PORT IM_SELECT = M_select, DIR = O, BUS = IOPB
PORT IM_SEQADDR = M_seqAddr, DIR = O, BUS = IOPB
PORT IOPB_DBUS = OPB_DBus, DIR = I, VEC = [0:31], BUS = IOPB
PORT IOPB_ERRACK = OPB_errAck, DIR = I, BUS = IOPB
PORT IOPB_MGRANT = OPB_MGrant, DIR = I, BUS = IOPB
PORT IOPB_RETRY = OPB_retry, DIR = I, BUS = IOPB
PORT IOPB_TIMEOUT = OPB_timeout, DIR = I, BUS = IOPB
PORT IOPB_XFERACK = OPB_xferAck, DIR = I, BUS = IOPB
PORT DBG_CLK = Dbg_Clk, DIR = I, BUS = DEBUG
PORT DBG_TDI = Dbg_TDI, DIR = I, BUS = DEBUG
PORT DBG_TDO = Dbg_TDO, DIR = O, BUS = DEBUG
PORT DBG_REG_EN = Dbg_Reg_En, DIR = I, VEC = [0:4], BUS = DEBUG
PORT DBG_SHIFT = Dbg_Shift, DIR = I, BUS = DEBUG
PORT DBG_CAPTURE = Dbg_Capture, DIR = I, BUS = DEBUG
PORT DBG_UPDATE = Dbg_Update, DIR = I, BUS = DEBUG
PORT DEBUG_RST = Debug_Rst, DIR = I, SIGIS = RST, BUS = DEBUG
PORT Trace_Instruction = Trace_Instruction, DIR = O, VEC = [0:31], BUS = TRACE
PORT Trace_Valid_Instr = Trace_Valid_Instr, DIR = O, BUS = TRACE
PORT Trace_PC = Trace_PC, DIR = O, VEC = [0:31], BUS = TRACE
PORT Trace_Reg_Write = Trace_Reg_Write, DIR = O, BUS = TRACE
PORT Trace_Reg_Addr = Trace_Reg_Addr, DIR = O, VEC = [0:4], BUS = TRACE
PORT Trace_MSR_Reg = Trace_MSR_Reg, DIR = O, VEC = [0:14], BUS = TRACE
PORT Trace_PID_Reg = Trace_PID_Reg, DIR = O, VEC = [0:7], BUS = TRACE
PORT Trace_New_Reg_Value = Trace_New_Reg_Value, DIR = O, VEC = [0:31], BUS = TRACE
PORT Trace_Exception_Taken = Trace_Exception_Taken, DIR = O, BUS = TRACE
PORT Trace_Exception_Kind = Trace_Exception_Kind, DIR = O, VEC = [0:4], BUS = TRACE
PORT Trace_Jump_Taken = Trace_Jump_Taken, DIR = O, BUS = TRACE
PORT Trace_Delay_Slot = Trace_Delay_Slot, DIR = O, BUS = TRACE
PORT Trace_Data_Address = Trace_Data_Address, DIR = O, VEC = [0:31], BUS = TRACE
PORT Trace_Data_Access = Trace_Data_Access, DIR = O, BUS = TRACE
PORT Trace_Data_Read = Trace_Data_Read, DIR = O, BUS = TRACE
PORT Trace_Data_Write = Trace_Data_Write, DIR = O, BUS = TRACE
PORT Trace_Data_Write_Value = Trace_Data_Write_Value, DIR = O, VEC = [0:31], BUS = TRACE
PORT Trace_Data_Byte_Enable = Trace_Data_Byte_Enable, DIR = O, VEC = [0:3], BUS = TRACE
PORT Trace_DCache_Req = Trace_DCache_Req, DIR = O, BUS = TRACE
PORT Trace_DCache_Hit = Trace_DCache_Hit, DIR = O, BUS = TRACE
PORT Trace_ICache_Req = Trace_ICache_Req, DIR = O, BUS = TRACE
PORT Trace_ICache_Hit = Trace_ICache_Hit, DIR = O, BUS = TRACE
PORT Trace_OF_PipeRun = Trace_OF_PipeRun, DIR = O, BUS = TRACE
PORT Trace_EX_PipeRun = Trace_EX_PipeRun, DIR = O, BUS = TRACE
PORT Trace_MEM_PipeRun = Trace_MEM_PipeRun, DIR = O, BUS = TRACE
PORT Trace_MB_Halted = Trace_MB_Halted, DIR = O, BUS = TRACE
PORT FSL0_S_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = SFSL0:DRFSL0
PORT FSL0_S_READ = FSL_S_Read, DIR = O, BUS = SFSL0:DRFSL0
PORT FSL0_S_DATA = FSL_S_Data, DIR = I, VEC = [0:C_FSL_DATA_SIZE-1], BUS = SFSL0:DRFSL0
PORT FSL0_S_CONTROL = FSL_S_Control, DIR = I, BUS = SFSL0:DRFSL0
PORT FSL0_S_EXISTS = FSL_S_Exists, DIR = I, BUS = SFSL0:DRFSL0
PORT FSL0_M_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = MFSL0:DWFSL0
PORT FSL0_M_WRITE = FSL_M_Write, DIR = O, BUS = MFSL0:DWFSL0
PORT FSL0_M_DATA = FSL_M_Data, DIR = O, VEC = [0:C_FSL_DATA_SIZE-1], BUS = MFSL0:DWFSL0
PORT FSL0_M_CONTROL = FSL_M_Control, DIR = O, BUS = MFSL0:DWFSL0
PORT FSL0_M_FULL = FSL_M_Full, DIR = I, BUS = MFSL0:DWFSL0
PORT FSL1_S_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = SFSL1:DRFSL1
PORT FSL1_S_READ = FSL_S_Read, DIR = O, BUS = SFSL1:DRFSL1
PORT FSL1_S_DATA = FSL_S_Data, DIR = I, VEC = [0:C_FSL_DATA_SIZE-1], BUS = SFSL1:DRFSL1
PORT FSL1_S_CONTROL = FSL_S_Control, DIR = I, BUS = SFSL1:DRFSL1
PORT FSL1_S_EXISTS = FSL_S_Exists, DIR = I, BUS = SFSL1:DRFSL1
PORT FSL1_M_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = MFSL1:DWFSL1
PORT FSL1_M_WRITE = FSL_M_Write, DIR = O, BUS = MFSL1:DWFSL1
PORT FSL1_M_DATA = FSL_M_Data, DIR = O, VEC = [0:C_FSL_DATA_SIZE-1], BUS = MFSL1:DWFSL1
PORT FSL1_M_CONTROL = FSL_M_Control, DIR = O, BUS = MFSL1:DWFSL1
PORT FSL1_M_FULL = FSL_M_Full, DIR = I, BUS = MFSL1:DWFSL1
PORT FSL2_S_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = SFSL2:DRFSL2
PORT FSL2_S_READ = FSL_S_Read, DIR = O, BUS = SFSL2:DRFSL2
PORT FSL2_S_DATA = FSL_S_Data, DIR = I, VEC = [0:C_FSL_DATA_SIZE-1], BUS = SFSL2:DRFSL2
PORT FSL2_S_CONTROL = FSL_S_Control, DIR = I, BUS = SFSL2:DRFSL2
PORT FSL2_S_EXISTS = FSL_S_Exists, DIR = I, BUS = SFSL2:DRFSL2
PORT FSL2_M_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = MFSL2:DWFSL2
PORT FSL2_M_WRITE = FSL_M_Write, DIR = O, BUS = MFSL2:DWFSL2
PORT FSL2_M_DATA = FSL_M_Data, DIR = O, VEC = [0:C_FSL_DATA_SIZE-1], BUS = MFSL2:DWFSL2
PORT FSL2_M_CONTROL = FSL_M_Control, DIR = O, BUS = MFSL2:DWFSL2
PORT FSL2_M_FULL = FSL_M_Full, DIR = I, BUS = MFSL2:DWFSL2
PORT FSL3_S_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = SFSL3:DRFSL3
PORT FSL3_S_READ = FSL_S_Read, DIR = O, BUS = SFSL3:DRFSL3
PORT FSL3_S_DATA = FSL_S_Data, DIR = I, VEC = [0:C_FSL_DATA_SIZE-1], BUS = SFSL3:DRFSL3
PORT FSL3_S_CONTROL = FSL_S_Control, DIR = I, BUS = SFSL3:DRFSL3
PORT FSL3_S_EXISTS = FSL_S_Exists, DIR = I, BUS = SFSL3:DRFSL3
PORT FSL3_M_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = MFSL3:DWFSL3
PORT FSL3_M_WRITE = FSL_M_Write, DIR = O, BUS = MFSL3:DWFSL3
PORT FSL3_M_DATA = FSL_M_Data, DIR = O, VEC = [0:C_FSL_DATA_SIZE-1], BUS = MFSL3:DWFSL3
PORT FSL3_M_CONTROL = FSL_M_Control, DIR = O, BUS = MFSL3:DWFSL3
PORT FSL3_M_FULL = FSL_M_Full, DIR = I, BUS = MFSL3:DWFSL3
PORT FSL4_S_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = SFSL4:DRFSL4
PORT FSL4_S_READ = FSL_S_Read, DIR = O, BUS = SFSL4:DRFSL4
PORT FSL4_S_DATA = FSL_S_Data, DIR = I, VEC = [0:C_FSL_DATA_SIZE-1], BUS = SFSL4:DRFSL4
PORT FSL4_S_CONTROL = FSL_S_Control, DIR = I, BUS = SFSL4:DRFSL4
PORT FSL4_S_EXISTS = FSL_S_Exists, DIR = I, BUS = SFSL4:DRFSL4
PORT FSL4_M_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = MFSL4:DWFSL4
PORT FSL4_M_WRITE = FSL_M_Write, DIR = O, BUS = MFSL4:DWFSL4
PORT FSL4_M_DATA = FSL_M_Data, DIR = O, VEC = [0:C_FSL_DATA_SIZE-1], BUS = MFSL4:DWFSL4
PORT FSL4_M_CONTROL = FSL_M_Control, DIR = O, BUS = MFSL4:DWFSL4
PORT FSL4_M_FULL = FSL_M_Full, DIR = I, BUS = MFSL4:DWFSL4
PORT FSL5_S_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = SFSL5:DRFSL5
PORT FSL5_S_READ = FSL_S_Read, DIR = O, BUS = SFSL5:DRFSL5
PORT FSL5_S_DATA = FSL_S_Data, DIR = I, VEC = [0:C_FSL_DATA_SIZE-1], BUS = SFSL5:DRFSL5
PORT FSL5_S_CONTROL = FSL_S_Control, DIR = I, BUS = SFSL5:DRFSL5
PORT FSL5_S_EXISTS = FSL_S_Exists, DIR = I, BUS = SFSL5:DRFSL5
PORT FSL5_M_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = MFSL5:DWFSL5
PORT FSL5_M_WRITE = FSL_M_Write, DIR = O, BUS = MFSL5:DWFSL5
PORT FSL5_M_DATA = FSL_M_Data, DIR = O, VEC = [0:C_FSL_DATA_SIZE-1], BUS = MFSL5:DWFSL5
PORT FSL5_M_CONTROL = FSL_M_Control, DIR = O, BUS = MFSL5:DWFSL5
PORT FSL5_M_FULL = FSL_M_Full, DIR = I, BUS = MFSL5:DWFSL5
PORT FSL6_S_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = SFSL6:DRFSL6
PORT FSL6_S_READ = FSL_S_Read, DIR = O, BUS = SFSL6:DRFSL6
PORT FSL6_S_DATA = FSL_S_Data, DIR = I, VEC = [0:C_FSL_DATA_SIZE-1], BUS = SFSL6:DRFSL6
PORT FSL6_S_CONTROL = FSL_S_Control, DIR = I, BUS = SFSL6:DRFSL6
PORT FSL6_S_EXISTS = FSL_S_Exists, DIR = I, BUS = SFSL6:DRFSL6
PORT FSL6_M_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = MFSL6:DWFSL6
PORT FSL6_M_WRITE = FSL_M_Write, DIR = O, BUS = MFSL6:DWFSL6
PORT FSL6_M_DATA = FSL_M_Data, DIR = O, VEC = [0:C_FSL_DATA_SIZE-1], BUS = MFSL6:DWFSL6
PORT FSL6_M_CONTROL = FSL_M_Control, DIR = O, BUS = MFSL6:DWFSL6
PORT FSL6_M_FULL = FSL_M_Full, DIR = I, BUS = MFSL6:DWFSL6
PORT FSL7_S_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = SFSL7:DRFSL7
PORT FSL7_S_READ = FSL_S_Read, DIR = O, BUS = SFSL7:DRFSL7
PORT FSL7_S_DATA = FSL_S_Data, DIR = I, VEC = [0:C_FSL_DATA_SIZE-1], BUS = SFSL7:DRFSL7
PORT FSL7_S_CONTROL = FSL_S_Control, DIR = I, BUS = SFSL7:DRFSL7
PORT FSL7_S_EXISTS = FSL_S_Exists, DIR = I, BUS = SFSL7:DRFSL7
PORT FSL7_M_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = MFSL7:DWFSL7
PORT FSL7_M_WRITE = FSL_M_Write, DIR = O, BUS = MFSL7:DWFSL7
PORT FSL7_M_DATA = FSL_M_Data, DIR = O, VEC = [0:C_FSL_DATA_SIZE-1], BUS = MFSL7:DWFSL7
PORT FSL7_M_CONTROL = FSL_M_Control, DIR = O, BUS = MFSL7:DWFSL7
PORT FSL7_M_FULL = FSL_M_Full, DIR = I, BUS = MFSL7:DWFSL7
PORT FSL8_S_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = SFSL8:DRFSL8
PORT FSL8_S_READ = FSL_S_Read, DIR = O, BUS = SFSL8:DRFSL8
PORT FSL8_S_DATA = FSL_S_Data, DIR = I, VEC = [0:C_FSL_DATA_SIZE-1], BUS = SFSL8:DRFSL8
PORT FSL8_S_CONTROL = FSL_S_Control, DIR = I, BUS = SFSL8:DRFSL8
PORT FSL8_S_EXISTS = FSL_S_Exists, DIR = I, BUS = SFSL8:DRFSL8
PORT FSL8_M_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = MFSL8:DWFSL8
PORT FSL8_M_WRITE = FSL_M_Write, DIR = O, BUS = MFSL8:DWFSL8
PORT FSL8_M_DATA = FSL_M_Data, DIR = O, VEC = [0:C_FSL_DATA_SIZE-1], BUS = MFSL8:DWFSL8
PORT FSL8_M_CONTROL = FSL_M_Control, DIR = O, BUS = MFSL8:DWFSL8
PORT FSL8_M_FULL = FSL_M_Full, DIR = I, BUS = MFSL8:DWFSL8
PORT FSL9_S_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = SFSL9:DRFSL9
PORT FSL9_S_READ = FSL_S_Read, DIR = O, BUS = SFSL9:DRFSL9
PORT FSL9_S_DATA = FSL_S_Data, DIR = I, VEC = [0:C_FSL_DATA_SIZE-1], BUS = SFSL9:DRFSL9
PORT FSL9_S_CONTROL = FSL_S_Control, DIR = I, BUS = SFSL9:DRFSL9
PORT FSL9_S_EXISTS = FSL_S_Exists, DIR = I, BUS = SFSL9:DRFSL9
PORT FSL9_M_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = MFSL9:DWFSL9
PORT FSL9_M_WRITE = FSL_M_Write, DIR = O, BUS = MFSL9:DWFSL9
PORT FSL9_M_DATA = FSL_M_Data, DIR = O, VEC = [0:C_FSL_DATA_SIZE-1], BUS = MFSL9:DWFSL9
PORT FSL9_M_CONTROL = FSL_M_Control, DIR = O, BUS = MFSL9:DWFSL9
PORT FSL9_M_FULL = FSL_M_Full, DIR = I, BUS = MFSL9:DWFSL9
PORT FSL10_S_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = SFSL10:DRFSL10
PORT FSL10_S_READ = FSL_S_Read, DIR = O, BUS = SFSL10:DRFSL10
PORT FSL10_S_DATA = FSL_S_Data, DIR = I, VEC = [0:C_FSL_DATA_SIZE-1], BUS = SFSL10:DRFSL10
PORT FSL10_S_CONTROL = FSL_S_Control, DIR = I, BUS = SFSL10:DRFSL10
PORT FSL10_S_EXISTS = FSL_S_Exists, DIR = I, BUS = SFSL10:DRFSL10
PORT FSL10_M_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = MFSL10:DWFSL10
PORT FSL10_M_WRITE = FSL_M_Write, DIR = O, BUS = MFSL10:DWFSL10
PORT FSL10_M_DATA = FSL_M_Data, DIR = O, VEC = [0:C_FSL_DATA_SIZE-1], BUS = MFSL10:DWFSL10
PORT FSL10_M_CONTROL = FSL_M_Control, DIR = O, BUS = MFSL10:DWFSL10
PORT FSL10_M_FULL = FSL_M_Full, DIR = I, BUS = MFSL10:DWFSL10
PORT FSL11_S_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = SFSL11:DRFSL11
PORT FSL11_S_READ = FSL_S_Read, DIR = O, BUS = SFSL11:DRFSL11
PORT FSL11_S_DATA = FSL_S_Data, DIR = I, VEC = [0:C_FSL_DATA_SIZE-1], BUS = SFSL11:DRFSL11
PORT FSL11_S_CONTROL = FSL_S_Control, DIR = I, BUS = SFSL11:DRFSL11
PORT FSL11_S_EXISTS = FSL_S_Exists, DIR = I, BUS = SFSL11:DRFSL11
PORT FSL11_M_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = MFSL11:DWFSL11
PORT FSL11_M_WRITE = FSL_M_Write, DIR = O, BUS = MFSL11:DWFSL11
PORT FSL11_M_DATA = FSL_M_Data, DIR = O, VEC = [0:C_FSL_DATA_SIZE-1], BUS = MFSL11:DWFSL11
PORT FSL11_M_CONTROL = FSL_M_Control, DIR = O, BUS = MFSL11:DWFSL11
PORT FSL11_M_FULL = FSL_M_Full, DIR = I, BUS = MFSL11:DWFSL11
PORT FSL12_S_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = SFSL12:DRFSL12
PORT FSL12_S_READ = FSL_S_Read, DIR = O, BUS = SFSL12:DRFSL12
PORT FSL12_S_DATA = FSL_S_Data, DIR = I, VEC = [0:C_FSL_DATA_SIZE-1], BUS = SFSL12:DRFSL12
PORT FSL12_S_CONTROL = FSL_S_Control, DIR = I, BUS = SFSL12:DRFSL12
PORT FSL12_S_EXISTS = FSL_S_Exists, DIR = I, BUS = SFSL12:DRFSL12
PORT FSL12_M_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = MFSL12:DWFSL12
PORT FSL12_M_WRITE = FSL_M_Write, DIR = O, BUS = MFSL12:DWFSL12
PORT FSL12_M_DATA = FSL_M_Data, DIR = O, VEC = [0:C_FSL_DATA_SIZE-1], BUS = MFSL12:DWFSL12
PORT FSL12_M_CONTROL = FSL_M_Control, DIR = O, BUS = MFSL12:DWFSL12
PORT FSL12_M_FULL = FSL_M_Full, DIR = I, BUS = MFSL12:DWFSL12
PORT FSL13_S_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = SFSL13:DRFSL13
PORT FSL13_S_READ = FSL_S_Read, DIR = O, BUS = SFSL13:DRFSL13
PORT FSL13_S_DATA = FSL_S_Data, DIR = I, VEC = [0:C_FSL_DATA_SIZE-1], BUS = SFSL13:DRFSL13
PORT FSL13_S_CONTROL = FSL_S_Control, DIR = I, BUS = SFSL13:DRFSL13
PORT FSL13_S_EXISTS = FSL_S_Exists, DIR = I, BUS = SFSL13:DRFSL13
PORT FSL13_M_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = MFSL13:DWFSL13
PORT FSL13_M_WRITE = FSL_M_Write, DIR = O, BUS = MFSL13:DWFSL13
PORT FSL13_M_DATA = FSL_M_Data, DIR = O, VEC = [0:C_FSL_DATA_SIZE-1], BUS = MFSL13:DWFSL13
PORT FSL13_M_CONTROL = FSL_M_Control, DIR = O, BUS = MFSL13:DWFSL13
PORT FSL13_M_FULL = FSL_M_Full, DIR = I, BUS = MFSL13:DWFSL13
PORT FSL14_S_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = SFSL14:DRFSL14
PORT FSL14_S_READ = FSL_S_Read, DIR = O, BUS = SFSL14:DRFSL14
PORT FSL14_S_DATA = FSL_S_Data, DIR = I, VEC = [0:C_FSL_DATA_SIZE-1], BUS = SFSL14:DRFSL14
PORT FSL14_S_CONTROL = FSL_S_Control, DIR = I, BUS = SFSL14:DRFSL14
PORT FSL14_S_EXISTS = FSL_S_Exists, DIR = I, BUS = SFSL14:DRFSL14
PORT FSL14_M_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = MFSL14:DWFSL14
PORT FSL14_M_WRITE = FSL_M_Write, DIR = O, BUS = MFSL14:DWFSL14
PORT FSL14_M_DATA = FSL_M_Data, DIR = O, VEC = [0:C_FSL_DATA_SIZE-1], BUS = MFSL14:DWFSL14
PORT FSL14_M_CONTROL = FSL_M_Control, DIR = O, BUS = MFSL14:DWFSL14
PORT FSL14_M_FULL = FSL_M_Full, DIR = I, BUS = MFSL14:DWFSL14
PORT FSL15_S_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = SFSL15:DRFSL15
PORT FSL15_S_READ = FSL_S_Read, DIR = O, BUS = SFSL15:DRFSL15
PORT FSL15_S_DATA = FSL_S_Data, DIR = I, VEC = [0:C_FSL_DATA_SIZE-1], BUS = SFSL15:DRFSL15
PORT FSL15_S_CONTROL = FSL_S_Control, DIR = I, BUS = SFSL15:DRFSL15
PORT FSL15_S_EXISTS = FSL_S_Exists, DIR = I, BUS = SFSL15:DRFSL15
PORT FSL15_M_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = MFSL15:DWFSL15
PORT FSL15_M_WRITE = FSL_M_Write, DIR = O, BUS = MFSL15:DWFSL15
PORT FSL15_M_DATA = FSL_M_Data, DIR = O, VEC = [0:C_FSL_DATA_SIZE-1], BUS = MFSL15:DWFSL15
PORT FSL15_M_CONTROL = FSL_M_Control, DIR = O, BUS = MFSL15:DWFSL15
PORT FSL15_M_FULL = FSL_M_Full, DIR = I, BUS = MFSL15:DWFSL15
PORT ICACHE_FSL_IN_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = IXCL
PORT ICACHE_FSL_IN_READ = FSL_S_Read, DIR = O, BUS = IXCL
PORT ICACHE_FSL_IN_DATA = FSL_S_Data, DIR = I, VEC = [0:31], BUS = IXCL
PORT ICACHE_FSL_IN_CONTROL = FSL_S_Control, DIR = I, BUS = IXCL
PORT ICACHE_FSL_IN_EXISTS = FSL_S_Exists, DIR = I, BUS = IXCL
PORT ICACHE_FSL_OUT_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = IXCL
PORT ICACHE_FSL_OUT_WRITE = FSL_M_Write, DIR = O, BUS = IXCL
PORT ICACHE_FSL_OUT_DATA = FSL_M_Data, DIR = O, VEC = [0:31], BUS = IXCL
PORT ICACHE_FSL_OUT_CONTROL = FSL_M_Control, DIR = O, BUS = IXCL
PORT ICACHE_FSL_OUT_FULL = FSL_M_Full, DIR = I, BUS = IXCL
PORT DCACHE_FSL_IN_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = DXCL
PORT DCACHE_FSL_IN_READ = FSL_S_Read, DIR = O, BUS = DXCL
PORT DCACHE_FSL_IN_DATA = FSL_S_Data, DIR = I, VEC = [0:31], BUS = DXCL
PORT DCACHE_FSL_IN_CONTROL = FSL_S_Control, DIR = I, BUS = DXCL
PORT DCACHE_FSL_IN_EXISTS = FSL_S_Exists, DIR = I, BUS = DXCL
PORT DCACHE_FSL_OUT_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = DXCL
PORT DCACHE_FSL_OUT_WRITE = FSL_M_Write, DIR = O, BUS = DXCL
PORT DCACHE_FSL_OUT_DATA = FSL_M_Data, DIR = O, VEC = [0:31], BUS = DXCL
PORT DCACHE_FSL_OUT_CONTROL = FSL_M_Control, DIR = O, BUS = DXCL
PORT DCACHE_FSL_OUT_FULL = FSL_M_Full, DIR = I, BUS = DXCL

END

FINISH_SINGLE_MPD

START_SINGLE_MPD xps_can_v3_00_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : xps_can
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN xps_can

## Peripheral Options
OPTION RUN_NGCBUILD = TRUE
OPTION PAY_CORE = xps_can@2010.03
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION PLATGEN_SYSLEVEL_UPDATE_PROC = generate_corelevel_ucf
OPTION DESC = XPS CAN Controller
OPTION LONG_DESC = Controller Area Network for PLBV46
OPTION IP_GROUP = Communication High-Speed:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=SUPERSEDED, spartan3=SUPERSEDED, spartan3an=SUPERSEDED, spartan3a=SUPERSEDED, spartan3e=SUPERSEDED, spartan3adsp=SUPERSEDED, virtex4lx=SUPERSEDED, virtex4sx=SUPERSEDED, virtex4fx=SUPERSEDED, virtex5lx=SUPERSEDED, virtex5sx=SUPERSEDED, virtex5fx=SUPERSEDED, aspartan3e=SUPERSEDED, aspartan3a=SUPERSEDED, aspartan3adsp=SUPERSEDED, qvirtex4lx=SUPERSEDED, qvirtex4sx=SUPERSEDED, qvirtex4fx=SUPERSEDED, qrvirtex4lx=SUPERSEDED, qrvirtex4sx=SUPERSEDED, qrvirtex4fx=SUPERSEDED, spartan6t=SUPERSEDED, spartan6=SUPERSEDED, spartan6l=SUPERSEDED, qspartan6t=SUPERSEDED, qspartan6=SUPERSEDED, aspartan6t=SUPERSEDED, aspartan6=SUPERSEDED, virtex6lx=SUPERSEDED, virtex6sx=SUPERSEDED, virtex6hx=SUPERSEDED, virtex6cx=SUPERSEDED, virtex6llx=SUPERSEDED, virtex6lsx=SUPERSEDED, qspartan6l=SUPERSEDED, qrvirtex5=SUPERSEDED, qvirtex6lx=SUPERSEDED, qvirtex6sx=SUPERSEDED, qvirtex6fx=SUPERSEDED, qvirtex6tx=SUPERSEDED)
OPTION STYLE = HDL


## Bus Interfaces
BUS_INTERFACE BUS = SPLB, BUS_TYPE = SLAVE, BUS_STD = PLBV46

## Generics for VHDL or Parameters for Verilog
PARAMETER C_CAN_RX_DPTH = 2, DT = INTEGER, RANGE = (2,4,8,16,32,64)
PARAMETER C_CAN_TX_DPTH = 2, DT = INTEGER, RANGE = (2,4,8,16,32,64)
PARAMETER C_CAN_NUM_ACF = 1, DT = INTEGER, RANGE = (0,1,2,3,4)
PARAMETER C_BASEADDR = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_HIGHADDR
PARAMETER C_HIGHADDR = 0x0000ffff, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_BASEADDR
PARAMETER C_SPLB_AWIDTH = 32, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_DWIDTH = 32, DT = INTEGER, BUS = SPLB
PARAMETER C_SIPIF_DWIDTH = 32, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_P2P = 0, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB
PARAMETER C_FAMILY = spartan3, DT = STRING

## Ports
PORT CAN_CLK = "", DIR = I
PORT CAN_PHY_RX = "", DIR = I
PORT CAN_PHY_TX = "", DIR = O
PORT IP2Bus_IntrEvent = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = EDGE_RISING
PORT SPLB_Clk = "", DIR = I, SIGIS = Clk, BUS = SPLB
PORT SPLB_Rst = PLB_Rst, DIR = I, SIGIS = Rst, BUS = SPLB
PORT PLB_ABus = PLB_ABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB
PORT PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB
PORT PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB
PORT PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB
PORT PLB_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB_MID_WIDTH-1)], BUS = SPLB
PORT PLB_abort = PLB_abort, DIR = I, BUS = SPLB
PORT PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB
PORT PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB
PORT PLB_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB_DWIDTH/8)-1)], BUS = SPLB
PORT PLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB
PORT PLB_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB
PORT PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB
PORT PLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB
PORT PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB
PORT PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB
PORT PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB
PORT PLB_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB
PORT Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB
PORT Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB
PORT Sl_wait = Sl_wait, DIR = O, BUS = SPLB
PORT Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB
PORT Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB
PORT Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB
PORT Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB
PORT Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB
PORT Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB
PORT Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB
PORT Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB
PORT Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB

END

FINISH_SINGLE_MPD

START_SINGLE_MPD xps_usb_host_v1_01_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : xps_usb_host
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN xps_usb_host

## Peripheral Options
OPTION STYLE = HDL
OPTION HDL = VHDL
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION RUN_NGCBUILD = TRUE
OPTION PAY_CORE = xps_usb_host@2009.09
OPTION PLATGEN_SYSLEVEL_UPDATE_PROC = generate_corelevel_ucf
OPTION DESC = XPS USB Host
OPTION LONG_DESC = USB Host with PLBV46 Interface.
OPTION IP_GROUP = Communication High-Speed:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=PRODUCTION, spartan3=PRODUCTION, spartan3an=PRODUCTION, spartan3a=PRODUCTION, spartan3e=PRODUCTION, spartan3adsp=PRODUCTION, virtex4lx=PRODUCTION, virtex4sx=PRODUCTION, virtex4fx=PRODUCTION, virtex5lx=PRODUCTION, virtex5sx=PRODUCTION, virtex5fx=PRODUCTION, aspartan3e=PRODUCTION, aspartan3a=PRODUCTION, aspartan3adsp=PRODUCTION, qvirtex4lx=PRODUCTION, qvirtex4sx=PRODUCTION, qvirtex4fx=PRODUCTION, qrvirtex4lx=PRODUCTION, qrvirtex4sx=PRODUCTION, qrvirtex4fx=PRODUCTION, spartan6t=PRE_PRODUCTION, spartan6=PRE_PRODUCTION, spartan6l=PRE_PRODUCTION, qspartan6t=PRODUCTION, qspartan6=PRODUCTION, aspartan6t=PRODUCTION, aspartan6=PRODUCTION, virtex6lx=PRE_PRODUCTION, virtex6sx=PRE_PRODUCTION, virtex6hx=PRE_PRODUCTION, virtex6cx=PRE_PRODUCTION, virtex6llx=PRE_PRODUCTION, virtex6lsx=PRE_PRODUCTION, qspartan6l=PRE_PRODUCTION, qvirtex6lx=PRE_PRODUCTION, qvirtex6sx=PRE_PRODUCTION, qvirtex6fx=PRE_PRODUCTION, qvirtex6tx=PRE_PRODUCTION)


## Bus Interfaces
BUS_INTERFACE BUS = MPLB, BUS_STD = PLBV46, BUS_TYPE = MASTER, GENERATE_BURSTS = TRUE
BUS_INTERFACE BUS = SPLB, BUS_STD = PLBV46, BUS_TYPE = SLAVE

## Generics for VHDL or Parameters for Verilog
PARAMETER C_SUPPORT_USB_FS = 1, DT = INTEGER, RANGE = (0:1)
PARAMETER C_HAS_PWR_CNTL = 1, DT = INTEGER, RANGE = (0:1)
PARAMETER C_USE_PHY_BUS_PWR = 0, DT = INTEGER, RANGE = (0:1)
PARAMETER C_EXT_VBUS_VALID = 1, DT = INTEGER, RANGE = (0:1)
PARAMETER C_EXT_VBUS_VALID_INVERT = 0, DT = INTEGER, RANGE = (0:1)
PARAMETER C_SPLB_BASEADDR = 0xffffffff, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_SPLB_HIGHADDR, MIN_SIZE = 0x200, ASSIGNMENT = REQUIRE
PARAMETER C_SPLB_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_SPLB_BASEADDR, ASSIGNMENT = REQUIRE
PARAMETER C_SPLB_AWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_DWIDTH = 32, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_P2P = 0, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB, TYPE = NON_HDL, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB, TYPE = NON_HDL, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_CLK_PERIOD_PS = 10000, DT = INTEGER, BUS = SPLB
PARAMETER C_MPLB_AWIDTH = 32, DT = INTEGER, BUS = MPLB, ASSIGNMENT = CONSTANT
PARAMETER C_MPLB_DWIDTH = 32, DT = INTEGER, BUS = MPLB
PARAMETER C_MPLB_P2P = 0, DT = INTEGER, BUS = MPLB
PARAMETER C_MPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = MPLB, TYPE = NON_HDL, ASSIGNMENT = CONSTANT
PARAMETER C_FAMILY = virtex5, DT = STRING

## Ports
PORT SPLB_Clk = "", DIR = I, SIGIS = Clk, BUS = SPLB
PORT SPLB_Rst = SPLB_Rst, DIR = I, SIGIS = Rst, BUS = SPLB
PORT MPLB_Clk = "", DIR = I, SIGIS = Clk, BUS = MPLB
PORT MPLB_Rst = MPLB_Rst, DIR = I, SIGIS = Rst, BUS = MPLB
PORT PLB_ABus = PLB_ABus, DIR = I, VEC = [0:(C_SPLB_AWIDTH-1)], BUS = SPLB
PORT PLB_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB_DWIDTH/8)-1)], BUS = SPLB
PORT PLB_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB
PORT PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB
PORT PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB
PORT PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB
PORT PLB_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB_MID_WIDTH-1)], BUS = SPLB
PORT PLB_abort = PLB_abort, DIR = I, BUS = SPLB
PORT PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB
PORT PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB
PORT PLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB
PORT PLB_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB
PORT PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB
PORT PLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB
PORT PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB
PORT PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB
PORT PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB
PORT PLB_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB
PORT Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB
PORT Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB
PORT Sl_wait = Sl_wait, DIR = O, BUS = SPLB
PORT Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB
PORT Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB
PORT Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB
PORT Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB
PORT Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB
PORT Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB
PORT Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB
PORT Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB
PORT Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT M_request = M_request, DIR = O, BUS = MPLB
PORT M_priority = M_priority, DIR = O, VEC = [0:1], BUS = MPLB
PORT M_busLock = M_busLock, DIR = O, BUS = MPLB
PORT M_RNW = M_RNW, DIR = O, BUS = MPLB
PORT M_BE = M_BE, DIR = O, VEC = [0:((C_MPLB_DWIDTH/8)-1)], BUS = MPLB
PORT M_MSize = M_MSize, DIR = O, VEC = [0:1], BUS = MPLB
PORT M_size = M_size, DIR = O, VEC = [0:3], BUS = MPLB
PORT M_type = M_type, DIR = O, VEC = [0:2], BUS = MPLB
PORT M_TAttribute = M_TAttribute, DIR = O, VEC = [0:15], BUS = MPLB
PORT M_lockErr = M_lockErr, DIR = O, BUS = MPLB
PORT M_abort = M_abort, DIR = O, BUS = MPLB
PORT M_UABus = M_UABus, DIR = O, VEC = [0:31], BUS = MPLB
PORT M_ABus = M_ABus, DIR = O, VEC = [0:(C_MPLB_AWIDTH-1)], BUS = MPLB
PORT M_wrDBus = M_wrDBus, DIR = O, VEC = [0:(C_MPLB_DWIDTH-1)], BUS = MPLB
PORT M_wrBurst = M_wrBurst, DIR = O, BUS = MPLB
PORT M_rdBurst = M_rdBurst, DIR = O, BUS = MPLB
PORT PLB_MAddrAck = PLB_MAddrAck, DIR = I, BUS = MPLB
PORT PLB_MSSize = PLB_MSSize, DIR = I, VEC = [0:1], BUS = MPLB
PORT PLB_MRearbitrate = PLB_MRearbitrate, DIR = I, BUS = MPLB
PORT PLB_MTimeout = PLB_MTimeout, DIR = I, BUS = MPLB
PORT PLB_MBusy = PLB_MBusy, DIR = I, BUS = MPLB
PORT PLB_MRdErr = PLB_MRdErr, DIR = I, BUS = MPLB
PORT PLB_MWrErr = PLB_MWrErr, DIR = I, BUS = MPLB
PORT PLB_MIRQ = PLB_MIRQ, DIR = I, BUS = MPLB
PORT PLB_MRdDBus = PLB_MRdDBus, DIR = I, VEC = [0:(C_MPLB_DWIDTH-1)], BUS = MPLB
PORT PLB_MRdWdAddr = PLB_MRdWdAddr, DIR = I, VEC = [0:3], BUS = MPLB
PORT PLB_MRdDAck = PLB_MRdDAck, DIR = I, BUS = MPLB
PORT PLB_MRdBTerm = PLB_MRdBTerm, DIR = I, BUS = MPLB
PORT PLB_MWrDAck = PLB_MWrDAck, DIR = I, BUS = MPLB
PORT PLB_MWrBTerm = PLB_MWrBTerm, DIR = I, BUS = MPLB
PORT USB_PHY_Reset = "", DIR = O
PORT ULPI_Clock = "", DIR = I
PORT ULPI_Dir = "", DIR = I
PORT ULPI_Nxt = "", DIR = I
PORT ULPI_Stp = "", DIR = O
PORT MD_Error = "", DIR = O
PORT Port_Indicators = "", DIR = O, VEC = [1:0], ENDIAN = LITTLE
PORT Host_Intr_Out = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH
PORT ULPI_Data_I = "", DIR = I, VEC = [7:0], ENDIAN = LITTLE
PORT ULPI_Data_O = "", DIR = O, VEC = [7:0], ENDIAN = LITTLE
PORT ULPI_Data_T = "", DIR = O, VEC = [7:0], ENDIAN = LITTLE
PORT ULPI_Data = "", DIR = IO, VEC = [7:0], THREE_STATE = TRUE, TRI_I = ULPI_Data_I, TRI_O = ULPI_Data_O, TRI_T = ULPI_Data_T, ENABLE = MULTI, ENDIAN = LITTLE

END

FINISH_SINGLE_MPD

START_SINGLE_MPD xps_timer_v1_01_b 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : xps_timer
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN xps_timer

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION USAGE_LEVEL = BASE_USER
OPTION DESC = XPS Timer/Counter
OPTION LONG_DESC = Timer counter with PLBV46 interface
OPTION IP_GROUP = DMA and Timer:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=SUPERSEDED, spartan3=SUPERSEDED, spartan3an=SUPERSEDED, spartan3a=SUPERSEDED, spartan3e=SUPERSEDED, spartan3adsp=SUPERSEDED, virtex4lx=SUPERSEDED, virtex4sx=SUPERSEDED, virtex4fx=SUPERSEDED, virtex5lx=SUPERSEDED, virtex5sx=SUPERSEDED, virtex5fx=SUPERSEDED, aspartan3e=SUPERSEDED, aspartan3a=SUPERSEDED, aspartan3adsp=SUPERSEDED, qvirtex4lx=SUPERSEDED, qvirtex4sx=SUPERSEDED, qvirtex4fx=SUPERSEDED, qrvirtex4lx=SUPERSEDED, qrvirtex4sx=SUPERSEDED, qrvirtex4fx=SUPERSEDED, spartan6t=SUPERSEDED, spartan6=SUPERSEDED, spartan6l=SUPERSEDED, qspartan6t=SUPERSEDED, qspartan6=SUPERSEDED, aspartan6t=SUPERSEDED, aspartan6=SUPERSEDED, virtex6lx=SUPERSEDED, virtex6sx=SUPERSEDED, virtex6hx=SUPERSEDED, virtex6cx=SUPERSEDED, virtex6llx=SUPERSEDED, virtex6lsx=SUPERSEDED, qspartan6l=SUPERSEDED, qrvirtex5=SUPERSEDED, qvirtex6lx=SUPERSEDED, qvirtex6sx=SUPERSEDED, qvirtex6fx=SUPERSEDED, qvirtex6tx=SUPERSEDED)
OPTION RUN_NGCBUILD = FALSE
OPTION STYLE = HDL


## Bus Interfaces
BUS_INTERFACE BUS = SPLB, BUS_TYPE = SLAVE, BUS_STD = PLBV46

## Generics for VHDL or Parameters for Verilog
PARAMETER C_FAMILY = virtex5, DT = STRING
PARAMETER C_COUNT_WIDTH = 32, DT = INTEGER, RANGE = (8:32), PERMIT = BASE_USER, DESC = Counter Bit Width
PARAMETER C_ONE_TIMER_ONLY = 0, DT = INTEGER, RANGE = (0,1), PERMIT = BASE_USER, DESC = Timer Mode
PARAMETER C_TRIG0_ASSERT = 1, DT = std_logic, RANGE = (0,1)
PARAMETER C_TRIG1_ASSERT = 1, DT = std_logic, RANGE = (0,1)
PARAMETER C_GEN0_ASSERT = 1, DT = std_logic, RANGE = (0,1)
PARAMETER C_GEN1_ASSERT = 1, DT = std_logic, RANGE = (0,1)
PARAMETER C_BASEADDR = 0xffffffff, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_HIGHADDR, MIN_SIZE = 0x100
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_BASEADDR
PARAMETER C_SPLB_AWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_DWIDTH = 32, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_P2P = 0, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_MID_WIDTH = 3, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_NUM_MASTERS = 8, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT

## Ports
PORT CaptureTrig0 = "", DIR = I, DESC = 'Capture Trig 0'
PORT CaptureTrig1 = "", DIR = I, DESC = 'Capture Trig 1'
PORT GenerateOut0 = "", DIR = O, DESC = 'Generate Out 0'
PORT GenerateOut1 = "", DIR = O, DESC = 'Generate Out 1'
PORT PWM0 = "", DIR = O, DESC = 'Pulse Width Modulation 0'
PORT Interrupt = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = EDGE_RISING, INTERRUPT_PRIORITY = HIGH
PORT Freeze = "", DIR = I
PORT SPLB_Clk = "", DIR = I, SIGIS = Clk, BUS = SPLB
PORT SPLB_Rst = SPLB_Rst, DIR = I, SIGIS = Rst, BUS = SPLB
PORT PLB_ABus = PLB_ABus, DIR = I, VEC = [0:C_SPLB_AWIDTH-1], BUS = SPLB
PORT PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB
PORT PLB_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB_MID_WIDTH-1)], BUS = SPLB
PORT PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB
PORT PLB_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB_DWIDTH/8)-1)], BUS = SPLB
PORT PLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB
PORT PLB_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB
PORT PLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB
PORT Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB
PORT Sl_wait = Sl_wait, DIR = O, BUS = SPLB
PORT Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB
PORT Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB
PORT Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB
PORT Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB
PORT Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB
PORT Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT PLB_UABus = PLB_UABus, DIR = I, VEC = [0:C_SPLB_AWIDTH-1], BUS = SPLB
PORT PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB
PORT PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB
PORT PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB
PORT PLB_abort = PLB_abort, DIR = I, BUS = SPLB
PORT PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB
PORT PLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB
PORT PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB
PORT PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB
PORT PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB
PORT PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB
PORT PLB_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB
PORT Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB
PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB
PORT Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB
PORT Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB

END

FINISH_SINGLE_MPD

START_SINGLE_MPD xps_spi_v2_01_b 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : xps_spi
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN xps_spi

## Peripheral Options
OPTION STYLE = HDL
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION USAGE_LEVEL = BASE_USER
OPTION IPLEVEL_DRC_PROC = check_iplevel_settings
OPTION DESC = XPS SPI Interface
OPTION LONG_DESC = PLBV46 to Motorola Serial Peripheral Interface (SPI) adapter
OPTION IP_GROUP = Communication Low-Speed:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=SUPERSEDED, spartan3=SUPERSEDED, spartan3an=SUPERSEDED, spartan3a=SUPERSEDED, spartan3e=SUPERSEDED, spartan3adsp=SUPERSEDED, virtex4lx=SUPERSEDED, virtex4sx=SUPERSEDED, virtex4fx=SUPERSEDED, virtex5lx=SUPERSEDED, virtex5sx=SUPERSEDED, virtex5fx=SUPERSEDED, aspartan3e=SUPERSEDED, aspartan3a=SUPERSEDED, aspartan3adsp=SUPERSEDED, qvirtex4lx=SUPERSEDED, qvirtex4sx=SUPERSEDED, qvirtex4fx=SUPERSEDED, qrvirtex4lx=SUPERSEDED, qrvirtex4sx=SUPERSEDED, qrvirtex4fx=SUPERSEDED, spartan6t=SUPERSEDED, spartan6=SUPERSEDED, spartan6l=SUPERSEDED, qspartan6t=SUPERSEDED, qspartan6=SUPERSEDED, aspartan6t=SUPERSEDED, aspartan6=SUPERSEDED, virtex6lx=SUPERSEDED, virtex6sx=SUPERSEDED, virtex6hx=SUPERSEDED, virtex6cx=SUPERSEDED, virtex6llx=SUPERSEDED, virtex6lsx=SUPERSEDED, qspartan6l=SUPERSEDED, qrvirtex5=SUPERSEDED, qvirtex6lx=SUPERSEDED, qvirtex6sx=SUPERSEDED, qvirtex6fx=SUPERSEDED, qvirtex6tx=SUPERSEDED)
OPTION RUN_NGCBUILD = FALSE

IO_INTERFACE IO_IF = spi_0, IO_TYPE = XIL_SPI_V1

## Bus Interfaces
BUS_INTERFACE BUS = SPLB, BUS_TYPE = SLAVE, BUS_STD = PLBV46

## Generics for VHDL or Parameters for Verilog
PARAMETER C_BASEADDR = 0xFFFFFFFF, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_HIGHADDR, MIN_SIZE = 0x80, ASSIGNMENT = REQUIRE
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_BASEADDR, ASSIGNMENT = REQUIRE
PARAMETER C_FAMILY = virtex5, DT = STRING
PARAMETER C_SPLB_AWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_DWIDTH = 32, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_P2P = 0, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_FIFO_EXIST = 1, DT = INTEGER, RANGE = (0:1), PERMIT = BASE_USER, DESC = Include Receive and Transmit FIFOs, VALUES = (0= FALSE , 1= TRUE)
PARAMETER C_SCK_RATIO = 32, DT = INTEGER, RANGE = (2,4,16,32,48,64,80,96,112,128,144,160,176,192,208,224,240,256,272,288,304,320,336,352,368,384,400,416,432,448,464,480,496,512,528,544,560,576,592,608,624,640,656,672,688,704,720,736,752,768,784,800,816,832,848,864,880,896,912,928,944,960,976,992,1008,1024,1040,1056,1072,1088,1104,1120,1136,1152,1168,1184,1200,1216,1232,1248,1264,1280,1296,1312,1328,1344,1360,1376,1392,1408,1424,1440,1456,1472,1488,1504,1520,1536,1552,1568,1584,1600,1616,1632,1648,1664,1680,1696,1712,1728,1744,1760,1776,1792,1808,1824,1840,1856,1872,1888,1904,1920,1936,1952,1968,1984,2000,2016,2032,2048), PERMIT = BASE_USER, IO_IF = spi_0, IO_IS = clk_freq
PARAMETER C_NUM_SS_BITS = 1, DT = INTEGER, RANGE = (1:32), PERMIT = BASE_USER, IO_IF = spi_0, IO_IS = ss_bits
PARAMETER C_NUM_TRANSFER_BITS = 8, DT = INTEGER, RANGE = (8,16,32), PERMIT = BASE_USER, IO_IF = spi_0, IO_IS = num_transfer_bits

## Ports
PORT SCK_I = "", DIR = I
PORT SCK_O = "", DIR = O
PORT SCK_T = "", DIR = O
PORT MISO_I = "", DIR = I
PORT MISO_O = "", DIR = O
PORT MISO_T = "", DIR = O
PORT MOSI_I = "", DIR = I
PORT MOSI_O = "", DIR = O
PORT MOSI_T = "", DIR = O
PORT SPISEL = "", DIR = I, INITIALVAL = VCC, PERMIT = BASE_USER, DESC = 'Local SPI Slave Select Active LOW Input', IO_IF = spi_0, IO_IS = slave_select_n
PORT SS_I = "", DIR = I, VEC = [0:(C_NUM_SS_BITS-1)]
PORT SS_O = "", DIR = O, VEC = [0:(C_NUM_SS_BITS-1)]
PORT SS_T = "", DIR = O
PORT SPLB_Clk = "", DIR = I, SIGIS = CLK, BUS = SPLB
PORT SPLB_Rst = SPLB_Rst, DIR = I, SIGIS = RST, BUS = SPLB
PORT PLB_ABus = PLB_ABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB
PORT PLB_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB_MID_WIDTH-1)], BUS = SPLB
PORT PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB
PORT PLB_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB_DWIDTH/8)-1)], BUS = SPLB
PORT PLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB
PORT PLB_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB
PORT PLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB
PORT Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB
PORT Sl_wait = Sl_wait, DIR = O, BUS = SPLB
PORT Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB
PORT Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB
PORT Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB
PORT Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB
PORT Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB
PORT Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT PLB_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB
PORT PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB
PORT PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB
PORT PLB_abort = PLB_abort, DIR = I, BUS = SPLB
PORT PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB
PORT PLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB
PORT PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB
PORT PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB
PORT PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB
PORT PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB
PORT PLB_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB
PORT Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB
PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB
PORT Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB
PORT Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT IP2INTC_Irpt = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, INTERRUPT_PRIORITY = LOW
PORT SCK = "", DIR = IO, THREE_STATE = TRUE, TRI_I = SCK_I, TRI_O = SCK_O, TRI_T = SCK_T, PERMIT = BASE_USER, DESC = 'SPI Bus Clock', IO_IF = spi_0, IO_IS = clk_out
PORT MISO = "", DIR = IO, THREE_STATE = TRUE, TRI_I = MISO_I, TRI_O = MISO_O, TRI_T = MISO_T, PERMIT = BASE_USER, DESC = 'Master In Slave Out', IO_IF = spi_0, IO_IS = data_out
PORT MOSI = "", DIR = IO, THREE_STATE = TRUE, TRI_I = MOSI_I, TRI_O = MOSI_O, TRI_T = MOSI_T, PERMIT = BASE_USER, DESC = 'Master Out Slave In', IO_IF = spi_0, IO_IS = data_in
PORT SS = "", DIR = IO, VEC = [0:(C_NUM_SS_BITS-1)], THREE_STATE = TRUE, TRI_I = SS_I, TRI_O = SS_O, TRI_T = SS_T, PERMIT = BASE_USER, DESC = 'Slave Select Vector', IO_IF = spi_0, IO_IS = chip_select

END

FINISH_SINGLE_MPD

START_SINGLE_MPD xps_insystem_flash_v1_01_b 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : xps_insystem_flash
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN xps_insystem_flash

## Peripheral Options
OPTION STYLE = HDL
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION USAGE_LEVEL = BASE_USER
OPTION RUN_NGCBUILD = TRUE
OPTION IPLEVEL_DRC_PROC = check_iplevel_settings
OPTION PLATGEN_SYSLEVEL_UPDATE_PROC = generate_corelevel_ucf
OPTION ARCH_SUPPORT_MAP = (spartan3an=SUPERSEDED)
OPTION DESC = XPS Insystem Flash Controller
OPTION LONG_DESC = XPS Insystem Flash controller
OPTION IP_GROUP = Memory and Memory Controller:MICROBLAZE

IO_INTERFACE IO_IF = spi_0, IO_TYPE = XIL_SPI_V1_not_supported

## Bus Interfaces
BUS_INTERFACE BUS = SPLB, BUS_TYPE = SLAVE, BUS_STD = PLBV46

## Generics for VHDL or Parameters for Verilog
PARAMETER C_FAMILY = spartan3a, DT = STRING
PARAMETER C_SUBFAMILY = n, DT = STRING, TYPE = NON_HDL
PARAMETER C_BASEADDR = 0xffffffff, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_HIGHADDR, MIN_SIZE = 0x80, ASSIGNMENT = REQUIRE
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_BASEADDR, ASSIGNMENT = REQUIRE
PARAMETER C_SPLB_AWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_DWIDTH = 32, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_P2P = 0, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_FIFO_EXIST = 1, DT = INTEGER, RANGE = (0:1), PERMIT = BASE_USER, DESC = Include Receive and Transmit FIFOs, VALUES = (0= FALSE , 1= TRUE)
PARAMETER C_SCK_RATIO = 32, DT = INTEGER, RANGE = (2,4,16,32,48,64,80,96,112,128,144,160,176,192,208,224,240,256,272,288,304,320,336,352,368,384,400,416,432,448,464,480,496,512,528,544,560,576,592,608,624,640,656,672,688,704,720,736,752,768,784,800,816,832,848,864,880,896,912,928,944,960,976,992,1008,1024,1040,1056,1072,1088,1104,1120,1136,1152,1168,1184,1200,1216,1232,1248,1264,1280,1296,1312,1328,1344,1360,1376,1392,1408,1424,1440,1456,1472,1488,1504,1520,1536,1552,1568,1584,1600,1616,1632,1648,1664,1680,1696,1712,1728,1744,1760,1776,1792,1808,1824,1840,1856,1872,1888,1904,1920,1936,1952,1968,1984,2000,2016,2032,2048), PERMIT = BASE_USER, IO_IF = spi_0, IO_IS = clk_freq
PARAMETER C_NUM_SS_BITS = 1, DT = INTEGER, ASSIGNMENT = CONSTANT, IO_IF = spi_0, IO_IS = ss_bits
PARAMETER C_NUM_TRANSFER_BITS = 8, DT = INTEGER, ASSIGNMENT = CONSTANT, IO_IF = spi_0, IO_IS = num_transfer_bits
PARAMETER C_SIM_DELAY_TYPE = SCALED, DT = STRING
PARAMETER C_DEVICE = 3S700AN, DT = STRING
PARAMETER C_SIM_MEM_FILE = NONE, DT = STRING
PARAMETER C_SIM_FACTORY_ID = 0b
PARAMETER C_SIM_USER_ID = 0b11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111, DT = BIT_VECTOR

## Ports
PORT SPLB_Clk = "", DIR = I, SIGIS = CLK, BUS = SPLB
PORT SPLB_Rst = SPLB_Rst, DIR = I, SIGIS = RST, BUS = SPLB
PORT PLB_ABus = PLB_ABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB
PORT PLB_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB_MID_WIDTH-1)], BUS = SPLB
PORT PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB
PORT PLB_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB_DWIDTH/8)-1)], BUS = SPLB
PORT PLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB
PORT PLB_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB
PORT PLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB
PORT Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB
PORT Sl_wait = Sl_wait, DIR = O, BUS = SPLB
PORT Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB
PORT Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB
PORT Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB
PORT Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB
PORT Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB
PORT Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT PLB_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB
PORT PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB
PORT PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB
PORT PLB_abort = PLB_abort, DIR = I, BUS = SPLB
PORT PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB
PORT PLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB
PORT PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB
PORT PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB
PORT PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB
PORT PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB
PORT PLB_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB
PORT Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB
PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB
PORT Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB
PORT Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT IP2INTC_Irpt = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, INTERRUPT_PRIORITY = LOW

END

FINISH_SINGLE_MPD

START_SINGLE_MPD xps_mutex_v1_00_d 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : xps_mutex
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN xps_mutex

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION STYLE = HDL
OPTION HDL = VHDL
OPTION RUN_NGCBUILD = TRUE
OPTION USAGE_LEVEL = BASE_USER
OPTION PLATGEN_SYSLEVEL_UPDATE_PROC = generate_corelevel_ucf
OPTION DESC = XPS Mutex
OPTION IP_GROUP = Interprocessor Communication:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=PRODUCTION, spartan3=PRODUCTION, spartan3an=PRODUCTION, spartan3a=PRODUCTION, spartan3e=PRODUCTION, spartan3adsp=PRODUCTION, virtex4lx=PRODUCTION, virtex4sx=PRODUCTION, virtex4fx=PRODUCTION, virtex5lx=PRODUCTION, virtex5sx=PRODUCTION, virtex5fx=PRODUCTION, aspartan3e=PRODUCTION, aspartan3a=PRODUCTION, aspartan3adsp=PRODUCTION, qvirtex4lx=PRODUCTION, qvirtex4sx=PRODUCTION, qvirtex4fx=PRODUCTION, qrvirtex4lx=PRODUCTION, qrvirtex4sx=PRODUCTION, qrvirtex4fx=PRODUCTION, spartan6t=PRODUCTION, spartan6=PRODUCTION, spartan6l=PRE_PRODUCTION, qspartan6t=PRODUCTION, qspartan6=PRODUCTION, aspartan6t=PRODUCTION, aspartan6=PRODUCTION, virtex6lx=PRODUCTION, virtex6sx=PRODUCTION, virtex6hx=PRODUCTION, virtex6cx=PRODUCTION, virtex6llx=PRE_PRODUCTION, virtex6lsx=PRE_PRODUCTION, qspartan6l=PRE_PRODUCTION, qrvirtex5=PRE_PRODUCTION, qvirtex6lx=PRE_PRODUCTION, qvirtex6sx=PRE_PRODUCTION, qvirtex6fx=PRE_PRODUCTION, qvirtex6tx=PRE_PRODUCTION)


## Bus Interfaces
BUS_INTERFACE BUS = SPLB0, BUS_TYPE = SLAVE, BUS_STD = PLBV46, ISVALID = (C_NUM_PLB >=1)
BUS_INTERFACE BUS = SPLB1, BUS_TYPE = SLAVE, BUS_STD = PLBV46, ISVALID = (C_NUM_PLB >=2)
BUS_INTERFACE BUS = SPLB2, BUS_TYPE = SLAVE, BUS_STD = PLBV46, ISVALID = (C_NUM_PLB >=3)
BUS_INTERFACE BUS = SPLB3, BUS_TYPE = SLAVE, BUS_STD = PLBV46, ISVALID = (C_NUM_PLB >=4)
BUS_INTERFACE BUS = SPLB4, BUS_TYPE = SLAVE, BUS_STD = PLBV46, ISVALID = (C_NUM_PLB >=5)
BUS_INTERFACE BUS = SPLB5, BUS_TYPE = SLAVE, BUS_STD = PLBV46, ISVALID = (C_NUM_PLB >=6)
BUS_INTERFACE BUS = SPLB6, BUS_TYPE = SLAVE, BUS_STD = PLBV46, ISVALID = (C_NUM_PLB >=7)
BUS_INTERFACE BUS = SPLB7, BUS_TYPE = SLAVE, BUS_STD = PLBV46, ISVALID = (C_NUM_PLB >=8)

## Generics for VHDL or Parameters for Verilog
PARAMETER C_FAMILY = virtex4, DT = string
PARAMETER C_SPLB0_BASEADDR = 0xFFFFFFFF, DT = std_logic_vector, BUS = SPLB0, ADDRESS = BASE, PAIR = C_SPLB0_HIGHADDR, MIN_SIZE = 0x100, ISVALID = (C_NUM_PLB >=1)
PARAMETER C_SPLB0_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = SPLB0, ADDRESS = HIGH, PAIR = C_SPLB0_BASEADDR, ISVALID = (C_NUM_PLB >=1)
PARAMETER C_SPLB0_AWIDTH = 32, DT = INTEGER, BUS = SPLB0, ISVALID = (C_NUM_PLB >=1)
PARAMETER C_SPLB0_DWIDTH = 32, DT = INTEGER, BUS = SPLB0, ISVALID = (C_NUM_PLB >=1)
PARAMETER C_SPLB0_P2P = 0, DT = INTEGER, BUS = SPLB0, ISVALID = (C_NUM_PLB >=1)
PARAMETER C_SPLB0_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB0, ISVALID = (C_NUM_PLB >=1)
PARAMETER C_SPLB0_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB0, ISVALID = (C_NUM_PLB >=1)
PARAMETER C_SPLB0_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB0, ISVALID = (C_NUM_PLB >=1)
PARAMETER C_SPLB0_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB0, RANGE = (32:32), ASSIGNMENT = CONSTANT, ISVALID = (C_NUM_PLB >=1)
PARAMETER C_SPLB0_CLK_FREQ_HZ = 100000000, DT = INTEGER, BUS = SPLB0, ISVALID = (C_NUM_PLB >=1), IO_IS = clk_freq, CLK_PORT = SPLB0_Clk, CLK_UNIT = HZ, TYPE = NON_HDL
PARAMETER C_SPLB1_BASEADDR = 0xFFFFFFFF, DT = std_logic_vector, BUS = SPLB1, ADDRESS = BASE, PAIR = C_SPLB1_HIGHADDR, MIN_SIZE = 0x100, ISVALID = (C_NUM_PLB >=2)
PARAMETER C_SPLB1_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = SPLB1, ADDRESS = HIGH, PAIR = C_SPLB1_BASEADDR, ISVALID = (C_NUM_PLB >=2)
PARAMETER C_SPLB1_AWIDTH = 32, DT = INTEGER, BUS = SPLB1, ISVALID = (C_NUM_PLB >=2)
PARAMETER C_SPLB1_DWIDTH = 32, DT = INTEGER, BUS = SPLB1, ISVALID = (C_NUM_PLB >=2)
PARAMETER C_SPLB1_P2P = 0, DT = INTEGER, BUS = SPLB1, ISVALID = (C_NUM_PLB >=2)
PARAMETER C_SPLB1_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB1, ISVALID = (C_NUM_PLB >=2)
PARAMETER C_SPLB1_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB1, ISVALID = (C_NUM_PLB >=2)
PARAMETER C_SPLB1_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB1, ISVALID = (C_NUM_PLB >=2)
PARAMETER C_SPLB1_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB1, RANGE = (32:32), ASSIGNMENT = CONSTANT, ISVALID = (C_NUM_PLB >=2)
PARAMETER C_SPLB1_CLK_FREQ_HZ = 100000000, DT = INTEGER, BUS = SPLB1, ISVALID = (C_NUM_PLB >=2), IO_IS = clk_freq, CLK_PORT = SPLB1_Clk, CLK_UNIT = HZ, TYPE = NON_HDL
PARAMETER C_SPLB2_BASEADDR = 0xFFFFFFFF, DT = std_logic_vector, BUS = SPLB2, ADDRESS = BASE, PAIR = C_SPLB2_HIGHADDR, MIN_SIZE = 0x100, ISVALID = (C_NUM_PLB >=3)
PARAMETER C_SPLB2_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = SPLB2, ADDRESS = HIGH, PAIR = C_SPLB2_BASEADDR, ISVALID = (C_NUM_PLB >=3)
PARAMETER C_SPLB2_AWIDTH = 32, DT = INTEGER, BUS = SPLB2, ISVALID = (C_NUM_PLB >=3)
PARAMETER C_SPLB2_DWIDTH = 32, DT = INTEGER, BUS = SPLB2, ISVALID = (C_NUM_PLB >=3)
PARAMETER C_SPLB2_P2P = 0, DT = INTEGER, BUS = SPLB2, ISVALID = (C_NUM_PLB >=3)
PARAMETER C_SPLB2_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB2, ISVALID = (C_NUM_PLB >=3)
PARAMETER C_SPLB2_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB2, ISVALID = (C_NUM_PLB >=3)
PARAMETER C_SPLB2_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB2, ISVALID = (C_NUM_PLB >=3)
PARAMETER C_SPLB2_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB2, RANGE = (32:32), ASSIGNMENT = CONSTANT, ISVALID = (C_NUM_PLB >=3)
PARAMETER C_SPLB2_CLK_FREQ_HZ = 100000000, DT = INTEGER, BUS = SPLB2, ISVALID = (C_NUM_PLB >=3), IO_IS = clk_freq, CLK_PORT = SPLB2_Clk, CLK_UNIT = HZ, TYPE = NON_HDL
PARAMETER C_SPLB3_BASEADDR = 0xFFFFFFFF, DT = std_logic_vector, BUS = SPLB3, ADDRESS = BASE, PAIR = C_SPLB3_HIGHADDR, MIN_SIZE = 0x100, ISVALID = (C_NUM_PLB >=4)
PARAMETER C_SPLB3_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = SPLB3, ADDRESS = HIGH, PAIR = C_SPLB3_BASEADDR, ISVALID = (C_NUM_PLB >=4)
PARAMETER C_SPLB3_AWIDTH = 32, DT = INTEGER, BUS = SPLB3, ISVALID = (C_NUM_PLB >=4)
PARAMETER C_SPLB3_DWIDTH = 32, DT = INTEGER, BUS = SPLB3, ISVALID = (C_NUM_PLB >=4)
PARAMETER C_SPLB3_P2P = 0, DT = INTEGER, BUS = SPLB3, ISVALID = (C_NUM_PLB >=4)
PARAMETER C_SPLB3_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB3, ISVALID = (C_NUM_PLB >=4)
PARAMETER C_SPLB3_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB3, ISVALID = (C_NUM_PLB >=4)
PARAMETER C_SPLB3_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB3, ISVALID = (C_NUM_PLB >=4)
PARAMETER C_SPLB3_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB3, RANGE = (32:32), ASSIGNMENT = CONSTANT, ISVALID = (C_NUM_PLB >=4)
PARAMETER C_SPLB3_CLK_FREQ_HZ = 100000000, DT = INTEGER, BUS = SPLB3, ISVALID = (C_NUM_PLB >=4), IO_IS = clk_freq, CLK_PORT = SPLB3_Clk, CLK_UNIT = HZ, TYPE = NON_HDL
PARAMETER C_SPLB4_BASEADDR = 0xFFFFFFFF, DT = std_logic_vector, BUS = SPLB4, ADDRESS = BASE, PAIR = C_SPLB4_HIGHADDR, MIN_SIZE = 0x100, ISVALID = (C_NUM_PLB >=5)
PARAMETER C_SPLB4_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = SPLB4, ADDRESS = HIGH, PAIR = C_SPLB4_BASEADDR, ISVALID = (C_NUM_PLB >=5)
PARAMETER C_SPLB4_AWIDTH = 32, DT = INTEGER, BUS = SPLB4, ISVALID = (C_NUM_PLB >=5)
PARAMETER C_SPLB4_DWIDTH = 32, DT = INTEGER, BUS = SPLB4, ISVALID = (C_NUM_PLB >=5)
PARAMETER C_SPLB4_P2P = 0, DT = INTEGER, BUS = SPLB4, ISVALID = (C_NUM_PLB >=5)
PARAMETER C_SPLB4_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB4, ISVALID = (C_NUM_PLB >=5)
PARAMETER C_SPLB4_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB4, ISVALID = (C_NUM_PLB >=5)
PARAMETER C_SPLB4_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB4, ISVALID = (C_NUM_PLB >=5)
PARAMETER C_SPLB4_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB4, RANGE = (32:32), ASSIGNMENT = CONSTANT, ISVALID = (C_NUM_PLB >=5)
PARAMETER C_SPLB4_CLK_FREQ_HZ = 100000000, DT = INTEGER, BUS = SPLB4, ISVALID = (C_NUM_PLB >=5), IO_IS = clk_freq, CLK_PORT = SPLB4_Clk, CLK_UNIT = HZ, TYPE = NON_HDL
PARAMETER C_SPLB5_BASEADDR = 0xFFFFFFFF, DT = std_logic_vector, BUS = SPLB5, ADDRESS = BASE, PAIR = C_SPLB5_HIGHADDR, MIN_SIZE = 0x100, ISVALID = (C_NUM_PLB >=6)
PARAMETER C_SPLB5_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = SPLB5, ADDRESS = HIGH, PAIR = C_SPLB5_BASEADDR, ISVALID = (C_NUM_PLB >=6)
PARAMETER C_SPLB5_AWIDTH = 32, DT = INTEGER, BUS = SPLB5, ISVALID = (C_NUM_PLB >=6)
PARAMETER C_SPLB5_DWIDTH = 32, DT = INTEGER, BUS = SPLB5, ISVALID = (C_NUM_PLB >=6)
PARAMETER C_SPLB5_P2P = 0, DT = INTEGER, BUS = SPLB5, ISVALID = (C_NUM_PLB >=6)
PARAMETER C_SPLB5_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB5, ISVALID = (C_NUM_PLB >=6)
PARAMETER C_SPLB5_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB5, ISVALID = (C_NUM_PLB >=6)
PARAMETER C_SPLB5_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB5, ISVALID = (C_NUM_PLB >=6)
PARAMETER C_SPLB5_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB5, RANGE = (32:32), ASSIGNMENT = CONSTANT, ISVALID = (C_NUM_PLB >=6)
PARAMETER C_SPLB5_CLK_FREQ_HZ = 100000000, DT = INTEGER, BUS = SPLB5, ISVALID = (C_NUM_PLB >=6), IO_IS = clk_freq, CLK_PORT = SPLB5_Clk, CLK_UNIT = HZ, TYPE = NON_HDL
PARAMETER C_SPLB6_BASEADDR = 0xFFFFFFFF, DT = std_logic_vector, BUS = SPLB6, ADDRESS = BASE, PAIR = C_SPLB6_HIGHADDR, MIN_SIZE = 0x100, ISVALID = (C_NUM_PLB >=7)
PARAMETER C_SPLB6_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = SPLB6, ADDRESS = HIGH, PAIR = C_SPLB6_BASEADDR, ISVALID = (C_NUM_PLB >=7)
PARAMETER C_SPLB6_AWIDTH = 32, DT = INTEGER, BUS = SPLB6, ISVALID = (C_NUM_PLB >=7)
PARAMETER C_SPLB6_DWIDTH = 32, DT = INTEGER, BUS = SPLB6, ISVALID = (C_NUM_PLB >=7)
PARAMETER C_SPLB6_P2P = 0, DT = INTEGER, BUS = SPLB6, ISVALID = (C_NUM_PLB >=7)
PARAMETER C_SPLB6_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB6, ISVALID = (C_NUM_PLB >=7)
PARAMETER C_SPLB6_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB6, ISVALID = (C_NUM_PLB >=7)
PARAMETER C_SPLB6_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB6, ISVALID = (C_NUM_PLB >=7)
PARAMETER C_SPLB6_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB6, RANGE = (32:32), ASSIGNMENT = CONSTANT, ISVALID = (C_NUM_PLB >=7)
PARAMETER C_SPLB6_CLK_FREQ_HZ = 100000000, DT = INTEGER, BUS = SPLB6, ISVALID = (C_NUM_PLB >=7), IO_IS = clk_freq, CLK_PORT = SPLB6_Clk, CLK_UNIT = HZ, TYPE = NON_HDL
PARAMETER C_SPLB7_BASEADDR = 0xFFFFFFFF, DT = std_logic_vector, BUS = SPLB7, ADDRESS = BASE, PAIR = C_SPLB7_HIGHADDR, MIN_SIZE = 0x100, ISVALID = (C_NUM_PLB >=8)
PARAMETER C_SPLB7_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = SPLB7, ADDRESS = HIGH, PAIR = C_SPLB7_BASEADDR, ISVALID = (C_NUM_PLB >=8)
PARAMETER C_SPLB7_AWIDTH = 32, DT = INTEGER, BUS = SPLB7, ISVALID = (C_NUM_PLB >=8)
PARAMETER C_SPLB7_DWIDTH = 32, DT = INTEGER, BUS = SPLB7, ISVALID = (C_NUM_PLB >=8)
PARAMETER C_SPLB7_P2P = 0, DT = INTEGER, BUS = SPLB7, ISVALID = (C_NUM_PLB >=8)
PARAMETER C_SPLB7_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB7, ISVALID = (C_NUM_PLB >=8)
PARAMETER C_SPLB7_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB7, ISVALID = (C_NUM_PLB >=8)
PARAMETER C_SPLB7_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB7, ISVALID = (C_NUM_PLB >=8)
PARAMETER C_SPLB7_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB7, RANGE = (32:32), ASSIGNMENT = CONSTANT, ISVALID = (C_NUM_PLB >=8)
PARAMETER C_SPLB7_CLK_FREQ_HZ = 100000000, DT = INTEGER, BUS = SPLB7, ISVALID = (C_NUM_PLB >=8), IO_IS = clk_freq, CLK_PORT = SPLB7_Clk, CLK_UNIT = HZ, TYPE = NON_HDL
PARAMETER C_ASYNC_CLKS = 0, DT = INTEGER, RANGE = (0:1)
PARAMETER C_NUM_PLB = 2, DT = INTEGER, RANGE = (1:8)
PARAMETER C_ENABLE_USER = 0, DT = INTEGER, RANGE = (0:1)
PARAMETER C_OWNER_ID_WIDTH = 8, DT = INTEGER, RANGE = (8:8), ASSIGNMENT = CONSTANT
PARAMETER C_ENABLE_HW_PROT = 0, DT = INTEGER, RANGE = (0:1)
PARAMETER C_NUM_MUTEX = 16, DT = INTEGER, RANGE = (1:32)

## Ports
PORT SPLB0_Clk = "", DIR = I, SIGIS = CLK, BUS = SPLB0
PORT SPLB0_Rst = PLB_Rst, DIR = I, SIGIS = RST, BUS = SPLB0
PORT PLB0_ABus = PLB_ABus, DIR = I, VEC = [0:31], BUS = SPLB0
PORT PLB0_PAValid = PLB_PAValid, DIR = I, BUS = SPLB0
PORT PLB0_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB0_MID_WIDTH-1)], BUS = SPLB0
PORT PLB0_RNW = PLB_RNW, DIR = I, BUS = SPLB0
PORT PLB0_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB0_DWIDTH/8)-1)], BUS = SPLB0
PORT PLB0_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB0
PORT PLB0_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB0
PORT PLB0_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB0_DWIDTH-1)], BUS = SPLB0
PORT Sl0_addrAck = Sl_addrAck, DIR = O, BUS = SPLB0
PORT Sl0_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB0
PORT Sl0_wait = Sl_wait, DIR = O, BUS = SPLB0
PORT Sl0_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB0
PORT Sl0_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB0
PORT Sl0_wrComp = Sl_wrComp, DIR = O, BUS = SPLB0
PORT Sl0_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB0_DWIDTH-1)], BUS = SPLB0
PORT Sl0_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB0
PORT Sl0_rdComp = Sl_rdComp, DIR = O, BUS = SPLB0
PORT Sl0_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB0_NUM_MASTERS-1)], BUS = SPLB0
PORT Sl0_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB0_NUM_MASTERS-1)], BUS = SPLB0
PORT Sl0_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB0_NUM_MASTERS-1)], BUS = SPLB0
PORT PLB0_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB0
PORT PLB0_SAValid = PLB_SAValid, DIR = I, BUS = SPLB0
PORT PLB0_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB0
PORT PLB0_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB0
PORT PLB0_abort = PLB_abort, DIR = I, BUS = SPLB0
PORT PLB0_busLock = PLB_busLock, DIR = I, BUS = SPLB0
PORT PLB0_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB0
PORT PLB0_lockErr = PLB_lockErr, DIR = I, BUS = SPLB0
PORT PLB0_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB0
PORT PLB0_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB0
PORT PLB0_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB0
PORT PLB0_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB0
PORT PLB0_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB0
PORT PLB0_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB0
PORT PLB0_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB0
PORT PLB0_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB0
PORT Sl0_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB0
PORT Sl0_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB0
PORT Sl0_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB0
PORT Sl0_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB0_NUM_MASTERS-1)], BUS = SPLB0
PORT SPLB1_Clk = "", DIR = I, SIGIS = CLK, BUS = SPLB1
PORT SPLB1_Rst = PLB_Rst, DIR = I, SIGIS = RST, BUS = SPLB1
PORT PLB1_ABus = PLB_ABus, DIR = I, VEC = [0:31], BUS = SPLB1
PORT PLB1_PAValid = PLB_PAValid, DIR = I, BUS = SPLB1
PORT PLB1_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB1_MID_WIDTH-1)], BUS = SPLB1
PORT PLB1_RNW = PLB_RNW, DIR = I, BUS = SPLB1
PORT PLB1_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB1_DWIDTH/8)-1)], BUS = SPLB1
PORT PLB1_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB1
PORT PLB1_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB1
PORT PLB1_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB1_DWIDTH-1)], BUS = SPLB1
PORT Sl1_addrAck = Sl_addrAck, DIR = O, BUS = SPLB1
PORT Sl1_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB1
PORT Sl1_wait = Sl_wait, DIR = O, BUS = SPLB1
PORT Sl1_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB1
PORT Sl1_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB1
PORT Sl1_wrComp = Sl_wrComp, DIR = O, BUS = SPLB1
PORT Sl1_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB1_DWIDTH-1)], BUS = SPLB1
PORT Sl1_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB1
PORT Sl1_rdComp = Sl_rdComp, DIR = O, BUS = SPLB1
PORT Sl1_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB1_NUM_MASTERS-1)], BUS = SPLB1
PORT Sl1_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB1_NUM_MASTERS-1)], BUS = SPLB1
PORT Sl1_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB1_NUM_MASTERS-1)], BUS = SPLB1
PORT PLB1_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB1
PORT PLB1_SAValid = PLB_SAValid, DIR = I, BUS = SPLB1
PORT PLB1_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB1
PORT PLB1_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB1
PORT PLB1_abort = PLB_abort, DIR = I, BUS = SPLB1
PORT PLB1_busLock = PLB_busLock, DIR = I, BUS = SPLB1
PORT PLB1_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB1
PORT PLB1_lockErr = PLB_lockErr, DIR = I, BUS = SPLB1
PORT PLB1_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB1
PORT PLB1_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB1
PORT PLB1_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB1
PORT PLB1_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB1
PORT PLB1_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB1
PORT PLB1_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB1
PORT PLB1_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB1
PORT PLB1_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB1
PORT Sl1_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB1
PORT Sl1_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB1
PORT Sl1_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB1
PORT Sl1_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB1_NUM_MASTERS-1)], BUS = SPLB1
PORT SPLB2_Clk = "", DIR = I, SIGIS = CLK, BUS = SPLB2
PORT SPLB2_Rst = PLB_Rst, DIR = I, SIGIS = RST, BUS = SPLB2
PORT PLB2_ABus = PLB_ABus, DIR = I, VEC = [0:31], BUS = SPLB2
PORT PLB2_PAValid = PLB_PAValid, DIR = I, BUS = SPLB2
PORT PLB2_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB2_MID_WIDTH-1)], BUS = SPLB2
PORT PLB2_RNW = PLB_RNW, DIR = I, BUS = SPLB2
PORT PLB2_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB2_DWIDTH/8)-1)], BUS = SPLB2
PORT PLB2_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB2
PORT PLB2_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB2
PORT PLB2_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB2_DWIDTH-1)], BUS = SPLB2
PORT Sl2_addrAck = Sl_addrAck, DIR = O, BUS = SPLB2
PORT Sl2_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB2
PORT Sl2_wait = Sl_wait, DIR = O, BUS = SPLB2
PORT Sl2_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB2
PORT Sl2_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB2
PORT Sl2_wrComp = Sl_wrComp, DIR = O, BUS = SPLB2
PORT Sl2_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB2_DWIDTH-1)], BUS = SPLB2
PORT Sl2_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB2
PORT Sl2_rdComp = Sl_rdComp, DIR = O, BUS = SPLB2
PORT Sl2_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB2_NUM_MASTERS-1)], BUS = SPLB2
PORT Sl2_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB2_NUM_MASTERS-1)], BUS = SPLB2
PORT Sl2_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB2_NUM_MASTERS-1)], BUS = SPLB2
PORT PLB2_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB2
PORT PLB2_SAValid = PLB_SAValid, DIR = I, BUS = SPLB2
PORT PLB2_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB2
PORT PLB2_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB2
PORT PLB2_abort = PLB_abort, DIR = I, BUS = SPLB2
PORT PLB2_busLock = PLB_busLock, DIR = I, BUS = SPLB2
PORT PLB2_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB2
PORT PLB2_lockErr = PLB_lockErr, DIR = I, BUS = SPLB2
PORT PLB2_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB2
PORT PLB2_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB2
PORT PLB2_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB2
PORT PLB2_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB2
PORT PLB2_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB2
PORT PLB2_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB2
PORT PLB2_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB2
PORT PLB2_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB2
PORT Sl2_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB2
PORT Sl2_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB2
PORT Sl2_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB2
PORT Sl2_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB2_NUM_MASTERS-1)], BUS = SPLB2
PORT SPLB3_Clk = "", DIR = I, SIGIS = CLK, BUS = SPLB3
PORT SPLB3_Rst = PLB_Rst, DIR = I, SIGIS = RST, BUS = SPLB3
PORT PLB3_ABus = PLB_ABus, DIR = I, VEC = [0:31], BUS = SPLB3
PORT PLB3_PAValid = PLB_PAValid, DIR = I, BUS = SPLB3
PORT PLB3_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB3_MID_WIDTH-1)], BUS = SPLB3
PORT PLB3_RNW = PLB_RNW, DIR = I, BUS = SPLB3
PORT PLB3_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB3_DWIDTH/8)-1)], BUS = SPLB3
PORT PLB3_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB3
PORT PLB3_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB3
PORT PLB3_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB3_DWIDTH-1)], BUS = SPLB3
PORT Sl3_addrAck = Sl_addrAck, DIR = O, BUS = SPLB3
PORT Sl3_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB3
PORT Sl3_wait = Sl_wait, DIR = O, BUS = SPLB3
PORT Sl3_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB3
PORT Sl3_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB3
PORT Sl3_wrComp = Sl_wrComp, DIR = O, BUS = SPLB3
PORT Sl3_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB3_DWIDTH-1)], BUS = SPLB3
PORT Sl3_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB3
PORT Sl3_rdComp = Sl_rdComp, DIR = O, BUS = SPLB3
PORT Sl3_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB3_NUM_MASTERS-1)], BUS = SPLB3
PORT Sl3_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB3_NUM_MASTERS-1)], BUS = SPLB3
PORT Sl3_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB3_NUM_MASTERS-1)], BUS = SPLB3
PORT PLB3_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB3
PORT PLB3_SAValid = PLB_SAValid, DIR = I, BUS = SPLB3
PORT PLB3_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB3
PORT PLB3_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB3
PORT PLB3_abort = PLB_abort, DIR = I, BUS = SPLB3
PORT PLB3_busLock = PLB_busLock, DIR = I, BUS = SPLB3
PORT PLB3_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB3
PORT PLB3_lockErr = PLB_lockErr, DIR = I, BUS = SPLB3
PORT PLB3_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB3
PORT PLB3_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB3
PORT PLB3_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB3
PORT PLB3_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB3
PORT PLB3_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB3
PORT PLB3_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB3
PORT PLB3_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB3
PORT PLB3_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB3
PORT Sl3_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB3
PORT Sl3_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB3
PORT Sl3_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB3
PORT Sl3_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB3_NUM_MASTERS-1)], BUS = SPLB3
PORT SPLB4_Clk = "", DIR = I, SIGIS = CLK, BUS = SPLB4
PORT SPLB4_Rst = PLB_Rst, DIR = I, SIGIS = RST, BUS = SPLB4
PORT PLB4_ABus = PLB_ABus, DIR = I, VEC = [0:31], BUS = SPLB4
PORT PLB4_PAValid = PLB_PAValid, DIR = I, BUS = SPLB4
PORT PLB4_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB4_MID_WIDTH-1)], BUS = SPLB4
PORT PLB4_RNW = PLB_RNW, DIR = I, BUS = SPLB4
PORT PLB4_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB4_DWIDTH/8)-1)], BUS = SPLB4
PORT PLB4_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB4
PORT PLB4_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB4
PORT PLB4_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB4_DWIDTH-1)], BUS = SPLB4
PORT Sl4_addrAck = Sl_addrAck, DIR = O, BUS = SPLB4
PORT Sl4_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB4
PORT Sl4_wait = Sl_wait, DIR = O, BUS = SPLB4
PORT Sl4_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB4
PORT Sl4_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB4
PORT Sl4_wrComp = Sl_wrComp, DIR = O, BUS = SPLB4
PORT Sl4_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB4_DWIDTH-1)], BUS = SPLB4
PORT Sl4_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB4
PORT Sl4_rdComp = Sl_rdComp, DIR = O, BUS = SPLB4
PORT Sl4_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB4_NUM_MASTERS-1)], BUS = SPLB4
PORT Sl4_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB4_NUM_MASTERS-1)], BUS = SPLB4
PORT Sl4_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB4_NUM_MASTERS-1)], BUS = SPLB4
PORT PLB4_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB4
PORT PLB4_SAValid = PLB_SAValid, DIR = I, BUS = SPLB4
PORT PLB4_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB4
PORT PLB4_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB4
PORT PLB4_abort = PLB_abort, DIR = I, BUS = SPLB4
PORT PLB4_busLock = PLB_busLock, DIR = I, BUS = SPLB4
PORT PLB4_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB4
PORT PLB4_lockErr = PLB_lockErr, DIR = I, BUS = SPLB4
PORT PLB4_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB4
PORT PLB4_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB4
PORT PLB4_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB4
PORT PLB4_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB4
PORT PLB4_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB4
PORT PLB4_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB4
PORT PLB4_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB4
PORT PLB4_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB4
PORT Sl4_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB4
PORT Sl4_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB4
PORT Sl4_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB4
PORT Sl4_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB4_NUM_MASTERS-1)], BUS = SPLB4
PORT SPLB5_Clk = "", DIR = I, SIGIS = CLK, BUS = SPLB5
PORT SPLB5_Rst = PLB_Rst, DIR = I, SIGIS = RST, BUS = SPLB5
PORT PLB5_ABus = PLB_ABus, DIR = I, VEC = [0:31], BUS = SPLB5
PORT PLB5_PAValid = PLB_PAValid, DIR = I, BUS = SPLB5
PORT PLB5_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB5_MID_WIDTH-1)], BUS = SPLB5
PORT PLB5_RNW = PLB_RNW, DIR = I, BUS = SPLB5
PORT PLB5_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB5_DWIDTH/8)-1)], BUS = SPLB5
PORT PLB5_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB5
PORT PLB5_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB5
PORT PLB5_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB5_DWIDTH-1)], BUS = SPLB5
PORT Sl5_addrAck = Sl_addrAck, DIR = O, BUS = SPLB5
PORT Sl5_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB5
PORT Sl5_wait = Sl_wait, DIR = O, BUS = SPLB5
PORT Sl5_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB5
PORT Sl5_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB5
PORT Sl5_wrComp = Sl_wrComp, DIR = O, BUS = SPLB5
PORT Sl5_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB5_DWIDTH-1)], BUS = SPLB5
PORT Sl5_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB5
PORT Sl5_rdComp = Sl_rdComp, DIR = O, BUS = SPLB5
PORT Sl5_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB5_NUM_MASTERS-1)], BUS = SPLB5
PORT Sl5_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB5_NUM_MASTERS-1)], BUS = SPLB5
PORT Sl5_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB5_NUM_MASTERS-1)], BUS = SPLB5
PORT PLB5_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB5
PORT PLB5_SAValid = PLB_SAValid, DIR = I, BUS = SPLB5
PORT PLB5_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB5
PORT PLB5_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB5
PORT PLB5_abort = PLB_abort, DIR = I, BUS = SPLB5
PORT PLB5_busLock = PLB_busLock, DIR = I, BUS = SPLB5
PORT PLB5_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB5
PORT PLB5_lockErr = PLB_lockErr, DIR = I, BUS = SPLB5
PORT PLB5_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB5
PORT PLB5_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB5
PORT PLB5_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB5
PORT PLB5_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB5
PORT PLB5_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB5
PORT PLB5_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB5
PORT PLB5_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB5
PORT PLB5_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB5
PORT Sl5_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB5
PORT Sl5_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB5
PORT Sl5_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB5
PORT Sl5_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB5_NUM_MASTERS-1)], BUS = SPLB5
PORT SPLB6_Clk = "", DIR = I, SIGIS = CLK, BUS = SPLB6
PORT SPLB6_Rst = PLB_Rst, DIR = I, SIGIS = RST, BUS = SPLB6
PORT PLB6_ABus = PLB_ABus, DIR = I, VEC = [0:31], BUS = SPLB6
PORT PLB6_PAValid = PLB_PAValid, DIR = I, BUS = SPLB6
PORT PLB6_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB6_MID_WIDTH-1)], BUS = SPLB6
PORT PLB6_RNW = PLB_RNW, DIR = I, BUS = SPLB6
PORT PLB6_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB6_DWIDTH/8)-1)], BUS = SPLB6
PORT PLB6_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB6
PORT PLB6_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB6
PORT PLB6_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB6_DWIDTH-1)], BUS = SPLB6
PORT Sl6_addrAck = Sl_addrAck, DIR = O, BUS = SPLB6
PORT Sl6_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB6
PORT Sl6_wait = Sl_wait, DIR = O, BUS = SPLB6
PORT Sl6_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB6
PORT Sl6_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB6
PORT Sl6_wrComp = Sl_wrComp, DIR = O, BUS = SPLB6
PORT Sl6_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB6_DWIDTH-1)], BUS = SPLB6
PORT Sl6_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB6
PORT Sl6_rdComp = Sl_rdComp, DIR = O, BUS = SPLB6
PORT Sl6_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB6_NUM_MASTERS-1)], BUS = SPLB6
PORT Sl6_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB6_NUM_MASTERS-1)], BUS = SPLB6
PORT Sl6_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB6_NUM_MASTERS-1)], BUS = SPLB6
PORT PLB6_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB6
PORT PLB6_SAValid = PLB_SAValid, DIR = I, BUS = SPLB6
PORT PLB6_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB6
PORT PLB6_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB6
PORT PLB6_abort = PLB_abort, DIR = I, BUS = SPLB6
PORT PLB6_busLock = PLB_busLock, DIR = I, BUS = SPLB6
PORT PLB6_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB6
PORT PLB6_lockErr = PLB_lockErr, DIR = I, BUS = SPLB6
PORT PLB6_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB6
PORT PLB6_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB6
PORT PLB6_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB6
PORT PLB6_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB6
PORT PLB6_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB6
PORT PLB6_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB6
PORT PLB6_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB6
PORT PLB6_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB6
PORT Sl6_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB6
PORT Sl6_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB6
PORT Sl6_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB6
PORT Sl6_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB6_NUM_MASTERS-1)], BUS = SPLB6
PORT SPLB7_Clk = "", DIR = I, SIGIS = CLK, BUS = SPLB7
PORT SPLB7_Rst = PLB_Rst, DIR = I, SIGIS = RST, BUS = SPLB7
PORT PLB7_ABus = PLB_ABus, DIR = I, VEC = [0:31], BUS = SPLB7
PORT PLB7_PAValid = PLB_PAValid, DIR = I, BUS = SPLB7
PORT PLB7_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB7_MID_WIDTH-1)], BUS = SPLB7
PORT PLB7_RNW = PLB_RNW, DIR = I, BUS = SPLB7
PORT PLB7_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB7_DWIDTH/8)-1)], BUS = SPLB7
PORT PLB7_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB7
PORT PLB7_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB7
PORT PLB7_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB7_DWIDTH-1)], BUS = SPLB7
PORT Sl7_addrAck = Sl_addrAck, DIR = O, BUS = SPLB7
PORT Sl7_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB7
PORT Sl7_wait = Sl_wait, DIR = O, BUS = SPLB7
PORT Sl7_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB7
PORT Sl7_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB7
PORT Sl7_wrComp = Sl_wrComp, DIR = O, BUS = SPLB7
PORT Sl7_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB7_DWIDTH-1)], BUS = SPLB7
PORT Sl7_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB7
PORT Sl7_rdComp = Sl_rdComp, DIR = O, BUS = SPLB7
PORT Sl7_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB7_NUM_MASTERS-1)], BUS = SPLB7
PORT Sl7_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB7_NUM_MASTERS-1)], BUS = SPLB7
PORT Sl7_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB7_NUM_MASTERS-1)], BUS = SPLB7
PORT PLB7_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB7
PORT PLB7_SAValid = PLB_SAValid, DIR = I, BUS = SPLB7
PORT PLB7_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB7
PORT PLB7_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB7
PORT PLB7_abort = PLB_abort, DIR = I, BUS = SPLB7
PORT PLB7_busLock = PLB_busLock, DIR = I, BUS = SPLB7
PORT PLB7_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB7
PORT PLB7_lockErr = PLB_lockErr, DIR = I, BUS = SPLB7
PORT PLB7_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB7
PORT PLB7_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB7
PORT PLB7_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB7
PORT PLB7_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB7
PORT PLB7_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB7
PORT PLB7_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB7
PORT PLB7_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB7
PORT PLB7_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB7
PORT Sl7_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB7
PORT Sl7_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB7
PORT Sl7_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB7
PORT Sl7_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB7_NUM_MASTERS-1)], BUS = SPLB7

END

FINISH_SINGLE_MPD

START_SINGLE_MPD microblaze_v7_30_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : microblaze
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN microblaze

## Peripheral Options
OPTION IPTYPE = PROCESSOR
OPTION IMP_NETLIST = TRUE
OPTION STYLE = HDL
OPTION HDL = VHDL
OPTION IPLEVEL_DRC_PROC = check_iplevel_settings
OPTION SYSLEVEL_DRC_PROC = check_syslevel_settings
OPTION SPECIAL = MICROBLAZE
OPTION DESC = MicroBlaze
OPTION LONG_DESC = The MicroBlaze 32 bit soft processor
OPTION IP_GROUP = Processor:MICROBLAZE
OPTION ARCH_SUPPORT_MAP = (aspartan3=SUPERSEDED, spartan3=SUPERSEDED, spartan3an=SUPERSEDED, spartan3a=SUPERSEDED, spartan3e=SUPERSEDED, spartan3adsp=SUPERSEDED, virtex4lx=SUPERSEDED, virtex4sx=SUPERSEDED, virtex4fx=SUPERSEDED, virtex5lx=SUPERSEDED, virtex5sx=SUPERSEDED, virtex5fx=SUPERSEDED, aspartan3e=SUPERSEDED, aspartan3a=SUPERSEDED, aspartan3adsp=SUPERSEDED, qvirtex4lx=SUPERSEDED, qvirtex4sx=SUPERSEDED, qvirtex4fx=SUPERSEDED, qrvirtex4lx=SUPERSEDED, qrvirtex4sx=SUPERSEDED, qrvirtex4fx=SUPERSEDED, spartan6t=SUPERSEDED, spartan6=SUPERSEDED, spartan6l=SUPERSEDED, qspartan6t=SUPERSEDED, qspartan6=SUPERSEDED, aspartan6t=SUPERSEDED, aspartan6=SUPERSEDED, virtex6lx=SUPERSEDED, virtex6sx=SUPERSEDED, virtex6hx=SUPERSEDED, virtex6cx=SUPERSEDED, virtex6llx=SUPERSEDED, virtex6lsx=SUPERSEDED, qspartan6l=SUPERSEDED, qrvirtex5=SUPERSEDED, qvirtex6lx=SUPERSEDED, qvirtex6sx=SUPERSEDED, qvirtex6fx=SUPERSEDED, qvirtex6tx=SUPERSEDED)
OPTION RUN_NGCBUILD = FALSE


## Bus Interfaces
BUS_INTERFACE BUS = DLMB, BUS_STD = LMB, BUS_TYPE = MASTER, SHARES_ADDR = DPLB
BUS_INTERFACE BUS = ILMB, BUS_STD = LMB, BUS_TYPE = MASTER, SHARES_ADDR = IPLB
BUS_INTERFACE BUS = DPLB, BUS_STD = PLBV46, BUS_TYPE = MASTER, SHARES_ADDR = DLMB, ISVALID = (C_INTERCONNECT == 1)
BUS_INTERFACE BUS = IPLB, BUS_STD = PLBV46, BUS_TYPE = MASTER, SHARES_ADDR = ILMB, ISVALID = (C_INTERCONNECT == 1)
BUS_INTERFACE BUS = SFSL0, BUS_STD = FSL, BUS_TYPE = SLAVE, EXCLUDE_BUSIF = DRFSL0, ISVALID = (C_FSL_LINKS >= 1)
BUS_INTERFACE BUS = MFSL0, BUS_STD = FSL, BUS_TYPE = MASTER, EXCLUDE_BUSIF = DWFSL0, ISVALID = (C_FSL_LINKS >= 1)
BUS_INTERFACE BUS = SFSL1, BUS_STD = FSL, BUS_TYPE = SLAVE, EXCLUDE_BUSIF = DRFSL1, ISVALID = (C_FSL_LINKS >= 2)
BUS_INTERFACE BUS = MFSL1, BUS_STD = FSL, BUS_TYPE = MASTER, EXCLUDE_BUSIF = DWFSL1, ISVALID = (C_FSL_LINKS >= 2)
BUS_INTERFACE BUS = SFSL2, BUS_STD = FSL, BUS_TYPE = SLAVE, EXCLUDE_BUSIF = DRFSL2, ISVALID = (C_FSL_LINKS >= 3)
BUS_INTERFACE BUS = MFSL2, BUS_STD = FSL, BUS_TYPE = MASTER, EXCLUDE_BUSIF = DWFSL2, ISVALID = (C_FSL_LINKS >= 3)
BUS_INTERFACE BUS = SFSL3, BUS_STD = FSL, BUS_TYPE = SLAVE, EXCLUDE_BUSIF = DRFSL3, ISVALID = (C_FSL_LINKS >= 4)
BUS_INTERFACE BUS = MFSL3, BUS_STD = FSL, BUS_TYPE = MASTER, EXCLUDE_BUSIF = DWFSL3, ISVALID = (C_FSL_LINKS >= 4)
BUS_INTERFACE BUS = SFSL4, BUS_STD = FSL, BUS_TYPE = SLAVE, EXCLUDE_BUSIF = DRFSL4, ISVALID = (C_FSL_LINKS >= 5)
BUS_INTERFACE BUS = MFSL4, BUS_STD = FSL, BUS_TYPE = MASTER, EXCLUDE_BUSIF = DWFSL4, ISVALID = (C_FSL_LINKS >= 5)
BUS_INTERFACE BUS = SFSL5, BUS_STD = FSL, BUS_TYPE = SLAVE, EXCLUDE_BUSIF = DRFSL5, ISVALID = (C_FSL_LINKS >= 6)
BUS_INTERFACE BUS = MFSL5, BUS_STD = FSL, BUS_TYPE = MASTER, EXCLUDE_BUSIF = DWFSL5, ISVALID = (C_FSL_LINKS >= 6)
BUS_INTERFACE BUS = SFSL6, BUS_STD = FSL, BUS_TYPE = SLAVE, EXCLUDE_BUSIF = DRFSL6, ISVALID = (C_FSL_LINKS >= 7)
BUS_INTERFACE BUS = MFSL6, BUS_STD = FSL, BUS_TYPE = MASTER, EXCLUDE_BUSIF = DWFSL6, ISVALID = (C_FSL_LINKS >= 7)
BUS_INTERFACE BUS = SFSL7, BUS_STD = FSL, BUS_TYPE = SLAVE, EXCLUDE_BUSIF = DRFSL7, ISVALID = (C_FSL_LINKS >= 8)
BUS_INTERFACE BUS = MFSL7, BUS_STD = FSL, BUS_TYPE = MASTER, EXCLUDE_BUSIF = DWFSL7, ISVALID = (C_FSL_LINKS >= 8)
BUS_INTERFACE BUS = SFSL8, BUS_STD = FSL, BUS_TYPE = SLAVE, EXCLUDE_BUSIF = DRFSL8, ISVALID = (C_FSL_LINKS >= 9)
BUS_INTERFACE BUS = MFSL8, BUS_STD = FSL, BUS_TYPE = MASTER, EXCLUDE_BUSIF = DWFSL8, ISVALID = (C_FSL_LINKS >= 9)
BUS_INTERFACE BUS = SFSL9, BUS_STD = FSL, BUS_TYPE = SLAVE, EXCLUDE_BUSIF = DRFSL9, ISVALID = (C_FSL_LINKS >= 10)
BUS_INTERFACE BUS = MFSL9, BUS_STD = FSL, BUS_TYPE = MASTER, EXCLUDE_BUSIF = DWFSL9, ISVALID = (C_FSL_LINKS >= 10)
BUS_INTERFACE BUS = SFSL10, BUS_STD = FSL, BUS_TYPE = SLAVE, EXCLUDE_BUSIF = DRFSL10, ISVALID = (C_FSL_LINKS >= 11)
BUS_INTERFACE BUS = MFSL10, BUS_STD = FSL, BUS_TYPE = MASTER, EXCLUDE_BUSIF = DWFSL10, ISVALID = (C_FSL_LINKS >= 11)
BUS_INTERFACE BUS = SFSL11, BUS_STD = FSL, BUS_TYPE = SLAVE, EXCLUDE_BUSIF = DRFSL11, ISVALID = (C_FSL_LINKS >= 12)
BUS_INTERFACE BUS = MFSL11, BUS_STD = FSL, BUS_TYPE = MASTER, EXCLUDE_BUSIF = DWFSL11, ISVALID = (C_FSL_LINKS >= 12)
BUS_INTERFACE BUS = SFSL12, BUS_STD = FSL, BUS_TYPE = SLAVE, EXCLUDE_BUSIF = DRFSL12, ISVALID = (C_FSL_LINKS >= 13)
BUS_INTERFACE BUS = MFSL12, BUS_STD = FSL, BUS_TYPE = MASTER, EXCLUDE_BUSIF = DWFSL12, ISVALID = (C_FSL_LINKS >= 13)
BUS_INTERFACE BUS = SFSL13, BUS_STD = FSL, BUS_TYPE = SLAVE, EXCLUDE_BUSIF = DRFSL13, ISVALID = (C_FSL_LINKS >= 14)
BUS_INTERFACE BUS = MFSL13, BUS_STD = FSL, BUS_TYPE = MASTER, EXCLUDE_BUSIF = DWFSL13, ISVALID = (C_FSL_LINKS >= 14)
BUS_INTERFACE BUS = SFSL14, BUS_STD = FSL, BUS_TYPE = SLAVE, EXCLUDE_BUSIF = DRFSL14, ISVALID = (C_FSL_LINKS >= 15)
BUS_INTERFACE BUS = MFSL14, BUS_STD = FSL, BUS_TYPE = MASTER, EXCLUDE_BUSIF = DWFSL14, ISVALID = (C_FSL_LINKS >= 15)
BUS_INTERFACE BUS = SFSL15, BUS_STD = FSL, BUS_TYPE = SLAVE, EXCLUDE_BUSIF = DRFSL15, ISVALID = (C_FSL_LINKS >= 16)
BUS_INTERFACE BUS = MFSL15, BUS_STD = FSL, BUS_TYPE = MASTER, EXCLUDE_BUSIF = DWFSL15, ISVALID = (C_FSL_LINKS >= 16)
BUS_INTERFACE BUS = DRFSL0, BUS_STD = XIL_DRFSL, BUS_TYPE = TARGET, EXCLUDE_BUSIF = SFSL0, ISVALID = (C_FSL_LINKS >= 1)
BUS_INTERFACE BUS = DWFSL0, BUS_STD = XIL_DWFSL, BUS_TYPE = INITIATOR, EXCLUDE_BUSIF = MFSL0, ISVALID = (C_FSL_LINKS >= 1)
BUS_INTERFACE BUS = DRFSL1, BUS_STD = XIL_DRFSL, BUS_TYPE = TARGET, EXCLUDE_BUSIF = SFSL1, ISVALID = (C_FSL_LINKS >= 2)
BUS_INTERFACE BUS = DWFSL1, BUS_STD = XIL_DWFSL, BUS_TYPE = INITIATOR, EXCLUDE_BUSIF = MFSL1, ISVALID = (C_FSL_LINKS >= 2)
BUS_INTERFACE BUS = DRFSL2, BUS_STD = XIL_DRFSL, BUS_TYPE = TARGET, EXCLUDE_BUSIF = SFSL2, ISVALID = (C_FSL_LINKS >= 3)
BUS_INTERFACE BUS = DWFSL2, BUS_STD = XIL_DWFSL, BUS_TYPE = INITIATOR, EXCLUDE_BUSIF = MFSL2, ISVALID = (C_FSL_LINKS >= 3)
BUS_INTERFACE BUS = DRFSL3, BUS_STD = XIL_DRFSL, BUS_TYPE = TARGET, EXCLUDE_BUSIF = SFSL3, ISVALID = (C_FSL_LINKS >= 4)
BUS_INTERFACE BUS = DWFSL3, BUS_STD = XIL_DWFSL, BUS_TYPE = INITIATOR, EXCLUDE_BUSIF = MFSL3, ISVALID = (C_FSL_LINKS >= 4)
BUS_INTERFACE BUS = DRFSL4, BUS_STD = XIL_DRFSL, BUS_TYPE = TARGET, EXCLUDE_BUSIF = SFSL4, ISVALID = (C_FSL_LINKS >= 5)
BUS_INTERFACE BUS = DWFSL4, BUS_STD = XIL_DWFSL, BUS_TYPE = INITIATOR, EXCLUDE_BUSIF = MFSL4, ISVALID = (C_FSL_LINKS >= 5)
BUS_INTERFACE BUS = DRFSL5, BUS_STD = XIL_DRFSL, BUS_TYPE = TARGET, EXCLUDE_BUSIF = SFSL5, ISVALID = (C_FSL_LINKS >= 6)
BUS_INTERFACE BUS = DWFSL5, BUS_STD = XIL_DWFSL, BUS_TYPE = INITIATOR, EXCLUDE_BUSIF = MFSL5, ISVALID = (C_FSL_LINKS >= 6)
BUS_INTERFACE BUS = DRFSL6, BUS_STD = XIL_DRFSL, BUS_TYPE = TARGET, EXCLUDE_BUSIF = SFSL6, ISVALID = (C_FSL_LINKS >= 7)
BUS_INTERFACE BUS = DWFSL6, BUS_STD = XIL_DWFSL, BUS_TYPE = INITIATOR, EXCLUDE_BUSIF = MFSL6, ISVALID = (C_FSL_LINKS >= 7)
BUS_INTERFACE BUS = DRFSL7, BUS_STD = XIL_DRFSL, BUS_TYPE = TARGET, EXCLUDE_BUSIF = SFSL7, ISVALID = (C_FSL_LINKS >= 8)
BUS_INTERFACE BUS = DWFSL7, BUS_STD = XIL_DWFSL, BUS_TYPE = INITIATOR, EXCLUDE_BUSIF = MFSL7, ISVALID = (C_FSL_LINKS >= 8)
BUS_INTERFACE BUS = DRFSL8, BUS_STD = XIL_DRFSL, BUS_TYPE = TARGET, EXCLUDE_BUSIF = SFSL8, ISVALID = (C_FSL_LINKS >= 9)
BUS_INTERFACE BUS = DWFSL8, BUS_STD = XIL_DWFSL, BUS_TYPE = INITIATOR, EXCLUDE_BUSIF = MFSL8, ISVALID = (C_FSL_LINKS >= 9)
BUS_INTERFACE BUS = DRFSL9, BUS_STD = XIL_DRFSL, BUS_TYPE = TARGET, EXCLUDE_BUSIF = SFSL9, ISVALID = (C_FSL_LINKS >= 10)
BUS_INTERFACE BUS = DWFSL9, BUS_STD = XIL_DWFSL, BUS_TYPE = INITIATOR, EXCLUDE_BUSIF = MFSL9, ISVALID = (C_FSL_LINKS >= 10)
BUS_INTERFACE BUS = DRFSL10, BUS_STD = XIL_DRFSL, BUS_TYPE = TARGET, EXCLUDE_BUSIF = SFSL10, ISVALID = (C_FSL_LINKS >= 11)
BUS_INTERFACE BUS = DWFSL10, BUS_STD = XIL_DWFSL, BUS_TYPE = INITIATOR, EXCLUDE_BUSIF = MFSL10, ISVALID = (C_FSL_LINKS >= 11)
BUS_INTERFACE BUS = DRFSL11, BUS_STD = XIL_DRFSL, BUS_TYPE = TARGET, EXCLUDE_BUSIF = SFSL11, ISVALID = (C_FSL_LINKS >= 12)
BUS_INTERFACE BUS = DWFSL11, BUS_STD = XIL_DWFSL, BUS_TYPE = INITIATOR, EXCLUDE_BUSIF = MFSL11, ISVALID = (C_FSL_LINKS >= 12)
BUS_INTERFACE BUS = DRFSL12, BUS_STD = XIL_DRFSL, BUS_TYPE = TARGET, EXCLUDE_BUSIF = SFSL12, ISVALID = (C_FSL_LINKS >= 13)
BUS_INTERFACE BUS = DWFSL12, BUS_STD = XIL_DWFSL, BUS_TYPE = INITIATOR, EXCLUDE_BUSIF = MFSL12, ISVALID = (C_FSL_LINKS >= 13)
BUS_INTERFACE BUS = DRFSL13, BUS_STD = XIL_DRFSL, BUS_TYPE = TARGET, EXCLUDE_BUSIF = SFSL13, ISVALID = (C_FSL_LINKS >= 14)
BUS_INTERFACE BUS = DWFSL13, BUS_STD = XIL_DWFSL, BUS_TYPE = INITIATOR, EXCLUDE_BUSIF = MFSL13, ISVALID = (C_FSL_LINKS >= 14)
BUS_INTERFACE BUS = DRFSL14, BUS_STD = XIL_DRFSL, BUS_TYPE = TARGET, EXCLUDE_BUSIF = SFSL14, ISVALID = (C_FSL_LINKS >= 15)
BUS_INTERFACE BUS = DWFSL14, BUS_STD = XIL_DWFSL, BUS_TYPE = INITIATOR, EXCLUDE_BUSIF = MFSL14, ISVALID = (C_FSL_LINKS >= 15)
BUS_INTERFACE BUS = DRFSL15, BUS_STD = XIL_DRFSL, BUS_TYPE = TARGET, EXCLUDE_BUSIF = SFSL15, ISVALID = (C_FSL_LINKS >= 16)
BUS_INTERFACE BUS = DWFSL15, BUS_STD = XIL_DWFSL, BUS_TYPE = INITIATOR, EXCLUDE_BUSIF = MFSL15, ISVALID = (C_FSL_LINKS >= 16)
BUS_INTERFACE BUS = DXCL, BUS_STD = XIL_MEMORY_CHANNEL, BUS_TYPE = INITIATOR, ISVALID = (C_INTERCONNECT == 1)
BUS_INTERFACE BUS = IXCL, BUS_STD = XIL_MEMORY_CHANNEL, BUS_TYPE = INITIATOR, ISVALID = (C_INTERCONNECT == 1)
BUS_INTERFACE BUS = DEBUG, BUS_STD = XIL_MBDEBUG2, BUS_TYPE = TARGET
BUS_INTERFACE BUS = TRACE, BUS_STD = XIL_MBTRACE2, BUS_TYPE = INITIATOR

## Generics for VHDL or Parameters for Verilog
PARAMETER C_SCO = 0, DT = integer, ASSIGNMENT = CONSTANT
PARAMETER C_FREQ = 0, DT = integer, IO_IS = clk_freq, CLK_PORT = CLK, CLK_UNIT = HZ
PARAMETER C_DATA_SIZE = 32, DT = integer, ASSIGNMENT = CONSTANT
PARAMETER C_DYNAMIC_BUS_SIZING = 1, DT = integer, ASSIGNMENT = CONSTANT
PARAMETER C_FAMILY = virtex5, DT = string
PARAMETER C_INSTANCE = microblaze, DT = string
PARAMETER C_AREA_OPTIMIZED = 0, DT = integer, RANGE = (0:1)
PARAMETER C_OPTIMIZATION = 0, DT = integer, ASSIGNMENT = CONSTANT
PARAMETER C_INTERCONNECT = 1, DT = integer, ASSIGNMENT = CONSTANT
PARAMETER C_DPLB_DWIDTH = 32, DT = integer, RANGE = (32,64,128), BUS = DPLB
PARAMETER C_DPLB_NATIVE_DWIDTH = 32, DT = integer, RANGE = (32:32), ASSIGNMENT = CONSTANT, BUS = DPLB
PARAMETER C_DPLB_BURST_EN = 0, DT = integer, RANGE = (0:0), ASSIGNMENT = CONSTANT, BUS = DPLB
PARAMETER C_DPLB_P2P = 0, DT = integer, RANGE = (0:1), BUS = DPLB
PARAMETER C_IPLB_DWIDTH = 32, DT = integer, RANGE = (32,64,128), BUS = IPLB
PARAMETER C_IPLB_NATIVE_DWIDTH = 32, DT = integer, RANGE = (32:32), ASSIGNMENT = CONSTANT, BUS = IPLB
PARAMETER C_IPLB_BURST_EN = 0, DT = integer, RANGE = (0:0), ASSIGNMENT = CONSTANT, BUS = IPLB
PARAMETER C_IPLB_P2P = 0, DT = integer, RANGE = (0:1), BUS = IPLB
PARAMETER C_D_PLB = 0, DT = integer, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_d_plb
PARAMETER C_D_LMB = 1, DT = integer, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_d_lmb
PARAMETER C_I_PLB = 0, DT = integer, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_i_plb
PARAMETER C_I_LMB = 1, DT = integer, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_i_lmb
PARAMETER C_USE_MSR_INSTR = 1, DT = integer, RANGE = (0:1)
PARAMETER C_USE_PCMP_INSTR = 1, DT = integer, RANGE = (0:1)
PARAMETER C_USE_BARREL = 0, DT = integer, RANGE = (0:1)
PARAMETER C_USE_DIV = 0, DT = integer, RANGE = (0:1)
PARAMETER C_USE_HW_MUL = 1, DT = integer, VALUES = (0= NONE, 1= MUL32, 2= MUL64)
PARAMETER C_USE_FPU = 0, DT = integer, VALUES = (0= NONE, 1= BASIC, 2= EXTENDED)
PARAMETER C_UNALIGNED_EXCEPTIONS = 0, DT = integer, RANGE = (0:1)
PARAMETER C_ILL_OPCODE_EXCEPTION = 0, DT = integer, RANGE = (0:1)
PARAMETER C_IPLB_BUS_EXCEPTION = 0, DT = integer, RANGE = (0:1), ISVALID = (C_INTERCONNECT == 1)
PARAMETER C_DPLB_BUS_EXCEPTION = 0, DT = integer, RANGE = (0:1), ISVALID = (C_INTERCONNECT == 1)
PARAMETER C_DIV_ZERO_EXCEPTION = 0, DT = integer, RANGE = (0:1), ISVALID = (C_USE_DIV == 1)
PARAMETER C_FPU_EXCEPTION = 0, DT = integer, RANGE = (0:1), ISVALID = (C_USE_FPU >= 1)
PARAMETER C_FSL_EXCEPTION = 0, DT = integer, RANGE = (0:1), ISVALID = (C_FSL_LINKS >= 1 && C_USE_EXTENDED_FSL_INSTR >= 1)
PARAMETER C_PVR = 0, DT = integer, VALUES = (0= NONE, 1= BASIC, 2= FULL)
PARAMETER C_PVR_USER1 = 0x00, DT = std_logic_vector(0 to 7)
PARAMETER C_PVR_USER2 = 0x00000000, DT = std_logic_vector(0 to 31)
PARAMETER C_DEBUG_ENABLED = 0, DT = integer, RANGE = (0:1)
PARAMETER C_NUMBER_OF_PC_BRK = 1, DT = integer, RANGE = (0:8)
PARAMETER C_NUMBER_OF_RD_ADDR_BRK = 0, DT = integer, RANGE = (0:4)
PARAMETER C_NUMBER_OF_WR_ADDR_BRK = 0, DT = integer, RANGE = (0:4)
PARAMETER C_INTERRUPT_IS_EDGE = 0, DT = integer, RANGE = (0:1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_interrupt_edge
PARAMETER C_EDGE_IS_POSITIVE = 1, DT = integer, RANGE = (0:1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_edge_positive
PARAMETER C_RESET_MSR = 0x00000000, DT = std_logic_vector, VALUES = (0x0000= NONE, 0x0020= ICE, 0x0080= DCE, 0x00a0= ICE_DCE)
PARAMETER C_OPCODE_0x0_ILLEGAL = 0, DT = integer, RANGE = (0:1)
PARAMETER C_FSL_LINKS = 0, DT = integer, RANGE = (0:16)
PARAMETER C_FSL_DATA_SIZE = 32, DT = integer, ASSIGNMENT = CONSTANT
PARAMETER C_USE_EXTENDED_FSL_INSTR = 0, DT = integer, RANGE = (0:1), ISVALID = (C_FSL_LINKS >= 1)
PARAMETER C_ICACHE_BASEADDR = 0x00000000, DT = std_logic_vector, ADDRESS = NONE, ASSIGNMENT = OPTIONAL, SYSLEVEL_UPDATE_VALUE_PROC = update_icache_baseaddr
PARAMETER C_ICACHE_HIGHADDR = 0x3FFFFFFF, DT = std_logic_vector, ADDRESS = NONE, ASSIGNMENT = OPTIONAL, SYSLEVEL_UPDATE_VALUE_PROC = update_icache_highaddr
PARAMETER C_USE_ICACHE = 0, DT = integer, RANGE = (0:1)
PARAMETER C_ALLOW_ICACHE_WR = 1, DT = integer, RANGE = (0:1)
PARAMETER C_ADDR_TAG_BITS = 17, DT = integer, RANGE = (0:25), ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = update_icache_tag_bits
PARAMETER C_CACHE_BYTE_SIZE = 8192, DT = integer, VALUES = (64= 64B, 128= 128B, 256= 256B, 512= 512B, 1024= 1kB, 2048= 2kB,4096= 4kB,8192= 8kB,16384= 16kB,32768= 32kB,65536= 64kB)
PARAMETER C_ICACHE_USE_FSL = 1, DT = integer, RANGE = (0:1), ASSIGNMENT = UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_cache_use_fsl
PARAMETER C_ICACHE_LINE_LEN = 4, DT = integer, RANGE = (4, 8)
PARAMETER C_ICACHE_ALWAYS_USED = 0, DT = integer, RANGE = (0:1)
PARAMETER C_ICACHE_INTERFACE = 0, DT = integer, RANGE = (0,1), VALUES = (0=IXCL, 1=IXCL2)
PARAMETER C_ICACHE_VICTIMS = 0, DT = integer, RANGE = (0,2,4,8), ISVALID = (C_AREA_OPTIMIZED != 1)
PARAMETER C_ICACHE_STREAMS = 0, DT = integer, RANGE = (0:1), ISVALID = (C_AREA_OPTIMIZED != 1)
PARAMETER C_DCACHE_BASEADDR = 0x00000000, DT = std_logic_vector, ADDRESS = NONE, ASSIGNMENT = OPTIONAL, SYSLEVEL_UPDATE_VALUE_PROC = update_dcache_baseaddr
PARAMETER C_DCACHE_HIGHADDR = 0x3FFFFFFF, DT = std_logic_vector, ADDRESS = NONE, ASSIGNMENT = OPTIONAL, SYSLEVEL_UPDATE_VALUE_PROC = update_dcache_highaddr
PARAMETER C_USE_DCACHE = 0, DT = integer, RANGE = (0:1)
PARAMETER C_ALLOW_DCACHE_WR = 1, DT = integer, RANGE = (0:1)
PARAMETER C_DCACHE_ADDR_TAG = 17, DT = integer, RANGE = (0:25), ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = update_dcache_tag_bits
PARAMETER C_DCACHE_BYTE_SIZE = 8192, DT = integer, VALUES = (64= 64B, 128= 128B, 256= 256B, 512= 512B, 1024= 1kB, 2048= 2kB,4096= 4kB,8192= 8kB,16384= 16kB,32768= 32kB,65536= 64kB)
PARAMETER C_DCACHE_USE_FSL = 1, DT = integer, RANGE = (0:1), ASSIGNMENT = UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_cache_use_fsl
PARAMETER C_DCACHE_LINE_LEN = 4, DT = integer, RANGE = (4, 8)
PARAMETER C_DCACHE_ALWAYS_USED = 0, DT = integer, RANGE = (0:1)
PARAMETER C_DCACHE_INTERFACE = 0, DT = integer, RANGE = (0,1), VALUES = (0=DXCL, 1=DXCL2), ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_dcache_interface
PARAMETER C_DCACHE_USE_WRITEBACK = 0, DT = integer, RANGE = (0:1)
PARAMETER C_DCACHE_VICTIMS = 0, DT = integer, RANGE = (0,2,4,8), ISVALID = (C_AREA_OPTIMIZED != 1 && C_DCACHE_USE_WRITEBACK == 1)
PARAMETER C_USE_MMU = 0, DT = integer, VALUES = (0= NONE, 1=USERMODE, 2=PROTECTION, 3=VIRTUAL), ISVALID = (C_AREA_OPTIMIZED == 0)
PARAMETER C_MMU_DTLB_SIZE = 4, DT = integer, VALUES = (1= 1, 2= 2, 4= 4, 8= 8), ISVALID = (C_USE_MMU >= 2 && C_AREA_OPTIMIZED == 0)
PARAMETER C_MMU_ITLB_SIZE = 2, DT = integer, VALUES = (1= 1, 2= 2, 4= 4, 8= 8), ISVALID = (C_USE_MMU >= 2 && C_AREA_OPTIMIZED == 0)
PARAMETER C_MMU_TLB_ACCESS = 3, DT = integer, VALUES = (0=MINIMAL, 1=READ, 2=WRITE, 3=FULL), ISVALID = (C_USE_MMU >= 2 && C_AREA_OPTIMIZED == 0)
PARAMETER C_MMU_ZONES = 16, DT = integer, RANGE = (0:16), ISVALID = (C_USE_MMU >= 2 && C_AREA_OPTIMIZED == 0)
PARAMETER C_USE_INTERRUPT = 0, DT = integer, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_use_interrupt
PARAMETER C_USE_EXT_BRK = 0, DT = integer, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_use_ext_brk
PARAMETER C_USE_EXT_NM_BRK = 0, DT = integer, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_use_ext_nm_brk
PARAMETER C_USE_BRANCH_TARGET_CACHE = 0, DT = integer, RANGE = (0:1), ISVALID = (C_AREA_OPTIMIZED == 0)
PARAMETER C_BRANCH_TARGET_CACHE_SIZE = 0, DT = integer, VALUES = (0=DEFAULT, 1=   8 ENTRIES, 2=  16 ENTRIES, 3=  32 ENTRIES, 4=  64 ENTRIES, 5= 512 ENTRIES, 6=1024 ENTRIES, 7=2048 ENTRIES), ISVALID = (C_AREA_OPTIMIZED == 0)

## Ports
PORT CLK = "", DIR = I, SIGIS = CLK, BUS = DPLB:IPLB:DLMB:ILMB, ASSIGNMENT = REQUIRE
PORT RESET = LMB_Rst, DIR = I, SIGIS = RST, BUS = DLMB:ILMB
PORT MB_RESET = "", DIR = I, SIGIS = RST
PORT INTERRUPT = "", DIR = I, LEVEL = HIGH, SIGIS = INTERRUPT
PORT EXT_BRK = Ext_BRK, DIR = I
PORT EXT_NM_BRK = Ext_NM_BRK, DIR = I
PORT DBG_STOP = "", DIR = I
PORT MB_Halted = "", DIR = O
PORT INSTR = LMB_ReadDBus, DIR = I, VEC = [0:31], BUS = ILMB
PORT IREADY = LMB_Ready, DIR = I, BUS = ILMB
PORT IWAIT = LMB_Wait, DIR = I, BUS = ILMB
PORT INSTR_ADDR = M_ABus, DIR = O, VEC = [0:31], BUS = ILMB
PORT IFETCH = M_ReadStrobe, DIR = O, BUS = ILMB
PORT I_AS = M_AddrStrobe, DIR = O, BUS = ILMB
PORT IPLB_M_ABort = M_ABort, DIR = O, BUS = IPLB
PORT IPLB_M_ABus = M_ABus, DIR = O, VEC = [0:31], BUS = IPLB
PORT IPLB_M_UABus = M_UABus, DIR = O, VEC = [0:31], BUS = IPLB
PORT IPLB_M_BE = M_BE, DIR = O, VEC = [0:(C_IPLB_DWIDTH-1)/8], BUS = IPLB
PORT IPLB_M_busLock = M_busLock, DIR = O, BUS = IPLB
PORT IPLB_M_lockErr = M_lockErr, DIR = O, BUS = IPLB
PORT IPLB_M_MSize = M_MSize, DIR = O, VEC = [0:1], BUS = IPLB
PORT IPLB_M_priority = M_priority, DIR = O, VEC = [0:1], BUS = IPLB
PORT IPLB_M_rdBurst = M_rdBurst, DIR = O, BUS = IPLB
PORT IPLB_M_request = M_request, DIR = O, BUS = IPLB
PORT IPLB_M_RNW = M_RNW, DIR = O, BUS = IPLB
PORT IPLB_M_size = M_size, DIR = O, VEC = [0:3], BUS = IPLB
PORT IPLB_M_TAttribute = M_TAttribute, DIR = O, VEC = [0:15], BUS = IPLB
PORT IPLB_M_type = M_type, DIR = O, VEC = [0:2], BUS = IPLB
PORT IPLB_M_wrBurst = M_wrBurst, DIR = O, BUS = IPLB
PORT IPLB_M_wrDBus = M_wrDBus, DIR = O, VEC = [0:C_IPLB_DWIDTH-1], BUS = IPLB
PORT IPLB_MBusy = PLB_MBusy, DIR = I, BUS = IPLB
PORT IPLB_MRdErr = PLB_MRdErr, DIR = I, BUS = IPLB
PORT IPLB_MWrErr = PLB_MWrErr, DIR = I, BUS = IPLB
PORT IPLB_MIRQ = PLB_MIRQ, DIR = I, BUS = IPLB
PORT IPLB_MWrBTerm = PLB_MWrBTerm, DIR = I, BUS = IPLB
PORT IPLB_MWrDAck = PLB_MWrDAck, DIR = I, BUS = IPLB
PORT IPLB_MAddrAck = PLB_MAddrAck, DIR = I, BUS = IPLB
PORT IPLB_MRdBTerm = PLB_MRdBTerm, DIR = I, BUS = IPLB
PORT IPLB_MRdDAck = PLB_MRdDAck, DIR = I, BUS = IPLB
PORT IPLB_MRdDBus = PLB_MRdDBus, DIR = I, VEC = [0:C_IPLB_DWIDTH-1], BUS = IPLB
PORT IPLB_MRdWdAddr = PLB_MRdWdAddr, DIR = I, VEC = [0:3], BUS = IPLB
PORT IPLB_MRearbitrate = PLB_MRearbitrate, DIR = I, BUS = IPLB
PORT IPLB_MSSize = PLB_MSSize, DIR = I, VEC = [0:1], BUS = IPLB
PORT IPLB_MTimeout = PLB_MTimeout, DIR = I, BUS = IPLB
PORT DATA_READ = LMB_ReadDBus, DIR = I, VEC = [0:31], BUS = DLMB
PORT DREADY = LMB_Ready, DIR = I, BUS = DLMB
PORT DWAIT = LMB_Wait, DIR = I, BUS = DLMB
PORT DATA_WRITE = M_DBus, DIR = O, VEC = [0:31], BUS = DLMB
PORT DATA_ADDR = M_ABus, DIR = O, VEC = [0:31], BUS = DLMB
PORT D_AS = M_AddrStrobe, DIR = O, BUS = DLMB
PORT READ_STROBE = M_ReadStrobe, DIR = O, BUS = DLMB
PORT WRITE_STROBE = M_WriteStrobe, DIR = O, BUS = DLMB
PORT BYTE_ENABLE = M_BE, DIR = O, VEC = [0:3], BUS = DLMB
PORT DPLB_M_ABort = M_ABort, DIR = O, BUS = DPLB
PORT DPLB_M_ABus = M_ABus, DIR = O, VEC = [0:31], BUS = DPLB
PORT DPLB_M_UABus = M_UABus, DIR = O, VEC = [0:31], BUS = DPLB
PORT DPLB_M_BE = M_BE, DIR = O, VEC = [0:(C_DPLB_DWIDTH-1)/8], BUS = DPLB
PORT DPLB_M_busLock = M_busLock, DIR = O, BUS = DPLB
PORT DPLB_M_lockErr = M_lockErr, DIR = O, BUS = DPLB
PORT DPLB_M_MSize = M_MSize, DIR = O, VEC = [0:1], BUS = DPLB
PORT DPLB_M_priority = M_priority, DIR = O, VEC = [0:1], BUS = DPLB
PORT DPLB_M_rdBurst = M_rdBurst, DIR = O, BUS = DPLB
PORT DPLB_M_request = M_request, DIR = O, BUS = DPLB
PORT DPLB_M_RNW = M_RNW, DIR = O, BUS = DPLB
PORT DPLB_M_size = M_size, DIR = O, VEC = [0:3], BUS = DPLB
PORT DPLB_M_TAttribute = M_TAttribute, DIR = O, VEC = [0:15], BUS = DPLB
PORT DPLB_M_type = M_type, DIR = O, VEC = [0:2], BUS = DPLB
PORT DPLB_M_wrBurst = M_wrBurst, DIR = O, BUS = DPLB
PORT DPLB_M_wrDBus = M_wrDBus, DIR = O, VEC = [0:C_DPLB_DWIDTH-1], BUS = DPLB
PORT DPLB_MBusy = PLB_MBusy, DIR = I, BUS = DPLB
PORT DPLB_MRdErr = PLB_MRdErr, DIR = I, BUS = DPLB
PORT DPLB_MWrErr = PLB_MWrErr, DIR = I, BUS = DPLB
PORT DPLB_MIRQ = PLB_MIRQ, DIR = I, BUS = DPLB
PORT DPLB_MWrBTerm = PLB_MWrBTerm, DIR = I, BUS = DPLB
PORT DPLB_MWrDAck = PLB_MWrDAck, DIR = I, BUS = DPLB
PORT DPLB_MAddrAck = PLB_MAddrAck, DIR = I, BUS = DPLB
PORT DPLB_MRdBTerm = PLB_MRdBTerm, DIR = I, BUS = DPLB
PORT DPLB_MRdDAck = PLB_MRdDAck, DIR = I, BUS = DPLB
PORT DPLB_MRdDBus = PLB_MRdDBus, DIR = I, VEC = [0:C_DPLB_DWIDTH-1], BUS = DPLB
PORT DPLB_MRdWdAddr = PLB_MRdWdAddr, DIR = I, VEC = [0:3], BUS = DPLB
PORT DPLB_MRearbitrate = PLB_MRearbitrate, DIR = I, BUS = DPLB
PORT DPLB_MSSize = PLB_MSSize, DIR = I, VEC = [0:1], BUS = DPLB
PORT DPLB_MTimeout = PLB_MTimeout, DIR = I, BUS = DPLB
PORT DBG_CLK = Dbg_Clk, DIR = I, BUS = DEBUG
PORT DBG_TDI = Dbg_TDI, DIR = I, BUS = DEBUG
PORT DBG_TDO = Dbg_TDO, DIR = O, BUS = DEBUG
PORT DBG_REG_EN = Dbg_Reg_En, DIR = I, VEC = [0:4], BUS = DEBUG
PORT DBG_SHIFT = Dbg_Shift, DIR = I, BUS = DEBUG
PORT DBG_CAPTURE = Dbg_Capture, DIR = I, BUS = DEBUG
PORT DBG_UPDATE = Dbg_Update, DIR = I, BUS = DEBUG
PORT DEBUG_RST = Debug_Rst, DIR = I, SIGIS = RST, BUS = DEBUG
PORT Trace_Instruction = Trace_Instruction, DIR = O, VEC = [0:31], BUS = TRACE
PORT Trace_Valid_Instr = Trace_Valid_Instr, DIR = O, BUS = TRACE
PORT Trace_PC = Trace_PC, DIR = O, VEC = [0:31], BUS = TRACE
PORT Trace_Reg_Write = Trace_Reg_Write, DIR = O, BUS = TRACE
PORT Trace_Reg_Addr = Trace_Reg_Addr, DIR = O, VEC = [0:4], BUS = TRACE
PORT Trace_MSR_Reg = Trace_MSR_Reg, DIR = O, VEC = [0:14], BUS = TRACE
PORT Trace_PID_Reg = Trace_PID_Reg, DIR = O, VEC = [0:7], BUS = TRACE
PORT Trace_New_Reg_Value = Trace_New_Reg_Value, DIR = O, VEC = [0:31], BUS = TRACE
PORT Trace_Exception_Taken = Trace_Exception_Taken, DIR = O, BUS = TRACE
PORT Trace_Exception_Kind = Trace_Exception_Kind, DIR = O, VEC = [0:4], BUS = TRACE
PORT Trace_Jump_Taken = Trace_Jump_Taken, DIR = O, BUS = TRACE
PORT Trace_Delay_Slot = Trace_Delay_Slot, DIR = O, BUS = TRACE
PORT Trace_Data_Address = Trace_Data_Address, DIR = O, VEC = [0:31], BUS = TRACE
PORT Trace_Data_Access = Trace_Data_Access, DIR = O, BUS = TRACE
PORT Trace_Data_Read = Trace_Data_Read, DIR = O, BUS = TRACE
PORT Trace_Data_Write = Trace_Data_Write, DIR = O, BUS = TRACE
PORT Trace_Data_Write_Value = Trace_Data_Write_Value, DIR = O, VEC = [0:31], BUS = TRACE
PORT Trace_Data_Byte_Enable = Trace_Data_Byte_Enable, DIR = O, VEC = [0:3], BUS = TRACE
PORT Trace_DCache_Req = Trace_DCache_Req, DIR = O, BUS = TRACE
PORT Trace_DCache_Hit = Trace_DCache_Hit, DIR = O, BUS = TRACE
PORT Trace_DCache_Rdy = Trace_DCache_Rdy, DIR = O, BUS = TRACE
PORT Trace_DCache_Read = Trace_DCache_Read, DIR = O, BUS = TRACE
PORT Trace_ICache_Req = Trace_ICache_Req, DIR = O, BUS = TRACE
PORT Trace_ICache_Hit = Trace_ICache_Hit, DIR = O, BUS = TRACE
PORT Trace_ICache_Rdy = Trace_ICache_Rdy, DIR = O, BUS = TRACE
PORT Trace_OF_PipeRun = Trace_OF_PipeRun, DIR = O, BUS = TRACE
PORT Trace_EX_PipeRun = Trace_EX_PipeRun, DIR = O, BUS = TRACE
PORT Trace_MEM_PipeRun = Trace_MEM_PipeRun, DIR = O, BUS = TRACE
PORT Trace_MB_Halted = Trace_MB_Halted, DIR = O, BUS = TRACE
PORT Trace_Jump_Hit = Trace_Jump_Hit, DIR = O, BUS = TRACE
PORT FSL0_S_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = SFSL0:DRFSL0
PORT FSL0_S_READ = FSL_S_Read, DIR = O, BUS = SFSL0:DRFSL0
PORT FSL0_S_DATA = FSL_S_Data, DIR = I, VEC = [0:C_FSL_DATA_SIZE-1], BUS = SFSL0:DRFSL0
PORT FSL0_S_CONTROL = FSL_S_Control, DIR = I, BUS = SFSL0:DRFSL0
PORT FSL0_S_EXISTS = FSL_S_Exists, DIR = I, BUS = SFSL0:DRFSL0
PORT FSL0_M_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = MFSL0:DWFSL0
PORT FSL0_M_WRITE = FSL_M_Write, DIR = O, BUS = MFSL0:DWFSL0
PORT FSL0_M_DATA = FSL_M_Data, DIR = O, VEC = [0:C_FSL_DATA_SIZE-1], BUS = MFSL0:DWFSL0
PORT FSL0_M_CONTROL = FSL_M_Control, DIR = O, BUS = MFSL0:DWFSL0
PORT FSL0_M_FULL = FSL_M_Full, DIR = I, BUS = MFSL0:DWFSL0
PORT FSL1_S_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = SFSL1:DRFSL1
PORT FSL1_S_READ = FSL_S_Read, DIR = O, BUS = SFSL1:DRFSL1
PORT FSL1_S_DATA = FSL_S_Data, DIR = I, VEC = [0:C_FSL_DATA_SIZE-1], BUS = SFSL1:DRFSL1
PORT FSL1_S_CONTROL = FSL_S_Control, DIR = I, BUS = SFSL1:DRFSL1
PORT FSL1_S_EXISTS = FSL_S_Exists, DIR = I, BUS = SFSL1:DRFSL1
PORT FSL1_M_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = MFSL1:DWFSL1
PORT FSL1_M_WRITE = FSL_M_Write, DIR = O, BUS = MFSL1:DWFSL1
PORT FSL1_M_DATA = FSL_M_Data, DIR = O, VEC = [0:C_FSL_DATA_SIZE-1], BUS = MFSL1:DWFSL1
PORT FSL1_M_CONTROL = FSL_M_Control, DIR = O, BUS = MFSL1:DWFSL1
PORT FSL1_M_FULL = FSL_M_Full, DIR = I, BUS = MFSL1:DWFSL1
PORT FSL2_S_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = SFSL2:DRFSL2
PORT FSL2_S_READ = FSL_S_Read, DIR = O, BUS = SFSL2:DRFSL2
PORT FSL2_S_DATA = FSL_S_Data, DIR = I, VEC = [0:C_FSL_DATA_SIZE-1], BUS = SFSL2:DRFSL2
PORT FSL2_S_CONTROL = FSL_S_Control, DIR = I, BUS = SFSL2:DRFSL2
PORT FSL2_S_EXISTS = FSL_S_Exists, DIR = I, BUS = SFSL2:DRFSL2
PORT FSL2_M_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = MFSL2:DWFSL2
PORT FSL2_M_WRITE = FSL_M_Write, DIR = O, BUS = MFSL2:DWFSL2
PORT FSL2_M_DATA = FSL_M_Data, DIR = O, VEC = [0:C_FSL_DATA_SIZE-1], BUS = MFSL2:DWFSL2
PORT FSL2_M_CONTROL = FSL_M_Control, DIR = O, BUS = MFSL2:DWFSL2
PORT FSL2_M_FULL = FSL_M_Full, DIR = I, BUS = MFSL2:DWFSL2
PORT FSL3_S_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = SFSL3:DRFSL3
PORT FSL3_S_READ = FSL_S_Read, DIR = O, BUS = SFSL3:DRFSL3
PORT FSL3_S_DATA = FSL_S_Data, DIR = I, VEC = [0:C_FSL_DATA_SIZE-1], BUS = SFSL3:DRFSL3
PORT FSL3_S_CONTROL = FSL_S_Control, DIR = I, BUS = SFSL3:DRFSL3
PORT FSL3_S_EXISTS = FSL_S_Exists, DIR = I, BUS = SFSL3:DRFSL3
PORT FSL3_M_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = MFSL3:DWFSL3
PORT FSL3_M_WRITE = FSL_M_Write, DIR = O, BUS = MFSL3:DWFSL3
PORT FSL3_M_DATA = FSL_M_Data, DIR = O, VEC = [0:C_FSL_DATA_SIZE-1], BUS = MFSL3:DWFSL3
PORT FSL3_M_CONTROL = FSL_M_Control, DIR = O, BUS = MFSL3:DWFSL3
PORT FSL3_M_FULL = FSL_M_Full, DIR = I, BUS = MFSL3:DWFSL3
PORT FSL4_S_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = SFSL4:DRFSL4
PORT FSL4_S_READ = FSL_S_Read, DIR = O, BUS = SFSL4:DRFSL4
PORT FSL4_S_DATA = FSL_S_Data, DIR = I, VEC = [0:C_FSL_DATA_SIZE-1], BUS = SFSL4:DRFSL4
PORT FSL4_S_CONTROL = FSL_S_Control, DIR = I, BUS = SFSL4:DRFSL4
PORT FSL4_S_EXISTS = FSL_S_Exists, DIR = I, BUS = SFSL4:DRFSL4
PORT FSL4_M_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = MFSL4:DWFSL4
PORT FSL4_M_WRITE = FSL_M_Write, DIR = O, BUS = MFSL4:DWFSL4
PORT FSL4_M_DATA = FSL_M_Data, DIR = O, VEC = [0:C_FSL_DATA_SIZE-1], BUS = MFSL4:DWFSL4
PORT FSL4_M_CONTROL = FSL_M_Control, DIR = O, BUS = MFSL4:DWFSL4
PORT FSL4_M_FULL = FSL_M_Full, DIR = I, BUS = MFSL4:DWFSL4
PORT FSL5_S_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = SFSL5:DRFSL5
PORT FSL5_S_READ = FSL_S_Read, DIR = O, BUS = SFSL5:DRFSL5
PORT FSL5_S_DATA = FSL_S_Data, DIR = I, VEC = [0:C_FSL_DATA_SIZE-1], BUS = SFSL5:DRFSL5
PORT FSL5_S_CONTROL = FSL_S_Control, DIR = I, BUS = SFSL5:DRFSL5
PORT FSL5_S_EXISTS = FSL_S_Exists, DIR = I, BUS = SFSL5:DRFSL5
PORT FSL5_M_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = MFSL5:DWFSL5
PORT FSL5_M_WRITE = FSL_M_Write, DIR = O, BUS = MFSL5:DWFSL5
PORT FSL5_M_DATA = FSL_M_Data, DIR = O, VEC = [0:C_FSL_DATA_SIZE-1], BUS = MFSL5:DWFSL5
PORT FSL5_M_CONTROL = FSL_M_Control, DIR = O, BUS = MFSL5:DWFSL5
PORT FSL5_M_FULL = FSL_M_Full, DIR = I, BUS = MFSL5:DWFSL5
PORT FSL6_S_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = SFSL6:DRFSL6
PORT FSL6_S_READ = FSL_S_Read, DIR = O, BUS = SFSL6:DRFSL6
PORT FSL6_S_DATA = FSL_S_Data, DIR = I, VEC = [0:C_FSL_DATA_SIZE-1], BUS = SFSL6:DRFSL6
PORT FSL6_S_CONTROL = FSL_S_Control, DIR = I, BUS = SFSL6:DRFSL6
PORT FSL6_S_EXISTS = FSL_S_Exists, DIR = I, BUS = SFSL6:DRFSL6
PORT FSL6_M_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = MFSL6:DWFSL6
PORT FSL6_M_WRITE = FSL_M_Write, DIR = O, BUS = MFSL6:DWFSL6
PORT FSL6_M_DATA = FSL_M_Data, DIR = O, VEC = [0:C_FSL_DATA_SIZE-1], BUS = MFSL6:DWFSL6
PORT FSL6_M_CONTROL = FSL_M_Control, DIR = O, BUS = MFSL6:DWFSL6
PORT FSL6_M_FULL = FSL_M_Full, DIR = I, BUS = MFSL6:DWFSL6
PORT FSL7_S_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = SFSL7:DRFSL7
PORT FSL7_S_READ = FSL_S_Read, DIR = O, BUS = SFSL7:DRFSL7
PORT FSL7_S_DATA = FSL_S_Data, DIR = I, VEC = [0:C_FSL_DATA_SIZE-1], BUS = SFSL7:DRFSL7
PORT FSL7_S_CONTROL = FSL_S_Control, DIR = I, BUS = SFSL7:DRFSL7
PORT FSL7_S_EXISTS = FSL_S_Exists, DIR = I, BUS = SFSL7:DRFSL7
PORT FSL7_M_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = MFSL7:DWFSL7
PORT FSL7_M_WRITE = FSL_M_Write, DIR = O, BUS = MFSL7:DWFSL7
PORT FSL7_M_DATA = FSL_M_Data, DIR = O, VEC = [0:C_FSL_DATA_SIZE-1], BUS = MFSL7:DWFSL7
PORT FSL7_M_CONTROL = FSL_M_Control, DIR = O, BUS = MFSL7:DWFSL7
PORT FSL7_M_FULL = FSL_M_Full, DIR = I, BUS = MFSL7:DWFSL7
PORT FSL8_S_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = SFSL8:DRFSL8
PORT FSL8_S_READ = FSL_S_Read, DIR = O, BUS = SFSL8:DRFSL8
PORT FSL8_S_DATA = FSL_S_Data, DIR = I, VEC = [0:C_FSL_DATA_SIZE-1], BUS = SFSL8:DRFSL8
PORT FSL8_S_CONTROL = FSL_S_Control, DIR = I, BUS = SFSL8:DRFSL8
PORT FSL8_S_EXISTS = FSL_S_Exists, DIR = I, BUS = SFSL8:DRFSL8
PORT FSL8_M_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = MFSL8:DWFSL8
PORT FSL8_M_WRITE = FSL_M_Write, DIR = O, BUS = MFSL8:DWFSL8
PORT FSL8_M_DATA = FSL_M_Data, DIR = O, VEC = [0:C_FSL_DATA_SIZE-1], BUS = MFSL8:DWFSL8
PORT FSL8_M_CONTROL = FSL_M_Control, DIR = O, BUS = MFSL8:DWFSL8
PORT FSL8_M_FULL = FSL_M_Full, DIR = I, BUS = MFSL8:DWFSL8
PORT FSL9_S_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = SFSL9:DRFSL9
PORT FSL9_S_READ = FSL_S_Read, DIR = O, BUS = SFSL9:DRFSL9
PORT FSL9_S_DATA = FSL_S_Data, DIR = I, VEC = [0:C_FSL_DATA_SIZE-1], BUS = SFSL9:DRFSL9
PORT FSL9_S_CONTROL = FSL_S_Control, DIR = I, BUS = SFSL9:DRFSL9
PORT FSL9_S_EXISTS = FSL_S_Exists, DIR = I, BUS = SFSL9:DRFSL9
PORT FSL9_M_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = MFSL9:DWFSL9
PORT FSL9_M_WRITE = FSL_M_Write, DIR = O, BUS = MFSL9:DWFSL9
PORT FSL9_M_DATA = FSL_M_Data, DIR = O, VEC = [0:C_FSL_DATA_SIZE-1], BUS = MFSL9:DWFSL9
PORT FSL9_M_CONTROL = FSL_M_Control, DIR = O, BUS = MFSL9:DWFSL9
PORT FSL9_M_FULL = FSL_M_Full, DIR = I, BUS = MFSL9:DWFSL9
PORT FSL10_S_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = SFSL10:DRFSL10
PORT FSL10_S_READ = FSL_S_Read, DIR = O, BUS = SFSL10:DRFSL10
PORT FSL10_S_DATA = FSL_S_Data, DIR = I, VEC = [0:C_FSL_DATA_SIZE-1], BUS = SFSL10:DRFSL10
PORT FSL10_S_CONTROL = FSL_S_Control, DIR = I, BUS = SFSL10:DRFSL10
PORT FSL10_S_EXISTS = FSL_S_Exists, DIR = I, BUS = SFSL10:DRFSL10
PORT FSL10_M_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = MFSL10:DWFSL10
PORT FSL10_M_WRITE = FSL_M_Write, DIR = O, BUS = MFSL10:DWFSL10
PORT FSL10_M_DATA = FSL_M_Data, DIR = O, VEC = [0:C_FSL_DATA_SIZE-1], BUS = MFSL10:DWFSL10
PORT FSL10_M_CONTROL = FSL_M_Control, DIR = O, BUS = MFSL10:DWFSL10
PORT FSL10_M_FULL = FSL_M_Full, DIR = I, BUS = MFSL10:DWFSL10
PORT FSL11_S_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = SFSL11:DRFSL11
PORT FSL11_S_READ = FSL_S_Read, DIR = O, BUS = SFSL11:DRFSL11
PORT FSL11_S_DATA = FSL_S_Data, DIR = I, VEC = [0:C_FSL_DATA_SIZE-1], BUS = SFSL11:DRFSL11
PORT FSL11_S_CONTROL = FSL_S_Control, DIR = I, BUS = SFSL11:DRFSL11
PORT FSL11_S_EXISTS = FSL_S_Exists, DIR = I, BUS = SFSL11:DRFSL11
PORT FSL11_M_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = MFSL11:DWFSL11
PORT FSL11_M_WRITE = FSL_M_Write, DIR = O, BUS = MFSL11:DWFSL11
PORT FSL11_M_DATA = FSL_M_Data, DIR = O, VEC = [0:C_FSL_DATA_SIZE-1], BUS = MFSL11:DWFSL11
PORT FSL11_M_CONTROL = FSL_M_Control, DIR = O, BUS = MFSL11:DWFSL11
PORT FSL11_M_FULL = FSL_M_Full, DIR = I, BUS = MFSL11:DWFSL11
PORT FSL12_S_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = SFSL12:DRFSL12
PORT FSL12_S_READ = FSL_S_Read, DIR = O, BUS = SFSL12:DRFSL12
PORT FSL12_S_DATA = FSL_S_Data, DIR = I, VEC = [0:C_FSL_DATA_SIZE-1], BUS = SFSL12:DRFSL12
PORT FSL12_S_CONTROL = FSL_S_Control, DIR = I, BUS = SFSL12:DRFSL12
PORT FSL12_S_EXISTS = FSL_S_Exists, DIR = I, BUS = SFSL12:DRFSL12
PORT FSL12_M_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = MFSL12:DWFSL12
PORT FSL12_M_WRITE = FSL_M_Write, DIR = O, BUS = MFSL12:DWFSL12
PORT FSL12_M_DATA = FSL_M_Data, DIR = O, VEC = [0:C_FSL_DATA_SIZE-1], BUS = MFSL12:DWFSL12
PORT FSL12_M_CONTROL = FSL_M_Control, DIR = O, BUS = MFSL12:DWFSL12
PORT FSL12_M_FULL = FSL_M_Full, DIR = I, BUS = MFSL12:DWFSL12
PORT FSL13_S_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = SFSL13:DRFSL13
PORT FSL13_S_READ = FSL_S_Read, DIR = O, BUS = SFSL13:DRFSL13
PORT FSL13_S_DATA = FSL_S_Data, DIR = I, VEC = [0:C_FSL_DATA_SIZE-1], BUS = SFSL13:DRFSL13
PORT FSL13_S_CONTROL = FSL_S_Control, DIR = I, BUS = SFSL13:DRFSL13
PORT FSL13_S_EXISTS = FSL_S_Exists, DIR = I, BUS = SFSL13:DRFSL13
PORT FSL13_M_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = MFSL13:DWFSL13
PORT FSL13_M_WRITE = FSL_M_Write, DIR = O, BUS = MFSL13:DWFSL13
PORT FSL13_M_DATA = FSL_M_Data, DIR = O, VEC = [0:C_FSL_DATA_SIZE-1], BUS = MFSL13:DWFSL13
PORT FSL13_M_CONTROL = FSL_M_Control, DIR = O, BUS = MFSL13:DWFSL13
PORT FSL13_M_FULL = FSL_M_Full, DIR = I, BUS = MFSL13:DWFSL13
PORT FSL14_S_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = SFSL14:DRFSL14
PORT FSL14_S_READ = FSL_S_Read, DIR = O, BUS = SFSL14:DRFSL14
PORT FSL14_S_DATA = FSL_S_Data, DIR = I, VEC = [0:C_FSL_DATA_SIZE-1], BUS = SFSL14:DRFSL14
PORT FSL14_S_CONTROL = FSL_S_Control, DIR = I, BUS = SFSL14:DRFSL14
PORT FSL14_S_EXISTS = FSL_S_Exists, DIR = I, BUS = SFSL14:DRFSL14
PORT FSL14_M_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = MFSL14:DWFSL14
PORT FSL14_M_WRITE = FSL_M_Write, DIR = O, BUS = MFSL14:DWFSL14
PORT FSL14_M_DATA = FSL_M_Data, DIR = O, VEC = [0:C_FSL_DATA_SIZE-1], BUS = MFSL14:DWFSL14
PORT FSL14_M_CONTROL = FSL_M_Control, DIR = O, BUS = MFSL14:DWFSL14
PORT FSL14_M_FULL = FSL_M_Full, DIR = I, BUS = MFSL14:DWFSL14
PORT FSL15_S_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = SFSL15:DRFSL15
PORT FSL15_S_READ = FSL_S_Read, DIR = O, BUS = SFSL15:DRFSL15
PORT FSL15_S_DATA = FSL_S_Data, DIR = I, VEC = [0:C_FSL_DATA_SIZE-1], BUS = SFSL15:DRFSL15
PORT FSL15_S_CONTROL = FSL_S_Control, DIR = I, BUS = SFSL15:DRFSL15
PORT FSL15_S_EXISTS = FSL_S_Exists, DIR = I, BUS = SFSL15:DRFSL15
PORT FSL15_M_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = MFSL15:DWFSL15
PORT FSL15_M_WRITE = FSL_M_Write, DIR = O, BUS = MFSL15:DWFSL15
PORT FSL15_M_DATA = FSL_M_Data, DIR = O, VEC = [0:C_FSL_DATA_SIZE-1], BUS = MFSL15:DWFSL15
PORT FSL15_M_CONTROL = FSL_M_Control, DIR = O, BUS = MFSL15:DWFSL15
PORT FSL15_M_FULL = FSL_M_Full, DIR = I, BUS = MFSL15:DWFSL15
PORT ICACHE_FSL_IN_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = IXCL
PORT ICACHE_FSL_IN_READ = FSL_S_Read, DIR = O, BUS = IXCL
PORT ICACHE_FSL_IN_DATA = FSL_S_Data, DIR = I, VEC = [0:31], BUS = IXCL
PORT ICACHE_FSL_IN_CONTROL = FSL_S_Control, DIR = I, BUS = IXCL
PORT ICACHE_FSL_IN_EXISTS = FSL_S_Exists, DIR = I, BUS = IXCL
PORT ICACHE_FSL_OUT_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = IXCL
PORT ICACHE_FSL_OUT_WRITE = FSL_M_Write, DIR = O, BUS = IXCL
PORT ICACHE_FSL_OUT_DATA = FSL_M_Data, DIR = O, VEC = [0:31], BUS = IXCL
PORT ICACHE_FSL_OUT_CONTROL = FSL_M_Control, DIR = O, BUS = IXCL
PORT ICACHE_FSL_OUT_FULL = FSL_M_Full, DIR = I, BUS = IXCL
PORT DCACHE_FSL_IN_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = DXCL
PORT DCACHE_FSL_IN_READ = FSL_S_Read, DIR = O, BUS = DXCL
PORT DCACHE_FSL_IN_DATA = FSL_S_Data, DIR = I, VEC = [0:31], BUS = DXCL
PORT DCACHE_FSL_IN_CONTROL = FSL_S_Control, DIR = I, BUS = DXCL
PORT DCACHE_FSL_IN_EXISTS = FSL_S_Exists, DIR = I, BUS = DXCL
PORT DCACHE_FSL_OUT_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = DXCL
PORT DCACHE_FSL_OUT_WRITE = FSL_M_Write, DIR = O, BUS = DXCL
PORT DCACHE_FSL_OUT_DATA = FSL_M_Data, DIR = O, VEC = [0:31], BUS = DXCL
PORT DCACHE_FSL_OUT_CONTROL = FSL_M_Control, DIR = O, BUS = DXCL
PORT DCACHE_FSL_OUT_FULL = FSL_M_Full, DIR = I, BUS = DXCL

END

FINISH_SINGLE_MPD

START_SINGLE_MPD xps_hwicap_v3_00_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : xps_hwicap
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN xps_hwicap

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION DESC = FPGA Internal Configuration Access Port
OPTION LONG_DESC = PLBV46 interface to read and write the FPGA configuration memory through the Internal Configuration Access Port (ICAP) at run time
OPTION IP_GROUP = FPGA Reconfiguration:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=SUPERSEDED, spartan3=SUPERSEDED, spartan3an=SUPERSEDED, spartan3a=SUPERSEDED, spartan3e=SUPERSEDED, spartan3adsp=SUPERSEDED, virtex4lx=SUPERSEDED, virtex4sx=SUPERSEDED, virtex4fx=SUPERSEDED, virtex5lx=SUPERSEDED, virtex5sx=SUPERSEDED, virtex5fx=SUPERSEDED, aspartan3e=SUPERSEDED, aspartan3a=SUPERSEDED, aspartan3adsp=SUPERSEDED, qvirtex4lx=SUPERSEDED, qvirtex4sx=SUPERSEDED, qvirtex4fx=SUPERSEDED, qrvirtex4lx=SUPERSEDED, qrvirtex4sx=SUPERSEDED, qrvirtex4fx=SUPERSEDED, spartan6t=SUPERSEDED, spartan6=SUPERSEDED, spartan6l=SUPERSEDED, qspartan6t=SUPERSEDED, qspartan6=SUPERSEDED, aspartan6t=SUPERSEDED, aspartan6=SUPERSEDED, virtex6lx=SUPERSEDED, virtex6sx=SUPERSEDED, virtex6hx=SUPERSEDED, virtex6cx=SUPERSEDED, virtex6llx=SUPERSEDED, virtex6lsx=SUPERSEDED, qspartan6l=SUPERSEDED, qrvirtex5=SUPERSEDED, qvirtex6lx=SUPERSEDED, qvirtex6sx=SUPERSEDED, qvirtex6fx=SUPERSEDED, qvirtex6tx=SUPERSEDED)
OPTION RUN_NGCBUILD = FALSE
OPTION STYLE = HDL


## Bus Interfaces
BUS_INTERFACE BUS = SPLB, BUS_TYPE = SLAVE, BUS_STD = PLBV46

## Generics for VHDL or Parameters for Verilog
PARAMETER C_BASEADDR = 0xffffffff, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_HIGHADDR, MIN_SIZE = 0x1000, ASSIGNMENT = REQUIRE
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_BASEADDR, ASSIGNMENT = REQUIRE
PARAMETER C_SPLB_DWIDTH = 32, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_AWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_P2P = 0, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_MID_WIDTH = 3, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_NUM_MASTERS = 8, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_WRITE_FIFO_DEPTH = 64, DT = INTEGER, RANGE = (64,128,256,512,1024)
PARAMETER C_READ_FIFO_DEPTH = 128, DT = INTEGER
PARAMETER C_SIMULATION = false, DT = BOOLEAN
PARAMETER C_BRAM_SRL_FIFO_TYPE = 1, DT = INTEGER, RANGE = (0,1)
PARAMETER C_FAMILY = virtex5, DT = STRING

## Ports
PORT ICAP_Clk = "", DIR = I, SIGIS = Clk
PORT SPLB_Clk = "", DIR = I, SIGIS = Clk, BUS = SPLB
PORT SPLB_Rst = SPLB_Rst, DIR = I, SIGIS = Rst, BUS = SPLB
PORT PLB_ABus = PLB_ABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB
PORT PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB
PORT PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB
PORT PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB
PORT PLB_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB_MID_WIDTH-1)], BUS = SPLB
PORT PLB_abort = PLB_abort, DIR = I, BUS = SPLB
PORT PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB
PORT PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB
PORT PLB_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB_DWIDTH/8)-1)], BUS = SPLB
PORT PLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB
PORT PLB_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB
PORT PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB
PORT PLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB
PORT PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB
PORT PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB
PORT PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB
PORT PLB_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB
PORT Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB
PORT Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB
PORT Sl_wait = Sl_wait, DIR = O, BUS = SPLB
PORT Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB
PORT Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB
PORT Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB
PORT Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB
PORT Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB
PORT Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB
PORT Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB
PORT Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB
PORT Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT IP2INTC_Irpt = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH

END

FINISH_SINGLE_MPD

START_SINGLE_MPD xps_mch_emc_v3_01_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : xps_mch_emc
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN xps_mch_emc

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION USAGE_LEVEL = BASE_USER
OPTION IPLEVEL_DRC_PROC = check_iplevel_settings
OPTION DESC = XPS Multi-Channel External Memory Controller(SRAM/Flash)
OPTION LONG_DESC = Xilinx Multi-CHannel (MCH) PLBV46 external memory controller
OPTION IP_GROUP = Memory and Memory Controller:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=PRODUCTION, spartan3=PRODUCTION, spartan3an=PRODUCTION, spartan3a=PRODUCTION, spartan3e=PRODUCTION, spartan3adsp=PRODUCTION, virtex4lx=PRODUCTION, virtex4sx=PRODUCTION, virtex4fx=PRODUCTION, virtex5lx=PRODUCTION, virtex5sx=PRODUCTION, virtex5fx=PRODUCTION, aspartan3e=PRODUCTION, aspartan3a=PRODUCTION, aspartan3adsp=PRODUCTION, qvirtex4lx=PRODUCTION, qvirtex4sx=PRODUCTION, qvirtex4fx=PRODUCTION, qrvirtex4lx=PRODUCTION, qrvirtex4sx=PRODUCTION, qrvirtex4fx=PRODUCTION, spartan6t=PRODUCTION, spartan6=PRODUCTION, spartan6l=PRE_PRODUCTION, qspartan6t=PRODUCTION, qspartan6=PRODUCTION, aspartan6t=PRODUCTION, aspartan6=PRODUCTION, virtex6lx=PRODUCTION, virtex6sx=PRODUCTION, virtex6hx=PRODUCTION, virtex6cx=PRODUCTION, virtex6llx=PRE_PRODUCTION, virtex6lsx=PRE_PRODUCTION, qspartan6l=PRE_PRODUCTION, qrvirtex5=PRE_PRODUCTION, qvirtex6lx=PRE_PRODUCTION, qvirtex6sx=PRE_PRODUCTION, qvirtex6fx=PRE_PRODUCTION, qvirtex6tx=PRE_PRODUCTION)
OPTION RUN_NGCBUILD = FALSE
OPTION STYLE = HDL

IO_INTERFACE IO_IF = emc_0, IO_TYPE = XIL_EMC_V1

## Bus Interfaces
BUS_INTERFACE BUS = SPLB, BUS_TYPE = SLAVE, BUS_STD = PLBV46, ISVALID = (C_INCLUDE_PLB_IPIF==1)
BUS_INTERFACE BUS = MCH0, BUS_TYPE = TARGET, BUS_STD = XIL_MEMORY_CHANNEL, ISVALID = (C_NUM_CHANNELS>=1)
BUS_INTERFACE BUS = MCH1, BUS_TYPE = TARGET, BUS_STD = XIL_MEMORY_CHANNEL, ISVALID = (C_NUM_CHANNELS>=2)
BUS_INTERFACE BUS = MCH2, BUS_TYPE = TARGET, BUS_STD = XIL_MEMORY_CHANNEL, ISVALID = (C_NUM_CHANNELS>=3)
BUS_INTERFACE BUS = MCH3, BUS_TYPE = TARGET, BUS_STD = XIL_MEMORY_CHANNEL, ISVALID = (C_NUM_CHANNELS>=4)

## Generics for VHDL or Parameters for Verilog
PARAMETER C_FAMILY = virtex5, DT = STRING
PARAMETER C_NUM_BANKS_MEM = 1, DT = INTEGER, RANGE = (1:4), IO_IF = emc_0, IO_IS = C_NUM_BANKS_MEM
PARAMETER C_NUM_CHANNELS = 2, DT = INTEGER, RANGE = (0:4)
PARAMETER C_PRIORITY_MODE = 0, DT = INTEGER, ASSIGNMENT = CONSTANT
PARAMETER C_INCLUDE_PLB_IPIF = 1, DT = INTEGER, BUS = SPLB, RANGE = (0,1)
PARAMETER C_INCLUDE_WRBUF = 1, DT = INTEGER, RANGE = (0,1)
PARAMETER C_SPLB_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_P2P = 0, DT = INTEGER, BUS = SPLB, RANGE = (0,1)
PARAMETER C_SPLB_DWIDTH = 32, DT = INTEGER, BUS = SPLB
PARAMETER C_MCH_SPLB_AWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SPLB
PARAMETER C_MCH_NATIVE_DWIDTH = 32, DT = INTEGER, RANGE = (32,64)
PARAMETER C_MCH_SPLB_CLK_PERIOD_PS = 10000, DT = INTEGER, BUS = SPLB, IO_IS = clk_freq
PARAMETER C_MEM0_BASEADDR = 0xffffffff, DT = std_logic_vector, BUS = SPLB:MCH0:MCH1:MCH2:MCH3, ADDRESS = BASE, PAIR = C_MEM0_HIGHADDR, IO_IS = C_MEM0_BASEADDR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, PERMIT = BASE_USER, ISVALID = (C_NUM_BANKS_MEM>=1), ASSIGNMENT = REQUIRE
PARAMETER C_MEM0_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = SPLB:MCH0:MCH1:MCH2:MCH3, ADDRESS = HIGH, PAIR = C_MEM0_BASEADDR, IO_IS = C_MEM0_HIGHADDR, PERMIT = BASE_USER, ISVALID = (C_NUM_BANKS_MEM>=1), ASSIGNMENT = REQUIRE
PARAMETER C_MEM1_BASEADDR = 0xffffffff, DT = std_logic_vector, BUS = SPLB:MCH0:MCH1:MCH2:MCH3, ADDRESS = BASE, PAIR = C_MEM1_HIGHADDR, IO_IS = C_MEM1_BASEADDR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = (C_NUM_BANKS_MEM>=2), ASSIGNMENT = REQUIRE
PARAMETER C_MEM1_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = SPLB:MCH0:MCH1:MCH2:MCH3, ADDRESS = HIGH, PAIR = C_MEM1_BASEADDR, IO_IS = C_MEM1_HIGHADDR, ISVALID = (C_NUM_BANKS_MEM>=2), ASSIGNMENT = REQUIRE
PARAMETER C_MEM2_BASEADDR = 0xffffffff, DT = std_logic_vector, BUS = SPLB:MCH0:MCH1:MCH2:MCH3, ADDRESS = BASE, PAIR = C_MEM2_HIGHADDR, IO_IS = C_MEM2_BASEADDR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = (C_NUM_BANKS_MEM>=3), ASSIGNMENT = REQUIRE
PARAMETER C_MEM2_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = SPLB:MCH0:MCH1:MCH2:MCH3, ADDRESS = HIGH, PAIR = C_MEM2_BASEADDR, IO_IS = C_MEM2_HIGHADDR, ISVALID = (C_NUM_BANKS_MEM>=3), ASSIGNMENT = REQUIRE
PARAMETER C_MEM3_BASEADDR = 0xffffffff, DT = std_logic_vector, BUS = SPLB:MCH0:MCH1:MCH2:MCH3, ADDRESS = BASE, PAIR = C_MEM3_HIGHADDR, IO_IS = C_MEM3_BASEADDR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = (C_NUM_BANKS_MEM>=4), ASSIGNMENT = REQUIRE
PARAMETER C_MEM3_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = SPLB:MCH0:MCH1:MCH2:MCH3, ADDRESS = HIGH, PAIR = C_MEM3_BASEADDR, IO_IS = C_MEM3_HIGHADDR, ISVALID = (C_NUM_BANKS_MEM>=4), ASSIGNMENT = REQUIRE
PARAMETER C_PAGEMODE_FLASH_0 = 0, DT = INTEGER, RANGE = (0:1), IO_IF = emc_0, IO_IS = C_PAGEMODE_FLASH_0
PARAMETER C_PAGEMODE_FLASH_1 = 0, DT = INTEGER, RANGE = (0:1), IO_IF = emc_0, IO_IS = C_PAGEMODE_FLASH_1
PARAMETER C_PAGEMODE_FLASH_2 = 0, DT = INTEGER, RANGE = (0:1), IO_IF = emc_0, IO_IS = C_PAGEMODE_FLASH_2
PARAMETER C_PAGEMODE_FLASH_3 = 0, DT = INTEGER, RANGE = (0:1), IO_IF = emc_0, IO_IS = C_PAGEMODE_FLASH_3
PARAMETER C_INCLUDE_NEGEDGE_IOREGS = 0, DT = INTEGER, RANGE = (0:1), IO_IF = emc_0, IO_IS = C_INCLUDE_NEGEDGE_IOREGS
PARAMETER C_MEM0_WIDTH = 32, DT = INTEGER, RANGE = (8,16,32,64), PERMIT = BASE_USER, DESC = Data Width, IO_IF = emc_0, IO_IS = C_MEM0_WIDTH
PARAMETER C_MEM1_WIDTH = 32, DT = INTEGER, RANGE = (8,16,32,64), DESC = Bank 1 Data Bus Width, IO_IF = emc_0, IO_IS = C_MEM1_WIDTH
PARAMETER C_MEM2_WIDTH = 32, DT = INTEGER, RANGE = (8,16,32,64), DESC = Bank 2 Data Bus Width, IO_IF = emc_0, IO_IS = C_MEM2_WIDTH
PARAMETER C_MEM3_WIDTH = 32, DT = INTEGER, RANGE = (8,16,32,64), DESC = Bank 3 Data Bus Width, IO_IF = emc_0, IO_IS = C_MEM3_WIDTH
PARAMETER C_MAX_MEM_WIDTH = 32, DT = INTEGER, RANGE = (8,16,32, 64), PERMIT = BASE_USER, DESC = Maximum Data Width, IO_IF = emc_0, IO_IS = C_MAX_MEM_WIDTH
PARAMETER C_INCLUDE_DATAWIDTH_MATCHING_0 = 0, DT = INTEGER, RANGE = (0:1), IO_IF = emc_0, IO_IS = C_INCLUDE_DATAWIDTH_MATCHING_0, PERMIT = BASE_USER, DESC = Match width of memory data bus to OPB data bus, VALUES = (0= FALSE , 1= TRUE )
PARAMETER C_INCLUDE_DATAWIDTH_MATCHING_1 = 0, DT = INTEGER, RANGE = (0:1), DESC = Match data bus width of Mem Bank 1 to OPB, IO_IF = emc_0, IO_IS = C_INCLUDE_DATAWIDTH_MATCHING_1, VALUES = (0= FALSE , 1= TRUE )
PARAMETER C_INCLUDE_DATAWIDTH_MATCHING_2 = 0, DT = INTEGER, RANGE = (0:1), DESC = Match data bus width of Mem Bank 2 to OPB, IO_IF = emc_0, IO_IS = C_INCLUDE_DATAWIDTH_MATCHING_2, VALUES = (0= FALSE , 1= TRUE )
PARAMETER C_INCLUDE_DATAWIDTH_MATCHING_3 = 0, DT = INTEGER, RANGE = (0:1), DESC = Match data bus width of Mem Bank 3 to OPB, IO_IF = emc_0, IO_IS = C_INCLUDE_DATAWIDTH_MATCHING_3, VALUES = (0= FALSE , 1= TRUE )
PARAMETER C_SYNCH_MEM_0 = 0, DT = INTEGER, RANGE = (0:1), IO_IF = emc_0, IO_IS = C_SYNCH_MEM_0, PERMIT = BASE_USER, DESC = Memory Type, VALUES = (0= Asynchronous , 1= Synchronous )
PARAMETER C_SYNCH_PIPEDELAY_0 = 2, DT = INTEGER, RANGE = (1:2)
PARAMETER C_TCEDV_PS_MEM_0 = 15000, DT = INTEGER, IO_IF = emc_0, IO_IS = C_READ_ADDR_TO_OUT_SLOW_PS_0
PARAMETER C_TAVDV_PS_MEM_0 = 15000, DT = INTEGER, IO_IF = emc_0, IO_IS = C_READ_ADDR_TO_OUT_FAST_PS_0
PARAMETER C_TPACC_PS_FLASH_0 = 25000, DT = INTEGER, IO_IF = emc_0, IO_IS = C_READ_ADDR_TO_OUT_PAGEMODE_PS_0
PARAMETER C_THZCE_PS_MEM_0 = 7000, DT = INTEGER, IO_IF = emc_0, IO_IS = C_READ_RECOVERY_BEFORE_WRITE_PS_0
PARAMETER C_THZOE_PS_MEM_0 = 7000, DT = INTEGER, IO_IF = emc_0, IO_IS = C_READ_RECOVERY_BEFORE_WRITE_2_PS_0
PARAMETER C_TWC_PS_MEM_0 = 15000, DT = INTEGER, IO_IF = emc_0, IO_IS = C_WRITE_ADDR_TO_OUT_SLOW_PS_0
PARAMETER C_TWP_PS_MEM_0 = 12000, DT = INTEGER, IO_IF = emc_0, IO_IS = C_WRITE_ADDR_TO_OUT_FAST_PS_0
PARAMETER C_TLZWE_PS_MEM_0 = 0, DT = INTEGER, IO_IF = emc_0, IO_IS = C_WRITE_RECOVERY_BEFORE_READ_PS_0
PARAMETER C_SYNCH_MEM_1 = 0, DT = INTEGER, RANGE = (0:1), IO_IF = emc_0, IO_IS = C_SYNCH_MEM_1, VALUES = (0= Asynchronous , 1= Synchronous )
PARAMETER C_SYNCH_PIPEDELAY_1 = 2, DT = INTEGER, RANGE = (1:2)
PARAMETER C_TCEDV_PS_MEM_1 = 15000, DT = INTEGER, IO_IF = emc_0, IO_IS = C_READ_ADDR_TO_OUT_SLOW_PS_1
PARAMETER C_TAVDV_PS_MEM_1 = 15000, DT = INTEGER, IO_IF = emc_0, IO_IS = C_READ_ADDR_TO_OUT_FAST_PS_1
PARAMETER C_TPACC_PS_FLASH_1 = 25000, DT = INTEGER, IO_IF = emc_0, IO_IS = C_READ_ADDR_TO_OUT_PAGEMODE_PS_1
PARAMETER C_THZCE_PS_MEM_1 = 7000, DT = INTEGER, IO_IF = emc_0, IO_IS = C_READ_RECOVERY_BEFORE_WRITE_PS_1
PARAMETER C_THZOE_PS_MEM_1 = 7000, DT = INTEGER, IO_IF = emc_0, IO_IS = C_READ_RECOVERY_BEFORE_WRITE_2_PS_1
PARAMETER C_TWC_PS_MEM_1 = 15000, DT = INTEGER, IO_IF = emc_0, IO_IS = C_WRITE_ADDR_TO_OUT_SLOW_PS_1
PARAMETER C_TWP_PS_MEM_1 = 12000, DT = INTEGER, IO_IF = emc_0, IO_IS = C_WRITE_ADDR_TO_OUT_FAST_PS_1
PARAMETER C_TLZWE_PS_MEM_1 = 0, DT = INTEGER, IO_IF = emc_0, IO_IS = C_WRITE_RECOVERY_BEFORE_READ_PS_1
PARAMETER C_SYNCH_MEM_2 = 0, DT = INTEGER, RANGE = (0:1), VALUES = (0= Asynchronous , 1= Synchronous )
PARAMETER C_SYNCH_PIPEDELAY_2 = 2, DT = INTEGER, RANGE = (1:2)
PARAMETER C_TCEDV_PS_MEM_2 = 15000, DT = INTEGER, IO_IF = emc_0, IO_IS = C_READ_ADDR_TO_OUT_SLOW_PS_2
PARAMETER C_TAVDV_PS_MEM_2 = 15000, DT = INTEGER, IO_IF = emc_0, IO_IS = C_READ_ADDR_TO_OUT_FAST_PS_2
PARAMETER C_TPACC_PS_FLASH_2 = 25000, DT = INTEGER, IO_IF = emc_0, IO_IS = C_READ_ADDR_TO_OUT_PAGEMODE_PS_2
PARAMETER C_THZCE_PS_MEM_2 = 7000, DT = INTEGER, IO_IF = emc_0, IO_IS = C_READ_RECOVERY_BEFORE_WRITE_PS_2
PARAMETER C_THZOE_PS_MEM_2 = 7000, DT = INTEGER, IO_IF = emc_0, IO_IS = C_READ_RECOVERY_BEFORE_WRITE_2_PS_2
PARAMETER C_TWC_PS_MEM_2 = 15000, DT = INTEGER, IO_IF = emc_0, IO_IS = C_WRITE_ADDR_TO_OUT_SLOW_PS_2
PARAMETER C_TWP_PS_MEM_2 = 12000, DT = INTEGER, IO_IF = emc_0, IO_IS = C_WRITE_ADDR_TO_OUT_FAST_PS_2
PARAMETER C_TLZWE_PS_MEM_2 = 0, DT = INTEGER, IO_IF = emc_0, IO_IS = C_WRITE_RECOVERY_BEFORE_READ_PS_2
PARAMETER C_SYNCH_MEM_3 = 0, DT = INTEGER, RANGE = (0:1), IO_IF = emc_0, IO_IS = C_SYNCH_MEM_3, VALUES = (0= Asynchronous , 1= Synchronous )
PARAMETER C_SYNCH_PIPEDELAY_3 = 2, DT = INTEGER, RANGE = (1:2)
PARAMETER C_TCEDV_PS_MEM_3 = 15000, DT = INTEGER, IO_IF = emc_0, IO_IS = C_READ_ADDR_TO_OUT_SLOW_PS_3
PARAMETER C_TAVDV_PS_MEM_3 = 15000, DT = INTEGER, IO_IF = emc_0, IO_IS = C_READ_ADDR_TO_OUT_FAST_PS_3
PARAMETER C_TPACC_PS_FLASH_3 = 25000, DT = INTEGER, IO_IF = emc_0, IO_IS = C_READ_ADDR_TO_OUT_PAGEMODE_PS_3
PARAMETER C_THZCE_PS_MEM_3 = 7000, DT = INTEGER, IO_IF = emc_0, IO_IS = C_READ_RECOVERY_BEFORE_WRITE_PS_3
PARAMETER C_THZOE_PS_MEM_3 = 7000, DT = INTEGER, IO_IF = emc_0, IO_IS = C_READ_RECOVERY_BEFORE_WRITE_2_PS_3
PARAMETER C_TWC_PS_MEM_3 = 15000, DT = INTEGER, IO_IF = emc_0, IO_IS = C_WRITE_ADDR_TO_OUT_SLOW_PS_3
PARAMETER C_TWP_PS_MEM_3 = 12000, DT = INTEGER, IO_IF = emc_0, IO_IS = C_WRITE_ADDR_TO_OUT_FAST_PS_3
PARAMETER C_TLZWE_PS_MEM_3 = 0, DT = INTEGER, IO_IF = emc_0, IO_IS = C_WRITE_RECOVERY_BEFORE_READ_PS_3
PARAMETER C_MCH0_PROTOCOL = 0, DT = INTEGER, RANGE = (0:1), ASSIGNMENT = OPTIONAL_UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_mch_protocol, ISVALID = (C_NUM_CHANNELS>=1)
PARAMETER C_MCH0_ACCESSBUF_DEPTH = 16, DT = INTEGER, RANGE = (4,8,16)
PARAMETER C_MCH0_RDDATABUF_DEPTH = 16, DT = INTEGER, RANGE = (0,4,8,16)
PARAMETER C_MCH1_PROTOCOL = 0, DT = INTEGER, RANGE = (0:1), ASSIGNMENT = OPTIONAL_UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_mch_protocol, ISVALID = (C_NUM_CHANNELS>=2)
PARAMETER C_MCH1_ACCESSBUF_DEPTH = 16, DT = INTEGER, RANGE = (4,8,16)
PARAMETER C_MCH1_RDDATABUF_DEPTH = 16, DT = INTEGER, RANGE = (0,4,8,16)
PARAMETER C_MCH2_PROTOCOL = 0, DT = INTEGER, RANGE = (0:1), ASSIGNMENT = OPTIONAL_UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_mch_protocol, ISVALID = (C_NUM_CHANNELS>=3)
PARAMETER C_MCH2_ACCESSBUF_DEPTH = 16, DT = INTEGER, RANGE = (4,8,16)
PARAMETER C_MCH2_RDDATABUF_DEPTH = 16, DT = INTEGER, RANGE = (0,4,8,16)
PARAMETER C_MCH3_PROTOCOL = 0, DT = INTEGER, RANGE = (0:1), ASSIGNMENT = OPTIONAL_UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_mch_protocol, ISVALID = (C_NUM_CHANNELS>=4)
PARAMETER C_MCH3_ACCESSBUF_DEPTH = 16, DT = INTEGER, RANGE = (4,8,16)
PARAMETER C_MCH3_RDDATABUF_DEPTH = 16, DT = INTEGER, RANGE = (0,4,8,16)
PARAMETER C_XCL0_LINESIZE = 4, DT = INTEGER, RANGE = (1,4,8,16)
PARAMETER C_XCL0_WRITEXFER = 1, DT = INTEGER, RANGE = (0:2)
PARAMETER C_XCL1_LINESIZE = 4, DT = INTEGER, RANGE = (1,4,8,16)
PARAMETER C_XCL1_WRITEXFER = 1, DT = INTEGER, RANGE = (0:2)
PARAMETER C_XCL2_LINESIZE = 4, DT = INTEGER, RANGE = (1,4,8,16)
PARAMETER C_XCL2_WRITEXFER = 1, DT = INTEGER, RANGE = (0:2)
PARAMETER C_XCL3_LINESIZE = 4, DT = INTEGER, RANGE = (1,4,8,16)
PARAMETER C_XCL3_WRITEXFER = 1, DT = INTEGER, RANGE = (0:2)

## Ports
PORT MCH_SPLB_Clk = "", DIR = I, SIGIS = Clk, BUS = SPLB
PORT RdClk = "", DIR = I, SIGIS = Clk, ASSIGNMENT = REQUIRE
PORT MCH_SPLB_Rst = SPLB_Rst, DIR = I, SIGIS = Rst, BUS = SPLB
PORT MCH0_Access_Control = FSL_M_CONTROL, DIR = I, BUS = MCH0
PORT MCH0_Access_Data = FSL_M_DATA, DIR = I, VEC = [0:(C_MCH_NATIVE_DWIDTH-1)], BUS = MCH0
PORT MCH0_Access_Write = FSL_M_WRITE, DIR = I, BUS = MCH0
PORT MCH0_Access_Full = FSL_M_FULL, DIR = O, BUS = MCH0
PORT MCH0_ReadData_Control = FSL_S_CONTROL, DIR = O, BUS = MCH0
PORT MCH0_ReadData_Data = FSL_S_DATA, DIR = O, VEC = [0:(C_MCH_NATIVE_DWIDTH-1)], BUS = MCH0
PORT MCH0_ReadData_Read = FSL_S_READ, DIR = I, BUS = MCH0
PORT MCH0_ReadData_Exists = FSL_S_EXISTS, DIR = O, BUS = MCH0
PORT MCH1_Access_Control = FSL_M_CONTROL, DIR = I, BUS = MCH1
PORT MCH1_Access_Data = FSL_M_DATA, DIR = I, VEC = [0:(C_MCH_NATIVE_DWIDTH-1)], BUS = MCH1
PORT MCH1_Access_Write = FSL_M_WRITE, DIR = I, BUS = MCH1
PORT MCH1_Access_Full = FSL_M_FULL, DIR = O, BUS = MCH1
PORT MCH1_ReadData_Control = FSL_S_CONTROL, DIR = O, BUS = MCH1
PORT MCH1_ReadData_Data = FSL_S_DATA, DIR = O, VEC = [0:(C_MCH_NATIVE_DWIDTH-1)], BUS = MCH1
PORT MCH1_ReadData_Read = FSL_S_READ, DIR = I, BUS = MCH1
PORT MCH1_ReadData_Exists = FSL_S_EXISTS, DIR = O, BUS = MCH1
PORT MCH2_Access_Control = FSL_M_CONTROL, DIR = I, BUS = MCH2
PORT MCH2_Access_Data = FSL_M_DATA, DIR = I, VEC = [0:(C_MCH_NATIVE_DWIDTH-1)], BUS = MCH2
PORT MCH2_Access_Write = FSL_M_WRITE, DIR = I, BUS = MCH2
PORT MCH2_Access_Full = FSL_M_FULL, DIR = O, BUS = MCH2
PORT MCH2_ReadData_Control = FSL_S_CONTROL, DIR = O, BUS = MCH2
PORT MCH2_ReadData_Data = FSL_S_DATA, DIR = O, VEC = [0:(C_MCH_NATIVE_DWIDTH-1)], BUS = MCH2
PORT MCH2_ReadData_Read = FSL_S_READ, DIR = I, BUS = MCH2
PORT MCH2_ReadData_Exists = FSL_S_EXISTS, DIR = O, BUS = MCH2
PORT MCH3_Access_Control = FSL_M_CONTROL, DIR = I, BUS = MCH3
PORT MCH3_Access_Data = FSL_M_DATA, DIR = I, VEC = [0:(C_MCH_NATIVE_DWIDTH-1)], BUS = MCH3
PORT MCH3_Access_Write = FSL_M_WRITE, DIR = I, BUS = MCH3
PORT MCH3_Access_Full = FSL_M_FULL, DIR = O, BUS = MCH3
PORT MCH3_ReadData_Control = FSL_S_CONTROL, DIR = O, BUS = MCH3
PORT MCH3_ReadData_Data = FSL_S_DATA, DIR = O, VEC = [0:(C_MCH_NATIVE_DWIDTH-1)], BUS = MCH3
PORT MCH3_ReadData_Read = FSL_S_READ, DIR = I, BUS = MCH3
PORT MCH3_ReadData_Exists = FSL_S_EXISTS, DIR = O, BUS = MCH3
PORT PLB_ABus = PLB_ABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB
PORT PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB
PORT PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB
PORT PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB
PORT PLB_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB_MID_WIDTH-1)], BUS = SPLB
PORT PLB_abort = PLB_abort, DIR = I, BUS = SPLB
PORT PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB
PORT PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB
PORT PLB_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB_DWIDTH/8)-1)], BUS = SPLB
PORT PLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB
PORT PLB_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB
PORT PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB
PORT PLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB
PORT PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB
PORT PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB
PORT PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB
PORT PLB_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB
PORT Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB
PORT Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB
PORT Sl_wait = Sl_wait, DIR = O, BUS = SPLB
PORT Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB
PORT Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB
PORT Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB
PORT Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB
PORT Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB
PORT Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB
PORT Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB
PORT Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB
PORT Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Mem_DQ_I = "", DIR = I, VEC = [0:(C_MAX_MEM_WIDTH-1)]
PORT Mem_DQ_O = "", DIR = O, VEC = [0:(C_MAX_MEM_WIDTH-1)]
PORT Mem_DQ_T = "", DIR = O, VEC = [0:(C_MAX_MEM_WIDTH-1)]
PORT Mem_A = "", DIR = O, VEC = [0:(C_MCH_SPLB_AWIDTH-1)], PERMIT = BASE_USER, DESC = 'Memory Address Bus', IO_IF = emc_0, IO_IS = emc_addr
PORT Mem_RPN = "", DIR = O, PERMIT = BASE_USER, DESC = 'Memory Reset/Power Down', IO_IF = emc_0, IO_IS = emc_rst
PORT Mem_CEN = "", DIR = O, VEC = [0:(C_NUM_BANKS_MEM-1)], PERMIT = BASE_USER, DESC = 'Memory Chip Enable Active Low', IO_IF = emc_0, IO_IS = emc_csn
PORT Mem_OEN = "", DIR = O, VEC = [0:(C_NUM_BANKS_MEM-1)], PERMIT = BASE_USER, DESC = 'Memory Output Enable', IO_IF = emc_0, IO_IS = emc_oen
PORT Mem_WEN = "", DIR = O, PERMIT = BASE_USER, DESC = 'Memory Write Enable', IO_IF = emc_0, IO_IS = emc_wen
PORT Mem_QWEN = "", DIR = O, VEC = [0:((C_MAX_MEM_WIDTH/8)-1)], PERMIT = BASE_USER, DESC = 'Memory Qualified Write Enable'
PORT Mem_BEN = "", DIR = O, VEC = [0:((C_MAX_MEM_WIDTH/8)-1)], PERMIT = BASE_USER, DESC = 'Memory Byte Enable', IO_IF = emc_0, IO_IS = emc_ben
PORT Mem_CE = "", DIR = O, VEC = [0:(C_NUM_BANKS_MEM-1)], PERMIT = BASE_USER, DESC = 'Memory Chip Enable Active High', IO_IF = emc_0, IO_IS = emc_ce
PORT Mem_ADV_LDN = "", DIR = O, PERMIT = BASE_USER, DESC = 'Memory Advanced Burst Address/Load New Address', IO_IF = emc_0, IO_IS = emc_adv_ldn
PORT Mem_LBON = "", DIR = O, PERMIT = BASE_USER, DESC = 'Memory Linear/Interleaved Burst Order'
PORT Mem_CKEN = "", DIR = O, PERMIT = BASE_USER, DESC = 'Memory Clock Enable', IO_IF = emc_0, IO_IS = emc_cken
PORT Mem_RNW = "", DIR = O, PERMIT = BASE_USER, DESC = 'Memory Read Not Write'
PORT Mem_DQ = "", DIR = IO, VEC = [0:(C_MAX_MEM_WIDTH-1)], THREE_STATE = TRUE, TRI_I = Mem_DQ_I, TRI_O = Mem_DQ_O, TRI_T = Mem_DQ_T, ENABLE = MULTI, PERMIT = BASE_USER, DESC = 'Memory Data Bus', IO_IF = emc_0, IO_IS = emc_data

END

FINISH_SINGLE_MPD

START_SINGLE_MPD plbv46_pcie_v4_02_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : plbv46_pcie
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN plbv46_pcie

## Peripheral Options
OPTION RUN_NGCBUILD = TRUE
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = MIXED
OPTION STYLE = MIX
OPTION IPLEVEL_DRC_PROC = check_iplevel_settings
OPTION IPLEVEL_UPDATE_VALUE_PROC = update_native_dwidth
OPTION SYSLEVEL_DRC_PROC = check_syslevel_settings
OPTION PLATGEN_SYSLEVEL_UPDATE_PROC = generate_corelevel_ucf
OPTION USAGE_LEVEL = BASE_USER
OPTION DESC = PLBv46 IP Interface (IPIF) to LogicCORE PCI Express Bridge
OPTION LONG_DESC = Bridge between the PLBv46 IPIF and the Xilinx LogiCORE PCI Express Interface core
OPTION IP_GROUP = PCI:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=SUPERSEDED, spartan3=SUPERSEDED, spartan3an=SUPERSEDED, spartan3a=SUPERSEDED, spartan3e=SUPERSEDED, spartan3adsp=SUPERSEDED, virtex4lx=SUPERSEDED, virtex4sx=SUPERSEDED, virtex4fx=SUPERSEDED, virtex5lx=SUPERSEDED, virtex5sx=SUPERSEDED, virtex5fx=SUPERSEDED, aspartan3e=SUPERSEDED, aspartan3a=SUPERSEDED, aspartan3adsp=SUPERSEDED, qvirtex4lx=SUPERSEDED, qvirtex4sx=SUPERSEDED, qvirtex4fx=SUPERSEDED, qrvirtex4lx=SUPERSEDED, qrvirtex4sx=SUPERSEDED, qrvirtex4fx=SUPERSEDED, spartan6t=SUPERSEDED, spartan6=SUPERSEDED, spartan6l=SUPERSEDED, qspartan6t=SUPERSEDED, qspartan6=SUPERSEDED, aspartan6t=SUPERSEDED, aspartan6=SUPERSEDED, virtex6lx=SUPERSEDED, virtex6sx=SUPERSEDED, virtex6hx=SUPERSEDED, virtex6cx=SUPERSEDED, virtex6llx=SUPERSEDED, virtex6lsx=SUPERSEDED, qspartan6l=SUPERSEDED, qrvirtex5=SUPERSEDED, qvirtex6lx=SUPERSEDED, qvirtex6sx=SUPERSEDED, qvirtex6fx=SUPERSEDED, qvirtex6tx=SUPERSEDED)

IO_INTERFACE IO_IF = pcie_0, IO_TYPE = XIL_PCIE_V1

## Bus Interfaces
BUS_INTERFACE BUS = SPLB, BUS_TYPE = SLAVE, BUS_STD = PLBV46
BUS_INTERFACE BUS = MPLB, BUS_TYPE = MASTER, BUS_STD = PLBV46, GENERATE_BURSTS = TRUE

## Generics for VHDL or Parameters for Verilog
PARAMETER C_FAMILY = virtex5, DT = STRING
PARAMETER C_SUBFAMILY = lx, DT = STRING
PARAMETER C_IPIFBAR_NUM = 1, DT = INTEGER, RANGE = (1:6), IO_IF = pcie_0, IO_IS = C_IPIFBAR_NUM
PARAMETER C_INCLUDE_BAROFFSET_REG = 0, DT = INTEGER, RANGE = (0,1), IO_IF = pcie_0, IO_IS = C_INCLUDE_BAROFFSET_REG
PARAMETER C_PCIBAR_NUM = 1, DT = INTEGER, RANGE = (1:3), IO_IF = pcie_0, IO_IS = C_PCIBAR_NUM
PARAMETER C_NO_OF_LANES = 1, DT = INTEGER, RANGE = (1, 4, 8), IO_IF = pcie_0, IO_IS = C_NO_OF_LANES
PARAMETER C_DEVICE_ID = 0x0000, DT = std_logic_vector, IO_IF = pcie_0, IO_IS = C_DEVICE_ID
PARAMETER C_VENDOR_ID = 0x0000, DT = std_logic_vector, IO_IF = pcie_0, IO_IS = C_VENDOR_ID
PARAMETER C_CLASS_CODE = 0x000000, DT = std_logic_vector, IO_IF = pcie_0, IO_IS = C_CLASS_CODE
PARAMETER C_REV_ID = 0x00, DT = std_logic_vector, IO_IF = pcie_0, IO_IS = C_REV_ID
PARAMETER C_SUBSYSTEM_ID = 0x0000, DT = std_logic_vector, IO_IF = pcie_0, IO_IS = C_SUBSYSTEM_ID
PARAMETER C_SUBSYSTEM_VENDOR_ID = 0x0000, DT = std_logic_vector, IO_IF = pcie_0, IO_IS = C_SUBSYSTEM_VENDOR_ID
PARAMETER C_COMP_TIMEOUT = 0, DT = INTEGER, RANGE = (0,1), IO_IF = pcie_0, IO_IS = C_COMP_TIMEOUT
PARAMETER C_INCLUDE_RC = 0, DT = INTEGER, RANGE = (0,1), IO_IF = pcie_0, IO_IS = C_INCLUDE_RC
PARAMETER C_MPLB_AWIDTH = 32, DT = INTEGER, BUS = MPLB, ASSIGNMENT = CONSTANT
PARAMETER C_MPLB_DWIDTH = 64, DT = INTEGER, BUS = MPLB
PARAMETER C_MPLB_SMALLEST_SLAVE = 32, BUS = MPLB, DT = INTEGER
PARAMETER C_MPLB_NATIVE_DWIDTH = 64, DT = INTEGER, BUS = MPLB, RANGE = (32, 64), IO_IF = pcie_0, IO_IS = C_MPLB_NATIVE_DWIDTH, ASSIGNMENT = UPDATE, IPLEVEL_UPDATE_VALUE_PROC = update_mplb_native_dwidth
PARAMETER C_SPLB_MID_WIDTH = 3, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_NUM_MASTERS = 8, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_AWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_BASEADDR = 0xffffffff, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_HIGHADDR, ADDR_TYPE = REGISTER
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_BASEADDR, ADDR_TYPE = REGISTER
PARAMETER C_SPLB_DWIDTH = 64, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_NATIVE_DWIDTH = 64, DT = INTEGER, BUS = SPLB, RANGE = (32, 64), IO_IF = pcie_0, IO_IS = C_SPLB_NATIVE_DWIDTH, ASSIGNMENT = UPDATE, IPLEVEL_UPDATE_VALUE_PROC = update_splb_native_dwidth
PARAMETER C_SPLB_P2P = 0, DT = INTEGER, BUS = SPLB, TYPE = NON_HDL
PARAMETER C_IPIFBAR_0 = 0xFFFFFFFF, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_IPIFBAR_HIGHADDR_0, ADDR_TYPE = BRIDGE, ISVALID = (C_IPIFBAR_NUM>=1), IO_IF = pcie_0, IO_IS = C_IPIFBAR_0
PARAMETER C_IPIFBAR_1 = 0xFFFFFFFF, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_IPIFBAR_HIGHADDR_1, ADDR_TYPE = BRIDGE, ISVALID = (C_IPIFBAR_NUM>=2), IO_IF = pcie_0, IO_IS = C_IPIFBAR_1
PARAMETER C_IPIFBAR_2 = 0xFFFFFFFF, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_IPIFBAR_HIGHADDR_2, ADDR_TYPE = BRIDGE, ISVALID = (C_IPIFBAR_NUM>=3), IO_IF = pcie_0, IO_IS = C_IPIFBAR_2
PARAMETER C_IPIFBAR_3 = 0xFFFFFFFF, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_IPIFBAR_HIGHADDR_3, ADDR_TYPE = BRIDGE, ISVALID = (C_IPIFBAR_NUM>=4), IO_IF = pcie_0, IO_IS = C_IPIFBAR_3
PARAMETER C_IPIFBAR_4 = 0xFFFFFFFF, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_IPIFBAR_HIGHADDR_4, ADDR_TYPE = BRIDGE, ISVALID = (C_IPIFBAR_NUM>=5), IO_IF = pcie_0, IO_IS = C_IPIFBAR_4
PARAMETER C_IPIFBAR_5 = 0xFFFFFFFF, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_IPIFBAR_HIGHADDR_5, ADDR_TYPE = BRIDGE, ISVALID = (C_IPIFBAR_NUM>=6), IO_IF = pcie_0, IO_IS = C_IPIFBAR_5
PARAMETER C_IPIFBAR_HIGHADDR_0 = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_IPIFBAR_0, ADDR_TYPE = BRIDGE, ISVALID = (C_IPIFBAR_NUM>=1), IO_IF = pcie_0, IO_IS = C_IPIFBAR_HIGHADDR_0
PARAMETER C_IPIFBAR_HIGHADDR_1 = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_IPIFBAR_1, ADDR_TYPE = BRIDGE, ISVALID = (C_IPIFBAR_NUM>=2), IO_IF = pcie_0, IO_IS = C_IPIFBAR_HIGHADDR_1
PARAMETER C_IPIFBAR_HIGHADDR_2 = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_IPIFBAR_2, ADDR_TYPE = BRIDGE, ISVALID = (C_IPIFBAR_NUM>=3), IO_IF = pcie_0, IO_IS = C_IPIFBAR_HIGHADDR_2
PARAMETER C_IPIFBAR_HIGHADDR_3 = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_IPIFBAR_3, ADDR_TYPE = BRIDGE, ISVALID = (C_IPIFBAR_NUM>=4), IO_IF = pcie_0, IO_IS = C_IPIFBAR_HIGHADDR_3
PARAMETER C_IPIFBAR_HIGHADDR_4 = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_IPIFBAR_4, ADDR_TYPE = BRIDGE, ISVALID = (C_IPIFBAR_NUM>=5), IO_IF = pcie_0, IO_IS = C_IPIFBAR_HIGHADDR_4
PARAMETER C_IPIFBAR_HIGHADDR_5 = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_IPIFBAR_5, ADDR_TYPE = BRIDGE, ISVALID = (C_IPIFBAR_NUM>=6), IO_IF = pcie_0, IO_IS = C_IPIFBAR_HIGHADDR_5
PARAMETER C_IPIFBAR2PCIBAR_0 = 0xFFFFFFFF, DT = std_logic_vector, ISVALID = (C_IPIFBAR_NUM>=1), IO_IF = pcie_0, IO_IS = C_IPIFBAR2PCIBAR_0
PARAMETER C_IPIFBAR2PCIBAR_1 = 0xFFFFFFFF, DT = std_logic_vector, ISVALID = (C_IPIFBAR_NUM>=2), IO_IF = pcie_0, IO_IS = C_IPIFBAR2PCIBAR_1
PARAMETER C_IPIFBAR2PCIBAR_2 = 0xFFFFFFFF, DT = std_logic_vector, ISVALID = (C_IPIFBAR_NUM>=3), IO_IF = pcie_0, IO_IS = C_IPIFBAR2PCIBAR_2
PARAMETER C_IPIFBAR2PCIBAR_3 = 0xFFFFFFFF, DT = std_logic_vector, ISVALID = (C_IPIFBAR_NUM>=4), IO_IF = pcie_0, IO_IS = C_IPIFBAR2PCIBAR_3
PARAMETER C_IPIFBAR2PCIBAR_4 = 0xFFFFFFFF, DT = std_logic_vector, ISVALID = (C_IPIFBAR_NUM>=5), IO_IF = pcie_0, IO_IS = C_IPIFBAR2PCIBAR_4
PARAMETER C_IPIFBAR2PCIBAR_5 = 0xFFFFFFFF, DT = std_logic_vector, ISVALID = (C_IPIFBAR_NUM>=6), IO_IF = pcie_0, IO_IS = C_IPIFBAR2PCIBAR_5
PARAMETER C_IPIFBAR_AS_0 = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_IPIFBAR_NUM>=1), IO_IF = pcie_0, IO_IS = C_IPIFBAR_AS_0
PARAMETER C_IPIFBAR_AS_1 = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_IPIFBAR_NUM>=2), IO_IF = pcie_0, IO_IS = C_IPIFBAR_AS_1
PARAMETER C_IPIFBAR_AS_2 = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_IPIFBAR_NUM>=3), IO_IF = pcie_0, IO_IS = C_IPIFBAR_AS_2
PARAMETER C_IPIFBAR_AS_3 = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_IPIFBAR_NUM>=4), IO_IF = pcie_0, IO_IS = C_IPIFBAR_AS_3
PARAMETER C_IPIFBAR_AS_4 = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_IPIFBAR_NUM>=5), IO_IF = pcie_0, IO_IS = C_IPIFBAR_AS_4
PARAMETER C_IPIFBAR_AS_5 = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_IPIFBAR_NUM>=6), IO_IF = pcie_0, IO_IS = C_IPIFBAR_AS_5
PARAMETER C_ECAM_BASEADDR = 0xFFFFFFFF, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_ECAM_HIGHADDR, ADDR_TYPE = BRIDGE, ISVALID = (C_INCLUDE_RC=1), IO_IF = pcie_0, IO_IS = C_ECAM_BASEADDR
PARAMETER C_ECAM_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_ECAM_BASEADDR, ADDR_TYPE = BRIDGE, ISVALID = (C_INCLUDE_RC=1), IO_IF = pcie_0, IO_IS = C_ECAM_HIGHADDR
PARAMETER C_PCIBAR2IPIFBAR_0 = 0xFFFFFFFF, DT = std_logic_vector, ISVALID = (C_PCIBAR_NUM>=1), IO_IF = pcie_0, IO_IS = C_PCIBAR2IPIFBAR_0
PARAMETER C_PCIBAR2IPIFBAR_1 = 0xFFFFFFFF, DT = std_logic_vector, ISVALID = (C_PCIBAR_NUM>=2), IO_IF = pcie_0, IO_IS = C_PCIBAR2IPIFBAR_1
PARAMETER C_PCIBAR2IPIFBAR_2 = 0xFFFFFFFF, DT = std_logic_vector, ISVALID = (C_PCIBAR_NUM>=3), IO_IF = pcie_0, IO_IS = C_PCIBAR2IPIFBAR_2
PARAMETER C_PCIBAR_LEN_0 = 16, DT = INTEGER, RANGE = (13:29), ISVALID = (C_PCIBAR_NUM>=1), IO_IF = pcie_0, IO_IS = C_PCIBAR_LEN_0
PARAMETER C_PCIBAR_LEN_1 = 16, DT = INTEGER, RANGE = (13:29), ISVALID = (C_PCIBAR_NUM>=2), IO_IF = pcie_0, IO_IS = C_PCIBAR_LEN_1
PARAMETER C_PCIBAR_LEN_2 = 16, DT = INTEGER, RANGE = (13:29), ISVALID = (C_PCIBAR_NUM>=3), IO_IF = pcie_0, IO_IS = C_PCIBAR_LEN_2
PARAMETER C_PCIBAR_AS = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PCIBAR_NUM>=1), IO_IF = pcie_0, IO_IS = C_PCIBAR_AS
PARAMETER C_PCIE_CAP_SLOT_IMPLEMENTED = 1, DT = INTEGER, RANGE = (0,1), IO_IF = pcie_0, IO_IS = C_PCIE_CAP_SLOT_IMPLEMENTED
PARAMETER C_BOARD = none, DT = STRING, TYPE = NON_HDL, IO_IF = pcie_0, IO_IS = C_BOARD, VALUES = (ml505=ml505, ml555=ml555, ml507=ml507, none=none)
PARAMETER C_DEVICE = DEFAULT, DT = STRING, TYPE = NON_HDL, ASSIGNMENT = UPDATE

## Ports
PORT MPLB_Clk = "", DIR = I, BUS = MPLB, SIGIS = CLK
PORT MPLB_Rst = MPLB_Rst, DIR = I, BUS = MPLB
PORT PLB_MTimeout = PLB_MTimeout, DIR = I, BUS = MPLB
PORT PLB_MIRQ = PLB_MIRQ, DIR = I, BUS = MPLB
PORT PLB_MAddrAck = PLB_MAddrAck, DIR = I, BUS = MPLB
PORT PLB_MSSize = PLB_MSSize, DIR = I, VEC = [0:1], BUS = MPLB
PORT PLB_MRearbitrate = PLB_MRearbitrate, DIR = I, BUS = MPLB
PORT PLB_MBusy = PLB_MBusy, DIR = I, BUS = MPLB
PORT PLB_MRdErr = PLB_MRdErr, DIR = I, BUS = MPLB
PORT PLB_MWrErr = PLB_MWrErr, DIR = I, BUS = MPLB
PORT PLB_MWrDAck = PLB_MWrDAck, DIR = I, BUS = MPLB
PORT PLB_MRdDBus = PLB_MRdDBus, DIR = I, VEC = [0:(C_MPLB_DWIDTH-1)], BUS = MPLB
PORT PLB_MRdWdAddr = PLB_MRdWdAddr, DIR = I, VEC = [0:3], BUS = MPLB
PORT PLB_MRdDAck = PLB_MRdDAck, DIR = I, BUS = MPLB
PORT PLB_MRdBTerm = PLB_MRdBTerm, DIR = I, BUS = MPLB
PORT PLB_MWrBTerm = PLB_MWrBTerm, DIR = I, BUS = MPLB
PORT M_request = M_request, DIR = O, BUS = MPLB
PORT M_priority = M_priority, DIR = O, VEC = [0:1], BUS = MPLB
PORT M_buslock = M_busLock, DIR = O, BUS = MPLB
PORT M_RNW = M_RNW, DIR = O, BUS = MPLB
PORT M_BE = M_BE, DIR = O, VEC = [0:((C_MPLB_DWIDTH/8)-1)], BUS = MPLB
PORT M_MSize = M_MSize, DIR = O, VEC = [0:1], BUS = MPLB
PORT M_size = M_size, DIR = O, VEC = [0:3], BUS = MPLB
PORT M_type = M_type, DIR = O, VEC = [0:2], BUS = MPLB
PORT M_lockErr = M_lockErr, DIR = O, BUS = MPLB
PORT M_abort = M_abort, DIR = O, BUS = MPLB
PORT M_TAttribute = M_TAttribute, DIR = O, VEC = [0:15], BUS = MPLB
PORT M_UABus = M_UABus, DIR = O, VEC = [0:31], BUS = MPLB
PORT M_ABus = M_ABus, DIR = O, VEC = [0:(C_MPLB_AWIDTH-1)], BUS = MPLB
PORT M_wrDBus = M_wrDBus, DIR = O, VEC = [0:(C_MPLB_DWIDTH-1)], BUS = MPLB
PORT M_wrBurst = M_wrBurst, DIR = O, BUS = MPLB
PORT M_rdBurst = M_rdBurst, DIR = O, BUS = MPLB
PORT SPLB_Clk = "", DIR = I, SIGIS = CLK, BUS = SPLB
PORT SPLB_Rst = SPLB_Rst, DIR = I, SIGIS = RST, BUS = SPLB
PORT PLB_ABus = PLB_ABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB
PORT PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB
PORT PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB
PORT PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB
PORT PLB_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB_MID_WIDTH-1)], BUS = SPLB
PORT PLB_abort = PLB_abort, DIR = I, BUS = SPLB
PORT PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB
PORT PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB
PORT PLB_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB_DWIDTH/8)-1)], BUS = SPLB
PORT PLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB
PORT PLB_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB
PORT PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB
PORT PLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB
PORT PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB
PORT PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB
PORT PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB
PORT PLB_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB
PORT Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB
PORT Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB
PORT Sl_wait = Sl_wait, DIR = O, BUS = SPLB
PORT Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB
PORT Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB
PORT Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB
PORT Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB
PORT Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB
PORT Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB
PORT Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB
PORT Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB
PORT Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT REFCLK = "", DIR = I, IO_IF = pcie_0, IO_IS = REFCLK
PORT Bridge_Clk = "", DIR = O, IO_IF = pcie_0, IO_IS = Bridge_Clk
PORT RXN = "", DIR = I, VEC = [(C_NO_OF_LANES-1):0], IOB_STATE = BUF, IO_IF = pcie_0, IO_IS = RXN
PORT RXP = "", DIR = I, VEC = [(C_NO_OF_LANES-1):0], IOB_STATE = BUF, IO_IF = pcie_0, IO_IS = RXP
PORT TXN = "", DIR = O, VEC = [(C_NO_OF_LANES-1):0], IOB_STATE = BUF, IO_IF = pcie_0, IO_IS = TXN
PORT TXP = "", DIR = O, VEC = [(C_NO_OF_LANES-1):0], IOB_STATE = BUF, IO_IF = pcie_0, IO_IS = TXP
PORT IP2INTC_Irpt = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH
PORT MSI_request = "", DIR = I, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, IO_IF = pcie_0, IO_IS = MSI_request

END

FINISH_SINGLE_MPD

START_SINGLE_MPD plbv46_plbv46_bridge_v1_02_b 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : plbv46_plbv46_bridge
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN plbv46_plbv46_bridge

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION STYLE = HDL
OPTION LAST_UPDATED = 12.2
OPTION DESC = PLBV46 to PLBV46 Bridge
OPTION LONG_DESC = PLBV46 to PLBV46 bridge.
OPTION IP_GROUP = Bus and Bridge:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=SUPERSEDED, spartan3=SUPERSEDED, spartan3an=SUPERSEDED, spartan3a=SUPERSEDED, spartan3e=SUPERSEDED, spartan3adsp=SUPERSEDED, virtex4lx=SUPERSEDED, virtex4sx=SUPERSEDED, virtex4fx=SUPERSEDED, virtex5lx=SUPERSEDED, virtex5sx=SUPERSEDED, virtex5fx=SUPERSEDED, aspartan3e=SUPERSEDED, aspartan3a=SUPERSEDED, aspartan3adsp=SUPERSEDED, qvirtex4lx=SUPERSEDED, qvirtex4sx=SUPERSEDED, qvirtex4fx=SUPERSEDED, qrvirtex4lx=SUPERSEDED, qrvirtex4sx=SUPERSEDED, qrvirtex4fx=SUPERSEDED, spartan6t=SUPERSEDED, spartan6=SUPERSEDED, spartan6l=SUPERSEDED, qspartan6t=SUPERSEDED, qspartan6=SUPERSEDED, aspartan6t=SUPERSEDED, aspartan6=SUPERSEDED, virtex6lx=SUPERSEDED, virtex6sx=SUPERSEDED, virtex6hx=SUPERSEDED, virtex6cx=SUPERSEDED, virtex6llx=SUPERSEDED, virtex6lsx=SUPERSEDED, qspartan6l=SUPERSEDED, qrvirtex5=SUPERSEDED, qvirtex6lx=SUPERSEDED, qvirtex6sx=SUPERSEDED, qvirtex6fx=SUPERSEDED, qvirtex6tx=SUPERSEDED)
OPTION RUN_NGCBUILD = FALSE


## Bus Interfaces
BUS_INTERFACE BUS = MPLB, BUS_TYPE = MASTER, BUS_STD = PLBV46, GENERATE_BURSTS = TRUE
BUS_INTERFACE BUS = SPLB, BUS_TYPE = SLAVE, BUS_STD = PLBV46

## Generics for VHDL or Parameters for Verilog
PARAMETER C_NUM_ADDR_RNG = 1, DT = INTEGER, RANGE = (1:4)
PARAMETER C_BRIDGE_BASEADDR = 0xffffffff, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_BRIDGE_HIGHADDR, ASSIGNMENT = REQUIRE
PARAMETER C_BRIDGE_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_BRIDGE_BASEADDR, ASSIGNMENT = REQUIRE
PARAMETER C_RNG0_BASEADDR = 0xffffffff, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_RNG0_HIGHADDR, BRIDGE_TO = MPLB, ISVALID = (C_NUM_ADDR_RNG>=1), ASSIGNMENT = REQUIRE
PARAMETER C_RNG0_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_RNG0_BASEADDR, BRIDGE_TO = MPLB, ISVALID = (C_NUM_ADDR_RNG>=1), ASSIGNMENT = REQUIRE
PARAMETER C_RNG1_BASEADDR = 0xffffffff, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_RNG1_HIGHADDR, BRIDGE_TO = MPLB, ISVALID = (C_NUM_ADDR_RNG>=2), ASSIGNMENT = REQUIRE
PARAMETER C_RNG1_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_RNG1_BASEADDR, BRIDGE_TO = MPLB, ISVALID = (C_NUM_ADDR_RNG>=2), ASSIGNMENT = REQUIRE
PARAMETER C_RNG2_BASEADDR = 0xffffffff, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_RNG2_HIGHADDR, BRIDGE_TO = MPLB, ISVALID = (C_NUM_ADDR_RNG>=3), ASSIGNMENT = REQUIRE
PARAMETER C_RNG2_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_RNG2_BASEADDR, BRIDGE_TO = MPLB, ISVALID = (C_NUM_ADDR_RNG>=3), ASSIGNMENT = REQUIRE
PARAMETER C_RNG3_BASEADDR = 0xffffffff, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_RNG3_HIGHADDR, BRIDGE_TO = MPLB, ISVALID = (C_NUM_ADDR_RNG>=4), ASSIGNMENT = REQUIRE
PARAMETER C_RNG3_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_RNG3_BASEADDR, BRIDGE_TO = MPLB, ISVALID = (C_NUM_ADDR_RNG>=4), ASSIGNMENT = REQUIRE
PARAMETER C_SPLB_P2P = 0, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_BIGGEST_MASTER = 32, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_AWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_DWIDTH = 32, DT = INTEGER, BUS = SPLB
PARAMETER C_MPLB_AWIDTH = 32, DT = INTEGER, BUS = MPLB, ASSIGNMENT = CONSTANT
PARAMETER C_MPLB_DWIDTH = 32, DT = INTEGER, BUS = MPLB
PARAMETER C_SPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_MPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = MPLB, ASSIGNMENT = CONSTANT
PARAMETER C_MPLB_SMALLEST_SLAVE = 32, DT = INTEGER, BUS = MPLB
PARAMETER C_BUS_CLOCK_RATIO = 1, DT = INTEGER, RANGE = (1,2,4)
PARAMETER C_PREFETCH_TIMEOUT = 10, DT = INTEGER, RANGE = (1:32)
PARAMETER C_FAMILY = virtex5, DT = STRING

## Ports
PORT SPLB_Clk = "", DIR = I, SIGIS = CLK, BUS = SPLB
PORT SPLB_Rst = SPLB_Rst, DIR = I, BUS = SPLB
PORT IP2INTC_Irpt = "", DIR = O, SIGIS = INTERRUPT, LEVEL = HIGH
PORT PLB_ABus = PLB_ABus, DIR = I, VEC = [0:C_SPLB_AWIDTH-1], BUS = SPLB
PORT PLB_UABus = PLB_UABus, DIR = I, VEC = [0:C_SPLB_AWIDTH-1], BUS = SPLB
PORT PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB
PORT PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB
PORT PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB
PORT PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB
PORT PLB_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB_MID_WIDTH-1)], BUS = SPLB
PORT PLB_abort = PLB_abort, DIR = I, BUS = SPLB
PORT PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB
PORT PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB
PORT PLB_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB_DWIDTH/8)-1)], BUS = SPLB
PORT PLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB
PORT PLB_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB
PORT PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB
PORT PLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB
PORT PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB
PORT PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB
PORT PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB
PORT PLB_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB
PORT Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB
PORT Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB
PORT Sl_wait = Sl_wait, DIR = O, BUS = SPLB
PORT Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB
PORT Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB
PORT Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB
PORT Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB
PORT Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB
PORT Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB
PORT Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB
PORT Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB
PORT Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT MPLB_Clk = "", DIR = I, SIGIS = CLK, BUS = MPLB
PORT MPLB_Rst = MPLB_Rst, DIR = I, BUS = MPLB
PORT M_request = M_request, DIR = O, BUS = MPLB
PORT M_priority = M_priority, DIR = O, VEC = [0:1], BUS = MPLB
PORT M_busLock = M_busLock, DIR = O, BUS = MPLB
PORT M_RNW = M_RNW, DIR = O, BUS = MPLB
PORT M_BE = M_BE, DIR = O, VEC = [0:((C_MPLB_DWIDTH/8)-1)], BUS = MPLB
PORT M_MSize = M_MSize, DIR = O, VEC = [0:1], BUS = MPLB
PORT M_size = M_size, DIR = O, VEC = [0:3], BUS = MPLB
PORT M_type = M_type, DIR = O, VEC = [0:2], BUS = MPLB
PORT M_ABus = M_ABus, DIR = O, VEC = [0:C_MPLB_AWIDTH-1], BUS = MPLB
PORT M_wrBurst = M_wrBurst, DIR = O, BUS = MPLB
PORT M_rdBurst = M_rdBurst, DIR = O, BUS = MPLB
PORT M_wrDBus = M_wrDBus, DIR = O, VEC = [0:(C_MPLB_DWIDTH-1)], BUS = MPLB
PORT PLB_MAddrAck = PLB_MAddrAck, DIR = I, BUS = MPLB
PORT PLB_MSSize = PLB_MSSize, DIR = I, VEC = [0:1], BUS = MPLB
PORT PLB_MRearbitrate = PLB_MRearbitrate, DIR = I, BUS = MPLB
PORT PLB_MTimeout = PLB_MTimeout, DIR = I, BUS = MPLB
PORT PLB_MRdErr = PLB_MRdErr, DIR = I, BUS = MPLB
PORT PLB_MWrErr = PLB_MWrErr, DIR = I, BUS = MPLB
PORT PLB_MRdDBus = PLB_MRdDBus, DIR = I, VEC = [0:(C_MPLB_DWIDTH-1)], BUS = MPLB
PORT PLB_MRdDAck = PLB_MRdDAck, DIR = I, BUS = MPLB
PORT PLB_MRdBTerm = PLB_MRdBTerm, DIR = I, BUS = MPLB
PORT PLB_MWrDAck = PLB_MWrDAck, DIR = I, BUS = MPLB
PORT PLB_MWrBTerm = PLB_MWrBTerm, DIR = I, BUS = MPLB
PORT M_TAttribute = M_TAttribute, DIR = O, VEC = [0:15], BUS = MPLB
PORT M_lockErr = M_lockErr, DIR = O, BUS = MPLB
PORT M_abort = M_abort, DIR = O, BUS = MPLB
PORT M_UABus = M_UABus, DIR = O, VEC = [0:C_MPLB_AWIDTH-1], BUS = MPLB
PORT PLB_MBusy = PLB_MBusy, DIR = I, BUS = MPLB
PORT PLB_MIRQ = PLB_MIRQ, DIR = I, BUS = MPLB
PORT PLB_MRdWdAddr = PLB_MRdWdAddr, DIR = I, VEC = [0:3], BUS = MPLB

END

FINISH_SINGLE_MPD

START_SINGLE_MPD xps_uart16550_v3_00_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : xps_uart16550
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN xps_uart16550

## Peripheral Options
OPTION STYLE = HDL
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION USAGE_LEVEL = BASE_USER
OPTION IPLEVEL_DRC_PROC = check_iplevel_settings
OPTION DESC = XPS UART (16550-style)
OPTION LONG_DESC = PLBV46 16550/450 UART (Universal Asynchronous Receiver/Transmitter)
OPTION IP_GROUP = Communication Low-Speed:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=PRODUCTION, spartan3=PRODUCTION, spartan3an=PRODUCTION, spartan3a=PRODUCTION, spartan3e=PRODUCTION, spartan3adsp=PRODUCTION, virtex4lx=PRODUCTION, virtex4sx=PRODUCTION, virtex4fx=PRODUCTION, virtex5lx=PRODUCTION, virtex5sx=PRODUCTION, virtex5fx=PRODUCTION, aspartan3e=PRODUCTION, aspartan3a=PRODUCTION, aspartan3adsp=PRODUCTION, qvirtex4lx=PRODUCTION, qvirtex4sx=PRODUCTION, qvirtex4fx=PRODUCTION, qrvirtex4lx=PRODUCTION, qrvirtex4sx=PRODUCTION, qrvirtex4fx=PRODUCTION, spartan6t=PRODUCTION, spartan6=PRODUCTION, spartan6l=PRE_PRODUCTION, qspartan6t=PRODUCTION, qspartan6=PRODUCTION, aspartan6t=PRODUCTION, aspartan6=PRODUCTION, virtex6lx=PRODUCTION, virtex6sx=PRODUCTION, virtex6hx=PRODUCTION, virtex6cx=PRODUCTION, virtex6llx=PRE_PRODUCTION, virtex6lsx=PRE_PRODUCTION, qspartan6l=PRE_PRODUCTION, qrvirtex5=PRE_PRODUCTION, qvirtex6lx=PRE_PRODUCTION, qvirtex6sx=PRE_PRODUCTION, qvirtex6fx=PRE_PRODUCTION, qvirtex6tx=PRE_PRODUCTION)
OPTION RUN_NGCBUILD = FALSE

IO_INTERFACE IO_IF = uart_0, IO_TYPE = XIL_UART_V1

## Bus Interfaces
BUS_INTERFACE BUS = SPLB, BUS_TYPE = SLAVE, BUS_STD = PLBV46

## Generics for VHDL or Parameters for Verilog
PARAMETER C_BASEADDR = 0xffffffff, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_HIGHADDR, ASSIGNMENT = REQUIRE, MIN_SIZE = 0x2000
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_BASEADDR, ASSIGNMENT = REQUIRE
PARAMETER C_IS_A_16550 = 1, DT = INTEGER, RANGE = (0,1), PERMIT = BASE_USER, DESC = UART Type, VALUES = (0= Configure as 16450, 1= Configure as 16550 )
PARAMETER C_HAS_EXTERNAL_XIN = 0, DT = INTEGER, RANGE = (0,1)
PARAMETER C_HAS_EXTERNAL_RCLK = 0, DT = INTEGER, RANGE = (0,1)
PARAMETER C_EXTERNAL_XIN_CLK_HZ = 25000000, DT = INTEGER, ASSIGNMENT = REQUIRE, ISVALID = (C_HAS_EXTERNAL_XIN==1), TYPE = NON_HDL, DESC = 'XIN Clock Frequency'
PARAMETER C_SPLB_AWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_DWIDTH = 32, DT = INTEGER, BUS = SPLB, RANGE = (32,64,128)
PARAMETER C_SPLB_P2P = 0, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_FAMILY = virtex5, DT = STRING

## Ports
PORT SPLB_Clk = "", DIR = I, SIGIS = Clk, BUS = SPLB
PORT SPLB_Rst = SPLB_Rst, DIR = I, SIGIS = Rst, BUS = SPLB
PORT PLB_ABus = PLB_ABus, DIR = I, VEC = [0:C_SPLB_AWIDTH-1], BUS = SPLB
PORT PLB_UABus = PLB_UABus, DIR = I, VEC = [0:C_SPLB_AWIDTH-1], BUS = SPLB
PORT PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB
PORT PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB
PORT PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB
PORT PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB
PORT PLB_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB_MID_WIDTH-1)], BUS = SPLB
PORT PLB_abort = PLB_abort, DIR = I, BUS = SPLB
PORT PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB
PORT PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB
PORT PLB_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB_DWIDTH/8)-1)], BUS = SPLB
PORT PLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB
PORT PLB_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB
PORT PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB
PORT PLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB
PORT PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB
PORT PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB
PORT PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB
PORT PLB_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB
PORT Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB
PORT Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB
PORT Sl_wait = Sl_wait, DIR = O, BUS = SPLB
PORT Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB
PORT Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB
PORT Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB
PORT Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB
PORT Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB
PORT Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB
PORT Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB
PORT Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB
PORT Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT baudoutN = "", DIR = O, PERMIT = BASE_USER, DESC = 'Transmitter Clock'
PORT ctsN = "", DIR = I, PERMIT = BASE_USER, DESC = 'Clear To Send', IO_IF = uart_0, IO_IS = clear_to_send
PORT dcdN = "", DIR = I, PERMIT = BASE_USER, DESC = 'Data Carrier Detect'
PORT ddis = "", DIR = O, PERMIT = BASE_USER, DESC = 'Driver disable'
PORT dsrN = "", DIR = I, PERMIT = BASE_USER, DESC = 'Data Set Ready'
PORT dtrN = "", DIR = O, PERMIT = BASE_USER, DESC = 'Data Terminal Ready'
PORT out1N = "", DIR = O, PERMIT = BASE_USER, DESC = 'User Controlled Output'
PORT out2N = "", DIR = O, PERMIT = BASE_USER, DESC = 'User Controlled Output'
PORT rclk = "", DIR = I, SIGIS = Clk, PERMIT = BASE_USER, ISVALID = (C_HAS_EXTERNAL_RCLK==1), DESC = 'Receiver 16x Clock'
PORT riN = "", DIR = I, PERMIT = BASE_USER, DESC = 'Ring Indicator'
PORT rtsN = "", DIR = O, PERMIT = BASE_USER, DESC = 'Request To Send', IO_IF = uart_0, IO_IS = req_to_send
PORT rxrdyN = "", DIR = O, PERMIT = BASE_USER, DESC = 'DMA Control Signal'
PORT sin = "", DIR = I, PERMIT = BASE_USER, DESC = 'Serial Data Input', IO_IF = uart_0, IO_IS = serial_in
PORT sout = "", DIR = O, PERMIT = BASE_USER, DESC = 'Serial Data Output', IO_IF = uart_0, IO_IS = serial_out
PORT IP2INTC_Irpt = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, INTERRUPT_PRIORITY = LOW
PORT txrdyN = "", DIR = O, PERMIT = BASE_USER, DESC = 'DMA Control Signal'
PORT xin = "", DIR = I, SIGIS = Clk, PERMIT = BASE_USER, ISVALID = (C_HAS_EXTERNAL_XIN==1), DESC = 'Baudrate Generator Reference Clock'
PORT xout = "", DIR = O, PERMIT = BASE_USER, DESC = 'Inverted XIN'
PORT Freeze = "", DIR = I, PERMIT = BASE_USER, DESC = 'Freeze UART'

END

FINISH_SINGLE_MPD

START_SINGLE_MPD xps_epc_v1_02_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : xps_epc
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN xps_epc

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION USAGE_LEVEL = BASE_USER
OPTION IPLEVEL_DRC_PROC = check_iplevel_settings
OPTION DESC = XPS External Peripheral Controller
OPTION LONG_DESC = PLBV46 External Peripherals other than Memories
OPTION IP_GROUP = Peripheral Controller:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=PRODUCTION, spartan3=PRODUCTION, spartan3an=PRODUCTION, spartan3a=PRODUCTION, spartan3e=PRODUCTION, spartan3adsp=PRODUCTION, virtex4lx=PRODUCTION, virtex4sx=PRODUCTION, virtex4fx=PRODUCTION, virtex5lx=PRODUCTION, virtex5sx=PRODUCTION, virtex5fx=PRODUCTION, aspartan3e=PRODUCTION, aspartan3a=PRODUCTION, aspartan3adsp=PRODUCTION, qvirtex4lx=PRODUCTION, qvirtex4sx=PRODUCTION, qvirtex4fx=PRODUCTION, qrvirtex4lx=PRODUCTION, qrvirtex4sx=PRODUCTION, qrvirtex4fx=PRODUCTION, spartan6t=PRODUCTION, spartan6=PRODUCTION, spartan6l=PRE_PRODUCTION, qspartan6t=PRODUCTION, qspartan6=PRODUCTION, aspartan6t=PRODUCTION, aspartan6=PRODUCTION, virtex6lx=PRODUCTION, virtex6sx=PRODUCTION, virtex6hx=PRODUCTION, virtex6cx=PRODUCTION, virtex6llx=PRE_PRODUCTION, virtex6lsx=PRE_PRODUCTION, qspartan6l=PRE_PRODUCTION, qrvirtex5=PRE_PRODUCTION, qvirtex6lx=PRE_PRODUCTION, qvirtex6sx=PRE_PRODUCTION, qvirtex6fx=PRE_PRODUCTION, qvirtex6tx=PRE_PRODUCTION)
OPTION RUN_NGCBUILD = FALSE
OPTION STYLE = HDL

IO_INTERFACE IO_IF = epc_0, IO_TYPE = XIL_EPC_V1

## Bus Interfaces
BUS_INTERFACE BUS = SPLB, BUS_TYPE = SLAVE, BUS_STD = PLBV46

## Generics for VHDL or Parameters for Verilog
PARAMETER C_SPLB_CLK_PERIOD_PS = 10000, DT = INTEGER, BUS = SPLB
PARAMETER C_PRH_CLK_PERIOD_PS = 20000, DT = INTEGER
PARAMETER C_FAMILY = virtex5, DT = STRING
PARAMETER C_SPLB_AWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_DWIDTH = 32, DT = INTEGER, BUS = SPLB, RANGE = (32,64,128)
PARAMETER C_SPLB_P2P = 0, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB, RANGE = (1:16)
PARAMETER C_SPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_NUM_PERIPHERALS = 1, DT = INTEGER, RANGE = (1:4), IO_IF = epc_0, IO_IS = num_periphs
PARAMETER C_PRH_MAX_AWIDTH = 32, DT = INTEGER, RANGE = (3:32), IO_IF = epc_0, IO_IS = max_awidth
PARAMETER C_PRH_MAX_DWIDTH = 32, DT = INTEGER, RANGE = (8,16,32), IO_IF = epc_0, IO_IS = max_dwidth
PARAMETER C_PRH_MAX_ADWIDTH = 32, DT = INTEGER, RANGE = (8:32), IO_IF = epc_0, IO_IS = max_adwidth
PARAMETER C_PRH_CLK_SUPPORT = 0, DT = INTEGER, RANGE = (0,1), IO_IF = epc_0, IO_IS = clk_support
PARAMETER C_PRH_BURST_SUPPORT = 0, DT = INTEGER, ASSIGNMENT = CONSTANT, IO_IF = epc_0, IO_IS = burst_support
PARAMETER C_PRH0_BASEADDR = 0xffffffff, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_PRH0_HIGHADDR, ISVALID = (C_NUM_PERIPHERALS>=1), ASSIGNMENT = REQUIRE
PARAMETER C_PRH0_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_PRH0_BASEADDR, ISVALID = (C_NUM_PERIPHERALS>=1), ASSIGNMENT = REQUIRE
PARAMETER C_PRH0_FIFO_ACCESS = 0, DT = INTEGER, RANGE = (0,1)
PARAMETER C_PRH0_FIFO_OFFSET = 0, DT = INTEGER, ISVALID = (C_PRH0_FIFO_ACCESS==1), ASSIGNMENT = REQUIRE
PARAMETER C_PRH0_AWIDTH = 32, DT = INTEGER, RANGE = (3:32), IO_IF = epc_0, IO_IS = prh0_awidth
PARAMETER C_PRH0_DWIDTH = 32, DT = INTEGER, RANGE = (8,16,32), IO_IF = epc_0, IO_IS = prh0_dwidth
PARAMETER C_PRH0_DWIDTH_MATCH = 0, DT = INTEGER, RANGE = (0,1), IO_IF = epc_0, IO_IS = prh0_dwidth_match
PARAMETER C_PRH0_SYNC = 1, DT = INTEGER, RANGE = (0,1), IO_IF = epc_0, IO_IS = prh0_sync
PARAMETER C_PRH0_BUS_MULTIPLEX = 0, DT = INTEGER, RANGE = (0,1), IO_IF = epc_0, IO_IS = prh0_bus_multiplex
PARAMETER C_PRH0_ADDR_TSU = 0, DT = INTEGER, IO_IF = epc_0, IO_IS = prh0_addr_tsu, ISVALID = (C_NUM_PERIPHERALS>=1), ASSIGNMENT = REQUIRE
PARAMETER C_PRH0_ADDR_TH = 0, DT = INTEGER, IO_IF = epc_0, IO_IS = prh0_addr_th, ISVALID = (C_NUM_PERIPHERALS>=1), ASSIGNMENT = REQUIRE
PARAMETER C_PRH0_ADS_WIDTH = 0, DT = INTEGER, IO_IF = epc_0, IO_IS = prh0_ads_width, ISVALID = (C_NUM_PERIPHERALS>=1), ASSIGNMENT = REQUIRE
PARAMETER C_PRH0_CSN_TSU = 0, DT = INTEGER, IO_IF = epc_0, IO_IS = prh0_csn_tsu, ISVALID = (C_NUM_PERIPHERALS>=1), ASSIGNMENT = REQUIRE
PARAMETER C_PRH0_CSN_TH = 0, DT = INTEGER, IO_IF = epc_0, IO_IS = prh0_csn_th, ISVALID = (C_NUM_PERIPHERALS>=1), ASSIGNMENT = REQUIRE
PARAMETER C_PRH0_WRN_WIDTH = 0, DT = INTEGER, IO_IF = epc_0, IO_IS = prh0_wrn_width, ISVALID = (C_NUM_PERIPHERALS>=1), ASSIGNMENT = REQUIRE
PARAMETER C_PRH0_WR_CYCLE = 0, DT = INTEGER, IO_IF = epc_0, IO_IS = prh0_wr_cycle, ISVALID = (C_NUM_PERIPHERALS>=1), ASSIGNMENT = REQUIRE
PARAMETER C_PRH0_DATA_TSU = 0, DT = INTEGER, IO_IF = epc_0, IO_IS = prh0_data_tsu, ISVALID = (C_NUM_PERIPHERALS>=1), ASSIGNMENT = REQUIRE
PARAMETER C_PRH0_DATA_TH = 0, DT = INTEGER, IO_IF = epc_0, IO_IS = prh0_data_th, ISVALID = (C_NUM_PERIPHERALS>=1), ASSIGNMENT = REQUIRE
PARAMETER C_PRH0_RDN_WIDTH = 0, DT = INTEGER, IO_IF = epc_0, IO_IS = prh0_rdn_width, ISVALID = (C_NUM_PERIPHERALS>=1), ASSIGNMENT = REQUIRE
PARAMETER C_PRH0_RD_CYCLE = 0, DT = INTEGER, IO_IF = epc_0, IO_IS = prh0_rd_cycle, ISVALID = (C_NUM_PERIPHERALS>=1), ASSIGNMENT = REQUIRE
PARAMETER C_PRH0_DATA_TOUT = 0, DT = INTEGER, IO_IF = epc_0, IO_IS = prh0_data_tout, ISVALID = (C_NUM_PERIPHERALS>=1), ASSIGNMENT = REQUIRE
PARAMETER C_PRH0_DATA_TINV = 0, DT = INTEGER, IO_IF = epc_0, IO_IS = prh0_data_tinv, ISVALID = (C_NUM_PERIPHERALS>=1), ASSIGNMENT = REQUIRE
PARAMETER C_PRH0_RDY_TOUT = 0, DT = INTEGER, IO_IF = epc_0, IO_IS = prh0_rdy_tout, ISVALID = (C_NUM_PERIPHERALS>=1), ASSIGNMENT = REQUIRE
PARAMETER C_PRH0_RDY_WIDTH = 0, DT = INTEGER, IO_IF = epc_0, IO_IS = prh0_rdy_width, ISVALID = (C_NUM_PERIPHERALS>=1), ASSIGNMENT = REQUIRE
PARAMETER C_PRH1_BASEADDR = 0xffffffff, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_PRH1_HIGHADDR, ISVALID = (C_NUM_PERIPHERALS>=2), ASSIGNMENT = REQUIRE
PARAMETER C_PRH1_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_PRH1_BASEADDR, ISVALID = (C_NUM_PERIPHERALS>=2), ASSIGNMENT = REQUIRE
PARAMETER C_PRH1_FIFO_ACCESS = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PERIPHERALS>=2), ASSIGNMENT = REQUIRE
PARAMETER C_PRH1_FIFO_OFFSET = 0, DT = INTEGER, ISVALID = (C_PRH1_FIFO_ACCESS==1), ASSIGNMENT = REQUIRE
PARAMETER C_PRH1_AWIDTH = 32, DT = INTEGER, RANGE = (3:32), IO_IF = epc_0, IO_IS = prh1_awidth, ISVALID = (C_NUM_PERIPHERALS>=2), ASSIGNMENT = REQUIRE
PARAMETER C_PRH1_DWIDTH = 32, DT = INTEGER, RANGE = (8,16,32), IO_IF = epc_0, IO_IS = prh1_dwidth, ISVALID = (C_NUM_PERIPHERALS>=2), ASSIGNMENT = REQUIRE
PARAMETER C_PRH1_DWIDTH_MATCH = 0, DT = INTEGER, RANGE = (0,1), IO_IF = epc_0, IO_IS = prh1_dwidth_match, ISVALID = (C_NUM_PERIPHERALS>=2), ASSIGNMENT = REQUIRE
PARAMETER C_PRH1_SYNC = 1, DT = INTEGER, RANGE = (0,1), IO_IF = epc_0, IO_IS = prh1_sync, ISVALID = (C_NUM_PERIPHERALS>=2), ASSIGNMENT = REQUIRE
PARAMETER C_PRH1_BUS_MULTIPLEX = 0, DT = INTEGER, RANGE = (0,1), IO_IF = epc_0, IO_IS = prh1_bus_multiplex, ISVALID = (C_NUM_PERIPHERALS>=2), ASSIGNMENT = REQUIRE
PARAMETER C_PRH1_ADDR_TSU = 0, DT = INTEGER, IO_IF = epc_0, IO_IS = prh1_addr_tsu, ISVALID = (C_NUM_PERIPHERALS>=2), ASSIGNMENT = REQUIRE
PARAMETER C_PRH1_ADDR_TH = 0, DT = INTEGER, IO_IF = epc_0, IO_IS = prh1_addr_th, ISVALID = (C_NUM_PERIPHERALS>=2), ASSIGNMENT = REQUIRE
PARAMETER C_PRH1_ADS_WIDTH = 0, DT = INTEGER, IO_IF = epc_0, IO_IS = prh1_ads_width, ISVALID = (C_NUM_PERIPHERALS>=2), ASSIGNMENT = REQUIRE
PARAMETER C_PRH1_CSN_TSU = 0, DT = INTEGER, IO_IF = epc_0, IO_IS = prh1_csn_tsu, ISVALID = (C_NUM_PERIPHERALS>=2), ASSIGNMENT = REQUIRE
PARAMETER C_PRH1_CSN_TH = 0, DT = INTEGER, IO_IF = epc_0, IO_IS = prh1_csn_th, ISVALID = (C_NUM_PERIPHERALS>=2), ASSIGNMENT = REQUIRE
PARAMETER C_PRH1_WRN_WIDTH = 0, DT = INTEGER, IO_IF = epc_0, IO_IS = prh1_wrn_width, ISVALID = (C_NUM_PERIPHERALS>=2), ASSIGNMENT = REQUIRE
PARAMETER C_PRH1_WR_CYCLE = 0, DT = INTEGER, IO_IF = epc_0, IO_IS = prh1_wr_cycle, ISVALID = (C_NUM_PERIPHERALS>=2), ASSIGNMENT = REQUIRE
PARAMETER C_PRH1_DATA_TSU = 0, DT = INTEGER, IO_IF = epc_0, IO_IS = prh1_data_tsu, ISVALID = (C_NUM_PERIPHERALS>=2), ASSIGNMENT = REQUIRE
PARAMETER C_PRH1_DATA_TH = 0, DT = INTEGER, IO_IF = epc_0, IO_IS = prh1_data_th, ISVALID = (C_NUM_PERIPHERALS>=2), ASSIGNMENT = REQUIRE
PARAMETER C_PRH1_RDN_WIDTH = 0, DT = INTEGER, IO_IF = epc_0, IO_IS = prh1_rdn_width, ISVALID = (C_NUM_PERIPHERALS>=2), ASSIGNMENT = REQUIRE
PARAMETER C_PRH1_RD_CYCLE = 0, DT = INTEGER, IO_IF = epc_0, IO_IS = prh1_rd_cycle, ISVALID = (C_NUM_PERIPHERALS>=2), ASSIGNMENT = REQUIRE
PARAMETER C_PRH1_DATA_TOUT = 0, DT = INTEGER, IO_IF = epc_0, IO_IS = prh1_data_tout, ISVALID = (C_NUM_PERIPHERALS>=2), ASSIGNMENT = REQUIRE
PARAMETER C_PRH1_DATA_TINV = 0, DT = INTEGER, IO_IF = epc_0, IO_IS = prh1_data_tinv, ISVALID = (C_NUM_PERIPHERALS>=2), ASSIGNMENT = REQUIRE
PARAMETER C_PRH1_RDY_TOUT = 0, DT = INTEGER, IO_IF = epc_0, IO_IS = prh1_rdy_tout, ISVALID = (C_NUM_PERIPHERALS>=2), ASSIGNMENT = REQUIRE
PARAMETER C_PRH1_RDY_WIDTH = 0, DT = INTEGER, IO_IF = epc_0, IO_IS = prh1_rdy_width, ISVALID = (C_NUM_PERIPHERALS>=2), ASSIGNMENT = REQUIRE
PARAMETER C_PRH2_BASEADDR = 0xffffffff, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_PRH2_HIGHADDR, ISVALID = (C_NUM_PERIPHERALS>=3), ASSIGNMENT = REQUIRE
PARAMETER C_PRH2_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_PRH2_BASEADDR, ISVALID = (C_NUM_PERIPHERALS>=3), ASSIGNMENT = REQUIRE
PARAMETER C_PRH2_FIFO_ACCESS = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PERIPHERALS>=3), ASSIGNMENT = REQUIRE
PARAMETER C_PRH2_FIFO_OFFSET = 0, DT = INTEGER, ISVALID = (C_PRH2_FIFO_ACCESS==1), ASSIGNMENT = REQUIRE
PARAMETER C_PRH2_AWIDTH = 32, DT = INTEGER, RANGE = (3:32), IO_IF = epc_0, IO_IS = prh2_awidth, ISVALID = (C_NUM_PERIPHERALS>=3), ASSIGNMENT = REQUIRE
PARAMETER C_PRH2_DWIDTH = 32, DT = INTEGER, RANGE = (8,16,32), IO_IF = epc_0, IO_IS = prh2_dwidth, ISVALID = (C_NUM_PERIPHERALS>=3), ASSIGNMENT = REQUIRE
PARAMETER C_PRH2_DWIDTH_MATCH = 0, DT = INTEGER, RANGE = (0,1), IO_IF = epc_0, IO_IS = prh2_dwidth_match, ISVALID = (C_NUM_PERIPHERALS>=3), ASSIGNMENT = REQUIRE
PARAMETER C_PRH2_SYNC = 1, DT = INTEGER, RANGE = (0,1), IO_IF = epc_0, IO_IS = prh2_sync, ISVALID = (C_NUM_PERIPHERALS>=3), ASSIGNMENT = REQUIRE
PARAMETER C_PRH2_BUS_MULTIPLEX = 0, DT = INTEGER, RANGE = (0,1), IO_IF = epc_0, IO_IS = prh2_bus_multiplex, ISVALID = (C_NUM_PERIPHERALS>=3), ASSIGNMENT = REQUIRE
PARAMETER C_PRH2_ADDR_TSU = 0, DT = INTEGER, IO_IF = epc_0, IO_IS = prh2_addr_tsu, ISVALID = (C_NUM_PERIPHERALS>=3), ASSIGNMENT = REQUIRE
PARAMETER C_PRH2_ADDR_TH = 0, DT = INTEGER, IO_IF = epc_0, IO_IS = prh2_addr_th, ISVALID = (C_NUM_PERIPHERALS>=3), ASSIGNMENT = REQUIRE
PARAMETER C_PRH2_ADS_WIDTH = 0, DT = INTEGER, IO_IF = epc_0, IO_IS = prh2_ads_width, ISVALID = (C_NUM_PERIPHERALS>=3), ASSIGNMENT = REQUIRE
PARAMETER C_PRH2_CSN_TSU = 0, DT = INTEGER, IO_IF = epc_0, IO_IS = prh2_csn_tsu, ISVALID = (C_NUM_PERIPHERALS>=3), ASSIGNMENT = REQUIRE
PARAMETER C_PRH2_CSN_TH = 0, DT = INTEGER, IO_IF = epc_0, IO_IS = prh2_csn_th, ISVALID = (C_NUM_PERIPHERALS>=3), ASSIGNMENT = REQUIRE
PARAMETER C_PRH2_WRN_WIDTH = 0, DT = INTEGER, IO_IF = epc_0, IO_IS = prh2_wrn_width, ISVALID = (C_NUM_PERIPHERALS>=3), ASSIGNMENT = REQUIRE
PARAMETER C_PRH2_WR_CYCLE = 0, DT = INTEGER, IO_IF = epc_0, IO_IS = prh2_wr_cycle, ISVALID = (C_NUM_PERIPHERALS>=3), ASSIGNMENT = REQUIRE
PARAMETER C_PRH2_DATA_TSU = 0, DT = INTEGER, IO_IF = epc_0, IO_IS = prh2_data_tsu, ISVALID = (C_NUM_PERIPHERALS>=3), ASSIGNMENT = REQUIRE
PARAMETER C_PRH2_DATA_TH = 0, DT = INTEGER, IO_IF = epc_0, IO_IS = prh2_data_th, ISVALID = (C_NUM_PERIPHERALS>=3), ASSIGNMENT = REQUIRE
PARAMETER C_PRH2_RDN_WIDTH = 0, DT = INTEGER, IO_IF = epc_0, IO_IS = prh2_rdn_width, ISVALID = (C_NUM_PERIPHERALS>=3), ASSIGNMENT = REQUIRE
PARAMETER C_PRH2_RD_CYCLE = 0, DT = INTEGER, IO_IF = epc_0, IO_IS = prh2_rd_cycle, ISVALID = (C_NUM_PERIPHERALS>=3), ASSIGNMENT = REQUIRE
PARAMETER C_PRH2_DATA_TOUT = 0, DT = INTEGER, IO_IF = epc_0, IO_IS = prh2_data_tout, ISVALID = (C_NUM_PERIPHERALS>=3), ASSIGNMENT = REQUIRE
PARAMETER C_PRH2_DATA_TINV = 0, DT = INTEGER, IO_IF = epc_0, IO_IS = prh2_data_tinv, ISVALID = (C_NUM_PERIPHERALS>=3), ASSIGNMENT = REQUIRE
PARAMETER C_PRH2_RDY_TOUT = 0, DT = INTEGER, IO_IF = epc_0, IO_IS = prh2_rdy_tout, ISVALID = (C_NUM_PERIPHERALS>=3), ASSIGNMENT = REQUIRE
PARAMETER C_PRH2_RDY_WIDTH = 0, DT = INTEGER, IO_IF = epc_0, IO_IS = prh2_rdy_width, ISVALID = (C_NUM_PERIPHERALS>=3), ASSIGNMENT = REQUIRE
PARAMETER C_PRH3_BASEADDR = 0xffffffff, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_PRH3_HIGHADDR, ISVALID = (C_NUM_PERIPHERALS>=4), ASSIGNMENT = REQUIRE
PARAMETER C_PRH3_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_PRH3_BASEADDR, ISVALID = (C_NUM_PERIPHERALS>=4), ASSIGNMENT = REQUIRE
PARAMETER C_PRH3_FIFO_ACCESS = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PERIPHERALS>=4), ASSIGNMENT = REQUIRE
PARAMETER C_PRH3_FIFO_OFFSET = 0, DT = INTEGER, ISVALID = (C_PRH3_FIFO_ACCESS==1), ASSIGNMENT = REQUIRE
PARAMETER C_PRH3_AWIDTH = 32, DT = INTEGER, RANGE = (3:32), IO_IF = epc_0, IO_IS = prh3_awidth, ISVALID = (C_NUM_PERIPHERALS>=4), ASSIGNMENT = REQUIRE
PARAMETER C_PRH3_DWIDTH = 32, DT = INTEGER, RANGE = (8,16,32), IO_IF = epc_0, IO_IS = prh3_dwidth, ISVALID = (C_NUM_PERIPHERALS>=4), ASSIGNMENT = REQUIRE
PARAMETER C_PRH3_DWIDTH_MATCH = 0, DT = INTEGER, RANGE = (0,1), IO_IF = epc_0, IO_IS = prh3_dwidth_match, ISVALID = (C_NUM_PERIPHERALS>=4), ASSIGNMENT = REQUIRE
PARAMETER C_PRH3_SYNC = 1, DT = INTEGER, RANGE = (0,1), IO_IF = epc_0, IO_IS = prh3_sync, ISVALID = (C_NUM_PERIPHERALS>=4), ASSIGNMENT = REQUIRE
PARAMETER C_PRH3_BUS_MULTIPLEX = 0, DT = INTEGER, RANGE = (0,1), IO_IF = epc_0, IO_IS = prh3_bus_multiplex, ISVALID = (C_NUM_PERIPHERALS>=4), ASSIGNMENT = REQUIRE
PARAMETER C_PRH3_ADDR_TSU = 0, DT = INTEGER, IO_IF = epc_0, IO_IS = prh3_addr_tsu, ISVALID = (C_NUM_PERIPHERALS>=4), ASSIGNMENT = REQUIRE
PARAMETER C_PRH3_ADDR_TH = 0, DT = INTEGER, IO_IF = epc_0, IO_IS = prh3_addr_th, ISVALID = (C_NUM_PERIPHERALS>=4), ASSIGNMENT = REQUIRE
PARAMETER C_PRH3_ADS_WIDTH = 0, DT = INTEGER, IO_IF = epc_0, IO_IS = prh3_ads_width, ISVALID = (C_NUM_PERIPHERALS>=4), ASSIGNMENT = REQUIRE
PARAMETER C_PRH3_CSN_TSU = 0, DT = INTEGER, IO_IF = epc_0, IO_IS = prh3_csn_tsu, ISVALID = (C_NUM_PERIPHERALS>=4), ASSIGNMENT = REQUIRE
PARAMETER C_PRH3_CSN_TH = 0, DT = INTEGER, IO_IF = epc_0, IO_IS = prh3_csn_th, ISVALID = (C_NUM_PERIPHERALS>=4), ASSIGNMENT = REQUIRE
PARAMETER C_PRH3_WRN_WIDTH = 0, DT = INTEGER, IO_IF = epc_0, IO_IS = prh3_wrn_width, ISVALID = (C_NUM_PERIPHERALS>=4), ASSIGNMENT = REQUIRE
PARAMETER C_PRH3_WR_CYCLE = 0, DT = INTEGER, IO_IF = epc_0, IO_IS = prh3_wr_cycle, ISVALID = (C_NUM_PERIPHERALS>=4), ASSIGNMENT = REQUIRE
PARAMETER C_PRH3_DATA_TSU = 0, DT = INTEGER, IO_IF = epc_0, IO_IS = prh3_data_tsu, ISVALID = (C_NUM_PERIPHERALS>=4), ASSIGNMENT = REQUIRE
PARAMETER C_PRH3_DATA_TH = 0, DT = INTEGER, IO_IF = epc_0, IO_IS = prh3_data_th, ISVALID = (C_NUM_PERIPHERALS>=4), ASSIGNMENT = REQUIRE
PARAMETER C_PRH3_RDN_WIDTH = 0, DT = INTEGER, IO_IF = epc_0, IO_IS = prh3_rdn_width, ISVALID = (C_NUM_PERIPHERALS>=4), ASSIGNMENT = REQUIRE
PARAMETER C_PRH3_RD_CYCLE = 0, DT = INTEGER, IO_IF = epc_0, IO_IS = prh3_rd_cycle, ISVALID = (C_NUM_PERIPHERALS>=4), ASSIGNMENT = REQUIRE
PARAMETER C_PRH3_DATA_TOUT = 0, DT = INTEGER, IO_IF = epc_0, IO_IS = prh3_data_tout, ISVALID = (C_NUM_PERIPHERALS>=4), ASSIGNMENT = REQUIRE
PARAMETER C_PRH3_DATA_TINV = 0, DT = INTEGER, IO_IF = epc_0, IO_IS = prh3_data_tinv, ISVALID = (C_NUM_PERIPHERALS>=4), ASSIGNMENT = REQUIRE
PARAMETER C_PRH3_RDY_TOUT = 0, DT = INTEGER, IO_IF = epc_0, IO_IS = prh3_rdy_tout, ISVALID = (C_NUM_PERIPHERALS>=4), ASSIGNMENT = REQUIRE
PARAMETER C_PRH3_RDY_WIDTH = 0, DT = INTEGER, IO_IF = epc_0, IO_IS = prh3_rdy_width, ISVALID = (C_NUM_PERIPHERALS>=4), ASSIGNMENT = REQUIRE

## Ports
PORT SPLB_Clk = "", DIR = I, SIGIS = Clk, BUS = SPLB
PORT SPLB_Rst = SPLB_Rst, DIR = I, SIGIS = Rst, BUS = SPLB
PORT PLB_ABus = PLB_ABus, DIR = I, VEC = [0:(C_SPLB_AWIDTH-1)], BUS = SPLB
PORT PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB
PORT PLB_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB_MID_WIDTH-1)], BUS = SPLB
PORT PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB
PORT PLB_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB_DWIDTH/8)-1)], BUS = SPLB
PORT PLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB
PORT PLB_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB
PORT PLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB
PORT Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB
PORT Sl_wait = Sl_wait, DIR = O, BUS = SPLB
PORT Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB
PORT Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB
PORT Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB
PORT Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB
PORT Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB
PORT Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT PLB_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB
PORT PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB
PORT PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB
PORT PLB_abort = PLB_abort, DIR = I, BUS = SPLB
PORT PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB
PORT PLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB
PORT PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB
PORT PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB
PORT PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB
PORT PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB
PORT PLB_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB
PORT Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB
PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB
PORT Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB
PORT Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT PRH_Clk = "", DIR = I, SIGIS = Clk
PORT PRH_Rst = "", DIR = I, SIGIS = Rst
PORT PRH_CS_n = "", DIR = O, VEC = [0:(C_NUM_PERIPHERALS-1)], IO_IF = epc_0, IO_IS = chip_enable
PORT PRH_Addr = "", DIR = O, VEC = [0:(C_PRH_MAX_AWIDTH-1)], IO_IF = epc_0, IO_IS = address
PORT PRH_ADS = "", DIR = O, IO_IF = epc_0, IO_IS = address_strobe
PORT PRH_BE = "", DIR = O, VEC = [0:((C_PRH_MAX_DWIDTH/8)-1)], IO_IF = epc_0, IO_IS = byte_enables
PORT PRH_RNW = "", DIR = O, IO_IF = epc_0, IO_IS = read_not_write
PORT PRH_Rd_n = "", DIR = O, IO_IF = epc_0, IO_IS = read_enable
PORT PRH_Wr_n = "", DIR = O, IO_IF = epc_0, IO_IS = write_enable
PORT PRH_Burst = "", DIR = O, IO_IF = epc_0, IO_IS = sync_burst
PORT PRH_Rdy = "", DIR = I, VEC = [0:(C_NUM_PERIPHERALS-1)], IO_IF = epc_0, IO_IS = epc_ready
PORT PRH_Data_I = "", DIR = I, VEC = [0:(C_PRH_MAX_ADWIDTH-1)]
PORT PRH_Data_O = "", DIR = O, VEC = [0:(C_PRH_MAX_ADWIDTH-1)]
PORT PRH_Data_T = "", DIR = O, VEC = [0:(C_PRH_MAX_ADWIDTH-1)]
PORT PRH_Data = "", DIR = IO, VEC = [0:(C_PRH_MAX_ADWIDTH-1)], THREE_STATE = TRUE, TRI_I = PRH_Data_I, TRI_O = PRH_Data_O, TRI_T = PRH_Data_T, ENABLE = MULTI, IO_IF = epc_0, IO_IS = data

END

FINISH_SINGLE_MPD

START_SINGLE_MPD xps_ethernetlite_v3_01_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : xps_ethernetlite
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN xps_ethernetlite

## Peripheral Options
OPTION STYLE = MIX
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION ALERT = This design requires design constraints to guarantee performance.\nPlease refer to the data sheet for details.  \nThe PLB clock frequency must be greater than or equal to 50 MHz for 100 Mbs Ethernet operation and greater than or equal to 5.0 MHz for 10 Mbs Ethernet operation.
OPTION USAGE_LEVEL = BASE_USER
OPTION PLATGEN_SYSLEVEL_UPDATE_PROC = generate_corelevel_ucf
OPTION SYSLEVEL_DRC_PROC = check_syslevel_drcs
OPTION DESC = XPS 10/100 Ethernet MAC Lite
OPTION LONG_DESC = 'IEEE Std. 802.3 MII interface MAC with PLBV46 interface, lightweight implementation'
OPTION IP_GROUP = Communication High-Speed:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=SUPERSEDED, spartan3=SUPERSEDED, spartan3an=SUPERSEDED, spartan3a=SUPERSEDED, spartan3e=SUPERSEDED, spartan3adsp=SUPERSEDED, virtex4lx=SUPERSEDED, virtex4sx=SUPERSEDED, virtex4fx=SUPERSEDED, virtex5lx=SUPERSEDED, virtex5sx=SUPERSEDED, virtex5fx=SUPERSEDED, aspartan3e=SUPERSEDED, aspartan3a=SUPERSEDED, aspartan3adsp=SUPERSEDED, qvirtex4lx=SUPERSEDED, qvirtex4sx=SUPERSEDED, qvirtex4fx=SUPERSEDED, qrvirtex4lx=SUPERSEDED, qrvirtex4sx=SUPERSEDED, qrvirtex4fx=SUPERSEDED, spartan6t=SUPERSEDED, spartan6=SUPERSEDED, spartan6l=SUPERSEDED, qspartan6t=SUPERSEDED, qspartan6=SUPERSEDED, aspartan6t=SUPERSEDED, aspartan6=SUPERSEDED, virtex6lx=SUPERSEDED, virtex6sx=SUPERSEDED, virtex6hx=SUPERSEDED, virtex6cx=SUPERSEDED, virtex6llx=SUPERSEDED, virtex6lsx=SUPERSEDED, qspartan6l=SUPERSEDED, qrvirtex5=SUPERSEDED, qvirtex6lx=SUPERSEDED, qvirtex6sx=SUPERSEDED, qvirtex6fx=SUPERSEDED, qvirtex6tx=SUPERSEDED)
OPTION RUN_NGCBUILD = TRUE

IO_INTERFACE IO_IF = ethernet_0, IO_TYPE = XIL_ETHERNET_V1

## Bus Interfaces
BUS_INTERFACE BUS = SPLB, BUS_STD = PLBV46, BUS_TYPE = SLAVE

## Generics for VHDL or Parameters for Verilog
PARAMETER C_FAMILY = virtex5, DT = STRING
PARAMETER C_BASEADDR = 0xffffffff, DT = std_logic_vector, ASSIGNMENT = REQUIRE, ADDRESS = BASE, PAIR = C_HIGHADDR, BUS = SPLB, MIN_SIZE = 0x02000
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector, ASSIGNMENT = REQUIRE, ADDRESS = HIGH, PAIR = C_BASEADDR, BUS = SPLB
PARAMETER C_SPLB_CLK_PERIOD_PS = 10000, DT = INTEGER, BUS = SPLB, ASSIGNMENT = REQUIRE, IO_IS = clk_freq
PARAMETER C_SPLB_AWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_DWIDTH = 32, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_P2P = 0, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SPLB, RANGE = (32,64,128)
PARAMETER C_SPLB_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB, RANGE = (0,1)
PARAMETER C_INCLUDE_MDIO = 1, DT = INTEGER, RANGE = (0,1)
PARAMETER C_INCLUDE_INTERNAL_LOOPBACK = 0, DT = INTEGER, RANGE = (0,1)
PARAMETER C_DUPLEX = 1, DT = INTEGER, RANGE = (0,1)
PARAMETER C_TX_PING_PONG = 0, DT = INTEGER, RANGE = (0,1)
PARAMETER C_RX_PING_PONG = 0, DT = INTEGER, RANGE = (0,1)

## Ports
PORT PHY_tx_clk = "", DIR = I, PERMIT = BASE_USER, BUFFER_TYPE = IBUF, DESC = 'Ethernet Transmit Clock Input', IO_IF = ethernet_0, IO_IS = ETH_TXC
PORT PHY_rx_clk = "", DIR = I, PERMIT = BASE_USER, BUFFER_TYPE = IBUF, DESC = 'Ethernet Receive Clock Input', IO_IF = ethernet_0, IO_IS = ETH_RXC
PORT PHY_crs = "", DIR = I, PERMIT = BASE_USER, DESC = 'Ethernet Carrier Sense Input', IO_IF = ethernet_0, IO_IS = ETH_CRS
PORT PHY_dv = "", DIR = I, PERMIT = BASE_USER, DESC = 'Ethernet Receive Data Valid', IO_IF = ethernet_0, IO_IS = ETH_RXDV
PORT PHY_rx_data = "", DIR = I, VEC = [3:0], PERMIT = BASE_USER, DESC = 'Ethernet Receive Data Input', IO_IF = ethernet_0, IO_IS = ETH_RXD
PORT PHY_col = "", DIR = I, PERMIT = BASE_USER, DESC = 'Ethernet Collision Input', IO_IF = ethernet_0, IO_IS = ETH_COL
PORT PHY_rx_er = "", DIR = I, PERMIT = BASE_USER, DESC = 'Ethernet Receive Error Input', IO_IF = ethernet_0, IO_IS = ETH_RXER
PORT PHY_rst_n = "", DIR = O, PERMIT = BASE_USER, DESC = 'Ethernet PHY Reset', IO_IF = ethernet_0, IO_IS = PHY_RESETn
PORT PHY_tx_en = "", DIR = O, PERMIT = BASE_USER, DESC = 'Ethernet Transmit Enable', IO_IF = ethernet_0, IO_IS = ETH_TXEN
PORT PHY_tx_data = "", DIR = O, VEC = [3:0], PERMIT = BASE_USER, DESC = 'Ethernet Transmit Data Output', IO_IF = ethernet_0, IO_IS = ETH_TXD
PORT PHY_MDC = "", DIR = O, PERMIT = BASE_USER, ISVALID = (C_INCLUDE_MDIO==1), ASSIGNMENT = REQUIRE, DESC = 'Ethernet PHY Management Clock', IO_IF = ethernet_0, IO_IS = ETH_MDC
PORT PHY_MDIO_I = "", DIR = I
PORT PHY_MDIO_O = "", DIR = O
PORT PHY_MDIO_T = "", DIR = O
PORT IP2INTC_Irpt = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = EDGE_RISING, INTERRUPT_PRIORITY = HIGH
PORT SPLB_Clk = "", DIR = I, SIGIS = CLK, BUS = SPLB
PORT SPLB_Rst = SPLB_Rst, DIR = I, SIGIS = RST, BUS = SPLB
PORT PLB_ABus = PLB_ABus, DIR = I, VEC = [0:(C_SPLB_AWIDTH-1)], BUS = SPLB
PORT PLB_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB
PORT PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB
PORT PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB
PORT PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB
PORT PLB_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB_MID_WIDTH-1)], BUS = SPLB
PORT PLB_abort = PLB_abort, DIR = I, BUS = SPLB
PORT PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB
PORT PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB
PORT PLB_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB_DWIDTH/8)-1)], BUS = SPLB
PORT PLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB
PORT PLB_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB
PORT PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB
PORT PLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB
PORT PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB
PORT PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB
PORT PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB
PORT PLB_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB
PORT Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB
PORT Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB
PORT Sl_wait = Sl_wait, DIR = O, BUS = SPLB
PORT Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB
PORT Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB
PORT Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB
PORT Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB
PORT Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB
PORT Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB
PORT Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB
PORT Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB
PORT Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT PHY_MDIO = "", DIR = IO, TRI_O = PHY_MDIO_O, TRI_T = PHY_MDIO_T, TRI_I = PHY_MDIO_I, THREE_STATE = TRUE, PERMIT = BASE_USER, ISVALID = (C_INCLUDE_MDIO==1), DESC = 'Ethernet PHY Management Data', IO_IF = ethernet_0, IO_IS = ETH_MDIO

END

FINISH_SINGLE_MPD

START_SINGLE_MPD util_ds_buf_v1_01_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : util_ds_buf
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN util_ds_buf

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION LAST_UPDATED = 12.2
OPTION DESC = Differential Signaling IO Buffer
OPTION LONG_DESC = Differential Signaling IO Buffer Primitive
OPTION IP_GROUP = Utility:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=PRODUCTION, spartan3=PRODUCTION, spartan3an=PRODUCTION, spartan3a=PRODUCTION, spartan3e=PRODUCTION, spartan3adsp=PRODUCTION, virtex4lx=PRODUCTION, virtex4sx=PRODUCTION, virtex4fx=PRODUCTION, virtex5lx=PRODUCTION, virtex5sx=PRODUCTION, virtex5fx=PRODUCTION, aspartan3e=PRODUCTION, aspartan3a=PRODUCTION, aspartan3adsp=PRODUCTION, qvirtex4lx=PRODUCTION, qvirtex4sx=PRODUCTION, qvirtex4fx=PRODUCTION, qrvirtex4lx=PRODUCTION, qrvirtex4sx=PRODUCTION, qrvirtex4fx=PRODUCTION, spartan6t=PRODUCTION, spartan6=PRODUCTION, spartan6l=PRE_PRODUCTION, qspartan6t=PRODUCTION, qspartan6=PRODUCTION, aspartan6t=PRODUCTION, aspartan6=PRODUCTION, virtex6lx=PRODUCTION, virtex6sx=PRODUCTION, virtex6hx=PRODUCTION, virtex6cx=PRODUCTION, virtex6llx=PRE_PRODUCTION, virtex6lsx=PRE_PRODUCTION, qspartan6l=PRE_PRODUCTION, qvirtex6lx=PRE_PRODUCTION, qvirtex6sx=PRE_PRODUCTION, qvirtex6fx=PRE_PRODUCTION, qvirtex6tx=PRE_PRODUCTION)
OPTION RUN_NGCBUILD = FALSE
OPTION STYLE = HDL


## Bus Interfaces

## Generics for VHDL or Parameters for Verilog
PARAMETER C_BUF_TYPE = IBUFGDS, DT = STRING, VALUES = (IBUFGDS= IBUFGDS, IBUFDS= IBUFDS, IBUFDSGTXE= IBUFDSGTXE, OBUFDS= OBUFDS, IOBUFDS= IOBUFDS)
PARAMETER C_SIZE = 1, DT = INTEGER, RANGE = (1:128)

## Ports
PORT IBUF_DS_P = "", DIR = I, VEC = [0:(C_SIZE-1)]
PORT IBUF_DS_N = "", DIR = I, VEC = [0:(C_SIZE-1)]
PORT IBUF_OUT = "", DIR = O, VEC = [0:(C_SIZE-1)]
PORT OBUF_IN = "", DIR = I, VEC = [0:(C_SIZE-1)]
PORT OBUF_DS_P = "", DIR = O, VEC = [0:(C_SIZE-1)]
PORT OBUF_DS_N = "", DIR = O, VEC = [0:(C_SIZE-1)]
PORT IOBUF_DS_P = "", DIR = IO, VEC = [0:(C_SIZE-1)], THREE_STATE = FALSE
PORT IOBUF_DS_N = "", DIR = IO, VEC = [0:(C_SIZE-1)], THREE_STATE = FALSE
PORT IOBUF_IO_T = "", DIR = I, VEC = [0:(C_SIZE-1)]
PORT IOBUF_IO_I = "", DIR = I, VEC = [0:(C_SIZE-1)]
PORT IOBUF_IO_O = "", DIR = O, VEC = [0:(C_SIZE-1)]

END

FINISH_SINGLE_MPD

START_SINGLE_MPD mpmc_v5_04_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : mpmc
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN mpmc

## Peripheral Options
OPTION HDL = MIXED
OPTION IMP_NETLIST = TRUE
OPTION IPTYPE = PERIPHERAL
OPTION RUN_NGCBUILD = TRUE
OPTION USAGE_LEVEL = BASE_USER
OPTION IPLEVEL_DRC_PROC = check_iplevel_drcs
OPTION SYSLEVEL_DRC_PROC = check_syslevel_drcs
OPTION PLATGEN_SYSLEVEL_UPDATE_PROC = platgen_syslevel_update
OPTION CLK_FREQ_RATIOS = (MPMC_Clk0 / MPMC_Clk90=(1/1), MPMC_Clk0 / MPMC_Clk0_DIV2=(2/1), MPMC_Clk0 / MPMC_CTRL_Clk=([1:2]/1), MPMC_Clk0 / (FSL0_M_Clk, FSL1_M_Clk, FSL2_M_Clk, FSL3_M_Clk, FSL4_M_Clk, FSL5_M_Clk, FSL6_M_Clk, FSL7_M_Clk)=([1:2]/1), MPMC_Clk0 / (SPLB0_Clk, SPLB1_Clk, SPLB2_Clk, SPLB3_Clk, SPLB4_Clk, SPLB5_Clk, SPLB6_Clk, SPLB7_Clk)=([1:2]/1), MPMC_Clk0 / (SDMA0_Clk, SDMA1_Clk, SDMA2_Clk, SDMA3_Clk, SDMA4_Clk, SDMA5_Clk, SDMA6_Clk, SDMA7_Clk)=([1:2]/1), SDMA0_Clk / SDMA_CTRL0_Clk=([1:2]/1), SDMA1_Clk / SDMA_CTRL1_Clk=([1:2]/1), SDMA2_Clk / SDMA_CTRL2_Clk=([1:2]/1), SDMA3_Clk / SDMA_CTRL3_Clk=([1:2]/1), SDMA4_Clk / SDMA_CTRL4_Clk=([1:2]/1), SDMA5_Clk / SDMA_CTRL5_Clk=([1:2]/1), SDMA6_Clk / SDMA_CTRL6_Clk=([1:2]/1), SDMA7_Clk / SDMA_CTRL7_Clk=([1:2]/1))
OPTION DESC = Multi-Port Memory Controller(DDR/DDR2/SDRAM)
OPTION LONG_DESC = Multi-port memory controller.
OPTION IP_GROUP = Memory and Memory Controller:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=SUPERSEDED, spartan3=SUPERSEDED, spartan3an=SUPERSEDED, spartan3a=SUPERSEDED, spartan3e=SUPERSEDED, spartan3adsp=SUPERSEDED, virtex4lx=SUPERSEDED, virtex4sx=SUPERSEDED, virtex4fx=SUPERSEDED, virtex5lx=SUPERSEDED, virtex5sx=SUPERSEDED, virtex5fx=SUPERSEDED, aspartan3e=SUPERSEDED, aspartan3a=SUPERSEDED, aspartan3adsp=SUPERSEDED, qvirtex4lx=SUPERSEDED, qvirtex4sx=SUPERSEDED, qvirtex4fx=SUPERSEDED, qrvirtex4lx=SUPERSEDED, qrvirtex4sx=SUPERSEDED, qrvirtex4fx=SUPERSEDED, spartan6t=SUPERSEDED, spartan6=SUPERSEDED, spartan6l=SUPERSEDED, qspartan6t=SUPERSEDED, qspartan6=SUPERSEDED, aspartan6t=SUPERSEDED, aspartan6=SUPERSEDED, virtex6lx=SUPERSEDED, virtex6sx=SUPERSEDED, virtex6hx=SUPERSEDED, virtex6cx=SUPERSEDED, virtex6llx=SUPERSEDED, virtex6lsx=SUPERSEDED, qspartan6l=SUPERSEDED, qrvirtex5=SUPERSEDED, qvirtex6lx=SUPERSEDED, qvirtex6sx=SUPERSEDED, qvirtex6fx=SUPERSEDED, qvirtex6tx=SUPERSEDED)
OPTION STYLE = HDL

IO_INTERFACE IO_IF = memory_0, IO_TYPE = XIL_MEMORY_V1

## Bus Interfaces
BUS_INTERFACE BUS = XCL0, BUS_STD = XIL_MEMORY_CHANNEL, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 0 && C_PIM0_BASETYPE == 1 && !([xstrncmp C_FAMILY  spartan6 ] && C_PORT_CONFIG > 1))
BUS_INTERFACE BUS = XCL0_B, BUS_STD = XIL_MEMORY_CHANNEL, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 0 && C_PIM0_BASETYPE == 1 && C_XCL0_B_IN_USE && !([xstrncmp C_FAMILY  spartan6 ] && C_PORT_CONFIG > 1))
BUS_INTERFACE BUS = SPLB0, BUS_STD = PLBV46, BUS_TYPE = SLAVE, ISVALID = (C_NUM_PORTS > 0 && C_PIM0_BASETYPE == 2 && !([xstrncmp C_FAMILY  spartan6 ] && C_PORT_CONFIG == 4))
BUS_INTERFACE BUS = SDMA_CTRL0, BUS_STD = PLBV46, BUS_TYPE = SLAVE, ISVALID = (C_NUM_PORTS > 0 && C_PIM0_BASETYPE == 3 && !([xstrncmp C_FAMILY  spartan6 ] && C_PORT_CONFIG > 1))
BUS_INTERFACE BUS = SDMA_LL0, BUS_STD = XIL_LL_DMA, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 0 && C_PIM0_BASETYPE == 3 && !([xstrncmp C_FAMILY  spartan6 ] && C_PORT_CONFIG > 1))
BUS_INTERFACE BUS = MPMC_PIM0, BUS_STD = XIL_NPI, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 0 && C_PIM0_BASETYPE == 4 && !([xstrncmp C_FAMILY  spartan6 ] && C_PORT_CONFIG == 4))
BUS_INTERFACE BUS = PPC440MC0, BUS_STD = XIL_PPC440MC, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 0 && C_PIM0_BASETYPE == 5 && ![xstrncmp C_FAMILY  spartan6 ])
BUS_INTERFACE BUS = VFBC0, BUS_STD = XIL_VFBC, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 0 && C_PIM0_BASETYPE == 6 && !([xstrncmp C_FAMILY  spartan6 ] && C_PORT_CONFIG == 4))
BUS_INTERFACE BUS = MCB0, BUS_STD = XIL_MCB_PORT, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 0 && C_PIM0_BASETYPE == 7 && [xstrncmp C_FAMILY  spartan6 ])
BUS_INTERFACE BUS = XCL1, BUS_STD = XIL_MEMORY_CHANNEL, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 1 && !([xstrncmp C_FAMILY  spartan6 ] && C_PORT_CONFIG > 2))
BUS_INTERFACE BUS = XCL1_B, BUS_STD = XIL_MEMORY_CHANNEL, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 1 && C_XCL1_B_IN_USE && !([xstrncmp C_FAMILY  spartan6 ] && C_PORT_CONFIG > 2))
BUS_INTERFACE BUS = SPLB1, BUS_STD = PLBV46, BUS_TYPE = SLAVE, ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 2 && !([xstrncmp C_FAMILY  spartan6 ] && C_PORT_CONFIG == 4))
BUS_INTERFACE BUS = SDMA_CTRL1, BUS_STD = PLBV46, BUS_TYPE = SLAVE, ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 3 && !([xstrncmp C_FAMILY  spartan6 ] && C_PORT_CONFIG > 2))
BUS_INTERFACE BUS = SDMA_LL1, BUS_STD = XIL_LL_DMA, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 3 && !([xstrncmp C_FAMILY  spartan6 ] && C_PORT_CONFIG > 2))
BUS_INTERFACE BUS = MPMC_PIM1, BUS_STD = XIL_NPI, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 4 && !([xstrncmp C_FAMILY  spartan6 ] && C_PORT_CONFIG == 4))
BUS_INTERFACE BUS = PPC440MC1, BUS_STD = XIL_PPC440MC, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 5 && ![xstrncmp C_FAMILY  spartan6 ])
BUS_INTERFACE BUS = VFBC1, BUS_STD = XIL_VFBC, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 6 && !([xstrncmp C_FAMILY  spartan6 ] && C_PORT_CONFIG == 4))
BUS_INTERFACE BUS = MCB1, BUS_STD = XIL_MCB_PORT, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 7 && [xstrncmp C_FAMILY  spartan6 ] && C_PORT_CONFIG < 4)
BUS_INTERFACE BUS = XCL2, BUS_STD = XIL_MEMORY_CHANNEL, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 1 && !([xstrncmp C_FAMILY  spartan6 ] && C_PORT_CONFIG > 2))
BUS_INTERFACE BUS = XCL2_B, BUS_STD = XIL_MEMORY_CHANNEL, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 1 && C_XCL2_B_IN_USE && !([xstrncmp C_FAMILY  spartan6 ] && C_PORT_CONFIG > 2))
BUS_INTERFACE BUS = SPLB2, BUS_STD = PLBV46, BUS_TYPE = SLAVE, ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 2 && !([xstrncmp C_FAMILY  spartan6 ] && C_PORT_CONFIG > 2))
BUS_INTERFACE BUS = SDMA_CTRL2, BUS_STD = PLBV46, BUS_TYPE = SLAVE, ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 3 && !([xstrncmp C_FAMILY  spartan6 ] && C_PORT_CONFIG > 2))
BUS_INTERFACE BUS = SDMA_LL2, BUS_STD = XIL_LL_DMA, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 3 && !([xstrncmp C_FAMILY  spartan6 ] && C_PORT_CONFIG > 2))
BUS_INTERFACE BUS = MPMC_PIM2, BUS_STD = XIL_NPI, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 4 && !([xstrncmp C_FAMILY  spartan6 ] && C_PORT_CONFIG > 2))
BUS_INTERFACE BUS = PPC440MC2, BUS_STD = XIL_PPC440MC, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 5 && ![xstrncmp C_FAMILY  spartan6 ])
BUS_INTERFACE BUS = VFBC2, BUS_STD = XIL_VFBC, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 6 && !([xstrncmp C_FAMILY  spartan6 ] && C_PORT_CONFIG > 2))
BUS_INTERFACE BUS = MCB2, BUS_STD = XIL_MCB_PORT, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 2 && (C_PIM2_BASETYPE == 7 || C_PIM2_BASETYPE == 8 || C_PIM2_BASETYPE == 9) && [xstrncmp C_FAMILY  spartan6 ] && C_PORT_CONFIG < 3)
BUS_INTERFACE BUS = XCL3, BUS_STD = XIL_MEMORY_CHANNEL, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 1 && !([xstrncmp C_FAMILY  spartan6 ] && C_PORT_CONFIG > 1))
BUS_INTERFACE BUS = XCL3_B, BUS_STD = XIL_MEMORY_CHANNEL, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 1 && C_XCL3_B_IN_USE && !([xstrncmp C_FAMILY  spartan6 ] && C_PORT_CONFIG > 1))
BUS_INTERFACE BUS = SPLB3, BUS_STD = PLBV46, BUS_TYPE = SLAVE, ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 2 && !([xstrncmp C_FAMILY  spartan6 ] && C_PORT_CONFIG > 1))
BUS_INTERFACE BUS = SDMA_CTRL3, BUS_STD = PLBV46, BUS_TYPE = SLAVE, ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 3 && !([xstrncmp C_FAMILY  spartan6 ] && C_PORT_CONFIG > 1))
BUS_INTERFACE BUS = SDMA_LL3, BUS_STD = XIL_LL_DMA, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 3 && !([xstrncmp C_FAMILY  spartan6 ] && C_PORT_CONFIG > 1))
BUS_INTERFACE BUS = MPMC_PIM3, BUS_STD = XIL_NPI, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 4 && !([xstrncmp C_FAMILY  spartan6 ] && C_PORT_CONFIG > 1))
BUS_INTERFACE BUS = PPC440MC3, BUS_STD = XIL_PPC440MC, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 5 && ![xstrncmp C_FAMILY  spartan6 ])
BUS_INTERFACE BUS = VFBC3, BUS_STD = XIL_VFBC, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 6 && !([xstrncmp C_FAMILY  spartan6 ] && C_PORT_CONFIG > 1))
BUS_INTERFACE BUS = MCB3, BUS_STD = XIL_MCB_PORT, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 3 && (C_PIM3_BASETYPE == 7 || C_PIM3_BASETYPE == 8 || C_PIM3_BASETYPE == 9) && [xstrncmp C_FAMILY  spartan6 ] && C_PORT_CONFIG < 2)
BUS_INTERFACE BUS = XCL4, BUS_STD = XIL_MEMORY_CHANNEL, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 1 && ![xstrncmp C_FAMILY  spartan6 ])
BUS_INTERFACE BUS = XCL4_B, BUS_STD = XIL_MEMORY_CHANNEL, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 1 && C_XCL4_B_IN_USE && ![xstrncmp C_FAMILY  spartan6 ])
BUS_INTERFACE BUS = SPLB4, BUS_STD = PLBV46, BUS_TYPE = SLAVE, ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 2 && ![xstrncmp C_FAMILY  spartan6 ])
BUS_INTERFACE BUS = SDMA_CTRL4, BUS_STD = PLBV46, BUS_TYPE = SLAVE, ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 3 && ![xstrncmp C_FAMILY  spartan6 ])
BUS_INTERFACE BUS = SDMA_LL4, BUS_STD = XIL_LL_DMA, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 3 && ![xstrncmp C_FAMILY  spartan6 ])
BUS_INTERFACE BUS = MPMC_PIM4, BUS_STD = XIL_NPI, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 4 && ![xstrncmp C_FAMILY  spartan6 ])
BUS_INTERFACE BUS = PPC440MC4, BUS_STD = XIL_PPC440MC, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 5 && ![xstrncmp C_FAMILY  spartan6 ])
BUS_INTERFACE BUS = VFBC4, BUS_STD = XIL_VFBC, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 6 && ![xstrncmp C_FAMILY  spartan6 ])
BUS_INTERFACE BUS = MCB4, BUS_STD = XIL_MCB_PORT, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 4 && (C_PIM4_BASETYPE == 8 || C_PIM4_BASETYPE == 9) && [xstrncmp C_FAMILY  spartan6 ] && C_PORT_CONFIG == 0)
BUS_INTERFACE BUS = XCL5, BUS_STD = XIL_MEMORY_CHANNEL, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 1 && ![xstrncmp C_FAMILY  spartan6 ])
BUS_INTERFACE BUS = XCL5_B, BUS_STD = XIL_MEMORY_CHANNEL, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 1 && C_XCL5_B_IN_USE && ![xstrncmp C_FAMILY  spartan6 ])
BUS_INTERFACE BUS = SPLB5, BUS_STD = PLBV46, BUS_TYPE = SLAVE, ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 2 && ![xstrncmp C_FAMILY  spartan6 ])
BUS_INTERFACE BUS = SDMA_CTRL5, BUS_STD = PLBV46, BUS_TYPE = SLAVE, ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 3 && ![xstrncmp C_FAMILY  spartan6 ])
BUS_INTERFACE BUS = SDMA_LL5, BUS_STD = XIL_LL_DMA, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 3 && ![xstrncmp C_FAMILY  spartan6 ])
BUS_INTERFACE BUS = MPMC_PIM5, BUS_STD = XIL_NPI, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 4 && ![xstrncmp C_FAMILY  spartan6 ])
BUS_INTERFACE BUS = PPC440MC5, BUS_STD = XIL_PPC440MC, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 5 && ![xstrncmp C_FAMILY  spartan6 ])
BUS_INTERFACE BUS = VFBC5, BUS_STD = XIL_VFBC, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 6 && ![xstrncmp C_FAMILY  spartan6 ])
BUS_INTERFACE BUS = MCB5, BUS_STD = XIL_MCB_PORT, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 5 && (C_PIM5_BASETYPE == 8 || C_PIM5_BASETYPE == 9) && [xstrncmp C_FAMILY  spartan6 ] && C_PORT_CONFIG == 0)
BUS_INTERFACE BUS = XCL6, BUS_STD = XIL_MEMORY_CHANNEL, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 1 && ![xstrncmp C_FAMILY  spartan6 ])
BUS_INTERFACE BUS = XCL6_B, BUS_STD = XIL_MEMORY_CHANNEL, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 1 && C_XCL6_B_IN_USE && ![xstrncmp C_FAMILY  spartan6 ])
BUS_INTERFACE BUS = SPLB6, BUS_STD = PLBV46, BUS_TYPE = SLAVE, ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 2 && ![xstrncmp C_FAMILY  spartan6 ])
BUS_INTERFACE BUS = SDMA_CTRL6, BUS_STD = PLBV46, BUS_TYPE = SLAVE, ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 3 && ![xstrncmp C_FAMILY  spartan6 ])
BUS_INTERFACE BUS = SDMA_LL6, BUS_STD = XIL_LL_DMA, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 3 && ![xstrncmp C_FAMILY  spartan6 ])
BUS_INTERFACE BUS = MPMC_PIM6, BUS_STD = XIL_NPI, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 4 && ![xstrncmp C_FAMILY  spartan6 ])
BUS_INTERFACE BUS = PPC440MC6, BUS_STD = XIL_PPC440MC, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 5 && ![xstrncmp C_FAMILY  spartan6 ])
BUS_INTERFACE BUS = VFBC6, BUS_STD = XIL_VFBC, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 6 && ![xstrncmp C_FAMILY  spartan6 ])
BUS_INTERFACE BUS = MCB6, BUS_STD = XIL_MCB_PORT, BUS_TYPE = TARGET, ISVALID = (0)
BUS_INTERFACE BUS = XCL7, BUS_STD = XIL_MEMORY_CHANNEL, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 1 && ![xstrncmp C_FAMILY  spartan6 ])
BUS_INTERFACE BUS = XCL7_B, BUS_STD = XIL_MEMORY_CHANNEL, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 1 && C_XCL7_B_IN_USE && ![xstrncmp C_FAMILY  spartan6 ])
BUS_INTERFACE BUS = SPLB7, BUS_STD = PLBV46, BUS_TYPE = SLAVE, ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 2 && ![xstrncmp C_FAMILY  spartan6 ])
BUS_INTERFACE BUS = SDMA_CTRL7, BUS_STD = PLBV46, BUS_TYPE = SLAVE, ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 3 && ![xstrncmp C_FAMILY  spartan6 ])
BUS_INTERFACE BUS = SDMA_LL7, BUS_STD = XIL_LL_DMA, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 3 && ![xstrncmp C_FAMILY  spartan6 ])
BUS_INTERFACE BUS = MPMC_PIM7, BUS_STD = XIL_NPI, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 4 && ![xstrncmp C_FAMILY  spartan6 ])
BUS_INTERFACE BUS = PPC440MC7, BUS_STD = XIL_PPC440MC, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 5 && ![xstrncmp C_FAMILY  spartan6 ])
BUS_INTERFACE BUS = VFBC7, BUS_STD = XIL_VFBC, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 6 && ![xstrncmp C_FAMILY  spartan6 ])
BUS_INTERFACE BUS = MCB7, BUS_STD = XIL_MCB_PORT, BUS_TYPE = TARGET, ISVALID = (0)
BUS_INTERFACE BUS = MPMC_CTRL, BUS_STD = PLBV46, BUS_TYPE = SLAVE, ISVALID = (C_INCLUDE_ECC_SUPPORT == 1 || C_USE_STATIC_PHY == 1 || C_DEBUG_REG_ENABLE == 1 || C_PM_ENABLE == 1 || [xstrncmp C_MEM_TYPE  SDRAM ])

## Generics for VHDL or Parameters for Verilog
PARAMETER C_FAMILY = virtex5, DT = STRING
PARAMETER C_SUBFAMILY = fx, DT = STRING, TYPE = NON_HDL
PARAMETER C_DEVICE = 5vlx50t, DT = STRING, TYPE = NON_HDL
PARAMETER C_PACKAGE = ff1136, DT = STRING, TYPE = NON_HDL
PARAMETER C_SPEEDGRADE = -1, DT = STRING, TYPE = NON_HDL
PARAMETER C_SPEEDGRADE_INT = 1, DT = INTEGER, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_speedgrade
PARAMETER C_NUM_PORTS = 1, DT = INTEGER, RANGE = (1:8), IPLEVEL_DRC_PROC = iplevel_drc_num_ports
PARAMETER C_PORT_CONFIG = 1, DT = INTEGER, RANGE = (0:4), ASSIGNMENT = REQUIRE, VALUES = (0=B32 B32 U32 U32 U32 U32, 1=B32 B32 B32 B32, 2=B64 B32 B32, 3=B64 B64, 4=B128), ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), IO_IS = C_PORT_CONFIG
PARAMETER C_ALL_PIMS_SHARE_ADDRESSES = 1, DT = INTEGER, RANGE = (0,1)
PARAMETER C_MPMC_BASEADDR = 0xFFFFFFFF, BUS = XCL0:XCL0_B:SPLB0:SDMA_LL0:PPC440MC0:VFBC0:XCL1:XCL1_B:SPLB1:SDMA_LL1:PPC440MC1:VFBC1:XCL2:XCL2_B:SPLB2:SDMA_LL2:PPC440MC2:VFBC2:XCL3:XCL3_B:SPLB3:SDMA_LL3:PPC440MC3:VFBC3:XCL4:XCL4_B:SPLB4:SDMA_LL4:PPC440MC4:VFBC4:XCL5:XCL5_B:SPLB5:SDMA_LL5:PPC440MC5:VFBC5:XCL6:XCL6_B:SPLB6:SDMA_LL6:PPC440MC6:VFBC6:XCL7:XCL7_B:SPLB7:SDMA_LL7:PPC440MC7:VFBC7, ADDRESS = BASE, PAIR = C_MPMC_HIGHADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = (C_ALL_PIMS_SHARE_ADDRESSES == 1), IO_IF = memory_0, IO_IS = C_BASEADDR, ASSIGNMENT = REQUIRE
PARAMETER C_MPMC_HIGHADDR = 0x00000000, BUS = XCL0:XCL0_B:SPLB0:SDMA_LL0:PPC440MC0:VFBC0:XCL1:XCL1_B:SPLB1:SDMA_LL1:PPC440MC1:VFBC1:XCL2:XCL2_B:SPLB2:SDMA_LL2:PPC440MC2:VFBC2:XCL3:XCL3_B:SPLB3:SDMA_LL3:PPC440MC3:VFBC3:XCL4:XCL4_B:SPLB4:SDMA_LL4:PPC440MC4:VFBC4:XCL5:XCL5_B:SPLB5:SDMA_LL5:PPC440MC5:VFBC5:XCL6:XCL6_B:SPLB6:SDMA_LL6:PPC440MC6:VFBC6:XCL7:XCL7_B:SPLB7:SDMA_LL7:PPC440MC7:VFBC7, ADDRESS = HIGH, PAIR = C_MPMC_BASEADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = (C_ALL_PIMS_SHARE_ADDRESSES == 1), IO_IF = memory_0, IO_IS = C_HIGHADDR, ASSIGNMENT = REQUIRE
PARAMETER C_MPMC_SW_BASEADDR = 0xFFFFFFFF, DT = STD_LOGIC_VECTOR, ISVALID = (C_ALL_PIMS_SHARE_ADDRESSES == 0), TYPE = NON_HDL
PARAMETER C_MPMC_SW_HIGHADDR = 0x00000000, DT = STD_LOGIC_VECTOR, ISVALID = (C_ALL_PIMS_SHARE_ADDRESSES == 0), TYPE = NON_HDL
PARAMETER C_SDMA_CTRL_BASEADDR = 0xFFFFFFFF, DT = STD_LOGIC_VECTOR, BUS = SDMA_CTRL0:SDMA_CTRL1:SDMA_CTRL2:SDMA_CTRL3:SDMA_CTRL4:SDMA_CTRL5:SDMA_CTRL6:SDMA_CTRL7, ADDRESS = BASE, PAIR = C_SDMA_CTRL_HIGHADDR, ADDR_TYPE = REGISTER, ISVALID = ((C_ALL_PIMS_SHARE_ADDRESSES == 1) && ((C_PIM0_BASETYPE == 3) || (C_PIM1_BASETYPE == 3) || (C_PIM2_BASETYPE == 3) || (C_PIM3_BASETYPE == 3) || (C_PIM4_BASETYPE == 3) || (C_PIM5_BASETYPE == 3) || (C_PIM6_BASETYPE == 3) || (C_PIM7_BASETYPE == 3))), ASSIGNMENT = REQUIRE
PARAMETER C_SDMA_CTRL_HIGHADDR = 0x00000000, DT = STD_LOGIC_VECTOR, BUS = SDMA_CTRL0:SDMA_CTRL1:SDMA_CTRL2:SDMA_CTRL3:SDMA_CTRL4:SDMA_CTRL5:SDMA_CTRL6:SDMA_CTRL7, ADDRESS = HIGH, PAIR = C_SDMA_CTRL_BASEADDR, ADDR_TYPE = REGISTER, ISVALID = ((C_ALL_PIMS_SHARE_ADDRESSES == 1) && ((C_PIM0_BASETYPE == 3) || (C_PIM1_BASETYPE == 3) || (C_PIM2_BASETYPE == 3) || (C_PIM3_BASETYPE == 3) || (C_PIM4_BASETYPE == 3) || (C_PIM5_BASETYPE == 3) || (C_PIM6_BASETYPE == 3) || (C_PIM7_BASETYPE == 3))), ASSIGNMENT = REQUIRE
PARAMETER C_MPMC_CTRL_BASEADDR = 0xFFFFFFFF, DT = STD_LOGIC_VECTOR, BUS = MPMC_CTRL, ADDRESS = BASE, PAIR = C_MPMC_CTRL_HIGHADDR, ADDR_TYPE = REGISTER, ISVALID = (C_INCLUDE_ECC_SUPPORT == 1 || C_USE_STATIC_PHY == 1 || [xstrncmp C_MEM_TYPE  SDRAM ] || C_DEBUG_REG_ENABLE == 1 || C_PM_ENABLE == 1), ASSIGNMENT = REQUIRE
PARAMETER C_MPMC_CTRL_HIGHADDR = 0x00000000, DT = STD_LOGIC_VECTOR, BUS = MPMC_CTRL, ADDRESS = HIGH, PAIR = C_MPMC_CTRL_BASEADDR, ADDR_TYPE = REGISTER, ISVALID = (C_INCLUDE_ECC_SUPPORT == 1 || C_USE_STATIC_PHY == 1 || [xstrncmp C_MEM_TYPE  SDRAM ] || C_DEBUG_REG_ENABLE == 1 || C_PM_ENABLE == 1), ASSIGNMENT = REQUIRE
PARAMETER C_MPMC_CTRL_AWIDTH = 32, DT = INTEGER, BUS = MPMC_CTRL, ASSIGNMENT = CONSTANT, ISVALID = (C_INCLUDE_ECC_SUPPORT == 1 || C_USE_STATIC_PHY == 1 || [xstrncmp C_MEM_TYPE  SDRAM ] || C_DEBUG_REG_ENABLE == 1 || C_PM_ENABLE == 1)
PARAMETER C_MPMC_CTRL_DWIDTH = 64, DT = INTEGER, BUS = MPMC_CTRL, RANGE = (32,64,128), ISVALID = (C_INCLUDE_ECC_SUPPORT == 1 || C_USE_STATIC_PHY == 1 || [xstrncmp C_MEM_TYPE  SDRAM ] || C_DEBUG_REG_ENABLE == 1 || C_PM_ENABLE == 1)
PARAMETER C_MPMC_CTRL_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = MPMC_CTRL, ASSIGNMENT = CONSTANT, ISVALID = (C_INCLUDE_ECC_SUPPORT == 1 || C_USE_STATIC_PHY == 1 || [xstrncmp C_MEM_TYPE  SDRAM ] || C_DEBUG_REG_ENABLE == 1 || C_PM_ENABLE == 1)
PARAMETER C_MPMC_CTRL_NUM_MASTERS = 1, DT = INTEGER, BUS = MPMC_CTRL, RANGE = (0:16), ISVALID = (C_INCLUDE_ECC_SUPPORT == 1 || C_USE_STATIC_PHY == 1 || [xstrncmp C_MEM_TYPE  SDRAM ] || C_DEBUG_REG_ENABLE == 1 || C_PM_ENABLE == 1)
PARAMETER C_MPMC_CTRL_MID_WIDTH = 1, DT = INTEGER, BUS = MPMC_CTRL, RANGE = (0:4), ISVALID = (C_INCLUDE_ECC_SUPPORT == 1 || C_USE_STATIC_PHY == 1 || [xstrncmp C_MEM_TYPE  SDRAM ] || C_DEBUG_REG_ENABLE == 1 || C_PM_ENABLE == 1)
PARAMETER C_MPMC_CTRL_P2P = 1, DT = INTEGER, BUS = MPMC_CTRL, RANGE = (0,1), ISVALID = (C_INCLUDE_ECC_SUPPORT == 1 || C_USE_STATIC_PHY == 1 || [xstrncmp C_MEM_TYPE  SDRAM ] || C_DEBUG_REG_ENABLE == 1 || C_PM_ENABLE == 1)
PARAMETER C_MPMC_CTRL_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = MPMC_CTRL, ASSIGNMENT = CONSTANT, ISVALID = (C_INCLUDE_ECC_SUPPORT == 1 || C_USE_STATIC_PHY == 1 || [xstrncmp C_MEM_TYPE  SDRAM ] || C_DEBUG_REG_ENABLE == 1 || C_PM_ENABLE == 1)
PARAMETER C_MPMC_CTRL_SMALLEST_MASTER = 32, DT = INTEGER, BUS = MPMC_CTRL, RANGE = (32,64,128), ISVALID = (C_INCLUDE_ECC_SUPPORT == 1 || C_USE_STATIC_PHY == 1 || [xstrncmp C_MEM_TYPE  SDRAM ] || C_DEBUG_REG_ENABLE == 1 || C_PM_ENABLE == 1)
PARAMETER C_NUM_IDELAYCTRL = 1, DT = INTEGER, RANGE = (0:16), IO_IF = memory_0, IO_IS = C_NUM_IDELAYCTRL, ASSIGNMENT = OPTIONAL_UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_num_idelayctrl, ISVALID = (([xstrncmp C_FAMILY  virtex4 ] || [xstrncmp C_FAMILY  qvirtex4 ] || [xstrncmp C_FAMILY  qrvirtex4 ] || [xstrncmp C_FAMILY  virtex5 ]) && ([xstrncmp C_MEM_TYPE  DDR ] || [xstrncmp C_MEM_TYPE  DDR2 ]) && C_USE_STATIC_PHY == 0)
PARAMETER C_IDELAYCTRL_LOC = NOT_SET, DT = STRING, TYPE = NON_HDL, IO_IF = memory_0, IO_IS = C_IDELAYCTRL_LOC, ASSIGNMENT = OPTIONAL_UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_idelayctrl_loc, ISVALID = (([xstrncmp C_FAMILY  virtex4 ] || [xstrncmp C_FAMILY  qvirtex4 ] || [xstrncmp C_FAMILY  qrvirtex4 ] || [xstrncmp C_FAMILY  virtex5 ]) && ([xstrncmp C_MEM_TYPE  DDR ] || [xstrncmp C_MEM_TYPE  DDR2 ]) && C_USE_STATIC_PHY == 0)
PARAMETER C_IODELAY_GRP = NOT_SET, DT = STRING, ASSIGNMENT = OPTIONAL_UPDATE, IO_IF = memory_0, IO_IS = C_IODELAY_GRP, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_iodelay_grp, ISVALID = (([xstrncmp C_FAMILY  virtex6 ]) && ([xstrncmp C_MEM_TYPE  DDR3 ] || [xstrncmp C_MEM_TYPE  DDR2 ]) && C_USE_STATIC_PHY == 0)
PARAMETER C_MCB_LOC = NOT_SET, DT = STRING, TYPE = NON_HDL, VALUES = (NOT_SET=NOT SET, MEMC1=MEMC1, MEMC2=MEMC2, MEMC3=MEMC3, MEMC4=MEMC4), IO_IF = memory_0, IO_IS = C_MCB_LOC, ASSIGNMENT = REQUIRE, ISVALID = ([xstrncmp C_FAMILY  spartan6 ])
PARAMETER C_MMCM_EXT_LOC = NOT_SET, DT = STRING, TYPE = NON_HDL, IO_IS = C_MMCM_EXT_LOC, ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mmcm_loc
PARAMETER C_MMCM_INT_LOC = NOT_SET, DT = STRING, TYPE = NON_HDL, IO_IS = C_MMCM_INT_LOC, ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mmcm_loc
PARAMETER C_MAX_REQ_ALLOWED = 1, DT = INTEGER, ASSIGNMENT = CONSTANT
PARAMETER C_ARB_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (![xstrncmp C_FAMILY  spartan6 ])
PARAMETER C_WR_DATAPATH_TML_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (![xstrncmp C_FAMILY  spartan6 ])
PARAMETER C_RD_DATAPATH_TML_MAX_FANOUT = 0, DT = INTEGER, RANGE = (0,1,2,4,8), ISVALID = (![xstrncmp C_FAMILY  spartan6 ])
PARAMETER C_ARB_USE_DEFAULT = 0, DT = INTEGER, ASSIGNMENT = CONSTANT
PARAMETER C_ARB0_ALGO = ROUND_ROBIN, DT = STRING, VALUES = (ROUND_ROBIN=Round Robin, FIXED=Fixed, CUSTOM=Custom)
PARAMETER C_ARB0_NUM_SLOTS = 8, DT = INTEGER, RANGE = (1:16), ISVALID = ([xstrncmp C_ARB0_ALGO  CUSTOM ]), IPLEVEL_DRC_PROC = iplevel_drc_arb0_num_slots
PARAMETER C_ARB0_SLOT0 = 01234567, DT = STRING, ISVALID = (C_ARB0_NUM_SLOTS > 0 && [xstrncmp C_ARB0_ALGO  CUSTOM ]), TYPE = NON_HDL
PARAMETER C_ARB0_SLOT1 = 12345670, DT = STRING, ISVALID = (C_ARB0_NUM_SLOTS > 1 && [xstrncmp C_ARB0_ALGO  CUSTOM ]), TYPE = NON_HDL
PARAMETER C_ARB0_SLOT2 = 23456701, DT = STRING, ISVALID = (C_ARB0_NUM_SLOTS > 2 && [xstrncmp C_ARB0_ALGO  CUSTOM ]), TYPE = NON_HDL
PARAMETER C_ARB0_SLOT3 = 34567012, DT = STRING, ISVALID = (C_ARB0_NUM_SLOTS > 3 && [xstrncmp C_ARB0_ALGO  CUSTOM ]), TYPE = NON_HDL
PARAMETER C_ARB0_SLOT4 = 45670123, DT = STRING, ISVALID = (C_ARB0_NUM_SLOTS > 4 && [xstrncmp C_ARB0_ALGO  CUSTOM ]), TYPE = NON_HDL
PARAMETER C_ARB0_SLOT5 = 56701234, DT = STRING, ISVALID = (C_ARB0_NUM_SLOTS > 5 && [xstrncmp C_ARB0_ALGO  CUSTOM ]), TYPE = NON_HDL
PARAMETER C_ARB0_SLOT6 = 67012345, DT = STRING, ISVALID = (C_ARB0_NUM_SLOTS > 6 && [xstrncmp C_ARB0_ALGO  CUSTOM ]), TYPE = NON_HDL
PARAMETER C_ARB0_SLOT7 = 70123456, DT = STRING, ISVALID = (C_ARB0_NUM_SLOTS > 7 && [xstrncmp C_ARB0_ALGO  CUSTOM ]), TYPE = NON_HDL
PARAMETER C_ARB0_SLOT8 = 01234567, DT = STRING, ISVALID = (C_ARB0_NUM_SLOTS > 8 && [xstrncmp C_ARB0_ALGO  CUSTOM ]), TYPE = NON_HDL
PARAMETER C_ARB0_SLOT9 = 12345670, DT = STRING, ISVALID = (C_ARB0_NUM_SLOTS > 9 && [xstrncmp C_ARB0_ALGO  CUSTOM ]), TYPE = NON_HDL
PARAMETER C_ARB0_SLOT10 = 23456701, DT = STRING, ISVALID = (C_ARB0_NUM_SLOTS > 10 && [xstrncmp C_ARB0_ALGO  CUSTOM ]), TYPE = NON_HDL
PARAMETER C_ARB0_SLOT11 = 34567012, DT = STRING, ISVALID = (C_ARB0_NUM_SLOTS > 11 && [xstrncmp C_ARB0_ALGO  CUSTOM ]), TYPE = NON_HDL
PARAMETER C_ARB0_SLOT12 = 45670123, DT = STRING, ISVALID = (C_ARB0_NUM_SLOTS > 12 && [xstrncmp C_ARB0_ALGO  CUSTOM ]), TYPE = NON_HDL
PARAMETER C_ARB0_SLOT13 = 56701234, DT = STRING, ISVALID = (C_ARB0_NUM_SLOTS > 13 && [xstrncmp C_ARB0_ALGO  CUSTOM ]), TYPE = NON_HDL
PARAMETER C_ARB0_SLOT14 = 67012345, DT = STRING, ISVALID = (C_ARB0_NUM_SLOTS > 14 && [xstrncmp C_ARB0_ALGO  CUSTOM ]), TYPE = NON_HDL
PARAMETER C_ARB0_SLOT15 = 70123456, DT = STRING, ISVALID = (C_ARB0_NUM_SLOTS > 15 && [xstrncmp C_ARB0_ALGO  CUSTOM ]), TYPE = NON_HDL
PARAMETER C_PM_ENABLE = 0, DT = INTEGER, RANGE = (0,1)
PARAMETER C_PM_DC_WIDTH = 48, DT = INTEGER, RANGE = (1:64), ISVALID = (C_PM_ENABLE)
PARAMETER C_PM_GC_CNTR = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PM_ENABLE)
PARAMETER C_PM_GC_WIDTH = 48, DT = INTEGER, RANGE = (1:64), ISVALID = (C_PM_ENABLE)
PARAMETER C_PM_SHIFT_CNT_BY = 1, DT = INTEGER, RANGE = (0:3), ISVALID = (C_PM_ENABLE)
PARAMETER C_SKIP_SIM_INIT_DELAY = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (![xstrncmp C_FAMILY  spartan6 ])
PARAMETER C_USE_STATIC_PHY = 0, DT = INTEGER, RANGE = (0,1), IO_IF = memory_0, IO_IS = C_USE_STATIC_PHY, ISVALID = (![xstrncmp C_FAMILY  spartan6 ])
PARAMETER C_STATIC_PHY_RDDATA_CLK_SEL = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (![xstrncmp C_FAMILY  spartan6 ] && (C_USE_STATIC_PHY == 1 || [xstrncmp C_MEM_TYPE  SDRAM ]))
PARAMETER C_STATIC_PHY_RDDATA_SWAP_RISE = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (![xstrncmp C_FAMILY  spartan6 ] && (C_USE_STATIC_PHY == 1 && ([xstrncmp C_MEM_TYPE  SDRAM ] == 0)))
PARAMETER C_STATIC_PHY_RDEN_DELAY = 5, DT = INTEGER, RANGE = (0:15), ISVALID = (![xstrncmp C_FAMILY  spartan6 ] && (C_USE_STATIC_PHY == 1 || [xstrncmp C_MEM_TYPE  SDRAM ])), IO_IF = memory_0, IO_IS = C_STATIC_PHY_RDEN_DELAY
PARAMETER C_DEBUG_REG_ENABLE = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (![xstrncmp C_FAMILY  spartan6 ] && C_USE_STATIC_PHY == 0 && [xstrncmp C_MEM_TYPE  SDRAM ] == 0)
PARAMETER C_SPECIAL_BOARD = NONE, DT = STRING, VALUES = (NONE=NONE, S3E_STKIT=S3E_STKIT, S3E_1600E=S3E_1600E, S3A_STKIT=S3A_STKIT), IO_IF = memory_0, IO_IS = C_SPECIAL_BOARD, ISVALID = ([xstrncmp C_FAMILY  spartan3a ] || [xstrncmp C_FAMILY  aspartan3a ] || [xstrncmp C_FAMILY  spartan3e ] || [xstrncmp C_FAMILY  aspartan3e ])
PARAMETER C_USE_MIG_FLOW = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (![xstrncmp C_FAMILY  spartan6 ] && C_USE_STATIC_PHY == 0 && [xstrncmp C_MEM_TYPE  SDRAM ] == 0), TYPE = NON_HDL, SYSLEVEL_DRC_PROC = syslevel_drc_mig_flow
PARAMETER C_MEM_ADDR_ORDER = BANK_ROW_COLUMN, DT = STRING, VALUES = (BANK_ROW_COLUMN=BANK_ROW_COLUMN, ROW_BANK_COLUMN=ROW_BANK_COLUMN), ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), IO_IS = C_MEM_ADDR_ORDER
PARAMETER C_MEM_CALIBRATION_MODE = 1, DT = INTEGER, RANGE = (0:1), VALUES = (1=CALIBRATION, 0=NO CALIBRATION), ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), IO_IS = C_MEM_CALIBRATION_MODE
PARAMETER C_MEM_CALIBRATION_DELAY = HALF, DT = STRING, VALUES = (QUARTER=QUARTER, FULL=FULL, HALF=HALF, THREEQUARTER=THREEQUARTER), ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), IO_IS = C_MEM_CALIBRATION_DELAY
PARAMETER C_MEM_CALIBRATION_SOFT_IP = FALSE, DT = STRING, VALUES = (FALSE=FALSE, TRUE=TRUE), ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), IO_IS = C_MEM_CALIBRATION_SOFT_IP
PARAMETER C_MEM_CALIBRATION_BYPASS = NO, DT = STRING, VALUES = (YES=YES, NO=NO), ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), IO_IS = C_MEM_CALIBRATION_BYPASS
PARAMETER C_MEM_SKIP_IN_TERM_CAL = 1, DT = INTEGER, RANGE = (0:1), ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), IO_IS = C_MEM_SKIP_IN_TERM_CAL
PARAMETER C_MEM_SKIP_DYNAMIC_CAL = 1, DT = INTEGER, RANGE = (0:1), ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), IO_IS = C_MEM_SKIP_DYNAMIC_CAL
PARAMETER C_MEM_SKIP_DYN_IN_TERM = 1, DT = INTEGER, RANGE = (0:1), ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), IO_IS = C_MEM_SKIP_DYN_IN_TERM
PARAMETER C_MEM_INCDEC_THRESHOLD = 0x02, DT = INTEGER, RANGE = (0:255), ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), IO_IS = C_MEM_INCDEC_THRESHOLD
PARAMETER C_MEM_CHECK_MAX_INDELAY = 0, DT = INTEGER, RANGE = (0:1), ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), IO_IS = C_MEM_CHECK_MAX_INDELAY
PARAMETER C_MEM_CHECK_MAX_TAP_REG = 0, DT = INTEGER, RANGE = (0:1), ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), IO_IS = C_MEM_CHECK_MAX_TAP_REG
PARAMETER C_MEM_TZQINIT_MAXCNT = 512, DT = INTEGER, ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), IO_IS = C_MEM_TZQINIT_MAXCNT
PARAMETER C_MPMC_CLK_MEM_2X_PERIOD_PS = 1250, DT = INTEGER, RANGE = (1250:12500), ASSIGNMENT = OPTIONAL_UPDATE, CLK_PORT = MPMC_Clk_Mem_2x, CLK_UNIT = PS, ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), IO_IS = C_MPMC_CLK_MEM_2X_PERIOD_PS
PARAMETER C_MCB_USE_EXTERNAL_BUFPLL = 0, DT = INTEGER, RANGE = (0:1), ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), IO_IS = C_MCB_USE_EXTERNAL_BUFPLL
PARAMETER C_MCB_LDQSP_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), IO_IS = C_MCB_LDQSP_TAP_DELAY_VAL
PARAMETER C_MCB_UDQSP_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), IO_IS = C_MCB_UDQSP_TAP_DELAY_VAL
PARAMETER C_MCB_LDQSN_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), IO_IS = C_MCB_LDQSN_TAP_DELAY_VAL
PARAMETER C_MCB_UDQSN_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), IO_IS = C_MCB_UDQSN_TAP_DELAY_VAL
PARAMETER C_MCB_DQ0_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), IO_IS = C_MCB_DQ0_TAP_DELAY_VAL
PARAMETER C_MCB_DQ1_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), IO_IS = C_MCB_DQ1_TAP_DELAY_VAL
PARAMETER C_MCB_DQ2_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), IO_IS = C_MCB_DQ2_TAP_DELAY_VAL
PARAMETER C_MCB_DQ3_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), IO_IS = C_MCB_DQ3_TAP_DELAY_VAL
PARAMETER C_MCB_DQ4_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), IO_IS = C_MCB_DQ4_TAP_DELAY_VAL
PARAMETER C_MCB_DQ5_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), IO_IS = C_MCB_DQ5_TAP_DELAY_VAL
PARAMETER C_MCB_DQ6_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), IO_IS = C_MCB_DQ6_TAP_DELAY_VAL
PARAMETER C_MCB_DQ7_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), IO_IS = C_MCB_DQ7_TAP_DELAY_VAL
PARAMETER C_MCB_DQ8_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), IO_IS = C_MCB_DQ8_TAP_DELAY_VAL
PARAMETER C_MCB_DQ9_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), IO_IS = C_MCB_DQ9_TAP_DELAY_VAL
PARAMETER C_MCB_DQ10_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), IO_IS = C_MCB_DQ10_TAP_DELAY_VAL
PARAMETER C_MCB_DQ11_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), IO_IS = C_MCB_DQ11_TAP_DELAY_VAL
PARAMETER C_MCB_DQ12_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), IO_IS = C_MCB_DQ12_TAP_DELAY_VAL
PARAMETER C_MCB_DQ13_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), IO_IS = C_MCB_DQ13_TAP_DELAY_VAL
PARAMETER C_MCB_DQ14_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), IO_IS = C_MCB_DQ14_TAP_DELAY_VAL
PARAMETER C_MCB_DQ15_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), IO_IS = C_MCB_DQ15_TAP_DELAY_VAL
PARAMETER C_MEM_TYPE = DDR2, DT = STRING, VALUES = (DDR3=DDR3, DDR2=DDR2, DDR=DDR, LPDDR=LPDDR, SDRAM=SDRAM), IPLEVEL_DRC_PROC = iplevel_drc_mem_type, IO_IF = memory_0, IO_IS = C_MEM_TYPE
PARAMETER C_MEM_PARTNO = NONE, DT = STRING, TYPE = NON_HDL, IO_IF = memory_0, IO_IS = C_MEM_PARTNO, ASSIGNMENT = REQUIRE, IPLEVEL_DRC_PROC = iplevel_drc_partno
PARAMETER C_MEM_PART_DATA_DEPTH = 16, DT = INTEGER, RANGE = (1,2,4,8,16,32,64,128,256,512,1024), ASSIGNMENT = REQUIRE, TYPE = NON_HDL, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ]), IO_IF = memory_0, IO_IS = C_MEM_PART_DATA_DEPTH
PARAMETER C_MEM_PART_DATA_WIDTH = 8, DT = INTEGER, RANGE = (4,8,16,32,64), ASSIGNMENT = REQUIRE, TYPE = NON_HDL, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ]), IO_IF = memory_0, IO_IS = C_MEM_PART_DATA_WIDTH, IPLEVEL_DRC_PROC = iplevel_drc_mem_data_width
PARAMETER C_MEM_PART_NUM_BANK_BITS = 2, DT = INTEGER, RANGE = (1:4), ASSIGNMENT = REQUIRE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ]), IO_IF = memory_0, IO_IS = C_MEM_PART_NUM_BANK_BITS
PARAMETER C_MEM_PART_NUM_ROW_BITS = 13, DT = INTEGER, RANGE = (1:20), ASSIGNMENT = REQUIRE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ]), IO_IF = memory_0, IO_IS = C_MEM_PART_NUM_ROW_BITS
PARAMETER C_MEM_PART_NUM_COL_BITS = 9, DT = INTEGER, RANGE = (1:20), ASSIGNMENT = REQUIRE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ]), IO_IF = memory_0, IO_IS = C_MEM_PART_NUM_COL_BITS
PARAMETER C_MEM_PART_TRAS = 0, DT = INTEGER, ASSIGNMENT = REQUIRE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ]), IO_IF = memory_0, IO_IS = C_MEM_PART_TRAS
PARAMETER C_MEM_PART_TRASMAX = 0, DT = INTEGER, ASSIGNMENT = REQUIRE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ]), IO_IF = memory_0, IO_IS = C_MEM_PART_TRASMAX, TYPE = NON_HDL
PARAMETER C_MEM_PART_TRC = 0, DT = INTEGER, ASSIGNMENT = REQUIRE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ]), IO_IF = memory_0, IO_IS = C_MEM_PART_TRC, TYPE = NON_HDL
PARAMETER C_MEM_PART_TRCD = 0, DT = INTEGER, ASSIGNMENT = REQUIRE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ]), IO_IF = memory_0, IO_IS = C_MEM_PART_TRCD
PARAMETER C_MEM_PART_TDQSS = 1, DT = INTEGER, RANGE = (1), ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ] && [xstrncmp C_MEM_TYPE  DDR ]), IO_IF = memory_0, IO_IS = C_MEM_PART_TDQSS, TYPE = NON_HDL
PARAMETER C_MEM_PART_TWR = 0, DT = INTEGER, ASSIGNMENT = REQUIRE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ]), IO_IF = memory_0, IO_IS = C_MEM_PART_TWR
PARAMETER C_MEM_PART_TRP = 0, DT = INTEGER, ASSIGNMENT = REQUIRE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ]), IO_IF = memory_0, IO_IS = C_MEM_PART_TRP
PARAMETER C_MEM_PART_TMRD = 4, DT = INTEGER, ASSIGNMENT = REQUIRE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = (0), IO_IF = memory_0, IO_IS = C_MEM_PART_TMRD, TYPE = NON_HDL
PARAMETER C_MEM_PART_TRRD = 0, DT = INTEGER, ASSIGNMENT = REQUIRE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ]), IO_IF = memory_0, IO_IS = C_MEM_PART_TRRD, TYPE = NON_HDL
PARAMETER C_MEM_PART_TRFC = 0, DT = INTEGER, ASSIGNMENT = REQUIRE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ]), IO_IF = memory_0, IO_IS = C_MEM_PART_TRFC
PARAMETER C_MEM_PART_TREFI = 0, DT = INTEGER, ASSIGNMENT = REQUIRE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ]), IO_IF = memory_0, IO_IS = C_MEM_PART_TREFI
PARAMETER C_MEM_PART_TAL = 0, DT = INTEGER, RANGE = (0), ISVALID = (0), IO_IF = memory_0, IO_IS = C_MEM_PART_TAL, TYPE = NON_HDL
PARAMETER C_MEM_PART_TCCD = 0, DT = INTEGER, ASSIGNMENT = REQUIRE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ] && ([xstrncmp C_MEM_TYPE  DDR2 ] || [xstrncmp C_MEM_TYPE  DDR3 ])), IO_IF = memory_0, IO_IS = C_MEM_PART_TCCD, TYPE = NON_HDL
PARAMETER C_MEM_PART_TWTR = 0, DT = INTEGER, ASSIGNMENT = REQUIRE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ] && ([xstrncmp C_MEM_TYPE  DDR2 ] || [xstrncmp C_MEM_TYPE  DDR3 ])), IO_IF = memory_0, IO_IS = C_MEM_PART_TWTR
PARAMETER C_MEM_PART_TRTP = 7500, DT = INTEGER, RANGE = (7500), ISVALID = (0), IO_IF = memory_0, IO_IS = C_MEM_PART_TRTP
PARAMETER C_MEM_PART_TZQINIT = 512, DT = INTEGER, RANGE = (512), ISVALID = (0), IO_IF = memory_0, IO_IS = C_MEM_PART_TZQCS, TYPE = NON_HDL
PARAMETER C_MEM_PART_TZQCS = 64, DT = INTEGER, RANGE = (64), ISVALID = (0), IO_IF = memory_0, IO_IS = C_MEM_PART_TZQCS, TYPE = NON_HDL
PARAMETER C_MEM_PART_CAS_A_FMAX = 0, DT = INTEGER, TYPE = NON_HDL, ASSIGNMENT = REQUIRE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ]), IO_IF = memory_0, IO_IS = C_MEM_PART_CAS_A_FMAX
PARAMETER C_MEM_PART_CAS_A = 0, DT = INTEGER, TYPE = NON_HDL, ASSIGNMENT = REQUIRE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ]), VALUES = (1.5 = 1.5 (2), 2 = 2, 2.5 = 2.5 (3), 3 = 3, 3.5 = 3.5 (4), 4 = 4, 5 = 5, 6 = 6, 7 = 7, 8 = 8, 9 = 9, 10 = 10), IO_IF = memory_0, IO_IS = C_MEM_PART_CAS_A, IPLEVEL_DRC_PROC = iplevel_drc_cas_check
PARAMETER C_MEM_PART_CAS_B_FMAX = 0, DT = INTEGER, TYPE = NON_HDL, ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ] && C_MEM_PART_CAS_A_FMAX != 0), IO_IF = memory_0, IO_IS = C_MEM_PART_CAS_B_FMAX
PARAMETER C_MEM_PART_CAS_B = 0, DT = INTEGER, TYPE = NON_HDL, ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ] && C_MEM_PART_CAS_A_FMAX != 0), VALUES = (1.5 = 1.5 (2), 2 = 2, 2.5 = 2.5 (3), 3 = 3, 3.5 = 3.5 (4), 4 = 4, 5 = 5, 6 = 6, 7 = 7, 8 = 8, 9 = 9, 10 = 10), IO_IF = memory_0, IO_IS = C_MEM_PART_CAS_B, IPLEVEL_DRC_PROC = iplevel_drc_cas_check
PARAMETER C_MEM_PART_CAS_C_FMAX = 0, DT = INTEGER, TYPE = NON_HDL, ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ] && C_MEM_PART_CAS_B_FMAX != 0), IO_IF = memory_0, IO_IS = C_MEM_PART_CAS_C_FMAX
PARAMETER C_MEM_PART_CAS_C = 0, DT = INTEGER, TYPE = NON_HDL, ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ] && C_MEM_PART_CAS_B_FMAX != 0), VALUES = (1.5 = 1.5 (2), 2 = 2, 2.5 = 2.5 (3), 3 = 3, 3.5 = 3.5 (4), 4 = 4, 5 = 5, 6 = 6, 7 = 7, 8 = 8, 9 = 9, 10 = 10), IO_IF = memory_0, IO_IS = C_MEM_PART_CAS_C, IPLEVEL_DRC_PROC = iplevel_drc_cas_check
PARAMETER C_MEM_PART_CAS_D_FMAX = 0, DT = INTEGER, TYPE = NON_HDL, ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ] && C_MEM_PART_CAS_C_FMAX != 0), IO_IF = memory_0, IO_IS = C_MEM_PART_CAS_D_FMAX
PARAMETER C_MEM_PART_CAS_D = 0, DT = INTEGER, TYPE = NON_HDL, ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ] && C_MEM_PART_CAS_C_FMAX != 0), VALUES = (1.5 = 1.5 (2), 2 = 2, 2.5 = 2.5 (3), 3 = 3, 3.5 = 3.5 (4), 4 = 4, 5 = 5, 6 = 6, 7 = 7, 8 = 8, 9 = 9, 10 = 10), IO_IF = memory_0, IO_IS = C_MEM_PART_CAS_D, IPLEVEL_DRC_PROC = iplevel_drc_cas_check
PARAMETER C_MPMC_CLK0_PERIOD_PS = 1, DT = INTEGER, RANGE = (1:1000000), ASSIGNMENT = OPTIONAL_UPDATE, CLK_PORT = MPMC_Clk0, CLK_UNIT = PS
PARAMETER C_MPMC_CLK_MEM_PERIOD_PS = 1, DT = INTEGER, RANGE = (1:1000000), ASSIGNMENT = OPTIONAL_UPDATE, CLK_PORT = MPMC_Clk_Mem, CLK_UNIT = PS, TYPE = NON_HDL, ISVALID = (![xstrncmp C_FAMILY  spartan6 ])
PARAMETER C_MPMC_CLK_WR_I0_PHASE = 0, DT = INTEGER, TYPE = NON_HDL, ASSIGNMENT = CONSTANT
PARAMETER C_MPMC_CLK_WR_O0_PHASE = 0, DT = INTEGER, TYPE = NON_HDL, ASSIGNMENT = CONSTANT
PARAMETER C_MPMC_CLK_WR_I1_PHASE = 0, DT = INTEGER, TYPE = NON_HDL, ASSIGNMENT = CONSTANT
PARAMETER C_MPMC_CLK_WR_O1_PHASE = 0, DT = INTEGER, TYPE = NON_HDL, ASSIGNMENT = CONSTANT
PARAMETER C_MEM_CAS_LATENCY = 3, DT = INTEGER, RANGE = (2:10), ASSIGNMENT = OPTIONAL_UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_mem_cas_latency
PARAMETER C_MEM_ODT_TYPE = 0, DT = INTEGER, RANGE = (0:5), VALUES = (0= Disabled/Disabled , 1= 75 Ohm/RZQ/4 , 2= 150 Ohm/RZQ/2 , 3= 50 Ohm/RZQ/6, 4=Reserved/RZQ/12, 5=Reserved/RZQ/8), ISVALID = ([xstrncmp C_MEM_TYPE  DDR2 ] || [xstrncmp C_MEM_TYPE  DDR3 ]), IPLEVEL_DRC_PROC = iplevel_drc_mem_odt_type, IO_IS = C_MEM_ODT_TYPE
PARAMETER C_MEM_REDUCED_DRV = 0, DT = INTEGER, RANGE = (0:3), VALUES = (0=FULL/RZQ/6/FULL, 1=REDUCED/RZQ/7/HALF, 2=RESERVED/RESERVED/QUARTER, 3=RESERVED/RESERVED/THREEQUARTERS), IPLEVEL_DRC_PROC = iplevel_drc_mem_reduced_drv, ISVALID = ([xstrncmp C_MEM_TYPE  LPDDR ] || [xstrncmp C_MEM_TYPE  DDR ] || [xstrncmp C_MEM_TYPE  DDR2 ] || [xstrncmp C_MEM_TYPE  DDR3 ])
PARAMETER C_MEM_REG_DIMM = 0, DT = INTEGER, RANGE = (0,1), ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, IO_IF = memory_0, IO_IS = C_MEM_REG_DIMM, ISVALID = (![xstrncmp C_FAMILY  spartan6 ])
PARAMETER C_MEM_CLK_WIDTH = 1, DT = INTEGER, RANGE = (1:16), ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, IO_IF = memory_0, IO_IS = C_MEM_CLK_WIDTH, ISVALID = (![xstrncmp C_FAMILY  spartan6 ])
PARAMETER C_MEM_ODT_WIDTH = 1, DT = INTEGER, RANGE = (1:16), ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, IO_IF = memory_0, IO_IS = C_MEM_ODT_WIDTH, ISVALID = ([xstrncmp C_MEM_TYPE  DDR2 ] && ![xstrncmp C_FAMILY  spartan6 ]), IPLEVEL_DRC_PROC = iplevel_drc_ranks_x_dimms_multiple
PARAMETER C_MEM_CE_WIDTH = 1, DT = INTEGER, RANGE = (1:16), ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, IO_IF = memory_0, IO_IS = C_MEM_CE_WIDTH, ISVALID = (![xstrncmp C_FAMILY  spartan6 ])
PARAMETER C_MEM_CS_N_WIDTH = 1, DT = INTEGER, RANGE = (1:16), ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, IO_IF = memory_0, IO_IS = C_MEM_CS_N_WIDTH, IPLEVEL_DRC_PROC = iplevel_drc_ranks_x_dimms_multiple, ISVALID = (![xstrncmp C_FAMILY  spartan6 ])
PARAMETER C_MEM_ADDR_WIDTH = 13, DT = INTEGER, RANGE = (1:20), IO_IF = memory_0, IO_IS = C_MEM_ADDR_WIDTH, ASSIGNMENT = UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_addr_width
PARAMETER C_MEM_BANKADDR_WIDTH = 2, DT = INTEGER, RANGE = (1:4), IO_IF = memory_0, IO_IS = C_MEM_BANKADDR_WIDTH, ASSIGNMENT = UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_bankaddr_width
PARAMETER C_MEM_DATA_WIDTH = 64, DT = INTEGER, RANGE = (4,8,16,32,64), IO_IF = memory_0, IO_IS = C_MEM_DATA_WIDTH, IPLEVEL_DRC_PROC = iplevel_drc_mem_data_width
PARAMETER C_MEM_BITS_DATA_PER_DQS = 8, DT = INTEGER, RANGE = (4:8), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_bits_data
PARAMETER C_MEM_DM_WIDTH = 8, DT = INTEGER, RANGE = (1,2,4,8), IO_IF = memory_0, IO_IS = C_MEM_DM_WIDTH, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_dm_width, ASSIGNMENT = UPDATE
PARAMETER C_MEM_DQS_WIDTH = 8, DT = INTEGER, RANGE = (1,2,4,8), IO_IF = memory_0, IO_IS = C_MEM_DQS_WIDTH, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_dqs_width, ASSIGNMENT = UPDATE
PARAMETER C_MEM_NUM_DIMMS = 1, DT = INTEGER, RANGE = (1)
PARAMETER C_MEM_NUM_RANKS = 1, DT = INTEGER, RANGE = (1:2), ISVALID = (![xstrncmp C_FAMILY  virtex6 ] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, IPLEVEL_DRC_PROC = iplevel_drc_mem_num_ranks
PARAMETER C_MEM_DQS_IO_COL = 0x000000000000000000, DT = STD_LOGIC_VECTOR, IPLEVEL_DRC_PROC = iplevel_drc_mig_v3, ASSIGNMENT = CONSTANT
PARAMETER C_MEM_DQ_IO_MS = 0x000000000000000000, DT = STD_LOGIC_VECTOR, IPLEVEL_DRC_PROC = iplevel_drc_mig_v3, ASSIGNMENT = CONSTANT
PARAMETER C_DDR2_DQSN_ENABLE = 1, DT = INTEGER, RANGE = (0,1), IO_IS = C_DDR2_DQSN_ENABLE, IO_IF = memory_0, ISVALID = ([xstrncmp C_MEM_TYPE  DDR2 ]), IPLEVEL_DRC_PROC = iplevel_drc_ddr2_dqsn_enable
PARAMETER C_INCLUDE_ECC_SUPPORT = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (![xstrncmp C_FAMILY  virtex6 ] && ![xstrncmp C_FAMILY  spartan6 ])
PARAMETER C_ECC_DEFAULT_ON = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_INCLUDE_ECC_SUPPORT == 1 && ![xstrncmp C_FAMILY  spartan6 ])
PARAMETER C_INCLUDE_ECC_TEST = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_INCLUDE_ECC_SUPPORT == 1 && ![xstrncmp C_FAMILY  spartan6 ])
PARAMETER C_ECC_SEC_THRESHOLD = 1, DT = INTEGER, RANGE = (1:4095), ISVALID = (C_INCLUDE_ECC_SUPPORT == 1 && ![xstrncmp C_FAMILY  spartan6 ])
PARAMETER C_ECC_DEC_THRESHOLD = 1, DT = INTEGER, RANGE = (1:4095), ISVALID = (C_INCLUDE_ECC_SUPPORT == 1 && ![xstrncmp C_FAMILY  spartan6 ])
PARAMETER C_ECC_PEC_THRESHOLD = 1, DT = INTEGER, RANGE = (1:4095), ISVALID = (C_INCLUDE_ECC_SUPPORT == 1 && ![xstrncmp C_FAMILY  spartan6 ])
PARAMETER C_ECC_DATA_WIDTH = 0, DT = INTEGER, RANGE = (0,3:8), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_ecc_datawidth, ISVALID = (C_INCLUDE_ECC_SUPPORT == 1 && ![xstrncmp C_FAMILY  spartan6 ])
PARAMETER C_ECC_DM_WIDTH = 0, DT = INTEGER, RANGE = (0:1), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_ecc_dmwidth, ISVALID = (C_INCLUDE_ECC_SUPPORT == 1 && ![xstrncmp C_FAMILY  spartan6 ])
PARAMETER C_ECC_DQS_WIDTH = 0, DT = INTEGER, RANGE = (0:1), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_ecc_dqswidth, ISVALID = (C_INCLUDE_ECC_SUPPORT == 1 && ![xstrncmp C_FAMILY  spartan6 ])
PARAMETER C_MEM_PA_SR = 0, DT = INTEGER, RANGE = (0:1), VALUES = (0=FULL, 1=HALF), ISVALID = ([xstrncmp C_FAMILY  spartan6 ] && ([xstrncmp C_MEM_TYPE  DDR2 ] || [xstrncmp C_MEM_TYPE  DDR3 ] || [xstrncmp C_MEM_TYPE  LPDDR ])), IPLEVEL_DRC_PROC = iplevel_drc_mem_pa_sr
PARAMETER C_MEM_CAS_WR_LATENCY = 5, DT = INTEGER, RANGE = (5:8), ISVALID = ([xstrncmp C_MEM_TYPE  DDR3 ]), ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_mem_cas_wr_latency
PARAMETER C_MEM_AUTO_SR = ENABLED, DT = STRING, VALUES = (ENABLED=ENABLED, MANUAL=MANUAL), ISVALID = ([xstrncmp C_FAMILY  spartan6 ] && [xstrncmp C_MEM_TYPE  DDR3 ])
PARAMETER C_MEM_HIGH_TEMP_SR = NORMAL, DT = STRING, VALUES = (NORMAL=NORMAL, EXTENDED=EXTENDED), ISVALID = ([xstrncmp C_FAMILY  spartan6 ] && ([xstrncmp C_MEM_TYPE  DDR2 ] || [xstrncmp C_MEM_TYPE  DDR3 ]))
PARAMETER C_MEM_DYNAMIC_WRITE_ODT = OFF, DT = STRING, VALUES = (OFF=OFF, DIV2=DIV2, DIV4=DIV4), ISVALID = ([xstrncmp C_FAMILY  spartan6 ] && [xstrncmp C_MEM_TYPE  DDR3 ])
PARAMETER C_MEM_WRLVL = 1, DT = INTEGER, RANGE = (0:1), ISVALID = ([xstrncmp C_FAMILY  virtex6 ] && [xstrncmp C_MEM_TYPE  DDR3 ])
PARAMETER C_IDELAY_CLK_FREQ = DEFAULT, DT = STRING, VALUES = (DEFAULT=DEFAULT, 200.0=200.0, 300.0=300.0)
PARAMETER C_MEM_PHASE_DETECT = DEFAULT, DT = STRING, VALUES = (DEFAULT=DEFAULT, ON=ON, OFF=OFF)
PARAMETER C_MEM_OCB_MONITOR = DEFAULT, DT = STRING, VALUES = (DEFAULT=DEFAULT, ON=ON, OFF=OFF)
PARAMETER C_MEM_IBUF_LPWR_MODE = DEFAULT, DT = STRING, VALUES = (DEFAULT=DEFAULT, ON=ON, OFF=OFF)
PARAMETER C_MEM_IODELAY_HP_MODE = DEFAULT, DT = STRING, VALUES = (DEFAULT=DEFAULT, ON=ON, OFF=OFF)
PARAMETER C_MEM_SIM_INIT_OPTION = DEFAULT, DT = STRING, VALUES = (DEFAULT=DEFAULT, SKIP_INIT=SKIP_INIT, SKIP_PU_DELAY=SKIP_PU_DELAY, NONE=NONE)
PARAMETER C_MEM_SIM_CAL_OPTION = DEFAULT, DT = STRING, VALUES = (DEFAULT=DEFAULT, SKIP_CAL=SKIP_CAL, FAST_CAL=FAST_CAL, FAST_WIN_DETECT=FAST_WIN_DETECT, NONE=NONE)
PARAMETER C_MEM_CAL_WIDTH = DEFAULT, DT = STRING, VALUES = (DEFAULT=DEFAULT, FULL=FULL, HALF=HALF)
PARAMETER C_MEM_NDQS_COL0 = 0, DT = INTEGER, ASSIGNMENT = OPTIONAL_UPDATE, RANGE = (0:18), ISVALID = ([xstrncmp C_FAMILY  virtex6 ]), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_dqs_col, IO_IS = C_MEM_NDQS_COL0
PARAMETER C_MEM_NDQS_COL1 = 0, DT = INTEGER, ASSIGNMENT = OPTIONAL_UPDATE, RANGE = (0:18), ISVALID = ([xstrncmp C_FAMILY  virtex6 ]), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_dqs_col, IO_IS = C_MEM_NDQS_COL1
PARAMETER C_MEM_NDQS_COL2 = 0, DT = INTEGER, ASSIGNMENT = OPTIONAL_UPDATE, RANGE = (0:18), ISVALID = ([xstrncmp C_FAMILY  virtex6 ]), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_dqs_col, IO_IS = C_MEM_NDQS_COL2
PARAMETER C_MEM_NDQS_COL3 = 0, DT = INTEGER, ASSIGNMENT = OPTIONAL_UPDATE, RANGE = (0:18), ISVALID = ([xstrncmp C_FAMILY  virtex6 ]), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_dqs_col, IO_IS = C_MEM_NDQS_COL3
PARAMETER C_MEM_DQS_LOC_COL0 = 0x000000000000000000000000000000000000, DT = STD_LOGIC_VECTOR, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = ([xstrncmp C_FAMILY  virtex6 ]), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_dqs_col, IO_IS = C_MEM_DQS_LOC_COL0
PARAMETER C_MEM_DQS_LOC_COL1 = 0x000000000000000000000000000000000000, DT = STD_LOGIC_VECTOR, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = ([xstrncmp C_FAMILY  virtex6 ]), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_dqs_col, IO_IS = C_MEM_DQS_LOC_COL1
PARAMETER C_MEM_DQS_LOC_COL2 = 0x000000000000000000000000000000000000, DT = STD_LOGIC_VECTOR, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = ([xstrncmp C_FAMILY  virtex6 ]), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_dqs_col, IO_IS = C_MEM_DQS_LOC_COL2
PARAMETER C_MEM_DQS_LOC_COL3 = 0x000000000000000000000000000000000000, DT = STD_LOGIC_VECTOR, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = ([xstrncmp C_FAMILY  virtex6 ]), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_dqs_col, IO_IS = C_MEM_DQS_LOC_COL3
PARAMETER C_TBY4TAPVALUE = 9999, DT = INTEGER, RANGE = (0:63,9999), ISVALID = (([xstrncmp C_FAMILY  virtex4 ] || [xstrncmp C_FAMILY  qvirtex4 ] || [xstrncmp C_FAMILY  qrvirtex4 ]) && (C_USE_STATIC_PHY == 0) && ([xstrncmp C_MEM_TYPE  SDRAM ]))
PARAMETER C_PIM0_BASEADDR = 0xFFFFFFFF, BUS = XCL0:XCL0_B:SPLB0:SDMA_LL0:PPC440MC0:VFBC0, ADDRESS = BASE, PAIR = C_PIM0_HIGHADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = ((C_PIM0_BASETYPE != 0 && C_PIM0_BASETYPE != 4) && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_PIM0_HIGHADDR = 0x00000000, BUS = XCL0:XCL0_B:SPLB0:SDMA_LL0:PPC440MC0:VFBC0, ADDRESS = HIGH, PAIR = C_PIM0_BASEADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = ((C_PIM0_BASETYPE != 0 && C_PIM0_BASETYPE != 4) && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_PIM0_OFFSET = 0x00000000, BUS = XCL0:XCL0_B:SPLB0:SDMA_LL0:PPC440MC0, DT = STD_LOGIC_VECTOR, ISVALID = ((C_PIM0_BASETYPE == 1 || C_PIM0_BASETYPE == 2 || C_PIM0_BASETYPE == 5) && C_ALL_PIMS_SHARE_ADDRESSES == 0)
PARAMETER C_PIM0_DATA_WIDTH = 64, DT = INTEGER, BUS = MPMC_PIM0:VFBC0:MCB0, RANGE = (32,64,128), ISVALID = (C_PIM0_BASETYPE == 4 || C_PIM0_BASETYPE == 6 || ((C_PIM0_BASETYPE == 7 || C_PIM0_BASETYPE == 8 || C_PIM0_BASETYPE == 9) && [xstrncmp C_FAMILY  spartan6 ])), IPLEVEL_DRC_PROC = iplevel_drc_pim_data_width
PARAMETER C_PIM0_BASETYPE = 2, DT = INTEGER, BUS = XCL0:XCL0_B:SPLB0:SDMA_LL0:MPMC_PIM0:PPC440MC0:VFBC0:MCB0, RANGE = (0:9), VALUES = (0=INACTIVE, 1=XCL, 2=PLBV46, 3=SDMA, 4=NPI, 5=PPC440MC, 6=VFBC, 7=MCB, 8=MCB-Read, 9=MCB-Write), IPLEVEL_DRC_PROC = iplevel_drc_pim_basetype
PARAMETER C_PIM0_SUBTYPE = PLB, DT = STRING, BUS = XCL0:SPLB0:SDMA_LL0:MPMC_PIM0:PPC440MC0:VFBC0:MCB0, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_PIM0_BASETYPE != 0), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_pim_subtype, SYSLEVEL_DRC_PROC = syslevel_drc_splb_subtype
PARAMETER C_XCL0_LINESIZE = 4, DT = INTEGER, BUS = XCL0, RANGE = (1,4,8,16), ISVALID = (C_PIM0_BASETYPE == 1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_xcl_linesize
PARAMETER C_XCL0_WRITEXFER = 1, DT = INTEGER, BUS = XCL0, RANGE = (0:2), ISVALID = (C_PIM0_BASETYPE == 1)
PARAMETER C_XCL0_PIPE_STAGES = 2, DT = INTEGER, BUS = XCL0, RANGE = (0:3), ISVALID = (C_PIM0_BASETYPE == 1)
PARAMETER C_XCL0_B_IN_USE = 0, DT = INTEGER, BUS = XCL0, RANGE = (0,1), ISVALID = (C_PIM0_BASETYPE == 1)
PARAMETER C_PIM0_B_SUBTYPE = INACTIVE, DT = STRING, BUS = XCL0_B, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_XCL0_B_IN_USE == 1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_pim_subtype
PARAMETER C_XCL0_B_LINESIZE = 4, DT = INTEGER, BUS = XCL0_B, RANGE = (1,4,8,16), ISVALID = (C_XCL0_B_IN_USE == 1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_xcl_linesize
PARAMETER C_XCL0_B_WRITEXFER = 1, DT = INTEGER, BUS = XCL0_B, RANGE = (0:2), ISVALID = (C_XCL0_B_IN_USE == 1)
PARAMETER C_SPLB0_AWIDTH = 32, DT = INTEGER, BUS = SPLB0, ASSIGNMENT = CONSTANT, ISVALID = (C_PIM0_BASETYPE == 2)
PARAMETER C_SPLB0_DWIDTH = 64, DT = INTEGER, BUS = SPLB0, RANGE = (32,64,128), ISVALID = (C_PIM0_BASETYPE == 2)
PARAMETER C_SPLB0_NATIVE_DWIDTH = 64, DT = INTEGER, BUS = SPLB0, RANGE = (32,64), ISVALID = (C_PIM0_BASETYPE == 2), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_splb_native_dwidth, ASSIGNMENT = OPTIONAL_UPDATE, SYSLEVEL_DRC_PROC = syslevel_drc_splb_native_dwidth, IO_IS = C_SPLB0_NATIVE_DWIDTH
PARAMETER C_SPLB0_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB0, RANGE = (0:16), ISVALID = (C_PIM0_BASETYPE == 2)
PARAMETER C_SPLB0_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB0, RANGE = (0:4), ISVALID = (C_PIM0_BASETYPE == 2)
PARAMETER C_SPLB0_P2P = 1, DT = INTEGER, BUS = SPLB0, RANGE = (0,1), ISVALID = (C_PIM0_BASETYPE == 2)
PARAMETER C_SPLB0_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB0, RANGE = (0,1), ISVALID = (C_PIM0_BASETYPE == 2)
PARAMETER C_SPLB0_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SPLB0, RANGE = (32,64,128), ISVALID = (C_PIM0_BASETYPE == 2)
PARAMETER C_SDMA_CTRL0_BASEADDR = 0xFFFFFFFF, BUS = SDMA_CTRL0, ADDRESS = BASE, PAIR = C_SDMA_CTRL0_HIGHADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = REGISTER, ISVALID = (C_PIM0_BASETYPE == 3 && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_SDMA_CTRL0_HIGHADDR = 0x00000000, BUS = SDMA_CTRL0, ADDRESS = HIGH, PAIR = C_SDMA_CTRL0_BASEADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = REGISTER, ISVALID = (C_PIM0_BASETYPE == 3 && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_SDMA_CTRL0_AWIDTH = 32, DT = INTEGER, BUS = SDMA_CTRL0, ASSIGNMENT = CONSTANT, ISVALID = (C_PIM0_BASETYPE == 3)
PARAMETER C_SDMA_CTRL0_DWIDTH = 64, DT = INTEGER, BUS = SDMA_CTRL0, RANGE = (32,64,128), ISVALID = (C_PIM0_BASETYPE == 3)
PARAMETER C_SDMA_CTRL0_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SDMA_CTRL0, RANGE = (32,64), ISVALID = (C_PIM0_BASETYPE == 3)
PARAMETER C_SDMA_CTRL0_NUM_MASTERS = 1, DT = INTEGER, BUS = SDMA_CTRL0, RANGE = (0:16), ISVALID = (C_PIM0_BASETYPE == 3)
PARAMETER C_SDMA_CTRL0_MID_WIDTH = 1, DT = INTEGER, BUS = SDMA_CTRL0, RANGE = (0:4), ISVALID = (C_PIM0_BASETYPE == 3)
PARAMETER C_SDMA_CTRL0_P2P = 1, DT = INTEGER, BUS = SDMA_CTRL0, RANGE = (0,1), ISVALID = (C_PIM0_BASETYPE == 3)
PARAMETER C_SDMA_CTRL0_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SDMA_CTRL0, RANGE = (0,1), ASSIGNMENT = CONSTANT, ISVALID = (C_PIM0_BASETYPE == 3)
PARAMETER C_SDMA_CTRL0_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SDMA_CTRL0, RANGE = (32,64,128), ISVALID = (C_PIM0_BASETYPE == 3)
PARAMETER C_SDMA0_COMPLETED_ERR_TX = 1, DT = INTEGER, BUS = SDMA_LL0, RANGE = (0,1), ISVALID = (C_PIM0_BASETYPE == 3)
PARAMETER C_SDMA0_COMPLETED_ERR_RX = 1, DT = INTEGER, BUS = SDMA_LL0, RANGE = (0,1), ISVALID = (C_PIM0_BASETYPE == 3)
PARAMETER C_SDMA0_PRESCALAR = 1023, DT = INTEGER, BUS = SDMA_LL0, RANGE = (0:1023), ISVALID = (C_PIM0_BASETYPE == 3)
PARAMETER C_SDMA0_PI2LL_CLK_RATIO = 1, DT = INTEGER, BUS = SDMA_LL0, RANGE = (1:2), ISVALID = (C_PIM0_BASETYPE == 3), ASSIGNMENT = REQUIRE
PARAMETER C_PPC440MC0_BURST_LENGTH = 4, DT = INTEGER, BUS = PPC440MC0, RANGE = (2,4,8), ISVALID = (C_PIM0_BASETYPE == 5)
PARAMETER C_PPC440MC0_PIPE_STAGES = 1, DT = INTEGER, BUS = PPC440MC0, RANGE = (0:2), ISVALID = (C_PIM0_BASETYPE == 5)
PARAMETER C_VFBC0_CMD_FIFO_DEPTH = 32, DT = INTEGER, BUS = VFBC0, ISVALID = (C_PIM0_BASETYPE == 6)
PARAMETER C_VFBC0_CMD_AFULL_COUNT = 3, DT = INTEGER, BUS = VFBC0, ISVALID = (C_PIM0_BASETYPE == 6)
PARAMETER C_VFBC0_RDWD_DATA_WIDTH = 32, DT = INTEGER, BUS = VFBC0, RANGE = (8,16,32,64), ISVALID = (C_PIM0_BASETYPE == 6)
PARAMETER C_VFBC0_RDWD_FIFO_DEPTH = 1024, DT = INTEGER, BUS = VFBC0, ISVALID = (C_PIM0_BASETYPE == 6)
PARAMETER C_VFBC0_RD_AEMPTY_WD_AFULL_COUNT = 3, DT = INTEGER, BUS = VFBC0, ISVALID = (C_PIM0_BASETYPE == 6)
PARAMETER C_PI0_RD_FIFO_TYPE = BRAM, DT = STRING, VALUES = ( BRAM = BRAM ,  SRL = SRL ,  DISABLED = Wr-Only ), ISVALID = (C_PIM0_BASETYPE != 0 && ![xstrncmp C_FAMILY  spartan6 ] || C_PIM0_BASETYPE == 6)
PARAMETER C_PI0_WR_FIFO_TYPE = BRAM, DT = STRING, VALUES = ( BRAM = BRAM ,  SRL = SRL ,  DISABLED = Rd-Only ), ISVALID = (C_PIM0_BASETYPE != 0 && ![xstrncmp C_FAMILY  spartan6 ] || C_PIM0_BASETYPE == 6), IPLEVEL_DRC_PROC = iplevel_drc_wr_fifo
PARAMETER C_PI0_ADDRACK_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM0_BASETYPE != 0 && ![xstrncmp C_FAMILY  spartan6 ])
PARAMETER C_PI0_RD_FIFO_APP_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM0_BASETYPE != 0 && ![xstrncmp C_PI0_RD_FIFO_TYPE DISABLED] && ![xstrncmp C_FAMILY  spartan6 ])
PARAMETER C_PI0_RD_FIFO_MEM_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM0_BASETYPE != 0 && ![xstrncmp C_PI0_RD_FIFO_TYPE DISABLED] && ![xstrncmp C_FAMILY  spartan6 ])
PARAMETER C_PI0_WR_FIFO_APP_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM0_BASETYPE != 0 && ![xstrncmp C_PI0_WR_FIFO_TYPE DISABLED] && ![xstrncmp C_FAMILY  spartan6 ])
PARAMETER C_PI0_WR_FIFO_MEM_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM0_BASETYPE != 0 && ![xstrncmp C_PI0_WR_FIFO_TYPE DISABLED] && ![xstrncmp C_FAMILY  spartan6 ])
PARAMETER C_PI0_PM_USED = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM0_BASETYPE != 0 && C_PM_ENABLE)
PARAMETER C_PI0_PM_DC_CNTR = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM0_BASETYPE != 0 && C_PM_ENABLE)
PARAMETER C_PIM1_BASEADDR = 0xFFFFFFFF, BUS = XCL1:XCL1_B:SPLB1:SDMA_LL1:PPC440MC1:VFBC1, ADDRESS = BASE, PAIR = C_PIM1_HIGHADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = ((C_PIM1_BASETYPE != 0 && C_PIM1_BASETYPE != 4) && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_PIM1_HIGHADDR = 0x00000000, BUS = XCL1:XCL1_B:SPLB1:SDMA_LL1:PPC440MC1:VFBC1, ADDRESS = HIGH, PAIR = C_PIM1_BASEADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = ((C_PIM1_BASETYPE != 0 && C_PIM1_BASETYPE != 4) && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_PIM1_OFFSET = 0x00000000, BUS = XCL1:XCL1_B:SPLB1:SDMA_LL1:PPC440MC1, DT = STD_LOGIC_VECTOR, ISVALID = ((C_PIM1_BASETYPE == 1 || C_PIM1_BASETYPE == 2 || C_PIM1_BASETYPE == 5) && C_ALL_PIMS_SHARE_ADDRESSES == 0)
PARAMETER C_PIM1_DATA_WIDTH = 64, DT = INTEGER, BUS = MPMC_PIM1:VFBC1:MCB1, RANGE = (32,64), ISVALID = (C_PIM1_BASETYPE == 4 || C_PIM1_BASETYPE == 6 || ((C_PIM1_BASETYPE == 7 || C_PIM1_BASETYPE == 8 || C_PIM1_BASETYPE == 9) && [xstrncmp C_FAMILY  spartan6 ])), IPLEVEL_DRC_PROC = iplevel_drc_pim_data_width
PARAMETER C_PIM1_BASETYPE = 0, DT = INTEGER, BUS = XCL1:SPLB1:SDMA_LL1:MPMC_PIM1:PPC440MC1:VFBC1:MCB1, RANGE = (0:9), VALUES = (0=INACTIVE, 1=XCL, 2=PLBV46, 3=SDMA, 4=NPI, 5=PPC440MC, 6=VFBC, 7=MCB, 8=MCB-Read, 9=MCB-Write), IPLEVEL_DRC_PROC = iplevel_drc_pim_basetype
PARAMETER C_PIM1_SUBTYPE = INACTIVE, DT = STRING, BUS = XCL1:SPLB1:SDMA_LL1:MPMC_PIM1:PPC440MC1:VFBC1:MCB1, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_PIM1_BASETYPE != 0), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_pim_subtype, SYSLEVEL_DRC_PROC = syslevel_drc_splb_subtype
PARAMETER C_XCL1_LINESIZE = 4, DT = INTEGER, BUS = XCL1, RANGE = (1,4,8,16), ISVALID = (C_PIM1_BASETYPE == 1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_xcl_linesize
PARAMETER C_XCL1_WRITEXFER = 1, DT = INTEGER, BUS = XCL1, RANGE = (0:2), ISVALID = (C_PIM1_BASETYPE == 1)
PARAMETER C_XCL1_PIPE_STAGES = 2, DT = INTEGER, BUS = XCL1, RANGE = (0:3), ISVALID = (C_PIM1_BASETYPE == 1)
PARAMETER C_XCL1_B_IN_USE = 0, DT = INTEGER, BUS = XCL1, RANGE = (0,1), ISVALID = (C_PIM1_BASETYPE == 1)
PARAMETER C_PIM1_B_SUBTYPE = INACTIVE, DT = STRING, BUS = XCL1_B, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_XCL1_B_IN_USE == 1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_pim_subtype
PARAMETER C_XCL1_B_LINESIZE = 4, DT = INTEGER, BUS = XCL1_B, RANGE = (1,4,8,16), ISVALID = (C_XCL1_B_IN_USE == 1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_xcl_linesize
PARAMETER C_XCL1_B_WRITEXFER = 1, DT = INTEGER, BUS = XCL1_B, RANGE = (0:2), ISVALID = (C_XCL1_B_IN_USE == 1)
PARAMETER C_SPLB1_AWIDTH = 32, DT = INTEGER, BUS = SPLB1, ASSIGNMENT = CONSTANT, ISVALID = (C_PIM1_BASETYPE == 2)
PARAMETER C_SPLB1_DWIDTH = 64, DT = INTEGER, BUS = SPLB1, RANGE = (32,64,128), ISVALID = (C_PIM1_BASETYPE == 2)
PARAMETER C_SPLB1_NATIVE_DWIDTH = 64, DT = INTEGER, BUS = SPLB1, RANGE = (32,64), ISVALID = (C_PIM1_BASETYPE == 2), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_splb_native_dwidth, ASSIGNMENT = OPTIONAL_UPDATE, SYSLEVEL_DRC_PROC = syslevel_drc_splb_native_dwidth, IO_IS = C_SPLB1_NATIVE_DWIDTH
PARAMETER C_SPLB1_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB1, RANGE = (0:16), ISVALID = (C_PIM1_BASETYPE == 2)
PARAMETER C_SPLB1_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB1, RANGE = (0:4), ISVALID = (C_PIM1_BASETYPE == 2)
PARAMETER C_SPLB1_P2P = 1, DT = INTEGER, BUS = SPLB1, RANGE = (0,1), ISVALID = (C_PIM1_BASETYPE == 2)
PARAMETER C_SPLB1_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB1, RANGE = (0,1), ISVALID = (C_PIM1_BASETYPE == 2)
PARAMETER C_SPLB1_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SPLB1, RANGE = (32,64,128), ISVALID = (C_PIM1_BASETYPE == 2)
PARAMETER C_SDMA_CTRL1_BASEADDR = 0xFFFFFFFF, BUS = SDMA_CTRL1, ADDRESS = BASE, PAIR = C_SDMA_CTRL1_HIGHADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = REGISTER, ISVALID = (C_PIM1_BASETYPE == 3 && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_SDMA_CTRL1_HIGHADDR = 0x00000000, BUS = SDMA_CTRL1, ADDRESS = HIGH, PAIR = C_SDMA_CTRL1_BASEADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = REGISTER, ISVALID = (C_PIM1_BASETYPE == 3 && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_SDMA_CTRL1_AWIDTH = 32, DT = INTEGER, BUS = SDMA_CTRL1, ASSIGNMENT = CONSTANT, ISVALID = (C_PIM1_BASETYPE == 3)
PARAMETER C_SDMA_CTRL1_DWIDTH = 64, DT = INTEGER, BUS = SDMA_CTRL1, RANGE = (32,64,128), ISVALID = (C_PIM1_BASETYPE == 3)
PARAMETER C_SDMA_CTRL1_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SDMA_CTRL1, RANGE = (32,64), ISVALID = (C_PIM1_BASETYPE == 3)
PARAMETER C_SDMA_CTRL1_NUM_MASTERS = 1, DT = INTEGER, BUS = SDMA_CTRL1, RANGE = (0:16), ISVALID = (C_PIM1_BASETYPE == 3)
PARAMETER C_SDMA_CTRL1_MID_WIDTH = 1, DT = INTEGER, BUS = SDMA_CTRL1, RANGE = (0:4), ISVALID = (C_PIM1_BASETYPE == 3)
PARAMETER C_SDMA_CTRL1_P2P = 1, DT = INTEGER, BUS = SDMA_CTRL1, RANGE = (0,1), ISVALID = (C_PIM1_BASETYPE == 3)
PARAMETER C_SDMA_CTRL1_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SDMA_CTRL1, RANGE = (0,1), ASSIGNMENT = CONSTANT, ISVALID = (C_PIM1_BASETYPE == 3)
PARAMETER C_SDMA_CTRL1_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SDMA_CTRL1, RANGE = (32,64,128), ISVALID = (C_PIM1_BASETYPE == 3)
PARAMETER C_SDMA1_COMPLETED_ERR_TX = 1, DT = INTEGER, BUS = SDMA_LL1, RANGE = (0,1), ISVALID = (C_PIM1_BASETYPE == 3)
PARAMETER C_SDMA1_COMPLETED_ERR_RX = 1, DT = INTEGER, BUS = SDMA_LL1, RANGE = (0,1), ISVALID = (C_PIM1_BASETYPE == 3)
PARAMETER C_SDMA1_PRESCALAR = 1023, DT = INTEGER, BUS = SDMA_LL1, RANGE = (0:1023), ISVALID = (C_PIM1_BASETYPE == 3)
PARAMETER C_SDMA1_PI2LL_CLK_RATIO = 1, DT = INTEGER, BUS = SDMA_LL1, RANGE = (1:2), ISVALID = (C_PIM1_BASETYPE == 3), ASSIGNMENT = REQUIRE
PARAMETER C_PPC440MC1_BURST_LENGTH = 4, DT = INTEGER, BUS = PPC440MC1, RANGE = (2,4,8), ISVALID = (C_PIM1_BASETYPE == 5)
PARAMETER C_PPC440MC1_PIPE_STAGES = 1, DT = INTEGER, BUS = PPC440MC1, RANGE = (0:2), ISVALID = (C_PIM1_BASETYPE == 5)
PARAMETER C_VFBC1_CMD_FIFO_DEPTH = 32, DT = INTEGER, BUS = VFBC1, ISVALID = (C_PIM1_BASETYPE == 6)
PARAMETER C_VFBC1_CMD_AFULL_COUNT = 3, DT = INTEGER, BUS = VFBC1, ISVALID = (C_PIM1_BASETYPE == 6)
PARAMETER C_VFBC1_RDWD_DATA_WIDTH = 32, DT = INTEGER, BUS = VFBC1, RANGE = (8,16,32,64), ISVALID = (C_PIM1_BASETYPE == 6)
PARAMETER C_VFBC1_RDWD_FIFO_DEPTH = 1024, DT = INTEGER, BUS = VFBC1, ISVALID = (C_PIM1_BASETYPE == 6)
PARAMETER C_VFBC1_RD_AEMPTY_WD_AFULL_COUNT = 3, DT = INTEGER, BUS = VFBC1, ISVALID = (C_PIM1_BASETYPE == 6)
PARAMETER C_PI1_RD_FIFO_TYPE = BRAM, DT = STRING, VALUES = ( BRAM = BRAM ,  SRL = SRL ,  DISABLED = Wr-Only ), ISVALID = (C_PIM1_BASETYPE != 0 && ![xstrncmp C_FAMILY  spartan6 ] || C_PIM1_BASETYPE == 6)
PARAMETER C_PI1_WR_FIFO_TYPE = BRAM, DT = STRING, VALUES = ( BRAM = BRAM ,  SRL = SRL ,  DISABLED = Rd-Only ), ISVALID = (C_PIM1_BASETYPE != 0 && ![xstrncmp C_FAMILY  spartan6 ] || C_PIM1_BASETYPE == 6), IPLEVEL_DRC_PROC = iplevel_drc_wr_fifo
PARAMETER C_PI1_ADDRACK_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM1_BASETYPE != 0 && ![xstrncmp C_FAMILY  spartan6 ])
PARAMETER C_PI1_RD_FIFO_APP_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM1_BASETYPE != 0 && ![xstrncmp C_PI1_RD_FIFO_TYPE DISABLED] && ![xstrncmp C_FAMILY  spartan6 ])
PARAMETER C_PI1_RD_FIFO_MEM_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM1_BASETYPE != 0 && ![xstrncmp C_PI1_RD_FIFO_TYPE DISABLED] && ![xstrncmp C_FAMILY  spartan6 ])
PARAMETER C_PI1_WR_FIFO_APP_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM1_BASETYPE != 0 && ![xstrncmp C_PI1_WR_FIFO_TYPE DISABLED] && ![xstrncmp C_FAMILY  spartan6 ])
PARAMETER C_PI1_WR_FIFO_MEM_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM1_BASETYPE != 0 && ![xstrncmp C_PI1_WR_FIFO_TYPE DISABLED] && ![xstrncmp C_FAMILY  spartan6 ])
PARAMETER C_PI1_PM_USED = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM1_BASETYPE != 0 && C_PM_ENABLE)
PARAMETER C_PI1_PM_DC_CNTR = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM1_BASETYPE != 0 && C_PM_ENABLE)
PARAMETER C_PIM2_BASEADDR = 0xFFFFFFFF, BUS = XCL2:XCL2_B:SPLB2:SDMA_LL2:PPC440MC2:VFBC2, ADDRESS = BASE, PAIR = C_PIM2_HIGHADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = ((C_PIM2_BASETYPE != 0 && C_PIM2_BASETYPE != 4) && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_PIM2_HIGHADDR = 0x00000000, BUS = XCL2:XCL2_B:SPLB2:SDMA_LL2:PPC440MC2:VFBC2, ADDRESS = HIGH, PAIR = C_PIM2_BASEADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = ((C_PIM2_BASETYPE != 0 && C_PIM2_BASETYPE != 4) && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_PIM2_OFFSET = 0x00000000, BUS = XCL2:XCL2_B:SPLB2:SDMA_LL2:PPC440MC2, DT = STD_LOGIC_VECTOR, ISVALID = ((C_PIM2_BASETYPE == 1 || C_PIM2_BASETYPE == 2 || C_PIM2_BASETYPE == 5) && C_ALL_PIMS_SHARE_ADDRESSES == 0)
PARAMETER C_PIM2_DATA_WIDTH = 64, DT = INTEGER, BUS = MPMC_PIM2:VFBC2:MCB2, RANGE = (32,64), ISVALID = (C_PIM2_BASETYPE == 4 || C_PIM2_BASETYPE == 6 || ((C_PIM2_BASETYPE == 7 || C_PIM2_BASETYPE == 8 || C_PIM2_BASETYPE == 9) && [xstrncmp C_FAMILY  spartan6 ])), IPLEVEL_DRC_PROC = iplevel_drc_pim_data_width
PARAMETER C_PIM2_BASETYPE = 0, DT = INTEGER, BUS = XCL2:SPLB2:SDMA_LL2:MPMC_PIM2:PPC440MC2:VFBC2:MCB2, RANGE = (0:9), VALUES = (0=INACTIVE, 1=XCL, 2=PLBV46, 3=SDMA, 4=NPI, 5=PPC440MC, 6=VFBC, 7=MCB, 8=MCB-Read, 9=MCB-Write), IPLEVEL_DRC_PROC = iplevel_drc_pim_basetype
PARAMETER C_PIM2_SUBTYPE = INACTIVE, DT = STRING, BUS = XCL2:SPLB2:SDMA_LL2:MPMC_PIM2:PPC440MC2:VFBC2:MCB2, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_PIM2_BASETYPE != 0), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_pim_subtype, SYSLEVEL_DRC_PROC = syslevel_drc_splb_subtype
PARAMETER C_XCL2_LINESIZE = 4, DT = INTEGER, BUS = XCL2, RANGE = (1,4,8,16), ISVALID = (C_PIM2_BASETYPE == 1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_xcl_linesize
PARAMETER C_XCL2_WRITEXFER = 1, DT = INTEGER, BUS = XCL2, RANGE = (0:2), ISVALID = (C_PIM2_BASETYPE == 1)
PARAMETER C_XCL2_PIPE_STAGES = 2, DT = INTEGER, BUS = XCL2, RANGE = (0:3), ISVALID = (C_PIM2_BASETYPE == 1)
PARAMETER C_XCL2_B_IN_USE = 0, DT = INTEGER, BUS = XCL2, RANGE = (0,1), ISVALID = (C_PIM2_BASETYPE == 1)
PARAMETER C_PIM2_B_SUBTYPE = INACTIVE, DT = STRING, BUS = XCL2_B, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_XCL2_B_IN_USE == 1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_pim_subtype
PARAMETER C_XCL2_B_LINESIZE = 4, DT = INTEGER, BUS = XCL2_B, RANGE = (1,4,8,16), ISVALID = (C_XCL2_B_IN_USE == 1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_xcl_linesize
PARAMETER C_XCL2_B_WRITEXFER = 1, DT = INTEGER, BUS = XCL2_B, RANGE = (0:2), ISVALID = (C_XCL2_B_IN_USE == 1)
PARAMETER C_SPLB2_AWIDTH = 32, DT = INTEGER, BUS = SPLB2, ASSIGNMENT = CONSTANT, ISVALID = (C_PIM2_BASETYPE == 2)
PARAMETER C_SPLB2_DWIDTH = 64, DT = INTEGER, BUS = SPLB2, RANGE = (32,64,128), ISVALID = (C_PIM2_BASETYPE == 2)
PARAMETER C_SPLB2_NATIVE_DWIDTH = 64, DT = INTEGER, BUS = SPLB2, RANGE = (32,64), ISVALID = (C_PIM2_BASETYPE == 2), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_splb_native_dwidth, ASSIGNMENT = OPTIONAL_UPDATE, SYSLEVEL_DRC_PROC = syslevel_drc_splb_native_dwidth, IO_IS = C_SPLB2_NATIVE_DWIDTH
PARAMETER C_SPLB2_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB2, RANGE = (0:16), ISVALID = (C_PIM2_BASETYPE == 2)
PARAMETER C_SPLB2_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB2, RANGE = (0:4), ISVALID = (C_PIM2_BASETYPE == 2)
PARAMETER C_SPLB2_P2P = 1, DT = INTEGER, BUS = SPLB2, RANGE = (0,1), ISVALID = (C_PIM2_BASETYPE == 2)
PARAMETER C_SPLB2_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB2, RANGE = (0,1), ISVALID = (C_PIM2_BASETYPE == 2)
PARAMETER C_SPLB2_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SPLB2, RANGE = (32,64,128), ISVALID = (C_PIM2_BASETYPE == 2)
PARAMETER C_SDMA_CTRL2_BASEADDR = 0xFFFFFFFF, BUS = SDMA_CTRL2, ADDRESS = BASE, PAIR = C_SDMA_CTRL2_HIGHADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = REGISTER, ISVALID = (C_PIM2_BASETYPE == 3 && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_SDMA_CTRL2_HIGHADDR = 0x00000000, BUS = SDMA_CTRL2, ADDRESS = HIGH, PAIR = C_SDMA_CTRL2_BASEADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = REGISTER, ISVALID = (C_PIM2_BASETYPE == 3 && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_SDMA_CTRL2_AWIDTH = 32, DT = INTEGER, BUS = SDMA_CTRL2, ASSIGNMENT = CONSTANT, ISVALID = (C_PIM2_BASETYPE == 3)
PARAMETER C_SDMA_CTRL2_DWIDTH = 64, DT = INTEGER, BUS = SDMA_CTRL2, RANGE = (32,64,128), ISVALID = (C_PIM2_BASETYPE == 3)
PARAMETER C_SDMA_CTRL2_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SDMA_CTRL2, RANGE = (32,64), ISVALID = (C_PIM2_BASETYPE == 3)
PARAMETER C_SDMA_CTRL2_NUM_MASTERS = 1, DT = INTEGER, BUS = SDMA_CTRL2, RANGE = (0:16), ISVALID = (C_PIM2_BASETYPE == 3)
PARAMETER C_SDMA_CTRL2_MID_WIDTH = 1, DT = INTEGER, BUS = SDMA_CTRL2, RANGE = (0:4), ISVALID = (C_PIM2_BASETYPE == 3)
PARAMETER C_SDMA_CTRL2_P2P = 1, DT = INTEGER, BUS = SDMA_CTRL2, RANGE = (0,1), ISVALID = (C_PIM2_BASETYPE == 3)
PARAMETER C_SDMA_CTRL2_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SDMA_CTRL2, RANGE = (0,1), ASSIGNMENT = CONSTANT, ISVALID = (C_PIM2_BASETYPE == 3)
PARAMETER C_SDMA_CTRL2_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SDMA_CTRL2, RANGE = (32,64,128), ISVALID = (C_PIM2_BASETYPE == 3)
PARAMETER C_SDMA2_COMPLETED_ERR_TX = 1, DT = INTEGER, BUS = SDMA_LL2, RANGE = (0,1), ISVALID = (C_PIM2_BASETYPE == 3)
PARAMETER C_SDMA2_COMPLETED_ERR_RX = 1, DT = INTEGER, BUS = SDMA_LL2, RANGE = (0,1), ISVALID = (C_PIM2_BASETYPE == 3)
PARAMETER C_SDMA2_PRESCALAR = 1023, DT = INTEGER, BUS = SDMA_LL2, RANGE = (0:1023), ISVALID = (C_PIM2_BASETYPE == 3)
PARAMETER C_SDMA2_PI2LL_CLK_RATIO = 1, DT = INTEGER, BUS = SDMA_LL2, RANGE = (1:2), ISVALID = (C_PIM2_BASETYPE == 3), ASSIGNMENT = REQUIRE
PARAMETER C_PPC440MC2_BURST_LENGTH = 4, DT = INTEGER, BUS = PPC440MC2, RANGE = (2,4,8), ISVALID = (C_PIM2_BASETYPE == 5)
PARAMETER C_PPC440MC2_PIPE_STAGES = 1, DT = INTEGER, BUS = PPC440MC2, RANGE = (0:2), ISVALID = (C_PIM2_BASETYPE == 5)
PARAMETER C_VFBC2_CMD_FIFO_DEPTH = 32, DT = INTEGER, BUS = VFBC2, ISVALID = (C_PIM2_BASETYPE == 6)
PARAMETER C_VFBC2_CMD_AFULL_COUNT = 3, DT = INTEGER, BUS = VFBC2, ISVALID = (C_PIM2_BASETYPE == 6)
PARAMETER C_VFBC2_RDWD_DATA_WIDTH = 32, DT = INTEGER, BUS = VFBC2, RANGE = (8,16,32,64), ISVALID = (C_PIM2_BASETYPE == 6)
PARAMETER C_VFBC2_RDWD_FIFO_DEPTH = 1024, DT = INTEGER, BUS = VFBC2, ISVALID = (C_PIM2_BASETYPE == 6)
PARAMETER C_VFBC2_RD_AEMPTY_WD_AFULL_COUNT = 3, DT = INTEGER, BUS = VFBC2, ISVALID = (C_PIM2_BASETYPE == 6)
PARAMETER C_PI2_RD_FIFO_TYPE = BRAM, DT = STRING, VALUES = ( BRAM = BRAM ,  SRL = SRL ,  DISABLED = Wr-Only ), ISVALID = (C_PIM2_BASETYPE != 0 && ![xstrncmp C_FAMILY  spartan6 ] || C_PIM2_BASETYPE == 6)
PARAMETER C_PI2_WR_FIFO_TYPE = BRAM, DT = STRING, VALUES = ( BRAM = BRAM ,  SRL = SRL ,  DISABLED = Rd-Only ), ISVALID = (C_PIM2_BASETYPE != 0 && ![xstrncmp C_FAMILY  spartan6 ] || C_PIM2_BASETYPE == 6), IPLEVEL_DRC_PROC = iplevel_drc_wr_fifo
PARAMETER C_PI2_ADDRACK_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM2_BASETYPE != 0 && ![xstrncmp C_FAMILY  spartan6 ])
PARAMETER C_PI2_RD_FIFO_APP_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM2_BASETYPE != 0 && ![xstrncmp C_PI2_RD_FIFO_TYPE DISABLED] && ![xstrncmp C_FAMILY  spartan6 ])
PARAMETER C_PI2_RD_FIFO_MEM_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM2_BASETYPE != 0 && ![xstrncmp C_PI2_RD_FIFO_TYPE DISABLED] && ![xstrncmp C_FAMILY  spartan6 ])
PARAMETER C_PI2_WR_FIFO_APP_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM2_BASETYPE != 0 && ![xstrncmp C_PI2_WR_FIFO_TYPE DISABLED] && ![xstrncmp C_FAMILY  spartan6 ])
PARAMETER C_PI2_WR_FIFO_MEM_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM2_BASETYPE != 0 && ![xstrncmp C_PI2_WR_FIFO_TYPE DISABLED] && ![xstrncmp C_FAMILY  spartan6 ])
PARAMETER C_PI2_PM_USED = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM2_BASETYPE != 0 && C_PM_ENABLE)
PARAMETER C_PI2_PM_DC_CNTR = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM2_BASETYPE != 0 && C_PM_ENABLE)
PARAMETER C_PIM3_BASEADDR = 0xFFFFFFFF, BUS = XCL3:XCL3_B:SPLB3:SDMA_LL3:PPC440MC3:VFBC3, ADDRESS = BASE, PAIR = C_PIM3_HIGHADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = ((C_PIM3_BASETYPE != 0 && C_PIM3_BASETYPE != 4) && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_PIM3_HIGHADDR = 0x00000000, BUS = XCL3:XCL3_B:SPLB3:SDMA_LL3:PPC440MC3:VFBC3, ADDRESS = HIGH, PAIR = C_PIM3_BASEADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = ((C_PIM3_BASETYPE != 0 && C_PIM3_BASETYPE != 4) && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_PIM3_OFFSET = 0x00000000, BUS = XCL3:XCL3_B:SPLB3:SDMA_LL3:PPC440MC3, DT = STD_LOGIC_VECTOR, ISVALID = ((C_PIM3_BASETYPE == 1 || C_PIM3_BASETYPE == 2 || C_PIM3_BASETYPE == 5) && C_ALL_PIMS_SHARE_ADDRESSES == 0)
PARAMETER C_PIM3_DATA_WIDTH = 64, DT = INTEGER, BUS = MPMC_PIM3:VFBC3:MCB3, RANGE = (32,64), ISVALID = (C_PIM3_BASETYPE == 4 || C_PIM3_BASETYPE == 6 || ((C_PIM3_BASETYPE == 7 || C_PIM3_BASETYPE == 8 || C_PIM3_BASETYPE == 9) && [xstrncmp C_FAMILY  spartan6 ])), IPLEVEL_DRC_PROC = iplevel_drc_pim_data_width
PARAMETER C_PIM3_BASETYPE = 0, DT = INTEGER, BUS = XCL3:SPLB3:SDMA_LL3:MPMC_PIM3:PPC440MC3:VFBC3:MCB3, RANGE = (0:9), VALUES = (0=INACTIVE, 1=XCL, 2=PLBV46, 3=SDMA, 4=NPI, 5=PPC440MC, 6=VFBC, 7=MCB, 8=MCB-Read, 9=MCB-Write), IPLEVEL_DRC_PROC = iplevel_drc_pim_basetype
PARAMETER C_PIM3_SUBTYPE = INACTIVE, DT = STRING, BUS = XCL3:SPLB3:SDMA_LL3:MPMC_PIM3:PPC440MC3:VFBC3:MCB3, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_PIM3_BASETYPE != 0), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_pim_subtype, SYSLEVEL_DRC_PROC = syslevel_drc_splb_subtype
PARAMETER C_XCL3_LINESIZE = 4, DT = INTEGER, BUS = XCL3, RANGE = (1,4,8,16), ISVALID = (C_PIM3_BASETYPE == 1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_xcl_linesize
PARAMETER C_XCL3_WRITEXFER = 1, DT = INTEGER, BUS = XCL3, RANGE = (0:2), ISVALID = (C_PIM3_BASETYPE == 1)
PARAMETER C_XCL3_PIPE_STAGES = 2, DT = INTEGER, BUS = XCL3, RANGE = (0:3), ISVALID = (C_PIM3_BASETYPE == 1)
PARAMETER C_XCL3_B_IN_USE = 0, DT = INTEGER, BUS = XCL3, RANGE = (0,1), ISVALID = (C_PIM3_BASETYPE == 1)
PARAMETER C_PIM3_B_SUBTYPE = INACTIVE, DT = STRING, BUS = XCL3_B, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_XCL3_B_IN_USE == 1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_pim_subtype
PARAMETER C_XCL3_B_LINESIZE = 4, DT = INTEGER, BUS = XCL3_B, RANGE = (1,4,8,16), ISVALID = (C_XCL3_B_IN_USE == 1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_xcl_linesize
PARAMETER C_XCL3_B_WRITEXFER = 1, DT = INTEGER, BUS = XCL3_B, RANGE = (0:2), ISVALID = (C_XCL3_B_IN_USE == 1)
PARAMETER C_SPLB3_AWIDTH = 32, DT = INTEGER, BUS = SPLB3, ASSIGNMENT = CONSTANT, ISVALID = (C_PIM3_BASETYPE == 2)
PARAMETER C_SPLB3_DWIDTH = 64, DT = INTEGER, BUS = SPLB3, RANGE = (32,64,128), ISVALID = (C_PIM3_BASETYPE == 2)
PARAMETER C_SPLB3_NATIVE_DWIDTH = 64, DT = INTEGER, BUS = SPLB3, RANGE = (32,64), ISVALID = (C_PIM3_BASETYPE == 2), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_splb_native_dwidth, ASSIGNMENT = OPTIONAL_UPDATE, SYSLEVEL_DRC_PROC = syslevel_drc_splb_native_dwidth, IO_IS = C_SPLB3_NATIVE_DWIDTH
PARAMETER C_SPLB3_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB3, RANGE = (0:16), ISVALID = (C_PIM3_BASETYPE == 2)
PARAMETER C_SPLB3_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB3, RANGE = (0:4), ISVALID = (C_PIM3_BASETYPE == 2)
PARAMETER C_SPLB3_P2P = 1, DT = INTEGER, BUS = SPLB3, RANGE = (0,1), ISVALID = (C_PIM3_BASETYPE == 2)
PARAMETER C_SPLB3_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB3, RANGE = (0,1), ISVALID = (C_PIM3_BASETYPE == 2)
PARAMETER C_SPLB3_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SPLB3, RANGE = (32,64,128), ISVALID = (C_PIM3_BASETYPE == 2)
PARAMETER C_SDMA_CTRL3_BASEADDR = 0xFFFFFFFF, BUS = SDMA_CTRL3, ADDRESS = BASE, PAIR = C_SDMA_CTRL3_HIGHADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = REGISTER, ISVALID = (C_PIM3_BASETYPE == 3 && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_SDMA_CTRL3_HIGHADDR = 0x00000000, BUS = SDMA_CTRL3, ADDRESS = HIGH, PAIR = C_SDMA_CTRL3_BASEADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = REGISTER, ISVALID = (C_PIM3_BASETYPE == 3 && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_SDMA_CTRL3_AWIDTH = 32, DT = INTEGER, BUS = SDMA_CTRL3, ASSIGNMENT = CONSTANT, ISVALID = (C_PIM3_BASETYPE == 3)
PARAMETER C_SDMA_CTRL3_DWIDTH = 64, DT = INTEGER, BUS = SDMA_CTRL3, RANGE = (32,64,128), ISVALID = (C_PIM3_BASETYPE == 3)
PARAMETER C_SDMA_CTRL3_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SDMA_CTRL3, RANGE = (32,64), ISVALID = (C_PIM3_BASETYPE == 3)
PARAMETER C_SDMA_CTRL3_NUM_MASTERS = 1, DT = INTEGER, BUS = SDMA_CTRL3, RANGE = (0:16), ISVALID = (C_PIM3_BASETYPE == 3)
PARAMETER C_SDMA_CTRL3_MID_WIDTH = 1, DT = INTEGER, BUS = SDMA_CTRL3, RANGE = (0:4), ISVALID = (C_PIM3_BASETYPE == 3)
PARAMETER C_SDMA_CTRL3_P2P = 1, DT = INTEGER, BUS = SDMA_CTRL3, RANGE = (0,1), ISVALID = (C_PIM3_BASETYPE == 3)
PARAMETER C_SDMA_CTRL3_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SDMA_CTRL3, RANGE = (0,1), ASSIGNMENT = CONSTANT, ISVALID = (C_PIM3_BASETYPE == 3)
PARAMETER C_SDMA_CTRL3_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SDMA_CTRL3, RANGE = (32,64,128), ISVALID = (C_PIM3_BASETYPE == 3)
PARAMETER C_SDMA3_COMPLETED_ERR_TX = 1, DT = INTEGER, BUS = SDMA_LL3, RANGE = (0,1), ISVALID = (C_PIM3_BASETYPE == 3)
PARAMETER C_SDMA3_COMPLETED_ERR_RX = 1, DT = INTEGER, BUS = SDMA_LL3, RANGE = (0,1), ISVALID = (C_PIM3_BASETYPE == 3)
PARAMETER C_SDMA3_PRESCALAR = 1023, DT = INTEGER, BUS = SDMA_LL3, RANGE = (0:1023), ISVALID = (C_PIM3_BASETYPE == 3)
PARAMETER C_SDMA3_PI2LL_CLK_RATIO = 1, DT = INTEGER, BUS = SDMA_LL3, RANGE = (1:2), ISVALID = (C_PIM3_BASETYPE == 3), ASSIGNMENT = REQUIRE
PARAMETER C_PPC440MC3_BURST_LENGTH = 4, DT = INTEGER, BUS = PPC440MC3, RANGE = (2,4,8), ISVALID = (C_PIM3_BASETYPE == 5)
PARAMETER C_PPC440MC3_PIPE_STAGES = 1, DT = INTEGER, BUS = PPC440MC3, RANGE = (0:2), ISVALID = (C_PIM3_BASETYPE == 5)
PARAMETER C_VFBC3_CMD_FIFO_DEPTH = 32, DT = INTEGER, BUS = VFBC3, ISVALID = (C_PIM3_BASETYPE == 6)
PARAMETER C_VFBC3_CMD_AFULL_COUNT = 3, DT = INTEGER, BUS = VFBC3, ISVALID = (C_PIM3_BASETYPE == 6)
PARAMETER C_VFBC3_RDWD_DATA_WIDTH = 32, DT = INTEGER, BUS = VFBC3, RANGE = (8,16,32,64), ISVALID = (C_PIM3_BASETYPE == 6)
PARAMETER C_VFBC3_RDWD_FIFO_DEPTH = 1024, DT = INTEGER, BUS = VFBC3, ISVALID = (C_PIM3_BASETYPE == 6)
PARAMETER C_VFBC3_RD_AEMPTY_WD_AFULL_COUNT = 3, DT = INTEGER, BUS = VFBC3, ISVALID = (C_PIM3_BASETYPE == 6)
PARAMETER C_PI3_RD_FIFO_TYPE = BRAM, DT = STRING, VALUES = ( BRAM = BRAM ,  SRL = SRL ,  DISABLED = Wr-Only ), ISVALID = (C_PIM3_BASETYPE != 0 && ![xstrncmp C_FAMILY  spartan6 ] || C_PIM3_BASETYPE == 6)
PARAMETER C_PI3_WR_FIFO_TYPE = BRAM, DT = STRING, VALUES = ( BRAM = BRAM ,  SRL = SRL ,  DISABLED = Rd-Only ), ISVALID = (C_PIM3_BASETYPE != 0 && ![xstrncmp C_FAMILY  spartan6 ] || C_PIM3_BASETYPE == 6), IPLEVEL_DRC_PROC = iplevel_drc_wr_fifo
PARAMETER C_PI3_ADDRACK_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM3_BASETYPE != 0 && ![xstrncmp C_FAMILY  spartan6 ])
PARAMETER C_PI3_RD_FIFO_APP_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM3_BASETYPE != 0 && ![xstrncmp C_PI3_RD_FIFO_TYPE DISABLED] && ![xstrncmp C_FAMILY  spartan6 ])
PARAMETER C_PI3_RD_FIFO_MEM_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM3_BASETYPE != 0 && ![xstrncmp C_PI3_RD_FIFO_TYPE DISABLED] && ![xstrncmp C_FAMILY  spartan6 ])
PARAMETER C_PI3_WR_FIFO_APP_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM3_BASETYPE != 0 && ![xstrncmp C_PI3_WR_FIFO_TYPE DISABLED] && ![xstrncmp C_FAMILY  spartan6 ])
PARAMETER C_PI3_WR_FIFO_MEM_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM3_BASETYPE != 0 && ![xstrncmp C_PI3_WR_FIFO_TYPE DISABLED] && ![xstrncmp C_FAMILY  spartan6 ])
PARAMETER C_PI3_PM_USED = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM3_BASETYPE != 0 && C_PM_ENABLE)
PARAMETER C_PI3_PM_DC_CNTR = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM3_BASETYPE != 0 && C_PM_ENABLE)
PARAMETER C_PIM4_BASEADDR = 0xFFFFFFFF, BUS = XCL4:XCL4_B:SPLB4:SDMA_LL4:PPC440MC4:VFBC4, ADDRESS = BASE, PAIR = C_PIM4_HIGHADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = ((C_PIM4_BASETYPE != 0 && C_PIM4_BASETYPE != 4) && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_PIM4_HIGHADDR = 0x00000000, BUS = XCL4:XCL4_B:SPLB4:SDMA_LL4:PPC440MC4:VFBC4, ADDRESS = HIGH, PAIR = C_PIM4_BASEADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = ((C_PIM4_BASETYPE != 0 && C_PIM4_BASETYPE != 4) && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_PIM4_OFFSET = 0x00000000, BUS = XCL4:XCL4_B:SPLB4:SDMA_LL4:PPC440MC4, DT = STD_LOGIC_VECTOR, ISVALID = ((C_PIM4_BASETYPE == 1 || C_PIM4_BASETYPE == 2 || C_PIM4_BASETYPE == 5) && C_ALL_PIMS_SHARE_ADDRESSES == 0)
PARAMETER C_PIM4_DATA_WIDTH = 64, DT = INTEGER, BUS = MPMC_PIM4:VFBC4:MCB4, RANGE = (32,64), ISVALID = (C_PIM4_BASETYPE == 4 || C_PIM4_BASETYPE == 6 || ((C_PIM4_BASETYPE == 7 || C_PIM4_BASETYPE == 8 || C_PIM4_BASETYPE == 9) && [xstrncmp C_FAMILY  spartan6 ])), IPLEVEL_DRC_PROC = iplevel_drc_pim_data_width
PARAMETER C_PIM4_BASETYPE = 0, DT = INTEGER, BUS = XCL4:SPLB4:SDMA_LL4:MPMC_PIM4:PPC440MC4:VFBC4:MCB4, RANGE = (0:9), VALUES = (0=INACTIVE, 1=XCL, 2=PLBV46, 3=SDMA, 4=NPI, 5=PPC440MC, 6=VFBC, 7=MCB, 8=MCB-Read, 9=MCB-Write), IPLEVEL_DRC_PROC = iplevel_drc_pim_basetype
PARAMETER C_PIM4_SUBTYPE = INACTIVE, DT = STRING, BUS = XCL4:SPLB4:SDMA_LL4:MPMC_PIM4:PPC440MC4:VFBC4:MCB4, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_PIM4_BASETYPE != 0), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_pim_subtype, SYSLEVEL_DRC_PROC = syslevel_drc_splb_subtype
PARAMETER C_XCL4_LINESIZE = 4, DT = INTEGER, BUS = XCL4, RANGE = (1,4,8,16), ISVALID = (C_PIM4_BASETYPE == 1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_xcl_linesize
PARAMETER C_XCL4_WRITEXFER = 1, DT = INTEGER, BUS = XCL4, RANGE = (0:2), ISVALID = (C_PIM4_BASETYPE == 1)
PARAMETER C_XCL4_PIPE_STAGES = 2, DT = INTEGER, BUS = XCL4, RANGE = (0:3), ISVALID = (C_PIM4_BASETYPE == 1)
PARAMETER C_XCL4_B_IN_USE = 0, DT = INTEGER, BUS = XCL4, RANGE = (0,1), ISVALID = (C_PIM4_BASETYPE == 1)
PARAMETER C_PIM4_B_SUBTYPE = INACTIVE, DT = STRING, BUS = XCL4_B, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_XCL4_B_IN_USE == 1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_pim_subtype
PARAMETER C_XCL4_B_LINESIZE = 4, DT = INTEGER, BUS = XCL4_B, RANGE = (1,4,8,16), ISVALID = (C_XCL4_B_IN_USE == 1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_xcl_linesize
PARAMETER C_XCL4_B_WRITEXFER = 1, DT = INTEGER, BUS = XCL4_B, RANGE = (0:2), ISVALID = (C_XCL4_B_IN_USE == 1)
PARAMETER C_SPLB4_AWIDTH = 32, DT = INTEGER, BUS = SPLB4, ASSIGNMENT = CONSTANT, ISVALID = (C_PIM4_BASETYPE == 2)
PARAMETER C_SPLB4_DWIDTH = 64, DT = INTEGER, BUS = SPLB4, RANGE = (32,64,128), ISVALID = (C_PIM4_BASETYPE == 2)
PARAMETER C_SPLB4_NATIVE_DWIDTH = 64, DT = INTEGER, BUS = SPLB4, RANGE = (32,64), ISVALID = (C_PIM4_BASETYPE == 2), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_splb_native_dwidth, ASSIGNMENT = OPTIONAL_UPDATE, SYSLEVEL_DRC_PROC = syslevel_drc_splb_native_dwidth, IO_IS = C_SPLB4_NATIVE_DWIDTH
PARAMETER C_SPLB4_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB4, RANGE = (0:16), ISVALID = (C_PIM4_BASETYPE == 2)
PARAMETER C_SPLB4_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB4, RANGE = (0:4), ISVALID = (C_PIM4_BASETYPE == 2)
PARAMETER C_SPLB4_P2P = 1, DT = INTEGER, BUS = SPLB4, RANGE = (0,1), ISVALID = (C_PIM4_BASETYPE == 2)
PARAMETER C_SPLB4_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB4, RANGE = (0,1), ISVALID = (C_PIM4_BASETYPE == 2)
PARAMETER C_SPLB4_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SPLB4, RANGE = (32,64,128), ISVALID = (C_PIM4_BASETYPE == 2)
PARAMETER C_SDMA_CTRL4_BASEADDR = 0xFFFFFFFF, BUS = SDMA_CTRL4, ADDRESS = BASE, PAIR = C_SDMA_CTRL4_HIGHADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = REGISTER, ISVALID = (C_PIM4_BASETYPE == 3 && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_SDMA_CTRL4_HIGHADDR = 0x00000000, BUS = SDMA_CTRL4, ADDRESS = HIGH, PAIR = C_SDMA_CTRL4_BASEADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = REGISTER, ISVALID = (C_PIM4_BASETYPE == 3 && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_SDMA_CTRL4_AWIDTH = 32, DT = INTEGER, BUS = SDMA_CTRL4, ASSIGNMENT = CONSTANT, ISVALID = (C_PIM4_BASETYPE == 3)
PARAMETER C_SDMA_CTRL4_DWIDTH = 64, DT = INTEGER, BUS = SDMA_CTRL4, RANGE = (32,64,128), ISVALID = (C_PIM4_BASETYPE == 3)
PARAMETER C_SDMA_CTRL4_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SDMA_CTRL4, RANGE = (32,64), ISVALID = (C_PIM4_BASETYPE == 3)
PARAMETER C_SDMA_CTRL4_NUM_MASTERS = 1, DT = INTEGER, BUS = SDMA_CTRL4, RANGE = (0:16), ISVALID = (C_PIM4_BASETYPE == 3)
PARAMETER C_SDMA_CTRL4_MID_WIDTH = 1, DT = INTEGER, BUS = SDMA_CTRL4, RANGE = (0:4), ISVALID = (C_PIM4_BASETYPE == 3)
PARAMETER C_SDMA_CTRL4_P2P = 1, DT = INTEGER, BUS = SDMA_CTRL4, RANGE = (0,1), ISVALID = (C_PIM4_BASETYPE == 3)
PARAMETER C_SDMA_CTRL4_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SDMA_CTRL4, RANGE = (0,1), ASSIGNMENT = CONSTANT, ISVALID = (C_PIM4_BASETYPE == 3)
PARAMETER C_SDMA_CTRL4_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SDMA_CTRL4, RANGE = (32,64,128), ISVALID = (C_PIM4_BASETYPE == 3)
PARAMETER C_SDMA4_COMPLETED_ERR_TX = 1, DT = INTEGER, BUS = SDMA_LL4, RANGE = (0,1), ISVALID = (C_PIM4_BASETYPE == 3)
PARAMETER C_SDMA4_COMPLETED_ERR_RX = 1, DT = INTEGER, BUS = SDMA_LL4, RANGE = (0,1), ISVALID = (C_PIM4_BASETYPE == 3)
PARAMETER C_SDMA4_PRESCALAR = 1023, DT = INTEGER, BUS = SDMA_LL4, RANGE = (0:1023), ISVALID = (C_PIM4_BASETYPE == 3)
PARAMETER C_SDMA4_PI2LL_CLK_RATIO = 1, DT = INTEGER, BUS = SDMA_LL4, RANGE = (1:2), ISVALID = (C_PIM4_BASETYPE == 3), ASSIGNMENT = REQUIRE
PARAMETER C_PPC440MC4_BURST_LENGTH = 4, DT = INTEGER, BUS = PPC440MC4, RANGE = (2,4,8), ISVALID = (C_PIM4_BASETYPE == 5)
PARAMETER C_PPC440MC4_PIPE_STAGES = 1, DT = INTEGER, BUS = PPC440MC4, RANGE = (0:2), ISVALID = (C_PIM4_BASETYPE == 5)
PARAMETER C_VFBC4_CMD_FIFO_DEPTH = 32, DT = INTEGER, BUS = VFBC4, ISVALID = (C_PIM4_BASETYPE == 6)
PARAMETER C_VFBC4_CMD_AFULL_COUNT = 3, DT = INTEGER, BUS = VFBC4, ISVALID = (C_PIM4_BASETYPE == 6)
PARAMETER C_VFBC4_RDWD_DATA_WIDTH = 32, DT = INTEGER, BUS = VFBC4, RANGE = (8,16,32,64), ISVALID = (C_PIM4_BASETYPE == 6)
PARAMETER C_VFBC4_RDWD_FIFO_DEPTH = 1024, DT = INTEGER, BUS = VFBC4, ISVALID = (C_PIM4_BASETYPE == 6)
PARAMETER C_VFBC4_RD_AEMPTY_WD_AFULL_COUNT = 3, DT = INTEGER, BUS = VFBC4, ISVALID = (C_PIM4_BASETYPE == 6)
PARAMETER C_PI4_RD_FIFO_TYPE = BRAM, DT = STRING, VALUES = ( BRAM = BRAM ,  SRL = SRL ,  DISABLED = Wr-Only ), ISVALID = (C_PIM4_BASETYPE != 0 && ![xstrncmp C_FAMILY  spartan6 ] || C_PIM4_BASETYPE == 6)
PARAMETER C_PI4_WR_FIFO_TYPE = BRAM, DT = STRING, VALUES = ( BRAM = BRAM ,  SRL = SRL ,  DISABLED = Rd-Only ), ISVALID = (C_PIM4_BASETYPE != 0 && ![xstrncmp C_FAMILY  spartan6 ] || C_PIM4_BASETYPE == 6), IPLEVEL_DRC_PROC = iplevel_drc_wr_fifo
PARAMETER C_PI4_ADDRACK_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM4_BASETYPE != 0 && ![xstrncmp C_FAMILY  spartan6 ])
PARAMETER C_PI4_RD_FIFO_APP_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM4_BASETYPE != 0 && ![xstrncmp C_PI4_RD_FIFO_TYPE DISABLED] && ![xstrncmp C_FAMILY  spartan6 ])
PARAMETER C_PI4_RD_FIFO_MEM_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM4_BASETYPE != 0 && ![xstrncmp C_PI4_RD_FIFO_TYPE DISABLED] && ![xstrncmp C_FAMILY  spartan6 ])
PARAMETER C_PI4_WR_FIFO_APP_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM4_BASETYPE != 0 && ![xstrncmp C_PI4_WR_FIFO_TYPE DISABLED] && ![xstrncmp C_FAMILY  spartan6 ])
PARAMETER C_PI4_WR_FIFO_MEM_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM4_BASETYPE != 0 && ![xstrncmp C_PI4_WR_FIFO_TYPE DISABLED] && ![xstrncmp C_FAMILY  spartan6 ])
PARAMETER C_PI4_PM_USED = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM4_BASETYPE != 0 && C_PM_ENABLE)
PARAMETER C_PI4_PM_DC_CNTR = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM4_BASETYPE != 0 && C_PM_ENABLE)
PARAMETER C_PIM5_BASEADDR = 0xFFFFFFFF, BUS = XCL5:XCL5_B:SPLB5:SDMA_LL5:PPC440MC5:VFBC5, ADDRESS = BASE, PAIR = C_PIM5_HIGHADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = ((C_PIM5_BASETYPE != 0 && C_PIM5_BASETYPE != 4) && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_PIM5_HIGHADDR = 0x00000000, BUS = XCL5:XCL5_B:SPLB5:SDMA_LL5:PPC440MC5:VFBC5, ADDRESS = HIGH, PAIR = C_PIM5_BASEADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = ((C_PIM5_BASETYPE != 0 && C_PIM5_BASETYPE != 4) && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_PIM5_OFFSET = 0x00000000, BUS = XCL5:XCL5_B:SPLB5:SDMA_LL5:PPC440MC5, DT = STD_LOGIC_VECTOR, ISVALID = ((C_PIM5_BASETYPE == 1 || C_PIM5_BASETYPE == 2 || C_PIM5_BASETYPE == 5) && C_ALL_PIMS_SHARE_ADDRESSES == 0)
PARAMETER C_PIM5_DATA_WIDTH = 64, DT = INTEGER, BUS = MPMC_PIM5:VFBC5:MCB5, RANGE = (32,64), ISVALID = (C_PIM5_BASETYPE == 4 || C_PIM5_BASETYPE == 6 || ((C_PIM5_BASETYPE == 7 || C_PIM5_BASETYPE == 8 || C_PIM5_BASETYPE == 9) && [xstrncmp C_FAMILY  spartan6 ])), IPLEVEL_DRC_PROC = iplevel_drc_pim_data_width
PARAMETER C_PIM5_BASETYPE = 0, DT = INTEGER, BUS = XCL5:SPLB5:SDMA_LL5:MPMC_PIM5:PPC440MC5:VFBC5:MCB5, RANGE = (0:9), VALUES = (0=INACTIVE, 1=XCL, 2=PLBV46, 3=SDMA, 4=NPI, 5=PPC440MC, 6=VFBC, 7=MCB, 8=MCB-Read, 9=MCB-Write), IPLEVEL_DRC_PROC = iplevel_drc_pim_basetype
PARAMETER C_PIM5_SUBTYPE = INACTIVE, DT = STRING, BUS = XCL5:SPLB5:SDMA_LL5:MPMC_PIM5:PPC440MC5:VFBC5:MCB5, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_PIM5_BASETYPE != 0), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_pim_subtype, SYSLEVEL_DRC_PROC = syslevel_drc_splb_subtype
PARAMETER C_XCL5_LINESIZE = 4, DT = INTEGER, BUS = XCL5, RANGE = (1,4,8,16), ISVALID = (C_PIM5_BASETYPE == 1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_xcl_linesize
PARAMETER C_XCL5_WRITEXFER = 1, DT = INTEGER, BUS = XCL5, RANGE = (0:2), ISVALID = (C_PIM5_BASETYPE == 1)
PARAMETER C_XCL5_PIPE_STAGES = 2, DT = INTEGER, BUS = XCL5, RANGE = (0:3), ISVALID = (C_PIM5_BASETYPE == 1)
PARAMETER C_XCL5_B_IN_USE = 0, DT = INTEGER, BUS = XCL5, RANGE = (0,1), ISVALID = (C_PIM5_BASETYPE == 1)
PARAMETER C_PIM5_B_SUBTYPE = INACTIVE, DT = STRING, BUS = XCL5_B, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_XCL5_B_IN_USE == 1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_pim_subtype
PARAMETER C_XCL5_B_LINESIZE = 4, DT = INTEGER, BUS = XCL5_B, RANGE = (1,4,8,16), ISVALID = (C_XCL5_B_IN_USE == 1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_xcl_linesize
PARAMETER C_XCL5_B_WRITEXFER = 1, DT = INTEGER, BUS = XCL5_B, RANGE = (0:2), ISVALID = (C_XCL5_B_IN_USE == 1)
PARAMETER C_SPLB5_AWIDTH = 32, DT = INTEGER, BUS = SPLB5, ASSIGNMENT = CONSTANT, ISVALID = (C_PIM5_BASETYPE == 2)
PARAMETER C_SPLB5_DWIDTH = 64, DT = INTEGER, BUS = SPLB5, RANGE = (32,64,128), ISVALID = (C_PIM5_BASETYPE == 2)
PARAMETER C_SPLB5_NATIVE_DWIDTH = 64, DT = INTEGER, BUS = SPLB5, RANGE = (32,64), ISVALID = (C_PIM5_BASETYPE == 2), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_splb_native_dwidth, ASSIGNMENT = OPTIONAL_UPDATE, SYSLEVEL_DRC_PROC = syslevel_drc_splb_native_dwidth, IO_IS = C_SPLB5_NATIVE_DWIDTH
PARAMETER C_SPLB5_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB5, RANGE = (0:16), ISVALID = (C_PIM5_BASETYPE == 2)
PARAMETER C_SPLB5_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB5, RANGE = (0:4), ISVALID = (C_PIM5_BASETYPE == 2)
PARAMETER C_SPLB5_P2P = 1, DT = INTEGER, BUS = SPLB5, RANGE = (0,1), ISVALID = (C_PIM5_BASETYPE == 2)
PARAMETER C_SPLB5_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB5, RANGE = (0,1), ISVALID = (C_PIM5_BASETYPE == 2)
PARAMETER C_SPLB5_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SPLB5, RANGE = (32,64,128), ISVALID = (C_PIM5_BASETYPE == 2)
PARAMETER C_SDMA_CTRL5_BASEADDR = 0xFFFFFFFF, BUS = SDMA_CTRL5, ADDRESS = BASE, PAIR = C_SDMA_CTRL5_HIGHADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = REGISTER, ISVALID = (C_PIM5_BASETYPE == 3 && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_SDMA_CTRL5_HIGHADDR = 0x00000000, BUS = SDMA_CTRL5, ADDRESS = HIGH, PAIR = C_SDMA_CTRL5_BASEADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = REGISTER, ISVALID = (C_PIM5_BASETYPE == 3 && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_SDMA_CTRL5_AWIDTH = 32, DT = INTEGER, BUS = SDMA_CTRL5, ASSIGNMENT = CONSTANT, ISVALID = (C_PIM5_BASETYPE == 3)
PARAMETER C_SDMA_CTRL5_DWIDTH = 64, DT = INTEGER, BUS = SDMA_CTRL5, RANGE = (32,64,128), ISVALID = (C_PIM5_BASETYPE == 3)
PARAMETER C_SDMA_CTRL5_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SDMA_CTRL5, RANGE = (32,64), ISVALID = (C_PIM5_BASETYPE == 3)
PARAMETER C_SDMA_CTRL5_NUM_MASTERS = 1, DT = INTEGER, BUS = SDMA_CTRL5, RANGE = (0:16), ISVALID = (C_PIM5_BASETYPE == 3)
PARAMETER C_SDMA_CTRL5_MID_WIDTH = 1, DT = INTEGER, BUS = SDMA_CTRL5, RANGE = (0:4), ISVALID = (C_PIM5_BASETYPE == 3)
PARAMETER C_SDMA_CTRL5_P2P = 1, DT = INTEGER, BUS = SDMA_CTRL5, RANGE = (0,1), ISVALID = (C_PIM5_BASETYPE == 3)
PARAMETER C_SDMA_CTRL5_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SDMA_CTRL5, RANGE = (0,1), ASSIGNMENT = CONSTANT, ISVALID = (C_PIM5_BASETYPE == 3)
PARAMETER C_SDMA_CTRL5_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SDMA_CTRL5, RANGE = (32,64,128), ISVALID = (C_PIM5_BASETYPE == 3)
PARAMETER C_SDMA5_COMPLETED_ERR_TX = 1, DT = INTEGER, BUS = SDMA_LL5, RANGE = (0,1), ISVALID = (C_PIM5_BASETYPE == 3)
PARAMETER C_SDMA5_COMPLETED_ERR_RX = 1, DT = INTEGER, BUS = SDMA_LL5, RANGE = (0,1), ISVALID = (C_PIM5_BASETYPE == 3)
PARAMETER C_SDMA5_PRESCALAR = 1023, DT = INTEGER, BUS = SDMA_LL5, RANGE = (0:1023), ISVALID = (C_PIM5_BASETYPE == 3)
PARAMETER C_SDMA5_PI2LL_CLK_RATIO = 1, DT = INTEGER, BUS = SDMA_LL5, RANGE = (1:2), ISVALID = (C_PIM5_BASETYPE == 3), ASSIGNMENT = REQUIRE
PARAMETER C_PPC440MC5_BURST_LENGTH = 4, DT = INTEGER, BUS = PPC440MC5, RANGE = (2,4,8), ISVALID = (C_PIM5_BASETYPE == 5)
PARAMETER C_PPC440MC5_PIPE_STAGES = 1, DT = INTEGER, BUS = PPC440MC5, RANGE = (0:2), ISVALID = (C_PIM5_BASETYPE == 5)
PARAMETER C_VFBC5_CMD_FIFO_DEPTH = 32, DT = INTEGER, BUS = VFBC5, ISVALID = (C_PIM5_BASETYPE == 6)
PARAMETER C_VFBC5_CMD_AFULL_COUNT = 3, DT = INTEGER, BUS = VFBC5, ISVALID = (C_PIM5_BASETYPE == 6)
PARAMETER C_VFBC5_RDWD_DATA_WIDTH = 32, DT = INTEGER, BUS = VFBC5, RANGE = (8,16,32,64), ISVALID = (C_PIM5_BASETYPE == 6)
PARAMETER C_VFBC5_RDWD_FIFO_DEPTH = 1024, DT = INTEGER, BUS = VFBC5, ISVALID = (C_PIM5_BASETYPE == 6)
PARAMETER C_VFBC5_RD_AEMPTY_WD_AFULL_COUNT = 3, DT = INTEGER, BUS = VFBC5, ISVALID = (C_PIM5_BASETYPE == 6)
PARAMETER C_PI5_RD_FIFO_TYPE = BRAM, DT = STRING, VALUES = ( BRAM = BRAM ,  SRL = SRL ,  DISABLED = Wr-Only ), ISVALID = (C_PIM5_BASETYPE != 0 && ![xstrncmp C_FAMILY  spartan6 ] || C_PIM5_BASETYPE == 6)
PARAMETER C_PI5_WR_FIFO_TYPE = BRAM, DT = STRING, VALUES = ( BRAM = BRAM ,  SRL = SRL ,  DISABLED = Rd-Only ), ISVALID = (C_PIM5_BASETYPE != 0 && ![xstrncmp C_FAMILY  spartan6 ] || C_PIM5_BASETYPE == 6), IPLEVEL_DRC_PROC = iplevel_drc_wr_fifo
PARAMETER C_PI5_ADDRACK_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM5_BASETYPE != 0 && ![xstrncmp C_FAMILY  spartan6 ])
PARAMETER C_PI5_RD_FIFO_APP_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM5_BASETYPE != 0 && ![xstrncmp C_PI5_RD_FIFO_TYPE DISABLED] && ![xstrncmp C_FAMILY  spartan6 ])
PARAMETER C_PI5_RD_FIFO_MEM_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM5_BASETYPE != 0 && ![xstrncmp C_PI5_RD_FIFO_TYPE DISABLED] && ![xstrncmp C_FAMILY  spartan6 ])
PARAMETER C_PI5_WR_FIFO_APP_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM5_BASETYPE != 0 && ![xstrncmp C_PI5_WR_FIFO_TYPE DISABLED] && ![xstrncmp C_FAMILY  spartan6 ])
PARAMETER C_PI5_WR_FIFO_MEM_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM5_BASETYPE != 0 && ![xstrncmp C_PI5_WR_FIFO_TYPE DISABLED] && ![xstrncmp C_FAMILY  spartan6 ])
PARAMETER C_PI5_PM_USED = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM5_BASETYPE != 0 && C_PM_ENABLE)
PARAMETER C_PI5_PM_DC_CNTR = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM5_BASETYPE != 0 && C_PM_ENABLE)
PARAMETER C_PIM6_BASEADDR = 0xFFFFFFFF, BUS = XCL6:XCL6_B:SPLB6:SDMA_LL6:PPC440MC6:VFBC6, ADDRESS = BASE, PAIR = C_PIM6_HIGHADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = ((C_PIM6_BASETYPE != 0 && C_PIM6_BASETYPE != 4) && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_PIM6_HIGHADDR = 0x00000000, BUS = XCL6:XCL6_B:SPLB6:SDMA_LL6:PPC440MC6:VFBC6, ADDRESS = HIGH, PAIR = C_PIM6_BASEADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = ((C_PIM6_BASETYPE != 0 && C_PIM6_BASETYPE != 4) && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_PIM6_OFFSET = 0x00000000, BUS = XCL6:XCL6_B:SPLB6:SDMA_LL6:PPC440MC6, DT = STD_LOGIC_VECTOR, ISVALID = ((C_PIM6_BASETYPE == 1 || C_PIM6_BASETYPE == 2 || C_PIM6_BASETYPE == 5) && C_ALL_PIMS_SHARE_ADDRESSES == 0)
PARAMETER C_PIM6_DATA_WIDTH = 64, DT = INTEGER, BUS = MPMC_PIM6:VFBC6:MCB6, RANGE = (32,64), ISVALID = (C_PIM6_BASETYPE == 4 || C_PIM6_BASETYPE == 6 || ((C_PIM6_BASETYPE == 7 || C_PIM6_BASETYPE == 8 || C_PIM6_BASETYPE == 9) && [xstrncmp C_FAMILY  spartan6 ])), IPLEVEL_DRC_PROC = iplevel_drc_pim_data_width
PARAMETER C_PIM6_BASETYPE = 0, DT = INTEGER, BUS = XCL6:SPLB6:SDMA_LL6:MPMC_PIM6:PPC440MC6:VFBC6:MCB6, RANGE = (0:9), VALUES = (0=INACTIVE, 1=XCL, 2=PLBV46, 3=SDMA, 4=NPI, 5=PPC440MC, 6=VFBC, 7=MCB, 8=MCB-Read, 9=MCB-Write), IPLEVEL_DRC_PROC = iplevel_drc_pim_basetype
PARAMETER C_PIM6_SUBTYPE = INACTIVE, DT = STRING, BUS = XCL6:SPLB6:SDMA_LL6:MPMC_PIM6:PPC440MC6:VFBC6:MCB6, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_PIM6_BASETYPE != 0), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_pim_subtype, SYSLEVEL_DRC_PROC = syslevel_drc_splb_subtype
PARAMETER C_XCL6_LINESIZE = 4, DT = INTEGER, BUS = XCL6, RANGE = (1,4,8,16), ISVALID = (C_PIM6_BASETYPE == 1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_xcl_linesize
PARAMETER C_XCL6_WRITEXFER = 1, DT = INTEGER, BUS = XCL6, RANGE = (0:2), ISVALID = (C_PIM6_BASETYPE == 1)
PARAMETER C_XCL6_PIPE_STAGES = 2, DT = INTEGER, BUS = XCL6, RANGE = (0:3), ISVALID = (C_PIM6_BASETYPE == 1)
PARAMETER C_XCL6_B_IN_USE = 0, DT = INTEGER, BUS = XCL6, RANGE = (0,1), ISVALID = (C_PIM6_BASETYPE == 1)
PARAMETER C_PIM6_B_SUBTYPE = INACTIVE, DT = STRING, BUS = XCL6_B, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_XCL6_B_IN_USE == 1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_pim_subtype
PARAMETER C_XCL6_B_LINESIZE = 4, DT = INTEGER, BUS = XCL6_B, RANGE = (1,4,8,16), ISVALID = (C_XCL6_B_IN_USE == 1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_xcl_linesize
PARAMETER C_XCL6_B_WRITEXFER = 1, DT = INTEGER, BUS = XCL6_B, RANGE = (0:2), ISVALID = (C_XCL6_B_IN_USE == 1)
PARAMETER C_SPLB6_AWIDTH = 32, DT = INTEGER, BUS = SPLB6, ASSIGNMENT = CONSTANT, ISVALID = (C_PIM6_BASETYPE == 2)
PARAMETER C_SPLB6_DWIDTH = 64, DT = INTEGER, BUS = SPLB6, RANGE = (32,64,128), ISVALID = (C_PIM6_BASETYPE == 2)
PARAMETER C_SPLB6_NATIVE_DWIDTH = 64, DT = INTEGER, BUS = SPLB6, RANGE = (32,64), ISVALID = (C_PIM6_BASETYPE == 2), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_splb_native_dwidth, ASSIGNMENT = OPTIONAL_UPDATE, SYSLEVEL_DRC_PROC = syslevel_drc_splb_native_dwidth, IO_IS = C_SPLB6_NATIVE_DWIDTH
PARAMETER C_SPLB6_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB6, RANGE = (0:16), ISVALID = (C_PIM6_BASETYPE == 2)
PARAMETER C_SPLB6_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB6, RANGE = (0:4), ISVALID = (C_PIM6_BASETYPE == 2)
PARAMETER C_SPLB6_P2P = 1, DT = INTEGER, BUS = SPLB6, RANGE = (0,1), ISVALID = (C_PIM6_BASETYPE == 2)
PARAMETER C_SPLB6_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB6, RANGE = (0,1), ISVALID = (C_PIM6_BASETYPE == 2)
PARAMETER C_SPLB6_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SPLB6, RANGE = (32,64,128), ISVALID = (C_PIM6_BASETYPE == 2)
PARAMETER C_SDMA_CTRL6_BASEADDR = 0xFFFFFFFF, BUS = SDMA_CTRL6, ADDRESS = BASE, PAIR = C_SDMA_CTRL6_HIGHADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = REGISTER, ISVALID = (C_PIM6_BASETYPE == 3 && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_SDMA_CTRL6_HIGHADDR = 0x00000000, BUS = SDMA_CTRL6, ADDRESS = HIGH, PAIR = C_SDMA_CTRL6_BASEADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = REGISTER, ISVALID = (C_PIM6_BASETYPE == 3 && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_SDMA_CTRL6_AWIDTH = 32, DT = INTEGER, BUS = SDMA_CTRL6, ASSIGNMENT = CONSTANT, ISVALID = (C_PIM6_BASETYPE == 3)
PARAMETER C_SDMA_CTRL6_DWIDTH = 64, DT = INTEGER, BUS = SDMA_CTRL6, RANGE = (32,64,128), ISVALID = (C_PIM6_BASETYPE == 3)
PARAMETER C_SDMA_CTRL6_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SDMA_CTRL6, RANGE = (32,64), ISVALID = (C_PIM6_BASETYPE == 3)
PARAMETER C_SDMA_CTRL6_NUM_MASTERS = 1, DT = INTEGER, BUS = SDMA_CTRL6, RANGE = (0:16), ISVALID = (C_PIM6_BASETYPE == 3)
PARAMETER C_SDMA_CTRL6_MID_WIDTH = 1, DT = INTEGER, BUS = SDMA_CTRL6, RANGE = (0:4), ISVALID = (C_PIM6_BASETYPE == 3)
PARAMETER C_SDMA_CTRL6_P2P = 1, DT = INTEGER, BUS = SDMA_CTRL6, RANGE = (0,1), ISVALID = (C_PIM6_BASETYPE == 3)
PARAMETER C_SDMA_CTRL6_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SDMA_CTRL6, RANGE = (0,1), ASSIGNMENT = CONSTANT, ISVALID = (C_PIM6_BASETYPE == 3)
PARAMETER C_SDMA_CTRL6_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SDMA_CTRL6, RANGE = (32,64,128), ISVALID = (C_PIM6_BASETYPE == 3)
PARAMETER C_SDMA6_COMPLETED_ERR_TX = 1, DT = INTEGER, BUS = SDMA_LL6, RANGE = (0,1), ISVALID = (C_PIM6_BASETYPE == 3)
PARAMETER C_SDMA6_COMPLETED_ERR_RX = 1, DT = INTEGER, BUS = SDMA_LL6, RANGE = (0,1), ISVALID = (C_PIM6_BASETYPE == 3)
PARAMETER C_SDMA6_PRESCALAR = 1023, DT = INTEGER, BUS = SDMA_LL6, RANGE = (0:1023), ISVALID = (C_PIM6_BASETYPE == 3)
PARAMETER C_SDMA6_PI2LL_CLK_RATIO = 1, DT = INTEGER, BUS = SDMA_LL6, RANGE = (1:2), ISVALID = (C_PIM6_BASETYPE == 3), ASSIGNMENT = REQUIRE
PARAMETER C_PPC440MC6_BURST_LENGTH = 4, DT = INTEGER, BUS = PPC440MC6, RANGE = (2,4,8), ISVALID = (C_PIM6_BASETYPE == 5)
PARAMETER C_PPC440MC6_PIPE_STAGES = 1, DT = INTEGER, BUS = PPC440MC6, RANGE = (0:2), ISVALID = (C_PIM6_BASETYPE == 5)
PARAMETER C_VFBC6_CMD_FIFO_DEPTH = 32, DT = INTEGER, BUS = VFBC6, ISVALID = (C_PIM6_BASETYPE == 6)
PARAMETER C_VFBC6_CMD_AFULL_COUNT = 3, DT = INTEGER, BUS = VFBC6, ISVALID = (C_PIM6_BASETYPE == 6)
PARAMETER C_VFBC6_RDWD_DATA_WIDTH = 32, DT = INTEGER, BUS = VFBC6, RANGE = (8,16,32,64), ISVALID = (C_PIM6_BASETYPE == 6)
PARAMETER C_VFBC6_RDWD_FIFO_DEPTH = 1024, DT = INTEGER, BUS = VFBC6, ISVALID = (C_PIM6_BASETYPE == 6)
PARAMETER C_VFBC6_RD_AEMPTY_WD_AFULL_COUNT = 3, DT = INTEGER, BUS = VFBC6, ISVALID = (C_PIM6_BASETYPE == 6)
PARAMETER C_PI6_RD_FIFO_TYPE = BRAM, DT = STRING, VALUES = ( BRAM = BRAM ,  SRL = SRL ,  DISABLED = Wr-Only ), ISVALID = (C_PIM6_BASETYPE != 0 && ![xstrncmp C_FAMILY  spartan6 ])
PARAMETER C_PI6_WR_FIFO_TYPE = BRAM, DT = STRING, VALUES = ( BRAM = BRAM ,  SRL = SRL ,  DISABLED = Rd-Only ), ISVALID = (C_PIM6_BASETYPE != 0 && ![xstrncmp C_FAMILY  spartan6 ]), IPLEVEL_DRC_PROC = iplevel_drc_wr_fifo
PARAMETER C_PI6_ADDRACK_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM6_BASETYPE != 0 && ![xstrncmp C_FAMILY  spartan6 ])
PARAMETER C_PI6_RD_FIFO_APP_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM6_BASETYPE != 0 && ![xstrncmp C_PI6_RD_FIFO_TYPE DISABLED] && ![xstrncmp C_FAMILY  spartan6 ])
PARAMETER C_PI6_RD_FIFO_MEM_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM6_BASETYPE != 0 && ![xstrncmp C_PI6_RD_FIFO_TYPE DISABLED] && ![xstrncmp C_FAMILY  spartan6 ])
PARAMETER C_PI6_WR_FIFO_APP_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM6_BASETYPE != 0 && ![xstrncmp C_PI6_WR_FIFO_TYPE DISABLED] && ![xstrncmp C_FAMILY  spartan6 ])
PARAMETER C_PI6_WR_FIFO_MEM_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM6_BASETYPE != 0 && ![xstrncmp C_PI6_WR_FIFO_TYPE DISABLED] && ![xstrncmp C_FAMILY  spartan6 ])
PARAMETER C_PI6_PM_USED = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM6_BASETYPE != 0 && C_PM_ENABLE)
PARAMETER C_PI6_PM_DC_CNTR = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM6_BASETYPE != 0 && C_PM_ENABLE)
PARAMETER C_PIM7_BASEADDR = 0xFFFFFFFF, BUS = XCL7:XCL7_B:SPLB7:SDMA_LL7:PPC440MC7:VFBC7, ADDRESS = BASE, PAIR = C_PIM7_HIGHADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = ((C_PIM7_BASETYPE != 0 && C_PIM7_BASETYPE != 4) && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_PIM7_HIGHADDR = 0x00000000, BUS = XCL7:XCL7_B:SPLB7:SDMA_LL7:PPC440MC7:VFBC7, ADDRESS = HIGH, PAIR = C_PIM7_BASEADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = ((C_PIM7_BASETYPE != 0 && C_PIM7_BASETYPE != 4) && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_PIM7_OFFSET = 0x00000000, BUS = XCL7:XCL7_B:SPLB7:SDMA_LL7:PPC440MC7, DT = STD_LOGIC_VECTOR, ISVALID = ((C_PIM7_BASETYPE == 1 || C_PIM7_BASETYPE == 2 || C_PIM7_BASETYPE == 5) && C_ALL_PIMS_SHARE_ADDRESSES == 0)
PARAMETER C_PIM7_DATA_WIDTH = 64, DT = INTEGER, BUS = MPMC_PIM7:VFBC7:MCB7, RANGE = (32,64), ISVALID = (C_PIM7_BASETYPE == 4 || C_PIM7_BASETYPE == 6 || ((C_PIM7_BASETYPE == 7 || C_PIM7_BASETYPE == 8 || C_PIM7_BASETYPE == 9) && [xstrncmp C_FAMILY  spartan6 ])), IPLEVEL_DRC_PROC = iplevel_drc_pim_data_width
PARAMETER C_PIM7_BASETYPE = 0, DT = INTEGER, BUS = XCL7:SPLB7:SDMA_LL7:MPMC_PIM7:PPC440MC7:VFBC7:MCB7, RANGE = (0:9), VALUES = (0=INACTIVE, 1=XCL, 2=PLBV46, 3=SDMA, 4=NPI, 5=PPC440MC, 6=VFBC, 7=MCB, 8=MCB-Read, 9=MCB-Write), IPLEVEL_DRC_PROC = iplevel_drc_pim_basetype
PARAMETER C_PIM7_SUBTYPE = INACTIVE, DT = STRING, BUS = XCL7:SPLB7:SDMA_LL7:MPMC_PIM7:PPC440MC7:VFBC7:MCB7, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_PIM7_BASETYPE != 0), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_pim_subtype, SYSLEVEL_DRC_PROC = syslevel_drc_splb_subtype
PARAMETER C_XCL7_LINESIZE = 4, DT = INTEGER, BUS = XCL7, RANGE = (1,4,8,16), ISVALID = (C_PIM7_BASETYPE == 1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_xcl_linesize
PARAMETER C_XCL7_WRITEXFER = 1, DT = INTEGER, BUS = XCL7, RANGE = (0:2), ISVALID = (C_PIM7_BASETYPE == 1)
PARAMETER C_XCL7_PIPE_STAGES = 2, DT = INTEGER, BUS = XCL7, RANGE = (0:3), ISVALID = (C_PIM7_BASETYPE == 1)
PARAMETER C_XCL7_B_IN_USE = 0, DT = INTEGER, BUS = XCL7, RANGE = (0,1), ISVALID = (C_PIM7_BASETYPE == 1)
PARAMETER C_PIM7_B_SUBTYPE = INACTIVE, DT = STRING, BUS = XCL7_B, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_XCL7_B_IN_USE == 1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_pim_subtype
PARAMETER C_XCL7_B_LINESIZE = 4, DT = INTEGER, BUS = XCL7_B, RANGE = (1,4,8,16), ISVALID = (C_XCL7_B_IN_USE == 1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_xcl_linesize
PARAMETER C_XCL7_B_WRITEXFER = 1, DT = INTEGER, BUS = XCL7_B, RANGE = (0:2), ISVALID = (C_XCL7_B_IN_USE == 1)
PARAMETER C_SPLB7_AWIDTH = 32, DT = INTEGER, BUS = SPLB7, ASSIGNMENT = CONSTANT, ISVALID = (C_PIM7_BASETYPE == 2)
PARAMETER C_SPLB7_DWIDTH = 64, DT = INTEGER, BUS = SPLB7, RANGE = (32,64,128), ISVALID = (C_PIM7_BASETYPE == 2)
PARAMETER C_SPLB7_NATIVE_DWIDTH = 64, DT = INTEGER, BUS = SPLB7, RANGE = (32,64), ISVALID = (C_PIM7_BASETYPE == 2), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_splb_native_dwidth, ASSIGNMENT = OPTIONAL_UPDATE, SYSLEVEL_DRC_PROC = syslevel_drc_splb_native_dwidth, IO_IS = C_SPLB7_NATIVE_DWIDTH
PARAMETER C_SPLB7_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB7, RANGE = (0:16), ISVALID = (C_PIM7_BASETYPE == 2)
PARAMETER C_SPLB7_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB7, RANGE = (0:4), ISVALID = (C_PIM7_BASETYPE == 2)
PARAMETER C_SPLB7_P2P = 1, DT = INTEGER, BUS = SPLB7, RANGE = (0,1), ISVALID = (C_PIM7_BASETYPE == 2)
PARAMETER C_SPLB7_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB7, RANGE = (0,1), ISVALID = (C_PIM7_BASETYPE == 2)
PARAMETER C_SPLB7_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SPLB7, RANGE = (32,64,128), ISVALID = (C_PIM7_BASETYPE == 2)
PARAMETER C_SDMA_CTRL7_BASEADDR = 0xFFFFFFFF, BUS = SDMA_CTRL7, ADDRESS = BASE, PAIR = C_SDMA_CTRL7_HIGHADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = REGISTER, ISVALID = (C_PIM7_BASETYPE == 3 && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_SDMA_CTRL7_HIGHADDR = 0x00000000, BUS = SDMA_CTRL7, ADDRESS = HIGH, PAIR = C_SDMA_CTRL7_BASEADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = REGISTER, ISVALID = (C_PIM7_BASETYPE == 3 && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_SDMA_CTRL7_AWIDTH = 32, DT = INTEGER, BUS = SDMA_CTRL7, ASSIGNMENT = CONSTANT, ISVALID = (C_PIM7_BASETYPE == 3)
PARAMETER C_SDMA_CTRL7_DWIDTH = 64, DT = INTEGER, BUS = SDMA_CTRL7, RANGE = (32,64,128), ISVALID = (C_PIM7_BASETYPE == 3)
PARAMETER C_SDMA_CTRL7_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SDMA_CTRL7, RANGE = (32,64), ASSIGNMENT = CONSTANT, ISVALID = (C_PIM7_BASETYPE == 3)
PARAMETER C_SDMA_CTRL7_NUM_MASTERS = 1, DT = INTEGER, BUS = SDMA_CTRL7, RANGE = (0:16), ISVALID = (C_PIM7_BASETYPE == 3)
PARAMETER C_SDMA_CTRL7_MID_WIDTH = 1, DT = INTEGER, BUS = SDMA_CTRL7, RANGE = (0:4), ISVALID = (C_PIM7_BASETYPE == 3)
PARAMETER C_SDMA_CTRL7_P2P = 1, DT = INTEGER, BUS = SDMA_CTRL7, RANGE = (0,1), ISVALID = (C_PIM7_BASETYPE == 3)
PARAMETER C_SDMA_CTRL7_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SDMA_CTRL7, RANGE = (0,1), ASSIGNMENT = CONSTANT, ISVALID = (C_PIM7_BASETYPE == 3)
PARAMETER C_SDMA_CTRL7_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SDMA_CTRL7, RANGE = (32,64,128), ISVALID = (C_PIM7_BASETYPE == 3)
PARAMETER C_SDMA7_COMPLETED_ERR_TX = 1, DT = INTEGER, BUS = SDMA_LL7, RANGE = (0,1), ISVALID = (C_PIM7_BASETYPE == 3)
PARAMETER C_SDMA7_COMPLETED_ERR_RX = 1, DT = INTEGER, BUS = SDMA_LL7, RANGE = (0,1), ISVALID = (C_PIM7_BASETYPE == 3)
PARAMETER C_SDMA7_PRESCALAR = 1023, DT = INTEGER, BUS = SDMA_LL7, RANGE = (0:1023), ISVALID = (C_PIM7_BASETYPE == 3)
PARAMETER C_SDMA7_PI2LL_CLK_RATIO = 1, DT = INTEGER, BUS = SDMA_LL7, RANGE = (1:2), ISVALID = (C_PIM7_BASETYPE == 3), ASSIGNMENT = REQUIRE
PARAMETER C_PPC440MC7_BURST_LENGTH = 4, DT = INTEGER, BUS = PPC440MC7, RANGE = (2,4,8), ISVALID = (C_PIM7_BASETYPE == 5)
PARAMETER C_PPC440MC7_PIPE_STAGES = 1, DT = INTEGER, BUS = PPC440MC7, RANGE = (0:2), ISVALID = (C_PIM7_BASETYPE == 5)
PARAMETER C_VFBC7_CMD_FIFO_DEPTH = 32, DT = INTEGER, BUS = VFBC7, ISVALID = (C_PIM7_BASETYPE == 6)
PARAMETER C_VFBC7_CMD_AFULL_COUNT = 3, DT = INTEGER, BUS = VFBC7, ISVALID = (C_PIM7_BASETYPE == 6)
PARAMETER C_VFBC7_RDWD_DATA_WIDTH = 32, DT = INTEGER, BUS = VFBC7, RANGE = (8,16,32,64), ISVALID = (C_PIM7_BASETYPE == 6)
PARAMETER C_VFBC7_RDWD_FIFO_DEPTH = 1024, DT = INTEGER, BUS = VFBC7, ISVALID = (C_PIM7_BASETYPE == 6)
PARAMETER C_VFBC7_RD_AEMPTY_WD_AFULL_COUNT = 3, DT = INTEGER, BUS = VFBC7, ISVALID = (C_PIM7_BASETYPE == 6)
PARAMETER C_PI7_RD_FIFO_TYPE = BRAM, DT = STRING, VALUES = ( BRAM = BRAM ,  SRL = SRL ,  DISABLED = Wr-Only ), ISVALID = (C_PIM7_BASETYPE != 0 && ![xstrncmp C_FAMILY  spartan6 ])
PARAMETER C_PI7_WR_FIFO_TYPE = BRAM, DT = STRING, VALUES = ( BRAM = BRAM ,  SRL = SRL ,  DISABLED = Rd-Only ), ISVALID = (C_PIM7_BASETYPE != 0 && ![xstrncmp C_FAMILY  spartan6 ]), IPLEVEL_DRC_PROC = iplevel_drc_wr_fifo
PARAMETER C_PI7_ADDRACK_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM7_BASETYPE != 0 && ![xstrncmp C_FAMILY  spartan6 ])
PARAMETER C_PI7_RD_FIFO_APP_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM7_BASETYPE != 0 && ![xstrncmp C_PI7_RD_FIFO_TYPE DISABLED] && ![xstrncmp C_FAMILY  spartan6 ])
PARAMETER C_PI7_RD_FIFO_MEM_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM7_BASETYPE != 0 && ![xstrncmp C_PI7_RD_FIFO_TYPE DISABLED] && ![xstrncmp C_FAMILY  spartan6 ])
PARAMETER C_PI7_WR_FIFO_APP_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM7_BASETYPE != 0 && ![xstrncmp C_PI7_WR_FIFO_TYPE DISABLED] && ![xstrncmp C_FAMILY  spartan6 ])
PARAMETER C_PI7_WR_FIFO_MEM_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM7_BASETYPE != 0 && ![xstrncmp C_PI7_WR_FIFO_TYPE DISABLED] && ![xstrncmp C_FAMILY  spartan6 ])
PARAMETER C_PI7_PM_USED = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM7_BASETYPE != 0 && C_PM_ENABLE)
PARAMETER C_PI7_PM_DC_CNTR = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM7_BASETYPE != 0 && C_PM_ENABLE)
PARAMETER C_WR_TRAINING_PORT = 0, DT = INTEGER, ISVALID = (((([xstrncmp C_FAMILY  virtex4 ] || [xstrncmp C_FAMILY  qvirtex4 ] || [xstrncmp C_FAMILY  qrvirtex4 ]) && ([xstrncmp C_MEM_TYPE  DDR ] || [xstrncmp C_MEM_TYPE  DDR2 ])) || ([xstrncmp C_FAMILY  virtex5 ] && [xstrncmp C_MEM_TYPE  DDR ])) && C_USE_STATIC_PHY == 0), RANGE = (0:7), ASSIGNMENT = OPTIONAL_UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_training_port, SYSLEVEL_DRC_PROC = syslevel_drc_training_port
PARAMETER C_ARB_BRAM_INIT_00 = 0b0000000011111111111111111111111100000000111111111111111111111111000000001111111111111111111111110000000011111111111111111111111100000000111111111111010001000011000000001111111111110010000110100000000011111111111100001101000100000000111111111111011010001000, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_bram_init
PARAMETER C_ARB_BRAM_INIT_01 = 0b0000000011111111111111111111111100000000111111111111111111111111000000001111111111111111111111110000000011111111111111111111111100000000111111111111111111111111000000001111111111111111111111110000000011111111111111111111111100000000111111111111111111111111, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_bram_init
PARAMETER C_ARB_BRAM_INIT_02 = 0b0000000011111111111111111111111100000000111111111111111111111111000000001111111111111111111111110000000011111111111111111111111100000000111111111111011010001000000000001111111111110110100010000000000011111111111101101000100000000000111111111111011010001000, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE
PARAMETER C_ARB_BRAM_INIT_03 = 0b0000000011111111111111111111111100000000111111111111111111111111000000001111111111111111111111110000000011111111111111111111111100000000111111111111111111111111000000001111111111111111111111110000000011111111111111111111111100000000111111111111111111111111, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE
PARAMETER C_ARB_BRAM_INIT_04 = 0b0000000011111111111111111111111100000000111111111111111111111111000000001111111111111111111111110000000011111111111111111111111100000000111111111111010001000011000000001111111111110010000110100000000011111111111100001101000100000000111111111111011010001000, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE
PARAMETER C_ARB_BRAM_INIT_05 = 0b0000000011111111111111111111111100000000111111111111111111111111000000001111111111111111111111110000000011111111111111111111111100000000111111111111111111111111000000001111111111111111111111110000000011111111111111111111111100000000111111111111111111111111, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE
PARAMETER C_ARB_BRAM_INIT_06 = 0b0000000011111111111111111111111100000000111111111111111111111111000000001111111111111111111111110000000011111111111111111111111100000000111111111111011010001000000000001111111111110110100010000000000011111111111101101000100000000000111111111111011010001000, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE
PARAMETER C_ARB_BRAM_INIT_07 = 0b0000000011111111111111111111111100000000111111111111111111111111000000001111111111111111111111110000000011111111111111111111111100000000111111111111111111111111000000001111111111111111111111110000000011111111111111111111111100000000111111111111111111111111, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE
PARAMETER C_NCK_PER_CLK = 1, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_TWR = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_COMPLETE_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_IS_WRITE_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_PHYIF_RAS_N_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_PHYIF_CAS_N_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_PHYIF_WE_N_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_RMW_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_SKIP_0_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_PHYIF_DQS_O_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_SKIP_1_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_DP_RDFIFO_PUSH_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_SKIP_2_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_AP_COL_CNT_LOAD_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_AP_COL_CNT_ENABLE_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_AP_PRECHARGE_ADDR10_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_AP_ROW_COL_SEL_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_PHYIF_FORCE_DM_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_REPEAT4_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_DFI_RAS_N_0_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_DFI_CAS_N_0_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_DFI_WE_N_0_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_DFI_RAS_N_1_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_DFI_CAS_N_1_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_DFI_WE_N_1_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_DP_WRFIFO_POP_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_DFI_WRDATA_EN_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_DFI_RDDATA_EN_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_AP_OTF_ADDR12_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_ARB_RDMODWR_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_AP_COL_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_AP_PI_ADDR_CE_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_AP_PORT_SELECT_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_AP_PIPELINE1_CE_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_DP_LOAD_RDWDADDR_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_DP_RDFIFO_WHICHPORT_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_DP_SIZE_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_DP_WRFIFO_WHICHPORT_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_PHYIF_DUMMYREADSTART_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q0_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q1_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q2_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q3_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q4_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q5_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q6_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q7_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q8_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q9_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q10_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q11_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q12_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q13_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q14_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q15_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q16_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q17_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q18_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q19_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q20_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q21_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q22_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q23_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q24_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q25_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q26_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q27_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q28_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q29_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q30_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q31_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q32_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q33_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q34_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q35_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_SKIP_1_VALUE = 15, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_SKIP_2_VALUE = 15, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_SKIP_3_VALUE = 15, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_SKIP_4_VALUE = 20, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_SKIP_5_VALUE = 36, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_SKIP_6_VALUE = 20, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_SKIP_7_VALUE = 36, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_B16_REPEAT_CNT = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_B32_REPEAT_CNT = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_B64_REPEAT_CNT = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_BASEADDR_CTRL0 = 0x000, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_HIGHADDR_CTRL0 = 0x00d, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_BASEADDR_CTRL1 = 0x00e, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_HIGHADDR_CTRL1 = 0x017, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_BASEADDR_CTRL2 = 0x018, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_HIGHADDR_CTRL2 = 0x025, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_BASEADDR_CTRL3 = 0x026, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_HIGHADDR_CTRL3 = 0x02f, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_BASEADDR_CTRL4 = 0x030, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_HIGHADDR_CTRL4 = 0x03d, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_BASEADDR_CTRL5 = 0x03e, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_HIGHADDR_CTRL5 = 0x047, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_BASEADDR_CTRL6 = 0x048, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_HIGHADDR_CTRL6 = 0x05b, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_BASEADDR_CTRL7 = 0x05c, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_HIGHADDR_CTRL7 = 0x06a, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_BASEADDR_CTRL8 = 0x06b, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_HIGHADDR_CTRL8 = 0x086, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_BASEADDR_CTRL9 = 0x087, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_HIGHADDR_CTRL9 = 0x09d, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_BASEADDR_CTRL10 = 0x09e, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_HIGHADDR_CTRL10 = 0x0a5, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_BASEADDR_CTRL11 = 0x0a6, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_HIGHADDR_CTRL11 = 0x0ad, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_BASEADDR_CTRL12 = 0x0ae, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_HIGHADDR_CTRL12 = 0x0b5, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_BASEADDR_CTRL13 = 0x0b6, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_HIGHADDR_CTRL13 = 0x0bd, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_BASEADDR_CTRL14 = 0x0be, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_HIGHADDR_CTRL14 = 0x0d0, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_BASEADDR_CTRL15 = 0x0d1, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_HIGHADDR_CTRL15 = 0x0d8, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_3F = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_3E = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_3D = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_3C = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_3B = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_3A = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_39 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_38 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_37 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_36 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_35 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_34 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_33 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_32 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_31 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_30 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_2F = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_2E = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_2D = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_2C = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_2B = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_2A = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_29 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_28 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_27 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_26 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_25 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_24 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_23 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_22 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_21 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_20 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_1F = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_1E = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_1D = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_1C = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_1B = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_1A = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_19 = 0x000002FC000002FC000002FC000002FC000002FD000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_18 = 0x000002FC000002FC000002FC000002FC000002FC000002F0000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_17 = 0x000002FC000042E8000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_16 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_15 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_14 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_13 = 0x000002FC000002FC000002FC000002FC000002FC000042E8000006FC000026F5, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_12 = 0x000006FC000026F4000006FC000026F4000006FC000026F4000006FC000026F4, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_11 = 0x000006FC000026F4000006FC000026F4000006FC000016F4000082FC000082FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_10 = 0x000082F8000002FC000002FC000002FC000042E8000002FC000002FD000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_0F = 0x000002FC000002FC0000093C000029240000093C000029240000093C00002924, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_0E = 0x0000093C000029240000093C000029240000093C000029240000093C00002924, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_0D = 0x0000093C000019240000803C000082FC000082F8000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_0C = 0x000042E8000006FC000026F5000006FC000026F4000006FC000026F4000006FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_0B = 0x000016F4000082FC000082FC000082F8000002FC000002FC000002FC000042E8, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_0A = 0x000002FC000002FD000002FC000002FC000002FC0000093C000029240000093C, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_09 = 0x000029240000093C000029240000093C000019240000803C000082FC000082F8, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_08 = 0x000002FC000002FC000002FC000042E8000002FC000006FD000016F4000082FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_07 = 0x000082FC000082F8000002FC000002FC000002FC000042E8000002FC000002FD, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_06 = 0x000002FC000002FC000002FC0000093C000019240000803C000082FC000082F8, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_05 = 0x000002FC000002FC000002FC000042E8000002FC000002FD000016F4000082FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_04 = 0x000082FC000082F8000002FC000002FC000002FC000042E8000002FC000002FD, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_03 = 0x000002FC000002FC000002FC0000013C000019240000803C000082FC000082F8, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_02 = 0x000002FC000002FC000002FC000042E8000002FC000002FD000016F4000082FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_01 = 0x000082FC000082F8000002FC000002FC000002FC000042E8000002FC000002FD, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_00 = 0x000002FC000002FC000002FC0000013C000019240000803C000082FC000082F8, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_SRVAL = 0x0000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INITP_07 = 0x0000000000000000000000000000000000000000000000000000000000000000, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INITP_06 = 0x0000000000000000000000000000000000000000000000000000000000000000, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INITP_05 = 0x0000000000000000000000000000000000000000000000000000000000000000, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INITP_04 = 0x0000000000000000000000000000000000000000000000000000000000000000, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INITP_03 = 0x0000000000000000000000000000000000000000000000001111111111111111, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INITP_02 = 0x1110000000000000000000000000000000011111111111111111111111111111, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INITP_01 = 0x1110000000000000000011111111111111111111111111000000000111111011, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INITP_00 = 0x1111111111110001111110111111111111111001111110111111111111111001, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter

## Ports
PORT FSL0_M_Clk = FSL_M_Clk, DIR = I, BUS = XCL0, SIGIS = CLK, INITIALVAL = VCC
PORT FSL0_M_Write = FSL_M_Write, DIR = I, BUS = XCL0
PORT FSL0_M_Data = FSL_M_Data, DIR = I, BUS = XCL0, VEC = [0:31]
PORT FSL0_M_Control = FSL_M_Control, DIR = I, BUS = XCL0
PORT FSL0_M_Full = FSL_M_Full, DIR = O, BUS = XCL0
PORT FSL0_S_Clk = FSL_S_Clk, DIR = I, BUS = XCL0
PORT FSL0_S_Read = FSL_S_Read, DIR = I, BUS = XCL0
PORT FSL0_S_Data = FSL_S_Data, DIR = O, BUS = XCL0, VEC = [0:31]
PORT FSL0_S_Control = FSL_S_Control, DIR = O, BUS = XCL0
PORT FSL0_S_Exists = FSL_S_Exists, DIR = O, BUS = XCL0
PORT FSL0_B_M_Clk = FSL_M_Clk, DIR = I, BUS = XCL0_B, SIGIS = CLK, INITIALVAL = VCC
PORT FSL0_B_M_Write = FSL_M_Write, DIR = I, BUS = XCL0_B
PORT FSL0_B_M_Data = FSL_M_Data, DIR = I, BUS = XCL0_B, VEC = [0:31]
PORT FSL0_B_M_Control = FSL_M_Control, DIR = I, BUS = XCL0_B
PORT FSL0_B_M_Full = FSL_M_Full, DIR = O, BUS = XCL0_B
PORT FSL0_B_S_Clk = FSL_S_Clk, DIR = I, BUS = XCL0_B
PORT FSL0_B_S_Read = FSL_S_Read, DIR = I, BUS = XCL0_B
PORT FSL0_B_S_Data = FSL_S_Data, DIR = O, BUS = XCL0_B, VEC = [0:31]
PORT FSL0_B_S_Control = FSL_S_Control, DIR = O, BUS = XCL0_B
PORT FSL0_B_S_Exists = FSL_S_Exists, DIR = O, BUS = XCL0_B
PORT SPLB0_Clk = "", DIR = I, BUS = SPLB0, SIGIS = CLK, INITIALVAL = VCC
PORT SPLB0_Rst = SPLB_Rst, DIR = I, BUS = SPLB0, SIGIS = RST
PORT SPLB0_PLB_ABus = PLB_ABus, DIR = I, BUS = SPLB0, VEC = [0:31]
PORT SPLB0_PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB0
PORT SPLB0_PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB0
PORT SPLB0_PLB_masterID = PLB_masterID, DIR = I, BUS = SPLB0, VEC = [0:(C_SPLB0_MID_WIDTH-1)]
PORT SPLB0_PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB0
PORT SPLB0_PLB_BE = PLB_BE, DIR = I, BUS = SPLB0, VEC = [0:((C_SPLB0_DWIDTH/8)-1)]
PORT SPLB0_PLB_UABus = PLB_UABus, DIR = I, BUS = SPLB0, VEC = [0:31]
PORT SPLB0_PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB0
PORT SPLB0_PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB0
PORT SPLB0_PLB_abort = PLB_abort, DIR = I, BUS = SPLB0
PORT SPLB0_PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB0
PORT SPLB0_PLB_MSize = PLB_MSize, DIR = I, BUS = SPLB0, VEC = [0:1]
PORT SPLB0_PLB_size = PLB_size, DIR = I, BUS = SPLB0, VEC = [0:3]
PORT SPLB0_PLB_type = PLB_type, DIR = I, BUS = SPLB0, VEC = [0:2]
PORT SPLB0_PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB0
PORT SPLB0_PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB0
PORT SPLB0_PLB_wrPendPri = PLB_wrPendPri, DIR = I, BUS = SPLB0, VEC = [0:1]
PORT SPLB0_PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB0
PORT SPLB0_PLB_rdPendPri = PLB_rdPendPri, DIR = I, BUS = SPLB0, VEC = [0:1]
PORT SPLB0_PLB_reqPri = PLB_reqPri, DIR = I, BUS = SPLB0, VEC = [0:1]
PORT SPLB0_PLB_TAttribute = PLB_TAttribute, DIR = I, BUS = SPLB0, VEC = [0:15]
PORT SPLB0_PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB0
PORT SPLB0_PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB0
PORT SPLB0_PLB_wrDBus = PLB_wrDBus, DIR = I, BUS = SPLB0, VEC = [0:(C_SPLB0_DWIDTH-1)]
PORT SPLB0_Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB0
PORT SPLB0_Sl_SSize = Sl_SSize, DIR = O, BUS = SPLB0, VEC = [0:1]
PORT SPLB0_Sl_wait = Sl_wait, DIR = O, BUS = SPLB0
PORT SPLB0_Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB0
PORT SPLB0_Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB0
PORT SPLB0_Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB0
PORT SPLB0_Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB0
PORT SPLB0_Sl_rdDBus = Sl_rdDBus, DIR = O, BUS = SPLB0, VEC = [0:(C_SPLB0_DWIDTH-1)]
PORT SPLB0_Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, BUS = SPLB0, VEC = [0:3]
PORT SPLB0_Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB0
PORT SPLB0_Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB0
PORT SPLB0_Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB0
PORT SPLB0_Sl_MBusy = Sl_MBusy, DIR = O, BUS = SPLB0, VEC = [0:(C_SPLB0_NUM_MASTERS-1)]
PORT SPLB0_Sl_MRdErr = Sl_MRdErr, DIR = O, BUS = SPLB0, VEC = [0:(C_SPLB0_NUM_MASTERS-1)]
PORT SPLB0_Sl_MWrErr = Sl_MWrErr, DIR = O, BUS = SPLB0, VEC = [0:(C_SPLB0_NUM_MASTERS-1)]
PORT SPLB0_Sl_MIRQ = Sl_MIRQ, DIR = O, BUS = SPLB0, VEC = [0:(C_SPLB0_NUM_MASTERS-1)]
PORT SDMA0_Clk = "", DIR = I, SIGIS = CLK, ISVALID = (C_NUM_PORTS > 0 && C_PIM0_BASETYPE == 3), ASSIGNMENT = REQUIRE
PORT SDMA0_Rx_IntOut = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, ISVALID = (C_NUM_PORTS > 0 && C_PIM0_BASETYPE == 3)
PORT SDMA0_Tx_IntOut = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, ISVALID = (C_NUM_PORTS > 0 && C_PIM0_BASETYPE == 3)
PORT SDMA0_RstOut = LL_RST_ACK, DIR = O, BUS = SDMA_LL0
PORT SDMA0_TX_D = LL_Tx_Data, DIR = O, BUS = SDMA_LL0, VEC = [0:31]
PORT SDMA0_TX_Rem = LL_Tx_Rem, DIR = O, BUS = SDMA_LL0, VEC = [0:3]
PORT SDMA0_TX_SOF = LL_Tx_SOF_n, DIR = O, BUS = SDMA_LL0
PORT SDMA0_TX_EOF = LL_Tx_EOF_n, DIR = O, BUS = SDMA_LL0
PORT SDMA0_TX_SOP = LL_Tx_SOP_n, DIR = O, BUS = SDMA_LL0
PORT SDMA0_TX_EOP = LL_Tx_EOP_n, DIR = O, BUS = SDMA_LL0
PORT SDMA0_TX_Src_Rdy = LL_Tx_SrcRdy_n, DIR = O, BUS = SDMA_LL0
PORT SDMA0_TX_Dst_Rdy = LL_Tx_DstRdy_n, DIR = I, BUS = SDMA_LL0, INITIALVAL = VCC
PORT SDMA0_RX_D = LL_Rx_Data, DIR = I, BUS = SDMA_LL0, INITIALVAL = GND, VEC = [0:31]
PORT SDMA0_RX_Rem = LL_Rx_Rem, DIR = I, BUS = SDMA_LL0, INITIALVAL = VCC, VEC = [0:3]
PORT SDMA0_RX_SOF = LL_Rx_SOF_n, DIR = I, BUS = SDMA_LL0, INITIALVAL = VCC
PORT SDMA0_RX_EOF = LL_Rx_EOF_n, DIR = I, BUS = SDMA_LL0, INITIALVAL = VCC
PORT SDMA0_RX_SOP = LL_Rx_SOP_n, DIR = I, BUS = SDMA_LL0, INITIALVAL = VCC
PORT SDMA0_RX_EOP = LL_Rx_EOP_n, DIR = I, BUS = SDMA_LL0, INITIALVAL = VCC
PORT SDMA0_RX_Src_Rdy = LL_Rx_SrcRdy_n, DIR = I, BUS = SDMA_LL0, INITIALVAL = VCC
PORT SDMA0_RX_Dst_Rdy = LL_Rx_DstRdy_n, DIR = O, BUS = SDMA_LL0
PORT SDMA_CTRL0_Clk = "", DIR = I, BUS = SDMA_CTRL0, SIGIS = CLK, INITIALVAL = VCC
PORT SDMA_CTRL0_Rst = SPLB_Rst, DIR = I, BUS = SDMA_CTRL0, SIGIS = RST
PORT SDMA_CTRL0_PLB_ABus = PLB_ABus, DIR = I, BUS = SDMA_CTRL0, VEC = [0:31]
PORT SDMA_CTRL0_PLB_PAValid = PLB_PAValid, DIR = I, BUS = SDMA_CTRL0
PORT SDMA_CTRL0_PLB_SAValid = PLB_SAValid, DIR = I, BUS = SDMA_CTRL0
PORT SDMA_CTRL0_PLB_masterID = PLB_masterID, DIR = I, BUS = SDMA_CTRL0, VEC = [0:(C_SDMA_CTRL0_MID_WIDTH-1)]
PORT SDMA_CTRL0_PLB_RNW = PLB_RNW, DIR = I, BUS = SDMA_CTRL0
PORT SDMA_CTRL0_PLB_BE = PLB_BE, DIR = I, BUS = SDMA_CTRL0, VEC = [0:((C_SDMA_CTRL0_DWIDTH/8)-1)]
PORT SDMA_CTRL0_PLB_UABus = PLB_UABus, DIR = I, BUS = SDMA_CTRL0, VEC = [0:31]
PORT SDMA_CTRL0_PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SDMA_CTRL0
PORT SDMA_CTRL0_PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SDMA_CTRL0
PORT SDMA_CTRL0_PLB_abort = PLB_abort, DIR = I, BUS = SDMA_CTRL0
PORT SDMA_CTRL0_PLB_busLock = PLB_busLock, DIR = I, BUS = SDMA_CTRL0
PORT SDMA_CTRL0_PLB_MSize = PLB_MSize, DIR = I, BUS = SDMA_CTRL0, VEC = [0:1]
PORT SDMA_CTRL0_PLB_size = PLB_size, DIR = I, BUS = SDMA_CTRL0, VEC = [0:3]
PORT SDMA_CTRL0_PLB_type = PLB_type, DIR = I, BUS = SDMA_CTRL0, VEC = [0:2]
PORT SDMA_CTRL0_PLB_lockErr = PLB_lockErr, DIR = I, BUS = SDMA_CTRL0
PORT SDMA_CTRL0_PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SDMA_CTRL0
PORT SDMA_CTRL0_PLB_wrPendPri = PLB_wrPendPri, DIR = I, BUS = SDMA_CTRL0, VEC = [0:1]
PORT SDMA_CTRL0_PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SDMA_CTRL0
PORT SDMA_CTRL0_PLB_rdPendPri = PLB_rdPendPri, DIR = I, BUS = SDMA_CTRL0, VEC = [0:1]
PORT SDMA_CTRL0_PLB_reqPri = PLB_reqPri, DIR = I, BUS = SDMA_CTRL0, VEC = [0:1]
PORT SDMA_CTRL0_PLB_TAttribute = PLB_TAttribute, DIR = I, BUS = SDMA_CTRL0, VEC = [0:15]
PORT SDMA_CTRL0_PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SDMA_CTRL0
PORT SDMA_CTRL0_PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SDMA_CTRL0
PORT SDMA_CTRL0_PLB_wrDBus = PLB_wrDBus, DIR = I, BUS = SDMA_CTRL0, VEC = [0:(C_SDMA_CTRL0_DWIDTH-1)]
PORT SDMA_CTRL0_Sl_addrAck = Sl_addrAck, DIR = O, BUS = SDMA_CTRL0
PORT SDMA_CTRL0_Sl_SSize = Sl_SSize, DIR = O, BUS = SDMA_CTRL0, VEC = [0:1]
PORT SDMA_CTRL0_Sl_wait = Sl_wait, DIR = O, BUS = SDMA_CTRL0
PORT SDMA_CTRL0_Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SDMA_CTRL0
PORT SDMA_CTRL0_Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SDMA_CTRL0
PORT SDMA_CTRL0_Sl_wrComp = Sl_wrComp, DIR = O, BUS = SDMA_CTRL0
PORT SDMA_CTRL0_Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SDMA_CTRL0
PORT SDMA_CTRL0_Sl_rdDBus = Sl_rdDBus, DIR = O, BUS = SDMA_CTRL0, VEC = [0:(C_SDMA_CTRL0_DWIDTH-1)]
PORT SDMA_CTRL0_Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, BUS = SDMA_CTRL0, VEC = [0:3]
PORT SDMA_CTRL0_Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SDMA_CTRL0
PORT SDMA_CTRL0_Sl_rdComp = Sl_rdComp, DIR = O, BUS = SDMA_CTRL0
PORT SDMA_CTRL0_Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SDMA_CTRL0
PORT SDMA_CTRL0_Sl_MBusy = Sl_MBusy, DIR = O, BUS = SDMA_CTRL0, VEC = [0:(C_SDMA_CTRL0_NUM_MASTERS-1)]
PORT SDMA_CTRL0_Sl_MRdErr = Sl_MRdErr, DIR = O, BUS = SDMA_CTRL0, VEC = [0:(C_SDMA_CTRL0_NUM_MASTERS-1)]
PORT SDMA_CTRL0_Sl_MWrErr = Sl_MWrErr, DIR = O, BUS = SDMA_CTRL0, VEC = [0:(C_SDMA_CTRL0_NUM_MASTERS-1)]
PORT SDMA_CTRL0_Sl_MIRQ = Sl_MIRQ, DIR = O, BUS = SDMA_CTRL0, VEC = [0:(C_SDMA_CTRL0_NUM_MASTERS-1)]
PORT PIM0_Addr = Addr, DIR = I, BUS = MPMC_PIM0, VEC = [31:0]
PORT PIM0_AddrReq = AddrReq, DIR = I, BUS = MPMC_PIM0
PORT PIM0_AddrAck = AddrAck, DIR = O, BUS = MPMC_PIM0
PORT PIM0_RNW = RNW, DIR = I, BUS = MPMC_PIM0
PORT PIM0_Size = Size, DIR = I, BUS = MPMC_PIM0, VEC = [3:0]
PORT PIM0_RdModWr = RdModWr, DIR = I, BUS = MPMC_PIM0
PORT PIM0_WrFIFO_Data = WrFIFO_Data, DIR = I, BUS = MPMC_PIM0, VEC = [(C_PIM0_DATA_WIDTH-1):0]
PORT PIM0_WrFIFO_BE = WrFIFO_BE, DIR = I, BUS = MPMC_PIM0, VEC = [(C_PIM0_DATA_WIDTH/8-1):0]
PORT PIM0_WrFIFO_Push = WrFIFO_Push, DIR = I, BUS = MPMC_PIM0
PORT PIM0_RdFIFO_Data = RdFIFO_Data, DIR = O, BUS = MPMC_PIM0, VEC = [(C_PIM0_DATA_WIDTH-1):0]
PORT PIM0_RdFIFO_Pop = RdFIFO_Pop, DIR = I, BUS = MPMC_PIM0
PORT PIM0_RdFIFO_RdWdAddr = RdFIFO_RdWdAddr, DIR = O, BUS = MPMC_PIM0, VEC = [3:0]
PORT PIM0_WrFIFO_Empty = WrFIFO_Empty, DIR = O, BUS = MPMC_PIM0
PORT PIM0_WrFIFO_AlmostFull = WrFIFO_AlmostFull, DIR = O, BUS = MPMC_PIM0
PORT PIM0_WrFIFO_Flush = WrFIFO_Flush, DIR = I, BUS = MPMC_PIM0
PORT PIM0_RdFIFO_Empty = RdFIFO_Empty, DIR = O, BUS = MPMC_PIM0
PORT PIM0_RdFIFO_Flush = RdFIFO_Flush, DIR = I, BUS = MPMC_PIM0
PORT PIM0_RdFIFO_Latency = RDFIFO_Latency, DIR = O, BUS = MPMC_PIM0, VEC = [1:0]
PORT PIM0_InitDone = InitDone, DIR = O, BUS = MPMC_PIM0
PORT PPC440MC0_MIMCReadNotWrite = MIMCREADNOTWRITE, DIR = I, BUS = PPC440MC0
PORT PPC440MC0_MIMCAddress = MIMCADDRESS, DIR = I, BUS = PPC440MC0, VEC = [0:35]
PORT PPC440MC0_MIMCAddressValid = MIMCADDRESSVALID, DIR = I, BUS = PPC440MC0
PORT PPC440MC0_MIMCWriteData = MIMCWRITEDATA, DIR = I, BUS = PPC440MC0, VEC = [0:127]
PORT PPC440MC0_MIMCWriteDataValid = MIMCWRITEDATAVALID, DIR = I, BUS = PPC440MC0
PORT PPC440MC0_MIMCByteEnable = MIMCBYTEENABLE, DIR = I, BUS = PPC440MC0, VEC = [0:15]
PORT PPC440MC0_MIMCBankConflict = MIMCBANKCONFLICT, DIR = I, BUS = PPC440MC0
PORT PPC440MC0_MIMCRowConflict = MIMCROWCONFLICT, DIR = I, BUS = PPC440MC0
PORT PPC440MC0_MCMIReadData = MCMIREADDATA, DIR = O, BUS = PPC440MC0, VEC = [0:127]
PORT PPC440MC0_MCMIReadDataValid = MCMIREADDATAVALID, DIR = O, BUS = PPC440MC0
PORT PPC440MC0_MCMIReadDataErr = MCMIREADDATAERR, DIR = O, BUS = PPC440MC0
PORT PPC440MC0_MCMIAddrReadyToAccept = MCMIADDRREADYTOACCEPT, DIR = O, BUS = PPC440MC0
PORT VFBC0_Cmd_Clk = cmd_clk, DIR = I, BUS = VFBC0
PORT VFBC0_Cmd_Reset = cmd_reset, DIR = I, BUS = VFBC0
PORT VFBC0_Cmd_Data = cmd_data, DIR = I, BUS = VFBC0, VEC = [31:0]
PORT VFBC0_Cmd_Write = cmd_write, DIR = I, BUS = VFBC0
PORT VFBC0_Cmd_End = cmd_end, DIR = I, BUS = VFBC0
PORT VFBC0_Cmd_Full = cmd_full, DIR = O, BUS = VFBC0
PORT VFBC0_Cmd_Almost_Full = cmd_almost_full, DIR = O, BUS = VFBC0
PORT VFBC0_Cmd_Idle = cmd_idle, DIR = O, BUS = VFBC0
PORT VFBC0_Wd_Clk = wd_clk, DIR = I, BUS = VFBC0
PORT VFBC0_Wd_Reset = wd_reset, DIR = I, BUS = VFBC0
PORT VFBC0_Wd_Write = wd_write, DIR = I, BUS = VFBC0
PORT VFBC0_Wd_End_Burst = wd_end_burst, DIR = I, BUS = VFBC0
PORT VFBC0_Wd_Flush = wd_flush, DIR = I, BUS = VFBC0
PORT VFBC0_Wd_Data = wd_data, DIR = I, BUS = VFBC0, VEC = [C_VFBC0_RDWD_DATA_WIDTH-1:0]
PORT VFBC0_Wd_Data_BE = wd_data_be, DIR = I, BUS = VFBC0, VEC = [C_VFBC0_RDWD_DATA_WIDTH/8-1:0]
PORT VFBC0_Wd_Full = wd_full, DIR = O, BUS = VFBC0
PORT VFBC0_Wd_Almost_Full = wd_almost_full, DIR = O, BUS = VFBC0
PORT VFBC0_Rd_Clk = rd_clk, DIR = I, BUS = VFBC0
PORT VFBC0_Rd_Reset = rd_reset, DIR = I, BUS = VFBC0
PORT VFBC0_Rd_Read = rd_read, DIR = I, BUS = VFBC0
PORT VFBC0_Rd_End_Burst = rd_end_burst, DIR = I, BUS = VFBC0
PORT VFBC0_Rd_Flush = rd_flush, DIR = I, BUS = VFBC0
PORT VFBC0_Rd_Data = rd_data, DIR = O, BUS = VFBC0, VEC = [C_VFBC0_RDWD_DATA_WIDTH-1:0]
PORT VFBC0_Rd_Empty = rd_empty, DIR = O, BUS = VFBC0
PORT VFBC0_Rd_Almost_Empty = rd_almost_empty, DIR = O, BUS = VFBC0
PORT MCB0_cmd_clk = cmd_clk, DIR = I, BUS = MCB0
PORT MCB0_cmd_en = cmd_en, DIR = I, BUS = MCB0
PORT MCB0_cmd_instr = cmd_instr, DIR = I, BUS = MCB0, VEC = [2:0]
PORT MCB0_cmd_bl = cmd_bl, DIR = I, BUS = MCB0, VEC = [5:0]
PORT MCB0_cmd_byte_addr = cmd_byte_addr, DIR = I, BUS = MCB0, VEC = [29:0]
PORT MCB0_cmd_empty = cmd_empty, DIR = O, BUS = MCB0
PORT MCB0_cmd_full = cmd_full, DIR = O, BUS = MCB0
PORT MCB0_wr_clk = wr_clk, DIR = I, BUS = MCB0
PORT MCB0_wr_en = wr_en, DIR = I, BUS = MCB0
PORT MCB0_wr_mask = wr_mask, DIR = I, BUS = MCB0, VEC = [C_PIM0_DATA_WIDTH/8-1:0]
PORT MCB0_wr_data = wr_data, DIR = I, BUS = MCB0, VEC = [C_PIM0_DATA_WIDTH-1:0]
PORT MCB0_wr_full = wr_full, DIR = O, BUS = MCB0
PORT MCB0_wr_empty = wr_empty, DIR = O, BUS = MCB0
PORT MCB0_wr_count = wr_count, DIR = O, BUS = MCB0, VEC = [6:0]
PORT MCB0_wr_underrun = wr_underrun, DIR = O, BUS = MCB0
PORT MCB0_wr_error = wr_error, DIR = O, BUS = MCB0
PORT MCB0_rd_clk = rd_clk, DIR = I, BUS = MCB0
PORT MCB0_rd_en = rd_en, DIR = I, BUS = MCB0
PORT MCB0_rd_data = rd_data, DIR = O, BUS = MCB0, VEC = [C_PIM0_DATA_WIDTH-1:0]
PORT MCB0_rd_full = rd_full, DIR = O, BUS = MCB0
PORT MCB0_rd_empty = rd_empty, DIR = O, BUS = MCB0
PORT MCB0_rd_count = rd_count, DIR = O, BUS = MCB0, VEC = [6:0]
PORT MCB0_rd_overflow = rd_overflow, DIR = O, BUS = MCB0
PORT MCB0_rd_error = rd_error, DIR = O, BUS = MCB0
PORT FSL1_M_Clk = FSL_M_Clk, DIR = I, BUS = XCL1, SIGIS = CLK, INITIALVAL = VCC
PORT FSL1_M_Write = FSL_M_Write, DIR = I, BUS = XCL1
PORT FSL1_M_Data = FSL_M_Data, DIR = I, BUS = XCL1, VEC = [0:31]
PORT FSL1_M_Control = FSL_M_Control, DIR = I, BUS = XCL1
PORT FSL1_M_Full = FSL_M_Full, DIR = O, BUS = XCL1
PORT FSL1_S_Clk = FSL_S_Clk, DIR = I, BUS = XCL1
PORT FSL1_S_Read = FSL_S_Read, DIR = I, BUS = XCL1
PORT FSL1_S_Data = FSL_S_Data, DIR = O, BUS = XCL1, VEC = [0:31]
PORT FSL1_S_Control = FSL_S_Control, DIR = O, BUS = XCL1
PORT FSL1_S_Exists = FSL_S_Exists, DIR = O, BUS = XCL1
PORT FSL1_B_M_Clk = FSL_M_Clk, DIR = I, BUS = XCL1_B, SIGIS = CLK, INITIALVAL = VCC
PORT FSL1_B_M_Write = FSL_M_Write, DIR = I, BUS = XCL1_B
PORT FSL1_B_M_Data = FSL_M_Data, DIR = I, BUS = XCL1_B, VEC = [0:31]
PORT FSL1_B_M_Control = FSL_M_Control, DIR = I, BUS = XCL1_B
PORT FSL1_B_M_Full = FSL_M_Full, DIR = O, BUS = XCL1_B
PORT FSL1_B_S_Clk = FSL_S_Clk, DIR = I, BUS = XCL1_B
PORT FSL1_B_S_Read = FSL_S_Read, DIR = I, BUS = XCL1_B
PORT FSL1_B_S_Data = FSL_S_Data, DIR = O, BUS = XCL1_B, VEC = [0:31]
PORT FSL1_B_S_Control = FSL_S_Control, DIR = O, BUS = XCL1_B
PORT FSL1_B_S_Exists = FSL_S_Exists, DIR = O, BUS = XCL1_B
PORT SPLB1_Clk = "", DIR = I, BUS = SPLB1, SIGIS = CLK, INITIALVAL = VCC
PORT SPLB1_Rst = SPLB_Rst, DIR = I, BUS = SPLB1, SIGIS = RST
PORT SPLB1_PLB_ABus = PLB_ABus, DIR = I, BUS = SPLB1, VEC = [0:31]
PORT SPLB1_PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB1
PORT SPLB1_PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB1
PORT SPLB1_PLB_masterID = PLB_masterID, DIR = I, BUS = SPLB1, VEC = [0:(C_SPLB1_MID_WIDTH-1)]
PORT SPLB1_PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB1
PORT SPLB1_PLB_BE = PLB_BE, DIR = I, BUS = SPLB1, VEC = [0:((C_SPLB1_DWIDTH/8)-1)]
PORT SPLB1_PLB_UABus = PLB_UABus, DIR = I, BUS = SPLB1, VEC = [0:31]
PORT SPLB1_PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB1
PORT SPLB1_PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB1
PORT SPLB1_PLB_abort = PLB_abort, DIR = I, BUS = SPLB1
PORT SPLB1_PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB1
PORT SPLB1_PLB_MSize = PLB_MSize, DIR = I, BUS = SPLB1, VEC = [0:1]
PORT SPLB1_PLB_size = PLB_size, DIR = I, BUS = SPLB1, VEC = [0:3]
PORT SPLB1_PLB_type = PLB_type, DIR = I, BUS = SPLB1, VEC = [0:2]
PORT SPLB1_PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB1
PORT SPLB1_PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB1
PORT SPLB1_PLB_wrPendPri = PLB_wrPendPri, DIR = I, BUS = SPLB1, VEC = [0:1]
PORT SPLB1_PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB1
PORT SPLB1_PLB_rdPendPri = PLB_rdPendPri, DIR = I, BUS = SPLB1, VEC = [0:1]
PORT SPLB1_PLB_reqPri = PLB_reqPri, DIR = I, BUS = SPLB1, VEC = [0:1]
PORT SPLB1_PLB_TAttribute = PLB_TAttribute, DIR = I, BUS = SPLB1, VEC = [0:15]
PORT SPLB1_PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB1
PORT SPLB1_PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB1
PORT SPLB1_PLB_wrDBus = PLB_wrDBus, DIR = I, BUS = SPLB1, VEC = [0:(C_SPLB1_DWIDTH-1)]
PORT SPLB1_Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB1
PORT SPLB1_Sl_SSize = Sl_SSize, DIR = O, BUS = SPLB1, VEC = [0:1]
PORT SPLB1_Sl_wait = Sl_wait, DIR = O, BUS = SPLB1
PORT SPLB1_Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB1
PORT SPLB1_Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB1
PORT SPLB1_Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB1
PORT SPLB1_Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB1
PORT SPLB1_Sl_rdDBus = Sl_rdDBus, DIR = O, BUS = SPLB1, VEC = [0:(C_SPLB1_DWIDTH-1)]
PORT SPLB1_Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, BUS = SPLB1, VEC = [0:3]
PORT SPLB1_Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB1
PORT SPLB1_Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB1
PORT SPLB1_Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB1
PORT SPLB1_Sl_MBusy = Sl_MBusy, DIR = O, BUS = SPLB1, VEC = [0:(C_SPLB1_NUM_MASTERS-1)]
PORT SPLB1_Sl_MRdErr = Sl_MRdErr, DIR = O, BUS = SPLB1, VEC = [0:(C_SPLB1_NUM_MASTERS-1)]
PORT SPLB1_Sl_MWrErr = Sl_MWrErr, DIR = O, BUS = SPLB1, VEC = [0:(C_SPLB1_NUM_MASTERS-1)]
PORT SPLB1_Sl_MIRQ = Sl_MIRQ, DIR = O, BUS = SPLB1, VEC = [0:(C_SPLB1_NUM_MASTERS-1)]
PORT SDMA1_Clk = "", DIR = I, SIGIS = CLK, ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 3), ASSIGNMENT = REQUIRE
PORT SDMA1_Rx_IntOut = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 3)
PORT SDMA1_Tx_IntOut = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 3)
PORT SDMA1_RstOut = LL_RST_ACK, DIR = O, BUS = SDMA_LL1
PORT SDMA1_TX_D = LL_Tx_Data, DIR = O, BUS = SDMA_LL1, VEC = [0:31]
PORT SDMA1_TX_Rem = LL_Tx_Rem, DIR = O, BUS = SDMA_LL1, VEC = [0:3]
PORT SDMA1_TX_SOF = LL_Tx_SOF_n, DIR = O, BUS = SDMA_LL1
PORT SDMA1_TX_EOF = LL_Tx_EOF_n, DIR = O, BUS = SDMA_LL1
PORT SDMA1_TX_SOP = LL_Tx_SOP_n, DIR = O, BUS = SDMA_LL1
PORT SDMA1_TX_EOP = LL_Tx_EOP_n, DIR = O, BUS = SDMA_LL1
PORT SDMA1_TX_Src_Rdy = LL_Tx_SrcRdy_n, DIR = O, BUS = SDMA_LL1
PORT SDMA1_TX_Dst_Rdy = LL_Tx_DstRdy_n, DIR = I, BUS = SDMA_LL1, INITIALVAL = VCC
PORT SDMA1_RX_D = LL_Rx_Data, DIR = I, BUS = SDMA_LL1, INITIALVAL = GND, VEC = [0:31]
PORT SDMA1_RX_Rem = LL_Rx_Rem, DIR = I, BUS = SDMA_LL1, INITIALVAL = VCC, VEC = [0:3]
PORT SDMA1_RX_SOF = LL_Rx_SOF_n, DIR = I, BUS = SDMA_LL1, INITIALVAL = VCC
PORT SDMA1_RX_EOF = LL_Rx_EOF_n, DIR = I, BUS = SDMA_LL1, INITIALVAL = VCC
PORT SDMA1_RX_SOP = LL_Rx_SOP_n, DIR = I, BUS = SDMA_LL1, INITIALVAL = VCC
PORT SDMA1_RX_EOP = LL_Rx_EOP_n, DIR = I, BUS = SDMA_LL1, INITIALVAL = VCC
PORT SDMA1_RX_Src_Rdy = LL_Rx_SrcRdy_n, DIR = I, BUS = SDMA_LL1, INITIALVAL = VCC
PORT SDMA1_RX_Dst_Rdy = LL_Rx_DstRdy_n, DIR = O, BUS = SDMA_LL1
PORT SDMA_CTRL1_Clk = "", DIR = I, BUS = SDMA_CTRL1, SIGIS = CLK, INITIALVAL = VCC
PORT SDMA_CTRL1_Rst = SPLB_Rst, DIR = I, BUS = SDMA_CTRL1, SIGIS = RST
PORT SDMA_CTRL1_PLB_ABus = PLB_ABus, DIR = I, BUS = SDMA_CTRL1, VEC = [0:31]
PORT SDMA_CTRL1_PLB_PAValid = PLB_PAValid, DIR = I, BUS = SDMA_CTRL1
PORT SDMA_CTRL1_PLB_SAValid = PLB_SAValid, DIR = I, BUS = SDMA_CTRL1
PORT SDMA_CTRL1_PLB_masterID = PLB_masterID, DIR = I, BUS = SDMA_CTRL1, VEC = [0:(C_SDMA_CTRL1_MID_WIDTH-1)]
PORT SDMA_CTRL1_PLB_RNW = PLB_RNW, DIR = I, BUS = SDMA_CTRL1
PORT SDMA_CTRL1_PLB_BE = PLB_BE, DIR = I, BUS = SDMA_CTRL1, VEC = [0:((C_SDMA_CTRL1_DWIDTH/8)-1)]
PORT SDMA_CTRL1_PLB_UABus = PLB_UABus, DIR = I, BUS = SDMA_CTRL1, VEC = [0:31]
PORT SDMA_CTRL1_PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SDMA_CTRL1
PORT SDMA_CTRL1_PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SDMA_CTRL1
PORT SDMA_CTRL1_PLB_abort = PLB_abort, DIR = I, BUS = SDMA_CTRL1
PORT SDMA_CTRL1_PLB_busLock = PLB_busLock, DIR = I, BUS = SDMA_CTRL1
PORT SDMA_CTRL1_PLB_MSize = PLB_MSize, DIR = I, BUS = SDMA_CTRL1, VEC = [0:1]
PORT SDMA_CTRL1_PLB_size = PLB_size, DIR = I, BUS = SDMA_CTRL1, VEC = [0:3]
PORT SDMA_CTRL1_PLB_type = PLB_type, DIR = I, BUS = SDMA_CTRL1, VEC = [0:2]
PORT SDMA_CTRL1_PLB_lockErr = PLB_lockErr, DIR = I, BUS = SDMA_CTRL1
PORT SDMA_CTRL1_PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SDMA_CTRL1
PORT SDMA_CTRL1_PLB_wrPendPri = PLB_wrPendPri, DIR = I, BUS = SDMA_CTRL1, VEC = [0:1]
PORT SDMA_CTRL1_PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SDMA_CTRL1
PORT SDMA_CTRL1_PLB_rdPendPri = PLB_rdPendPri, DIR = I, BUS = SDMA_CTRL1, VEC = [0:1]
PORT SDMA_CTRL1_PLB_reqPri = PLB_reqPri, DIR = I, BUS = SDMA_CTRL1, VEC = [0:1]
PORT SDMA_CTRL1_PLB_TAttribute = PLB_TAttribute, DIR = I, BUS = SDMA_CTRL1, VEC = [0:15]
PORT SDMA_CTRL1_PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SDMA_CTRL1
PORT SDMA_CTRL1_PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SDMA_CTRL1
PORT SDMA_CTRL1_PLB_wrDBus = PLB_wrDBus, DIR = I, BUS = SDMA_CTRL1, VEC = [0:(C_SDMA_CTRL1_DWIDTH-1)]
PORT SDMA_CTRL1_Sl_addrAck = Sl_addrAck, DIR = O, BUS = SDMA_CTRL1
PORT SDMA_CTRL1_Sl_SSize = Sl_SSize, DIR = O, BUS = SDMA_CTRL1, VEC = [0:1]
PORT SDMA_CTRL1_Sl_wait = Sl_wait, DIR = O, BUS = SDMA_CTRL1
PORT SDMA_CTRL1_Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SDMA_CTRL1
PORT SDMA_CTRL1_Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SDMA_CTRL1
PORT SDMA_CTRL1_Sl_wrComp = Sl_wrComp, DIR = O, BUS = SDMA_CTRL1
PORT SDMA_CTRL1_Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SDMA_CTRL1
PORT SDMA_CTRL1_Sl_rdDBus = Sl_rdDBus, DIR = O, BUS = SDMA_CTRL1, VEC = [0:(C_SDMA_CTRL1_DWIDTH-1)]
PORT SDMA_CTRL1_Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, BUS = SDMA_CTRL1, VEC = [0:3]
PORT SDMA_CTRL1_Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SDMA_CTRL1
PORT SDMA_CTRL1_Sl_rdComp = Sl_rdComp, DIR = O, BUS = SDMA_CTRL1
PORT SDMA_CTRL1_Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SDMA_CTRL1
PORT SDMA_CTRL1_Sl_MBusy = Sl_MBusy, DIR = O, BUS = SDMA_CTRL1, VEC = [0:(C_SDMA_CTRL1_NUM_MASTERS-1)]
PORT SDMA_CTRL1_Sl_MRdErr = Sl_MRdErr, DIR = O, BUS = SDMA_CTRL1, VEC = [0:(C_SDMA_CTRL1_NUM_MASTERS-1)]
PORT SDMA_CTRL1_Sl_MWrErr = Sl_MWrErr, DIR = O, BUS = SDMA_CTRL1, VEC = [0:(C_SDMA_CTRL1_NUM_MASTERS-1)]
PORT SDMA_CTRL1_Sl_MIRQ = Sl_MIRQ, DIR = O, BUS = SDMA_CTRL1, VEC = [0:(C_SDMA_CTRL1_NUM_MASTERS-1)]
PORT PIM1_Addr = Addr, DIR = I, BUS = MPMC_PIM1, VEC = [31:0]
PORT PIM1_AddrReq = AddrReq, DIR = I, BUS = MPMC_PIM1
PORT PIM1_AddrAck = AddrAck, DIR = O, BUS = MPMC_PIM1
PORT PIM1_RNW = RNW, DIR = I, BUS = MPMC_PIM1
PORT PIM1_Size = Size, DIR = I, BUS = MPMC_PIM1, VEC = [3:0]
PORT PIM1_RdModWr = RdModWr, DIR = I, BUS = MPMC_PIM1
PORT PIM1_WrFIFO_Data = WrFIFO_Data, DIR = I, BUS = MPMC_PIM1, VEC = [(C_PIM1_DATA_WIDTH-1):0]
PORT PIM1_WrFIFO_BE = WrFIFO_BE, DIR = I, BUS = MPMC_PIM1, VEC = [(C_PIM1_DATA_WIDTH/8-1):0]
PORT PIM1_WrFIFO_Push = WrFIFO_Push, DIR = I, BUS = MPMC_PIM1
PORT PIM1_RdFIFO_Data = RdFIFO_Data, DIR = O, BUS = MPMC_PIM1, VEC = [(C_PIM1_DATA_WIDTH-1):0]
PORT PIM1_RdFIFO_Pop = RdFIFO_Pop, DIR = I, BUS = MPMC_PIM1
PORT PIM1_RdFIFO_RdWdAddr = RdFIFO_RdWdAddr, DIR = O, BUS = MPMC_PIM1, VEC = [3:0]
PORT PIM1_WrFIFO_Empty = WrFIFO_Empty, DIR = O, BUS = MPMC_PIM1
PORT PIM1_WrFIFO_AlmostFull = WrFIFO_AlmostFull, DIR = O, BUS = MPMC_PIM1
PORT PIM1_WrFIFO_Flush = WrFIFO_Flush, DIR = I, BUS = MPMC_PIM1
PORT PIM1_RdFIFO_Empty = RdFIFO_Empty, DIR = O, BUS = MPMC_PIM1
PORT PIM1_RdFIFO_Flush = RdFIFO_Flush, DIR = I, BUS = MPMC_PIM1
PORT PIM1_RdFIFO_Latency = RDFIFO_Latency, DIR = O, BUS = MPMC_PIM1, VEC = [1:0]
PORT PIM1_InitDone = InitDone, DIR = O, BUS = MPMC_PIM1
PORT PPC440MC1_MIMCReadNotWrite = MIMCREADNOTWRITE, DIR = I, BUS = PPC440MC1
PORT PPC440MC1_MIMCAddress = MIMCADDRESS, DIR = I, BUS = PPC440MC1, VEC = [0:35]
PORT PPC440MC1_MIMCAddressValid = MIMCADDRESSVALID, DIR = I, BUS = PPC440MC1
PORT PPC440MC1_MIMCWriteData = MIMCWRITEDATA, DIR = I, BUS = PPC440MC1, VEC = [0:127]
PORT PPC440MC1_MIMCWriteDataValid = MIMCWRITEDATAVALID, DIR = I, BUS = PPC440MC1
PORT PPC440MC1_MIMCByteEnable = MIMCBYTEENABLE, DIR = I, BUS = PPC440MC1, VEC = [0:15]
PORT PPC440MC1_MIMCBankConflict = MIMCBANKCONFLICT, DIR = I, BUS = PPC440MC1
PORT PPC440MC1_MIMCRowConflict = MIMCROWCONFLICT, DIR = I, BUS = PPC440MC1
PORT PPC440MC1_MCMIReadData = MCMIREADDATA, DIR = O, BUS = PPC440MC1, VEC = [0:127]
PORT PPC440MC1_MCMIReadDataValid = MCMIREADDATAVALID, DIR = O, BUS = PPC440MC1
PORT PPC440MC1_MCMIReadDataErr = MCMIREADDATAERR, DIR = O, BUS = PPC440MC1
PORT PPC440MC1_MCMIAddrReadyToAccept = MCMIADDRREADYTOACCEPT, DIR = O, BUS = PPC440MC1
PORT VFBC1_Cmd_Clk = cmd_clk, DIR = I, BUS = VFBC1
PORT VFBC1_Cmd_Reset = cmd_reset, DIR = I, BUS = VFBC1
PORT VFBC1_Cmd_Data = cmd_data, DIR = I, BUS = VFBC1, VEC = [31:0]
PORT VFBC1_Cmd_Write = cmd_write, DIR = I, BUS = VFBC1
PORT VFBC1_Cmd_End = cmd_end, DIR = I, BUS = VFBC1
PORT VFBC1_Cmd_Full = cmd_full, DIR = O, BUS = VFBC1
PORT VFBC1_Cmd_Almost_Full = cmd_almost_full, DIR = O, BUS = VFBC1
PORT VFBC1_Cmd_Idle = cmd_idle, DIR = O, BUS = VFBC1
PORT VFBC1_Wd_Clk = wd_clk, DIR = I, BUS = VFBC1
PORT VFBC1_Wd_Reset = wd_reset, DIR = I, BUS = VFBC1
PORT VFBC1_Wd_Write = wd_write, DIR = I, BUS = VFBC1
PORT VFBC1_Wd_End_Burst = wd_end_burst, DIR = I, BUS = VFBC1
PORT VFBC1_Wd_Flush = wd_flush, DIR = I, BUS = VFBC1
PORT VFBC1_Wd_Data = wd_data, DIR = I, BUS = VFBC1, VEC = [C_VFBC1_RDWD_DATA_WIDTH-1:0]
PORT VFBC1_Wd_Data_BE = wd_data_be, DIR = I, BUS = VFBC1, VEC = [C_VFBC1_RDWD_DATA_WIDTH/8-1:0]
PORT VFBC1_Wd_Full = wd_full, DIR = O, BUS = VFBC1
PORT VFBC1_Wd_Almost_Full = wd_almost_full, DIR = O, BUS = VFBC1
PORT VFBC1_Rd_Clk = rd_clk, DIR = I, BUS = VFBC1
PORT VFBC1_Rd_Reset = rd_reset, DIR = I, BUS = VFBC1
PORT VFBC1_Rd_Read = rd_read, DIR = I, BUS = VFBC1
PORT VFBC1_Rd_End_Burst = rd_end_burst, DIR = I, BUS = VFBC1
PORT VFBC1_Rd_Flush = rd_flush, DIR = I, BUS = VFBC1
PORT VFBC1_Rd_Data = rd_data, DIR = O, BUS = VFBC1, VEC = [C_VFBC1_RDWD_DATA_WIDTH-1:0]
PORT VFBC1_Rd_Empty = rd_empty, DIR = O, BUS = VFBC1
PORT VFBC1_Rd_Almost_Empty = rd_almost_empty, DIR = O, BUS = VFBC1
PORT MCB1_cmd_clk = cmd_clk, DIR = I, BUS = MCB1
PORT MCB1_cmd_en = cmd_en, DIR = I, BUS = MCB1
PORT MCB1_cmd_instr = cmd_instr, DIR = I, BUS = MCB1, VEC = [2:0]
PORT MCB1_cmd_bl = cmd_bl, DIR = I, BUS = MCB1, VEC = [5:0]
PORT MCB1_cmd_byte_addr = cmd_byte_addr, DIR = I, BUS = MCB1, VEC = [29:0]
PORT MCB1_cmd_empty = cmd_empty, DIR = O, BUS = MCB1
PORT MCB1_cmd_full = cmd_full, DIR = O, BUS = MCB1
PORT MCB1_wr_clk = wr_clk, DIR = I, BUS = MCB1
PORT MCB1_wr_en = wr_en, DIR = I, BUS = MCB1
PORT MCB1_wr_mask = wr_mask, DIR = I, BUS = MCB1, VEC = [C_PIM1_DATA_WIDTH/8-1:0]
PORT MCB1_wr_data = wr_data, DIR = I, BUS = MCB1, VEC = [C_PIM1_DATA_WIDTH-1:0]
PORT MCB1_wr_full = wr_full, DIR = O, BUS = MCB1
PORT MCB1_wr_empty = wr_empty, DIR = O, BUS = MCB1
PORT MCB1_wr_count = wr_count, DIR = O, BUS = MCB1, VEC = [6:0]
PORT MCB1_wr_underrun = wr_underrun, DIR = O, BUS = MCB1
PORT MCB1_wr_error = wr_error, DIR = O, BUS = MCB1
PORT MCB1_rd_clk = rd_clk, DIR = I, BUS = MCB1
PORT MCB1_rd_en = rd_en, DIR = I, BUS = MCB1
PORT MCB1_rd_data = rd_data, DIR = O, BUS = MCB1, VEC = [C_PIM1_DATA_WIDTH-1:0]
PORT MCB1_rd_full = rd_full, DIR = O, BUS = MCB1
PORT MCB1_rd_empty = rd_empty, DIR = O, BUS = MCB1
PORT MCB1_rd_count = rd_count, DIR = O, BUS = MCB1, VEC = [6:0]
PORT MCB1_rd_overflow = rd_overflow, DIR = O, BUS = MCB1
PORT MCB1_rd_error = rd_error, DIR = O, BUS = MCB1
PORT FSL2_M_Clk = FSL_M_Clk, DIR = I, BUS = XCL2, SIGIS = CLK, INITIALVAL = VCC
PORT FSL2_M_Write = FSL_M_Write, DIR = I, BUS = XCL2
PORT FSL2_M_Data = FSL_M_Data, DIR = I, BUS = XCL2, VEC = [0:31]
PORT FSL2_M_Control = FSL_M_Control, DIR = I, BUS = XCL2
PORT FSL2_M_Full = FSL_M_Full, DIR = O, BUS = XCL2
PORT FSL2_S_Clk = FSL_S_Clk, DIR = I, BUS = XCL2
PORT FSL2_S_Read = FSL_S_Read, DIR = I, BUS = XCL2
PORT FSL2_S_Data = FSL_S_Data, DIR = O, BUS = XCL2, VEC = [0:31]
PORT FSL2_S_Control = FSL_S_Control, DIR = O, BUS = XCL2
PORT FSL2_S_Exists = FSL_S_Exists, DIR = O, BUS = XCL2
PORT FSL2_B_M_Clk = FSL_M_Clk, DIR = I, BUS = XCL2_B, SIGIS = CLK, INITIALVAL = VCC
PORT FSL2_B_M_Write = FSL_M_Write, DIR = I, BUS = XCL2_B
PORT FSL2_B_M_Data = FSL_M_Data, DIR = I, BUS = XCL2_B, VEC = [0:31]
PORT FSL2_B_M_Control = FSL_M_Control, DIR = I, BUS = XCL2_B
PORT FSL2_B_M_Full = FSL_M_Full, DIR = O, BUS = XCL2_B
PORT FSL2_B_S_Clk = FSL_S_Clk, DIR = I, BUS = XCL2_B
PORT FSL2_B_S_Read = FSL_S_Read, DIR = I, BUS = XCL2_B
PORT FSL2_B_S_Data = FSL_S_Data, DIR = O, BUS = XCL2_B, VEC = [0:31]
PORT FSL2_B_S_Control = FSL_S_Control, DIR = O, BUS = XCL2_B
PORT FSL2_B_S_Exists = FSL_S_Exists, DIR = O, BUS = XCL2_B
PORT SPLB2_Clk = "", DIR = I, BUS = SPLB2, SIGIS = CLK, INITIALVAL = VCC
PORT SPLB2_Rst = SPLB_Rst, DIR = I, BUS = SPLB2, SIGIS = RST
PORT SPLB2_PLB_ABus = PLB_ABus, DIR = I, BUS = SPLB2, VEC = [0:31]
PORT SPLB2_PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB2
PORT SPLB2_PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB2
PORT SPLB2_PLB_masterID = PLB_masterID, DIR = I, BUS = SPLB2, VEC = [0:(C_SPLB2_MID_WIDTH-1)]
PORT SPLB2_PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB2
PORT SPLB2_PLB_BE = PLB_BE, DIR = I, BUS = SPLB2, VEC = [0:((C_SPLB2_DWIDTH/8)-1)]
PORT SPLB2_PLB_UABus = PLB_UABus, DIR = I, BUS = SPLB2, VEC = [0:31]
PORT SPLB2_PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB2
PORT SPLB2_PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB2
PORT SPLB2_PLB_abort = PLB_abort, DIR = I, BUS = SPLB2
PORT SPLB2_PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB2
PORT SPLB2_PLB_MSize = PLB_MSize, DIR = I, BUS = SPLB2, VEC = [0:1]
PORT SPLB2_PLB_size = PLB_size, DIR = I, BUS = SPLB2, VEC = [0:3]
PORT SPLB2_PLB_type = PLB_type, DIR = I, BUS = SPLB2, VEC = [0:2]
PORT SPLB2_PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB2
PORT SPLB2_PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB2
PORT SPLB2_PLB_wrPendPri = PLB_wrPendPri, DIR = I, BUS = SPLB2, VEC = [0:1]
PORT SPLB2_PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB2
PORT SPLB2_PLB_rdPendPri = PLB_rdPendPri, DIR = I, BUS = SPLB2, VEC = [0:1]
PORT SPLB2_PLB_reqPri = PLB_reqPri, DIR = I, BUS = SPLB2, VEC = [0:1]
PORT SPLB2_PLB_TAttribute = PLB_TAttribute, DIR = I, BUS = SPLB2, VEC = [0:15]
PORT SPLB2_PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB2
PORT SPLB2_PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB2
PORT SPLB2_PLB_wrDBus = PLB_wrDBus, DIR = I, BUS = SPLB2, VEC = [0:(C_SPLB2_DWIDTH-1)]
PORT SPLB2_Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB2
PORT SPLB2_Sl_SSize = Sl_SSize, DIR = O, BUS = SPLB2, VEC = [0:1]
PORT SPLB2_Sl_wait = Sl_wait, DIR = O, BUS = SPLB2
PORT SPLB2_Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB2
PORT SPLB2_Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB2
PORT SPLB2_Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB2
PORT SPLB2_Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB2
PORT SPLB2_Sl_rdDBus = Sl_rdDBus, DIR = O, BUS = SPLB2, VEC = [0:(C_SPLB2_DWIDTH-1)]
PORT SPLB2_Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, BUS = SPLB2, VEC = [0:3]
PORT SPLB2_Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB2
PORT SPLB2_Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB2
PORT SPLB2_Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB2
PORT SPLB2_Sl_MBusy = Sl_MBusy, DIR = O, BUS = SPLB2, VEC = [0:(C_SPLB2_NUM_MASTERS-1)]
PORT SPLB2_Sl_MRdErr = Sl_MRdErr, DIR = O, BUS = SPLB2, VEC = [0:(C_SPLB2_NUM_MASTERS-1)]
PORT SPLB2_Sl_MWrErr = Sl_MWrErr, DIR = O, BUS = SPLB2, VEC = [0:(C_SPLB2_NUM_MASTERS-1)]
PORT SPLB2_Sl_MIRQ = Sl_MIRQ, DIR = O, BUS = SPLB2, VEC = [0:(C_SPLB2_NUM_MASTERS-1)]
PORT SDMA2_Clk = "", DIR = I, SIGIS = CLK, ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 3), ASSIGNMENT = REQUIRE
PORT SDMA2_Rx_IntOut = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 3)
PORT SDMA2_Tx_IntOut = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 3)
PORT SDMA2_RstOut = LL_RST_ACK, DIR = O, BUS = SDMA_LL2
PORT SDMA2_TX_D = LL_Tx_Data, DIR = O, BUS = SDMA_LL2, VEC = [0:31]
PORT SDMA2_TX_Rem = LL_Tx_Rem, DIR = O, BUS = SDMA_LL2, VEC = [0:3]
PORT SDMA2_TX_SOF = LL_Tx_SOF_n, DIR = O, BUS = SDMA_LL2
PORT SDMA2_TX_EOF = LL_Tx_EOF_n, DIR = O, BUS = SDMA_LL2
PORT SDMA2_TX_SOP = LL_Tx_SOP_n, DIR = O, BUS = SDMA_LL2
PORT SDMA2_TX_EOP = LL_Tx_EOP_n, DIR = O, BUS = SDMA_LL2
PORT SDMA2_TX_Src_Rdy = LL_Tx_SrcRdy_n, DIR = O, BUS = SDMA_LL2
PORT SDMA2_TX_Dst_Rdy = LL_Tx_DstRdy_n, DIR = I, BUS = SDMA_LL2, INITIALVAL = VCC
PORT SDMA2_RX_D = LL_Rx_Data, DIR = I, BUS = SDMA_LL2, INITIALVAL = GND, VEC = [0:31]
PORT SDMA2_RX_Rem = LL_Rx_Rem, DIR = I, BUS = SDMA_LL2, INITIALVAL = VCC, VEC = [0:3]
PORT SDMA2_RX_SOF = LL_Rx_SOF_n, DIR = I, BUS = SDMA_LL2, INITIALVAL = VCC
PORT SDMA2_RX_EOF = LL_Rx_EOF_n, DIR = I, BUS = SDMA_LL2, INITIALVAL = VCC
PORT SDMA2_RX_SOP = LL_Rx_SOP_n, DIR = I, BUS = SDMA_LL2, INITIALVAL = VCC
PORT SDMA2_RX_EOP = LL_Rx_EOP_n, DIR = I, BUS = SDMA_LL2, INITIALVAL = VCC
PORT SDMA2_RX_Src_Rdy = LL_Rx_SrcRdy_n, DIR = I, BUS = SDMA_LL2, INITIALVAL = VCC
PORT SDMA2_RX_Dst_Rdy = LL_Rx_DstRdy_n, DIR = O, BUS = SDMA_LL2
PORT SDMA_CTRL2_Clk = "", DIR = I, BUS = SDMA_CTRL2, SIGIS = CLK, INITIALVAL = VCC
PORT SDMA_CTRL2_Rst = SPLB_Rst, DIR = I, BUS = SDMA_CTRL2, SIGIS = RST
PORT SDMA_CTRL2_PLB_ABus = PLB_ABus, DIR = I, BUS = SDMA_CTRL2, VEC = [0:31]
PORT SDMA_CTRL2_PLB_PAValid = PLB_PAValid, DIR = I, BUS = SDMA_CTRL2
PORT SDMA_CTRL2_PLB_SAValid = PLB_SAValid, DIR = I, BUS = SDMA_CTRL2
PORT SDMA_CTRL2_PLB_masterID = PLB_masterID, DIR = I, BUS = SDMA_CTRL2, VEC = [0:(C_SDMA_CTRL2_MID_WIDTH-1)]
PORT SDMA_CTRL2_PLB_RNW = PLB_RNW, DIR = I, BUS = SDMA_CTRL2
PORT SDMA_CTRL2_PLB_BE = PLB_BE, DIR = I, BUS = SDMA_CTRL2, VEC = [0:((C_SDMA_CTRL2_DWIDTH/8)-1)]
PORT SDMA_CTRL2_PLB_UABus = PLB_UABus, DIR = I, BUS = SDMA_CTRL2, VEC = [0:31]
PORT SDMA_CTRL2_PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SDMA_CTRL2
PORT SDMA_CTRL2_PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SDMA_CTRL2
PORT SDMA_CTRL2_PLB_abort = PLB_abort, DIR = I, BUS = SDMA_CTRL2
PORT SDMA_CTRL2_PLB_busLock = PLB_busLock, DIR = I, BUS = SDMA_CTRL2
PORT SDMA_CTRL2_PLB_MSize = PLB_MSize, DIR = I, BUS = SDMA_CTRL2, VEC = [0:1]
PORT SDMA_CTRL2_PLB_size = PLB_size, DIR = I, BUS = SDMA_CTRL2, VEC = [0:3]
PORT SDMA_CTRL2_PLB_type = PLB_type, DIR = I, BUS = SDMA_CTRL2, VEC = [0:2]
PORT SDMA_CTRL2_PLB_lockErr = PLB_lockErr, DIR = I, BUS = SDMA_CTRL2
PORT SDMA_CTRL2_PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SDMA_CTRL2
PORT SDMA_CTRL2_PLB_wrPendPri = PLB_wrPendPri, DIR = I, BUS = SDMA_CTRL2, VEC = [0:1]
PORT SDMA_CTRL2_PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SDMA_CTRL2
PORT SDMA_CTRL2_PLB_rdPendPri = PLB_rdPendPri, DIR = I, BUS = SDMA_CTRL2, VEC = [0:1]
PORT SDMA_CTRL2_PLB_reqPri = PLB_reqPri, DIR = I, BUS = SDMA_CTRL2, VEC = [0:1]
PORT SDMA_CTRL2_PLB_TAttribute = PLB_TAttribute, DIR = I, BUS = SDMA_CTRL2, VEC = [0:15]
PORT SDMA_CTRL2_PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SDMA_CTRL2
PORT SDMA_CTRL2_PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SDMA_CTRL2
PORT SDMA_CTRL2_PLB_wrDBus = PLB_wrDBus, DIR = I, BUS = SDMA_CTRL2, VEC = [0:(C_SDMA_CTRL2_DWIDTH-1)]
PORT SDMA_CTRL2_Sl_addrAck = Sl_addrAck, DIR = O, BUS = SDMA_CTRL2
PORT SDMA_CTRL2_Sl_SSize = Sl_SSize, DIR = O, BUS = SDMA_CTRL2, VEC = [0:1]
PORT SDMA_CTRL2_Sl_wait = Sl_wait, DIR = O, BUS = SDMA_CTRL2
PORT SDMA_CTRL2_Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SDMA_CTRL2
PORT SDMA_CTRL2_Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SDMA_CTRL2
PORT SDMA_CTRL2_Sl_wrComp = Sl_wrComp, DIR = O, BUS = SDMA_CTRL2
PORT SDMA_CTRL2_Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SDMA_CTRL2
PORT SDMA_CTRL2_Sl_rdDBus = Sl_rdDBus, DIR = O, BUS = SDMA_CTRL2, VEC = [0:(C_SDMA_CTRL2_DWIDTH-1)]
PORT SDMA_CTRL2_Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, BUS = SDMA_CTRL2, VEC = [0:3]
PORT SDMA_CTRL2_Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SDMA_CTRL2
PORT SDMA_CTRL2_Sl_rdComp = Sl_rdComp, DIR = O, BUS = SDMA_CTRL2
PORT SDMA_CTRL2_Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SDMA_CTRL2
PORT SDMA_CTRL2_Sl_MBusy = Sl_MBusy, DIR = O, BUS = SDMA_CTRL2, VEC = [0:(C_SDMA_CTRL2_NUM_MASTERS-1)]
PORT SDMA_CTRL2_Sl_MRdErr = Sl_MRdErr, DIR = O, BUS = SDMA_CTRL2, VEC = [0:(C_SDMA_CTRL2_NUM_MASTERS-1)]
PORT SDMA_CTRL2_Sl_MWrErr = Sl_MWrErr, DIR = O, BUS = SDMA_CTRL2, VEC = [0:(C_SDMA_CTRL2_NUM_MASTERS-1)]
PORT SDMA_CTRL2_Sl_MIRQ = Sl_MIRQ, DIR = O, BUS = SDMA_CTRL2, VEC = [0:(C_SDMA_CTRL2_NUM_MASTERS-1)]
PORT PIM2_Addr = Addr, DIR = I, BUS = MPMC_PIM2, VEC = [31:0]
PORT PIM2_AddrReq = AddrReq, DIR = I, BUS = MPMC_PIM2
PORT PIM2_AddrAck = AddrAck, DIR = O, BUS = MPMC_PIM2
PORT PIM2_RNW = RNW, DIR = I, BUS = MPMC_PIM2
PORT PIM2_Size = Size, DIR = I, BUS = MPMC_PIM2, VEC = [3:0]
PORT PIM2_RdModWr = RdModWr, DIR = I, BUS = MPMC_PIM2
PORT PIM2_WrFIFO_Data = WrFIFO_Data, DIR = I, BUS = MPMC_PIM2, VEC = [(C_PIM2_DATA_WIDTH-1):0]
PORT PIM2_WrFIFO_BE = WrFIFO_BE, DIR = I, BUS = MPMC_PIM2, VEC = [(C_PIM2_DATA_WIDTH/8-1):0]
PORT PIM2_WrFIFO_Push = WrFIFO_Push, DIR = I, BUS = MPMC_PIM2
PORT PIM2_RdFIFO_Data = RdFIFO_Data, DIR = O, BUS = MPMC_PIM2, VEC = [(C_PIM2_DATA_WIDTH-1):0]
PORT PIM2_RdFIFO_Pop = RdFIFO_Pop, DIR = I, BUS = MPMC_PIM2
PORT PIM2_RdFIFO_RdWdAddr = RdFIFO_RdWdAddr, DIR = O, BUS = MPMC_PIM2, VEC = [3:0]
PORT PIM2_WrFIFO_Empty = WrFIFO_Empty, DIR = O, BUS = MPMC_PIM2
PORT PIM2_WrFIFO_AlmostFull = WrFIFO_AlmostFull, DIR = O, BUS = MPMC_PIM2
PORT PIM2_WrFIFO_Flush = WrFIFO_Flush, DIR = I, BUS = MPMC_PIM2
PORT PIM2_RdFIFO_Empty = RdFIFO_Empty, DIR = O, BUS = MPMC_PIM2
PORT PIM2_RdFIFO_Flush = RdFIFO_Flush, DIR = I, BUS = MPMC_PIM2
PORT PIM2_RdFIFO_Latency = RDFIFO_Latency, DIR = O, BUS = MPMC_PIM2, VEC = [1:0]
PORT PIM2_InitDone = InitDone, DIR = O, BUS = MPMC_PIM2
PORT PPC440MC2_MIMCReadNotWrite = MIMCREADNOTWRITE, DIR = I, BUS = PPC440MC2
PORT PPC440MC2_MIMCAddress = MIMCADDRESS, DIR = I, BUS = PPC440MC2, VEC = [0:35]
PORT PPC440MC2_MIMCAddressValid = MIMCADDRESSVALID, DIR = I, BUS = PPC440MC2
PORT PPC440MC2_MIMCWriteData = MIMCWRITEDATA, DIR = I, BUS = PPC440MC2, VEC = [0:127]
PORT PPC440MC2_MIMCWriteDataValid = MIMCWRITEDATAVALID, DIR = I, BUS = PPC440MC2
PORT PPC440MC2_MIMCByteEnable = MIMCBYTEENABLE, DIR = I, BUS = PPC440MC2, VEC = [0:15]
PORT PPC440MC2_MIMCBankConflict = MIMCBANKCONFLICT, DIR = I, BUS = PPC440MC2
PORT PPC440MC2_MIMCRowConflict = MIMCROWCONFLICT, DIR = I, BUS = PPC440MC2
PORT PPC440MC2_MCMIReadData = MCMIREADDATA, DIR = O, BUS = PPC440MC2, VEC = [0:127]
PORT PPC440MC2_MCMIReadDataValid = MCMIREADDATAVALID, DIR = O, BUS = PPC440MC2
PORT PPC440MC2_MCMIReadDataErr = MCMIREADDATAERR, DIR = O, BUS = PPC440MC2
PORT PPC440MC2_MCMIAddrReadyToAccept = MCMIADDRREADYTOACCEPT, DIR = O, BUS = PPC440MC2
PORT VFBC2_Cmd_Clk = cmd_clk, DIR = I, BUS = VFBC2
PORT VFBC2_Cmd_Reset = cmd_reset, DIR = I, BUS = VFBC2
PORT VFBC2_Cmd_Data = cmd_data, DIR = I, BUS = VFBC2, VEC = [31:0]
PORT VFBC2_Cmd_Write = cmd_write, DIR = I, BUS = VFBC2
PORT VFBC2_Cmd_End = cmd_end, DIR = I, BUS = VFBC2
PORT VFBC2_Cmd_Full = cmd_full, DIR = O, BUS = VFBC2
PORT VFBC2_Cmd_Almost_Full = cmd_almost_full, DIR = O, BUS = VFBC2
PORT VFBC2_Cmd_Idle = cmd_idle, DIR = O, BUS = VFBC2
PORT VFBC2_Wd_Clk = wd_clk, DIR = I, BUS = VFBC2
PORT VFBC2_Wd_Reset = wd_reset, DIR = I, BUS = VFBC2
PORT VFBC2_Wd_Write = wd_write, DIR = I, BUS = VFBC2
PORT VFBC2_Wd_End_Burst = wd_end_burst, DIR = I, BUS = VFBC2
PORT VFBC2_Wd_Flush = wd_flush, DIR = I, BUS = VFBC2
PORT VFBC2_Wd_Data = wd_data, DIR = I, BUS = VFBC2, VEC = [C_VFBC2_RDWD_DATA_WIDTH-1:0]
PORT VFBC2_Wd_Data_BE = wd_data_be, DIR = I, BUS = VFBC2, VEC = [C_VFBC2_RDWD_DATA_WIDTH/8-1:0]
PORT VFBC2_Wd_Full = wd_full, DIR = O, BUS = VFBC2
PORT VFBC2_Wd_Almost_Full = wd_almost_full, DIR = O, BUS = VFBC2
PORT VFBC2_Rd_Clk = rd_clk, DIR = I, BUS = VFBC2
PORT VFBC2_Rd_Reset = rd_reset, DIR = I, BUS = VFBC2
PORT VFBC2_Rd_Read = rd_read, DIR = I, BUS = VFBC2
PORT VFBC2_Rd_End_Burst = rd_end_burst, DIR = I, BUS = VFBC2
PORT VFBC2_Rd_Flush = rd_flush, DIR = I, BUS = VFBC2
PORT VFBC2_Rd_Data = rd_data, DIR = O, BUS = VFBC2, VEC = [C_VFBC2_RDWD_DATA_WIDTH-1:0]
PORT VFBC2_Rd_Empty = rd_empty, DIR = O, BUS = VFBC2
PORT VFBC2_Rd_Almost_Empty = rd_almost_empty, DIR = O, BUS = VFBC2
PORT MCB2_cmd_clk = cmd_clk, DIR = I, BUS = MCB2
PORT MCB2_cmd_en = cmd_en, DIR = I, BUS = MCB2
PORT MCB2_cmd_instr = cmd_instr, DIR = I, BUS = MCB2, VEC = [2:0]
PORT MCB2_cmd_bl = cmd_bl, DIR = I, BUS = MCB2, VEC = [5:0]
PORT MCB2_cmd_byte_addr = cmd_byte_addr, DIR = I, BUS = MCB2, VEC = [29:0]
PORT MCB2_cmd_empty = cmd_empty, DIR = O, BUS = MCB2
PORT MCB2_cmd_full = cmd_full, DIR = O, BUS = MCB2
PORT MCB2_wr_clk = wr_clk, DIR = I, BUS = MCB2
PORT MCB2_wr_en = wr_en, DIR = I, BUS = MCB2
PORT MCB2_wr_mask = wr_mask, DIR = I, BUS = MCB2, VEC = [C_PIM2_DATA_WIDTH/8-1:0]
PORT MCB2_wr_data = wr_data, DIR = I, BUS = MCB2, VEC = [C_PIM2_DATA_WIDTH-1:0]
PORT MCB2_wr_full = wr_full, DIR = O, BUS = MCB2
PORT MCB2_wr_empty = wr_empty, DIR = O, BUS = MCB2
PORT MCB2_wr_count = wr_count, DIR = O, BUS = MCB2, VEC = [6:0]
PORT MCB2_wr_underrun = wr_underrun, DIR = O, BUS = MCB2
PORT MCB2_wr_error = wr_error, DIR = O, BUS = MCB2
PORT MCB2_rd_clk = rd_clk, DIR = I, BUS = MCB2
PORT MCB2_rd_en = rd_en, DIR = I, BUS = MCB2
PORT MCB2_rd_data = rd_data, DIR = O, BUS = MCB2, VEC = [C_PIM2_DATA_WIDTH-1:0]
PORT MCB2_rd_full = rd_full, DIR = O, BUS = MCB2
PORT MCB2_rd_empty = rd_empty, DIR = O, BUS = MCB2
PORT MCB2_rd_count = rd_count, DIR = O, BUS = MCB2, VEC = [6:0]
PORT MCB2_rd_overflow = rd_overflow, DIR = O, BUS = MCB2
PORT MCB2_rd_error = rd_error, DIR = O, BUS = MCB2
PORT FSL3_M_Clk = FSL_M_Clk, DIR = I, BUS = XCL3, SIGIS = CLK, INITIALVAL = VCC
PORT FSL3_M_Write = FSL_M_Write, DIR = I, BUS = XCL3
PORT FSL3_M_Data = FSL_M_Data, DIR = I, BUS = XCL3, VEC = [0:31]
PORT FSL3_M_Control = FSL_M_Control, DIR = I, BUS = XCL3
PORT FSL3_M_Full = FSL_M_Full, DIR = O, BUS = XCL3
PORT FSL3_S_Clk = FSL_S_Clk, DIR = I, BUS = XCL3
PORT FSL3_S_Read = FSL_S_Read, DIR = I, BUS = XCL3
PORT FSL3_S_Data = FSL_S_Data, DIR = O, BUS = XCL3, VEC = [0:31]
PORT FSL3_S_Control = FSL_S_Control, DIR = O, BUS = XCL3
PORT FSL3_S_Exists = FSL_S_Exists, DIR = O, BUS = XCL3
PORT FSL3_B_M_Clk = FSL_M_Clk, DIR = I, BUS = XCL3_B, SIGIS = CLK, INITIALVAL = VCC
PORT FSL3_B_M_Write = FSL_M_Write, DIR = I, BUS = XCL3_B
PORT FSL3_B_M_Data = FSL_M_Data, DIR = I, BUS = XCL3_B, VEC = [0:31]
PORT FSL3_B_M_Control = FSL_M_Control, DIR = I, BUS = XCL3_B
PORT FSL3_B_M_Full = FSL_M_Full, DIR = O, BUS = XCL3_B
PORT FSL3_B_S_Clk = FSL_S_Clk, DIR = I, BUS = XCL3_B
PORT FSL3_B_S_Read = FSL_S_Read, DIR = I, BUS = XCL3_B
PORT FSL3_B_S_Data = FSL_S_Data, DIR = O, BUS = XCL3_B, VEC = [0:31]
PORT FSL3_B_S_Control = FSL_S_Control, DIR = O, BUS = XCL3_B
PORT FSL3_B_S_Exists = FSL_S_Exists, DIR = O, BUS = XCL3_B
PORT SPLB3_Clk = "", DIR = I, BUS = SPLB3, SIGIS = CLK, INITIALVAL = VCC
PORT SPLB3_Rst = SPLB_Rst, DIR = I, BUS = SPLB3, SIGIS = RST
PORT SPLB3_PLB_ABus = PLB_ABus, DIR = I, BUS = SPLB3, VEC = [0:31]
PORT SPLB3_PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB3
PORT SPLB3_PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB3
PORT SPLB3_PLB_masterID = PLB_masterID, DIR = I, BUS = SPLB3, VEC = [0:(C_SPLB3_MID_WIDTH-1)]
PORT SPLB3_PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB3
PORT SPLB3_PLB_BE = PLB_BE, DIR = I, BUS = SPLB3, VEC = [0:((C_SPLB3_DWIDTH/8)-1)]
PORT SPLB3_PLB_UABus = PLB_UABus, DIR = I, BUS = SPLB3, VEC = [0:31]
PORT SPLB3_PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB3
PORT SPLB3_PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB3
PORT SPLB3_PLB_abort = PLB_abort, DIR = I, BUS = SPLB3
PORT SPLB3_PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB3
PORT SPLB3_PLB_MSize = PLB_MSize, DIR = I, BUS = SPLB3, VEC = [0:1]
PORT SPLB3_PLB_size = PLB_size, DIR = I, BUS = SPLB3, VEC = [0:3]
PORT SPLB3_PLB_type = PLB_type, DIR = I, BUS = SPLB3, VEC = [0:2]
PORT SPLB3_PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB3
PORT SPLB3_PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB3
PORT SPLB3_PLB_wrPendPri = PLB_wrPendPri, DIR = I, BUS = SPLB3, VEC = [0:1]
PORT SPLB3_PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB3
PORT SPLB3_PLB_rdPendPri = PLB_rdPendPri, DIR = I, BUS = SPLB3, VEC = [0:1]
PORT SPLB3_PLB_reqPri = PLB_reqPri, DIR = I, BUS = SPLB3, VEC = [0:1]
PORT SPLB3_PLB_TAttribute = PLB_TAttribute, DIR = I, BUS = SPLB3, VEC = [0:15]
PORT SPLB3_PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB3
PORT SPLB3_PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB3
PORT SPLB3_PLB_wrDBus = PLB_wrDBus, DIR = I, BUS = SPLB3, VEC = [0:(C_SPLB3_DWIDTH-1)]
PORT SPLB3_Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB3
PORT SPLB3_Sl_SSize = Sl_SSize, DIR = O, BUS = SPLB3, VEC = [0:1]
PORT SPLB3_Sl_wait = Sl_wait, DIR = O, BUS = SPLB3
PORT SPLB3_Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB3
PORT SPLB3_Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB3
PORT SPLB3_Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB3
PORT SPLB3_Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB3
PORT SPLB3_Sl_rdDBus = Sl_rdDBus, DIR = O, BUS = SPLB3, VEC = [0:(C_SPLB3_DWIDTH-1)]
PORT SPLB3_Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, BUS = SPLB3, VEC = [0:3]
PORT SPLB3_Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB3
PORT SPLB3_Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB3
PORT SPLB3_Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB3
PORT SPLB3_Sl_MBusy = Sl_MBusy, DIR = O, BUS = SPLB3, VEC = [0:(C_SPLB3_NUM_MASTERS-1)]
PORT SPLB3_Sl_MRdErr = Sl_MRdErr, DIR = O, BUS = SPLB3, VEC = [0:(C_SPLB3_NUM_MASTERS-1)]
PORT SPLB3_Sl_MWrErr = Sl_MWrErr, DIR = O, BUS = SPLB3, VEC = [0:(C_SPLB3_NUM_MASTERS-1)]
PORT SPLB3_Sl_MIRQ = Sl_MIRQ, DIR = O, BUS = SPLB3, VEC = [0:(C_SPLB3_NUM_MASTERS-1)]
PORT SDMA3_Clk = "", DIR = I, SIGIS = CLK, ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 3), ASSIGNMENT = REQUIRE
PORT SDMA3_Rx_IntOut = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 3)
PORT SDMA3_Tx_IntOut = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 3)
PORT SDMA3_RstOut = LL_RST_ACK, DIR = O, BUS = SDMA_LL3
PORT SDMA3_TX_D = LL_Tx_Data, DIR = O, BUS = SDMA_LL3, VEC = [0:31]
PORT SDMA3_TX_Rem = LL_Tx_Rem, DIR = O, BUS = SDMA_LL3, VEC = [0:3]
PORT SDMA3_TX_SOF = LL_Tx_SOF_n, DIR = O, BUS = SDMA_LL3
PORT SDMA3_TX_EOF = LL_Tx_EOF_n, DIR = O, BUS = SDMA_LL3
PORT SDMA3_TX_SOP = LL_Tx_SOP_n, DIR = O, BUS = SDMA_LL3
PORT SDMA3_TX_EOP = LL_Tx_EOP_n, DIR = O, BUS = SDMA_LL3
PORT SDMA3_TX_Src_Rdy = LL_Tx_SrcRdy_n, DIR = O, BUS = SDMA_LL3
PORT SDMA3_TX_Dst_Rdy = LL_Tx_DstRdy_n, DIR = I, BUS = SDMA_LL3, INITIALVAL = VCC
PORT SDMA3_RX_D = LL_Rx_Data, DIR = I, BUS = SDMA_LL3, INITIALVAL = GND, VEC = [0:31]
PORT SDMA3_RX_Rem = LL_Rx_Rem, DIR = I, BUS = SDMA_LL3, INITIALVAL = VCC, VEC = [0:3]
PORT SDMA3_RX_SOF = LL_Rx_SOF_n, DIR = I, BUS = SDMA_LL3, INITIALVAL = VCC
PORT SDMA3_RX_EOF = LL_Rx_EOF_n, DIR = I, BUS = SDMA_LL3, INITIALVAL = VCC
PORT SDMA3_RX_SOP = LL_Rx_SOP_n, DIR = I, BUS = SDMA_LL3, INITIALVAL = VCC
PORT SDMA3_RX_EOP = LL_Rx_EOP_n, DIR = I, BUS = SDMA_LL3, INITIALVAL = VCC
PORT SDMA3_RX_Src_Rdy = LL_Rx_SrcRdy_n, DIR = I, BUS = SDMA_LL3, INITIALVAL = VCC
PORT SDMA3_RX_Dst_Rdy = LL_Rx_DstRdy_n, DIR = O, BUS = SDMA_LL3
PORT SDMA_CTRL3_Clk = "", DIR = I, BUS = SDMA_CTRL3, SIGIS = CLK, INITIALVAL = VCC
PORT SDMA_CTRL3_Rst = SPLB_Rst, DIR = I, BUS = SDMA_CTRL3, SIGIS = RST
PORT SDMA_CTRL3_PLB_ABus = PLB_ABus, DIR = I, BUS = SDMA_CTRL3, VEC = [0:31]
PORT SDMA_CTRL3_PLB_PAValid = PLB_PAValid, DIR = I, BUS = SDMA_CTRL3
PORT SDMA_CTRL3_PLB_SAValid = PLB_SAValid, DIR = I, BUS = SDMA_CTRL3
PORT SDMA_CTRL3_PLB_masterID = PLB_masterID, DIR = I, BUS = SDMA_CTRL3, VEC = [0:(C_SDMA_CTRL3_MID_WIDTH-1)]
PORT SDMA_CTRL3_PLB_RNW = PLB_RNW, DIR = I, BUS = SDMA_CTRL3
PORT SDMA_CTRL3_PLB_BE = PLB_BE, DIR = I, BUS = SDMA_CTRL3, VEC = [0:((C_SDMA_CTRL3_DWIDTH/8)-1)]
PORT SDMA_CTRL3_PLB_UABus = PLB_UABus, DIR = I, BUS = SDMA_CTRL3, VEC = [0:31]
PORT SDMA_CTRL3_PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SDMA_CTRL3
PORT SDMA_CTRL3_PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SDMA_CTRL3
PORT SDMA_CTRL3_PLB_abort = PLB_abort, DIR = I, BUS = SDMA_CTRL3
PORT SDMA_CTRL3_PLB_busLock = PLB_busLock, DIR = I, BUS = SDMA_CTRL3
PORT SDMA_CTRL3_PLB_MSize = PLB_MSize, DIR = I, BUS = SDMA_CTRL3, VEC = [0:1]
PORT SDMA_CTRL3_PLB_size = PLB_size, DIR = I, BUS = SDMA_CTRL3, VEC = [0:3]
PORT SDMA_CTRL3_PLB_type = PLB_type, DIR = I, BUS = SDMA_CTRL3, VEC = [0:2]
PORT SDMA_CTRL3_PLB_lockErr = PLB_lockErr, DIR = I, BUS = SDMA_CTRL3
PORT SDMA_CTRL3_PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SDMA_CTRL3
PORT SDMA_CTRL3_PLB_wrPendPri = PLB_wrPendPri, DIR = I, BUS = SDMA_CTRL3, VEC = [0:1]
PORT SDMA_CTRL3_PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SDMA_CTRL3
PORT SDMA_CTRL3_PLB_rdPendPri = PLB_rdPendPri, DIR = I, BUS = SDMA_CTRL3, VEC = [0:1]
PORT SDMA_CTRL3_PLB_reqPri = PLB_reqPri, DIR = I, BUS = SDMA_CTRL3, VEC = [0:1]
PORT SDMA_CTRL3_PLB_TAttribute = PLB_TAttribute, DIR = I, BUS = SDMA_CTRL3, VEC = [0:15]
PORT SDMA_CTRL3_PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SDMA_CTRL3
PORT SDMA_CTRL3_PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SDMA_CTRL3
PORT SDMA_CTRL3_PLB_wrDBus = PLB_wrDBus, DIR = I, BUS = SDMA_CTRL3, VEC = [0:(C_SDMA_CTRL3_DWIDTH-1)]
PORT SDMA_CTRL3_Sl_addrAck = Sl_addrAck, DIR = O, BUS = SDMA_CTRL3
PORT SDMA_CTRL3_Sl_SSize = Sl_SSize, DIR = O, BUS = SDMA_CTRL3, VEC = [0:1]
PORT SDMA_CTRL3_Sl_wait = Sl_wait, DIR = O, BUS = SDMA_CTRL3
PORT SDMA_CTRL3_Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SDMA_CTRL3
PORT SDMA_CTRL3_Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SDMA_CTRL3
PORT SDMA_CTRL3_Sl_wrComp = Sl_wrComp, DIR = O, BUS = SDMA_CTRL3
PORT SDMA_CTRL3_Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SDMA_CTRL3
PORT SDMA_CTRL3_Sl_rdDBus = Sl_rdDBus, DIR = O, BUS = SDMA_CTRL3, VEC = [0:(C_SDMA_CTRL3_DWIDTH-1)]
PORT SDMA_CTRL3_Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, BUS = SDMA_CTRL3, VEC = [0:3]
PORT SDMA_CTRL3_Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SDMA_CTRL3
PORT SDMA_CTRL3_Sl_rdComp = Sl_rdComp, DIR = O, BUS = SDMA_CTRL3
PORT SDMA_CTRL3_Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SDMA_CTRL3
PORT SDMA_CTRL3_Sl_MBusy = Sl_MBusy, DIR = O, BUS = SDMA_CTRL3, VEC = [0:(C_SDMA_CTRL3_NUM_MASTERS-1)]
PORT SDMA_CTRL3_Sl_MRdErr = Sl_MRdErr, DIR = O, BUS = SDMA_CTRL3, VEC = [0:(C_SDMA_CTRL3_NUM_MASTERS-1)]
PORT SDMA_CTRL3_Sl_MWrErr = Sl_MWrErr, DIR = O, BUS = SDMA_CTRL3, VEC = [0:(C_SDMA_CTRL3_NUM_MASTERS-1)]
PORT SDMA_CTRL3_Sl_MIRQ = Sl_MIRQ, DIR = O, BUS = SDMA_CTRL3, VEC = [0:(C_SDMA_CTRL3_NUM_MASTERS-1)]
PORT PIM3_Addr = Addr, DIR = I, BUS = MPMC_PIM3, VEC = [31:0]
PORT PIM3_AddrReq = AddrReq, DIR = I, BUS = MPMC_PIM3
PORT PIM3_AddrAck = AddrAck, DIR = O, BUS = MPMC_PIM3
PORT PIM3_RNW = RNW, DIR = I, BUS = MPMC_PIM3
PORT PIM3_Size = Size, DIR = I, BUS = MPMC_PIM3, VEC = [3:0]
PORT PIM3_RdModWr = RdModWr, DIR = I, BUS = MPMC_PIM3
PORT PIM3_WrFIFO_Data = WrFIFO_Data, DIR = I, BUS = MPMC_PIM3, VEC = [(C_PIM3_DATA_WIDTH-1):0]
PORT PIM3_WrFIFO_BE = WrFIFO_BE, DIR = I, BUS = MPMC_PIM3, VEC = [(C_PIM3_DATA_WIDTH/8-1):0]
PORT PIM3_WrFIFO_Push = WrFIFO_Push, DIR = I, BUS = MPMC_PIM3
PORT PIM3_RdFIFO_Data = RdFIFO_Data, DIR = O, BUS = MPMC_PIM3, VEC = [(C_PIM3_DATA_WIDTH-1):0]
PORT PIM3_RdFIFO_Pop = RdFIFO_Pop, DIR = I, BUS = MPMC_PIM3
PORT PIM3_RdFIFO_RdWdAddr = RdFIFO_RdWdAddr, DIR = O, BUS = MPMC_PIM3, VEC = [3:0]
PORT PIM3_WrFIFO_Empty = WrFIFO_Empty, DIR = O, BUS = MPMC_PIM3
PORT PIM3_WrFIFO_AlmostFull = WrFIFO_AlmostFull, DIR = O, BUS = MPMC_PIM3
PORT PIM3_WrFIFO_Flush = WrFIFO_Flush, DIR = I, BUS = MPMC_PIM3
PORT PIM3_RdFIFO_Empty = RdFIFO_Empty, DIR = O, BUS = MPMC_PIM3
PORT PIM3_RdFIFO_Flush = RdFIFO_Flush, DIR = I, BUS = MPMC_PIM3
PORT PIM3_RdFIFO_Latency = RDFIFO_Latency, DIR = O, BUS = MPMC_PIM3, VEC = [1:0]
PORT PIM3_InitDone = InitDone, DIR = O, BUS = MPMC_PIM3
PORT PPC440MC3_MIMCReadNotWrite = MIMCREADNOTWRITE, DIR = I, BUS = PPC440MC3
PORT PPC440MC3_MIMCAddress = MIMCADDRESS, DIR = I, BUS = PPC440MC3, VEC = [0:35]
PORT PPC440MC3_MIMCAddressValid = MIMCADDRESSVALID, DIR = I, BUS = PPC440MC3
PORT PPC440MC3_MIMCWriteData = MIMCWRITEDATA, DIR = I, BUS = PPC440MC3, VEC = [0:127]
PORT PPC440MC3_MIMCWriteDataValid = MIMCWRITEDATAVALID, DIR = I, BUS = PPC440MC3
PORT PPC440MC3_MIMCByteEnable = MIMCBYTEENABLE, DIR = I, BUS = PPC440MC3, VEC = [0:15]
PORT PPC440MC3_MIMCBankConflict = MIMCBANKCONFLICT, DIR = I, BUS = PPC440MC3
PORT PPC440MC3_MIMCRowConflict = MIMCROWCONFLICT, DIR = I, BUS = PPC440MC3
PORT PPC440MC3_MCMIReadData = MCMIREADDATA, DIR = O, BUS = PPC440MC3, VEC = [0:127]
PORT PPC440MC3_MCMIReadDataValid = MCMIREADDATAVALID, DIR = O, BUS = PPC440MC3
PORT PPC440MC3_MCMIReadDataErr = MCMIREADDATAERR, DIR = O, BUS = PPC440MC3
PORT PPC440MC3_MCMIAddrReadyToAccept = MCMIADDRREADYTOACCEPT, DIR = O, BUS = PPC440MC3
PORT VFBC3_Cmd_Clk = cmd_clk, DIR = I, BUS = VFBC3
PORT VFBC3_Cmd_Reset = cmd_reset, DIR = I, BUS = VFBC3
PORT VFBC3_Cmd_Data = cmd_data, DIR = I, BUS = VFBC3, VEC = [31:0]
PORT VFBC3_Cmd_Write = cmd_write, DIR = I, BUS = VFBC3
PORT VFBC3_Cmd_End = cmd_end, DIR = I, BUS = VFBC3
PORT VFBC3_Cmd_Full = cmd_full, DIR = O, BUS = VFBC3
PORT VFBC3_Cmd_Almost_Full = cmd_almost_full, DIR = O, BUS = VFBC3
PORT VFBC3_Cmd_Idle = cmd_idle, DIR = O, BUS = VFBC3
PORT VFBC3_Wd_Clk = wd_clk, DIR = I, BUS = VFBC3
PORT VFBC3_Wd_Reset = wd_reset, DIR = I, BUS = VFBC3
PORT VFBC3_Wd_Write = wd_write, DIR = I, BUS = VFBC3
PORT VFBC3_Wd_End_Burst = wd_end_burst, DIR = I, BUS = VFBC3
PORT VFBC3_Wd_Flush = wd_flush, DIR = I, BUS = VFBC3
PORT VFBC3_Wd_Data = wd_data, DIR = I, BUS = VFBC3, VEC = [C_VFBC3_RDWD_DATA_WIDTH-1:0]
PORT VFBC3_Wd_Data_BE = wd_data_be, DIR = I, BUS = VFBC3, VEC = [C_VFBC3_RDWD_DATA_WIDTH/8-1:0]
PORT VFBC3_Wd_Full = wd_full, DIR = O, BUS = VFBC3
PORT VFBC3_Wd_Almost_Full = wd_almost_full, DIR = O, BUS = VFBC3
PORT VFBC3_Rd_Clk = rd_clk, DIR = I, BUS = VFBC3
PORT VFBC3_Rd_Reset = rd_reset, DIR = I, BUS = VFBC3
PORT VFBC3_Rd_Read = rd_read, DIR = I, BUS = VFBC3
PORT VFBC3_Rd_End_Burst = rd_end_burst, DIR = I, BUS = VFBC3
PORT VFBC3_Rd_Flush = rd_flush, DIR = I, BUS = VFBC3
PORT VFBC3_Rd_Data = rd_data, DIR = O, BUS = VFBC3, VEC = [C_VFBC3_RDWD_DATA_WIDTH-1:0]
PORT VFBC3_Rd_Empty = rd_empty, DIR = O, BUS = VFBC3
PORT VFBC3_Rd_Almost_Empty = rd_almost_empty, DIR = O, BUS = VFBC3
PORT MCB3_cmd_clk = cmd_clk, DIR = I, BUS = MCB3
PORT MCB3_cmd_en = cmd_en, DIR = I, BUS = MCB3
PORT MCB3_cmd_instr = cmd_instr, DIR = I, BUS = MCB3, VEC = [2:0]
PORT MCB3_cmd_bl = cmd_bl, DIR = I, BUS = MCB3, VEC = [5:0]
PORT MCB3_cmd_byte_addr = cmd_byte_addr, DIR = I, BUS = MCB3, VEC = [29:0]
PORT MCB3_cmd_empty = cmd_empty, DIR = O, BUS = MCB3
PORT MCB3_cmd_full = cmd_full, DIR = O, BUS = MCB3
PORT MCB3_wr_clk = wr_clk, DIR = I, BUS = MCB3
PORT MCB3_wr_en = wr_en, DIR = I, BUS = MCB3
PORT MCB3_wr_mask = wr_mask, DIR = I, BUS = MCB3, VEC = [C_PIM3_DATA_WIDTH/8-1:0]
PORT MCB3_wr_data = wr_data, DIR = I, BUS = MCB3, VEC = [C_PIM3_DATA_WIDTH-1:0]
PORT MCB3_wr_full = wr_full, DIR = O, BUS = MCB3
PORT MCB3_wr_empty = wr_empty, DIR = O, BUS = MCB3
PORT MCB3_wr_count = wr_count, DIR = O, BUS = MCB3, VEC = [6:0]
PORT MCB3_wr_underrun = wr_underrun, DIR = O, BUS = MCB3
PORT MCB3_wr_error = wr_error, DIR = O, BUS = MCB3
PORT MCB3_rd_clk = rd_clk, DIR = I, BUS = MCB3
PORT MCB3_rd_en = rd_en, DIR = I, BUS = MCB3
PORT MCB3_rd_data = rd_data, DIR = O, BUS = MCB3, VEC = [C_PIM3_DATA_WIDTH-1:0]
PORT MCB3_rd_full = rd_full, DIR = O, BUS = MCB3
PORT MCB3_rd_empty = rd_empty, DIR = O, BUS = MCB3
PORT MCB3_rd_count = rd_count, DIR = O, BUS = MCB3, VEC = [6:0]
PORT MCB3_rd_overflow = rd_overflow, DIR = O, BUS = MCB3
PORT MCB3_rd_error = rd_error, DIR = O, BUS = MCB3
PORT FSL4_M_Clk = FSL_M_Clk, DIR = I, BUS = XCL4, SIGIS = CLK, INITIALVAL = VCC
PORT FSL4_M_Write = FSL_M_Write, DIR = I, BUS = XCL4
PORT FSL4_M_Data = FSL_M_Data, DIR = I, BUS = XCL4, VEC = [0:31]
PORT FSL4_M_Control = FSL_M_Control, DIR = I, BUS = XCL4
PORT FSL4_M_Full = FSL_M_Full, DIR = O, BUS = XCL4
PORT FSL4_S_Clk = FSL_S_Clk, DIR = I, BUS = XCL4
PORT FSL4_S_Read = FSL_S_Read, DIR = I, BUS = XCL4
PORT FSL4_S_Data = FSL_S_Data, DIR = O, BUS = XCL4, VEC = [0:31]
PORT FSL4_S_Control = FSL_S_Control, DIR = O, BUS = XCL4
PORT FSL4_S_Exists = FSL_S_Exists, DIR = O, BUS = XCL4
PORT FSL4_B_M_Clk = FSL_M_Clk, DIR = I, BUS = XCL4_B, SIGIS = CLK, INITIALVAL = VCC
PORT FSL4_B_M_Write = FSL_M_Write, DIR = I, BUS = XCL4_B
PORT FSL4_B_M_Data = FSL_M_Data, DIR = I, BUS = XCL4_B, VEC = [0:31]
PORT FSL4_B_M_Control = FSL_M_Control, DIR = I, BUS = XCL4_B
PORT FSL4_B_M_Full = FSL_M_Full, DIR = O, BUS = XCL4_B
PORT FSL4_B_S_Clk = FSL_S_Clk, DIR = I, BUS = XCL4_B
PORT FSL4_B_S_Read = FSL_S_Read, DIR = I, BUS = XCL4_B
PORT FSL4_B_S_Data = FSL_S_Data, DIR = O, BUS = XCL4_B, VEC = [0:31]
PORT FSL4_B_S_Control = FSL_S_Control, DIR = O, BUS = XCL4_B
PORT FSL4_B_S_Exists = FSL_S_Exists, DIR = O, BUS = XCL4_B
PORT SPLB4_Clk = "", DIR = I, BUS = SPLB4, SIGIS = CLK, INITIALVAL = VCC
PORT SPLB4_Rst = SPLB_Rst, DIR = I, BUS = SPLB4, SIGIS = RST
PORT SPLB4_PLB_ABus = PLB_ABus, DIR = I, BUS = SPLB4, VEC = [0:31]
PORT SPLB4_PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB4
PORT SPLB4_PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB4
PORT SPLB4_PLB_masterID = PLB_masterID, DIR = I, BUS = SPLB4, VEC = [0:(C_SPLB4_MID_WIDTH-1)]
PORT SPLB4_PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB4
PORT SPLB4_PLB_BE = PLB_BE, DIR = I, BUS = SPLB4, VEC = [0:((C_SPLB4_DWIDTH/8)-1)]
PORT SPLB4_PLB_UABus = PLB_UABus, DIR = I, BUS = SPLB4, VEC = [0:31]
PORT SPLB4_PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB4
PORT SPLB4_PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB4
PORT SPLB4_PLB_abort = PLB_abort, DIR = I, BUS = SPLB4
PORT SPLB4_PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB4
PORT SPLB4_PLB_MSize = PLB_MSize, DIR = I, BUS = SPLB4, VEC = [0:1]
PORT SPLB4_PLB_size = PLB_size, DIR = I, BUS = SPLB4, VEC = [0:3]
PORT SPLB4_PLB_type = PLB_type, DIR = I, BUS = SPLB4, VEC = [0:2]
PORT SPLB4_PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB4
PORT SPLB4_PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB4
PORT SPLB4_PLB_wrPendPri = PLB_wrPendPri, DIR = I, BUS = SPLB4, VEC = [0:1]
PORT SPLB4_PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB4
PORT SPLB4_PLB_rdPendPri = PLB_rdPendPri, DIR = I, BUS = SPLB4, VEC = [0:1]
PORT SPLB4_PLB_reqPri = PLB_reqPri, DIR = I, BUS = SPLB4, VEC = [0:1]
PORT SPLB4_PLB_TAttribute = PLB_TAttribute, DIR = I, BUS = SPLB4, VEC = [0:15]
PORT SPLB4_PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB4
PORT SPLB4_PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB4
PORT SPLB4_PLB_wrDBus = PLB_wrDBus, DIR = I, BUS = SPLB4, VEC = [0:(C_SPLB4_DWIDTH-1)]
PORT SPLB4_Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB4
PORT SPLB4_Sl_SSize = Sl_SSize, DIR = O, BUS = SPLB4, VEC = [0:1]
PORT SPLB4_Sl_wait = Sl_wait, DIR = O, BUS = SPLB4
PORT SPLB4_Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB4
PORT SPLB4_Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB4
PORT SPLB4_Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB4
PORT SPLB4_Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB4
PORT SPLB4_Sl_rdDBus = Sl_rdDBus, DIR = O, BUS = SPLB4, VEC = [0:(C_SPLB4_DWIDTH-1)]
PORT SPLB4_Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, BUS = SPLB4, VEC = [0:3]
PORT SPLB4_Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB4
PORT SPLB4_Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB4
PORT SPLB4_Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB4
PORT SPLB4_Sl_MBusy = Sl_MBusy, DIR = O, BUS = SPLB4, VEC = [0:(C_SPLB4_NUM_MASTERS-1)]
PORT SPLB4_Sl_MRdErr = Sl_MRdErr, DIR = O, BUS = SPLB4, VEC = [0:(C_SPLB4_NUM_MASTERS-1)]
PORT SPLB4_Sl_MWrErr = Sl_MWrErr, DIR = O, BUS = SPLB4, VEC = [0:(C_SPLB4_NUM_MASTERS-1)]
PORT SPLB4_Sl_MIRQ = Sl_MIRQ, DIR = O, BUS = SPLB4, VEC = [0:(C_SPLB4_NUM_MASTERS-1)]
PORT SDMA4_Clk = "", DIR = I, SIGIS = CLK, ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 3), ASSIGNMENT = REQUIRE
PORT SDMA4_Rx_IntOut = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 3)
PORT SDMA4_Tx_IntOut = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 3)
PORT SDMA4_RstOut = LL_RST_ACK, DIR = O, BUS = SDMA_LL4
PORT SDMA4_TX_D = LL_Tx_Data, DIR = O, BUS = SDMA_LL4, VEC = [0:31]
PORT SDMA4_TX_Rem = LL_Tx_Rem, DIR = O, BUS = SDMA_LL4, VEC = [0:3]
PORT SDMA4_TX_SOF = LL_Tx_SOF_n, DIR = O, BUS = SDMA_LL4
PORT SDMA4_TX_EOF = LL_Tx_EOF_n, DIR = O, BUS = SDMA_LL4
PORT SDMA4_TX_SOP = LL_Tx_SOP_n, DIR = O, BUS = SDMA_LL4
PORT SDMA4_TX_EOP = LL_Tx_EOP_n, DIR = O, BUS = SDMA_LL4
PORT SDMA4_TX_Src_Rdy = LL_Tx_SrcRdy_n, DIR = O, BUS = SDMA_LL4
PORT SDMA4_TX_Dst_Rdy = LL_Tx_DstRdy_n, DIR = I, BUS = SDMA_LL4, INITIALVAL = VCC
PORT SDMA4_RX_D = LL_Rx_Data, DIR = I, BUS = SDMA_LL4, INITIALVAL = GND, VEC = [0:31]
PORT SDMA4_RX_Rem = LL_Rx_Rem, DIR = I, BUS = SDMA_LL4, INITIALVAL = VCC, VEC = [0:3]
PORT SDMA4_RX_SOF = LL_Rx_SOF_n, DIR = I, BUS = SDMA_LL4, INITIALVAL = VCC
PORT SDMA4_RX_EOF = LL_Rx_EOF_n, DIR = I, BUS = SDMA_LL4, INITIALVAL = VCC
PORT SDMA4_RX_SOP = LL_Rx_SOP_n, DIR = I, BUS = SDMA_LL4, INITIALVAL = VCC
PORT SDMA4_RX_EOP = LL_Rx_EOP_n, DIR = I, BUS = SDMA_LL4, INITIALVAL = VCC
PORT SDMA4_RX_Src_Rdy = LL_Rx_SrcRdy_n, DIR = I, BUS = SDMA_LL4, INITIALVAL = VCC
PORT SDMA4_RX_Dst_Rdy = LL_Rx_DstRdy_n, DIR = O, BUS = SDMA_LL4
PORT SDMA_CTRL4_Clk = "", DIR = I, BUS = SDMA_CTRL4, SIGIS = CLK, INITIALVAL = VCC
PORT SDMA_CTRL4_Rst = SPLB_Rst, DIR = I, BUS = SDMA_CTRL4, SIGIS = RST
PORT SDMA_CTRL4_PLB_ABus = PLB_ABus, DIR = I, BUS = SDMA_CTRL4, VEC = [0:31]
PORT SDMA_CTRL4_PLB_PAValid = PLB_PAValid, DIR = I, BUS = SDMA_CTRL4
PORT SDMA_CTRL4_PLB_SAValid = PLB_SAValid, DIR = I, BUS = SDMA_CTRL4
PORT SDMA_CTRL4_PLB_masterID = PLB_masterID, DIR = I, BUS = SDMA_CTRL4, VEC = [0:(C_SDMA_CTRL4_MID_WIDTH-1)]
PORT SDMA_CTRL4_PLB_RNW = PLB_RNW, DIR = I, BUS = SDMA_CTRL4
PORT SDMA_CTRL4_PLB_BE = PLB_BE, DIR = I, BUS = SDMA_CTRL4, VEC = [0:((C_SDMA_CTRL4_DWIDTH/8)-1)]
PORT SDMA_CTRL4_PLB_UABus = PLB_UABus, DIR = I, BUS = SDMA_CTRL4, VEC = [0:31]
PORT SDMA_CTRL4_PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SDMA_CTRL4
PORT SDMA_CTRL4_PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SDMA_CTRL4
PORT SDMA_CTRL4_PLB_abort = PLB_abort, DIR = I, BUS = SDMA_CTRL4
PORT SDMA_CTRL4_PLB_busLock = PLB_busLock, DIR = I, BUS = SDMA_CTRL4
PORT SDMA_CTRL4_PLB_MSize = PLB_MSize, DIR = I, BUS = SDMA_CTRL4, VEC = [0:1]
PORT SDMA_CTRL4_PLB_size = PLB_size, DIR = I, BUS = SDMA_CTRL4, VEC = [0:3]
PORT SDMA_CTRL4_PLB_type = PLB_type, DIR = I, BUS = SDMA_CTRL4, VEC = [0:2]
PORT SDMA_CTRL4_PLB_lockErr = PLB_lockErr, DIR = I, BUS = SDMA_CTRL4
PORT SDMA_CTRL4_PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SDMA_CTRL4
PORT SDMA_CTRL4_PLB_wrPendPri = PLB_wrPendPri, DIR = I, BUS = SDMA_CTRL4, VEC = [0:1]
PORT SDMA_CTRL4_PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SDMA_CTRL4
PORT SDMA_CTRL4_PLB_rdPendPri = PLB_rdPendPri, DIR = I, BUS = SDMA_CTRL4, VEC = [0:1]
PORT SDMA_CTRL4_PLB_reqPri = PLB_reqPri, DIR = I, BUS = SDMA_CTRL4, VEC = [0:1]
PORT SDMA_CTRL4_PLB_TAttribute = PLB_TAttribute, DIR = I, BUS = SDMA_CTRL4, VEC = [0:15]
PORT SDMA_CTRL4_PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SDMA_CTRL4
PORT SDMA_CTRL4_PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SDMA_CTRL4
PORT SDMA_CTRL4_PLB_wrDBus = PLB_wrDBus, DIR = I, BUS = SDMA_CTRL4, VEC = [0:(C_SDMA_CTRL4_DWIDTH-1)]
PORT SDMA_CTRL4_Sl_addrAck = Sl_addrAck, DIR = O, BUS = SDMA_CTRL4
PORT SDMA_CTRL4_Sl_SSize = Sl_SSize, DIR = O, BUS = SDMA_CTRL4, VEC = [0:1]
PORT SDMA_CTRL4_Sl_wait = Sl_wait, DIR = O, BUS = SDMA_CTRL4
PORT SDMA_CTRL4_Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SDMA_CTRL4
PORT SDMA_CTRL4_Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SDMA_CTRL4
PORT SDMA_CTRL4_Sl_wrComp = Sl_wrComp, DIR = O, BUS = SDMA_CTRL4
PORT SDMA_CTRL4_Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SDMA_CTRL4
PORT SDMA_CTRL4_Sl_rdDBus = Sl_rdDBus, DIR = O, BUS = SDMA_CTRL4, VEC = [0:(C_SDMA_CTRL4_DWIDTH-1)]
PORT SDMA_CTRL4_Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, BUS = SDMA_CTRL4, VEC = [0:3]
PORT SDMA_CTRL4_Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SDMA_CTRL4
PORT SDMA_CTRL4_Sl_rdComp = Sl_rdComp, DIR = O, BUS = SDMA_CTRL4
PORT SDMA_CTRL4_Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SDMA_CTRL4
PORT SDMA_CTRL4_Sl_MBusy = Sl_MBusy, DIR = O, BUS = SDMA_CTRL4, VEC = [0:(C_SDMA_CTRL4_NUM_MASTERS-1)]
PORT SDMA_CTRL4_Sl_MRdErr = Sl_MRdErr, DIR = O, BUS = SDMA_CTRL4, VEC = [0:(C_SDMA_CTRL4_NUM_MASTERS-1)]
PORT SDMA_CTRL4_Sl_MWrErr = Sl_MWrErr, DIR = O, BUS = SDMA_CTRL4, VEC = [0:(C_SDMA_CTRL4_NUM_MASTERS-1)]
PORT SDMA_CTRL4_Sl_MIRQ = Sl_MIRQ, DIR = O, BUS = SDMA_CTRL4, VEC = [0:(C_SDMA_CTRL4_NUM_MASTERS-1)]
PORT PIM4_Addr = Addr, DIR = I, BUS = MPMC_PIM4, VEC = [31:0]
PORT PIM4_AddrReq = AddrReq, DIR = I, BUS = MPMC_PIM4
PORT PIM4_AddrAck = AddrAck, DIR = O, BUS = MPMC_PIM4
PORT PIM4_RNW = RNW, DIR = I, BUS = MPMC_PIM4
PORT PIM4_Size = Size, DIR = I, BUS = MPMC_PIM4, VEC = [3:0]
PORT PIM4_RdModWr = RdModWr, DIR = I, BUS = MPMC_PIM4
PORT PIM4_WrFIFO_Data = WrFIFO_Data, DIR = I, BUS = MPMC_PIM4, VEC = [(C_PIM4_DATA_WIDTH-1):0]
PORT PIM4_WrFIFO_BE = WrFIFO_BE, DIR = I, BUS = MPMC_PIM4, VEC = [(C_PIM4_DATA_WIDTH/8-1):0]
PORT PIM4_WrFIFO_Push = WrFIFO_Push, DIR = I, BUS = MPMC_PIM4
PORT PIM4_RdFIFO_Data = RdFIFO_Data, DIR = O, BUS = MPMC_PIM4, VEC = [(C_PIM4_DATA_WIDTH-1):0]
PORT PIM4_RdFIFO_Pop = RdFIFO_Pop, DIR = I, BUS = MPMC_PIM4
PORT PIM4_RdFIFO_RdWdAddr = RdFIFO_RdWdAddr, DIR = O, BUS = MPMC_PIM4, VEC = [3:0]
PORT PIM4_WrFIFO_Empty = WrFIFO_Empty, DIR = O, BUS = MPMC_PIM4
PORT PIM4_WrFIFO_AlmostFull = WrFIFO_AlmostFull, DIR = O, BUS = MPMC_PIM4
PORT PIM4_WrFIFO_Flush = WrFIFO_Flush, DIR = I, BUS = MPMC_PIM4
PORT PIM4_RdFIFO_Empty = RdFIFO_Empty, DIR = O, BUS = MPMC_PIM4
PORT PIM4_RdFIFO_Flush = RdFIFO_Flush, DIR = I, BUS = MPMC_PIM4
PORT PIM4_RdFIFO_Latency = RDFIFO_Latency, DIR = O, BUS = MPMC_PIM4, VEC = [1:0]
PORT PIM4_InitDone = InitDone, DIR = O, BUS = MPMC_PIM4
PORT PPC440MC4_MIMCReadNotWrite = MIMCREADNOTWRITE, DIR = I, BUS = PPC440MC4
PORT PPC440MC4_MIMCAddress = MIMCADDRESS, DIR = I, BUS = PPC440MC4, VEC = [0:35]
PORT PPC440MC4_MIMCAddressValid = MIMCADDRESSVALID, DIR = I, BUS = PPC440MC4
PORT PPC440MC4_MIMCWriteData = MIMCWRITEDATA, DIR = I, BUS = PPC440MC4, VEC = [0:127]
PORT PPC440MC4_MIMCWriteDataValid = MIMCWRITEDATAVALID, DIR = I, BUS = PPC440MC4
PORT PPC440MC4_MIMCByteEnable = MIMCBYTEENABLE, DIR = I, BUS = PPC440MC4, VEC = [0:15]
PORT PPC440MC4_MIMCBankConflict = MIMCBANKCONFLICT, DIR = I, BUS = PPC440MC4
PORT PPC440MC4_MIMCRowConflict = MIMCROWCONFLICT, DIR = I, BUS = PPC440MC4
PORT PPC440MC4_MCMIReadData = MCMIREADDATA, DIR = O, BUS = PPC440MC4, VEC = [0:127]
PORT PPC440MC4_MCMIReadDataValid = MCMIREADDATAVALID, DIR = O, BUS = PPC440MC4
PORT PPC440MC4_MCMIReadDataErr = MCMIREADDATAERR, DIR = O, BUS = PPC440MC4
PORT PPC440MC4_MCMIAddrReadyToAccept = MCMIADDRREADYTOACCEPT, DIR = O, BUS = PPC440MC4
PORT VFBC4_Cmd_Clk = cmd_clk, DIR = I, BUS = VFBC4
PORT VFBC4_Cmd_Reset = cmd_reset, DIR = I, BUS = VFBC4
PORT VFBC4_Cmd_Data = cmd_data, DIR = I, BUS = VFBC4, VEC = [31:0]
PORT VFBC4_Cmd_Write = cmd_write, DIR = I, BUS = VFBC4
PORT VFBC4_Cmd_End = cmd_end, DIR = I, BUS = VFBC4
PORT VFBC4_Cmd_Full = cmd_full, DIR = O, BUS = VFBC4
PORT VFBC4_Cmd_Almost_Full = cmd_almost_full, DIR = O, BUS = VFBC4
PORT VFBC4_Cmd_Idle = cmd_idle, DIR = O, BUS = VFBC4
PORT VFBC4_Wd_Clk = wd_clk, DIR = I, BUS = VFBC4
PORT VFBC4_Wd_Reset = wd_reset, DIR = I, BUS = VFBC4
PORT VFBC4_Wd_Write = wd_write, DIR = I, BUS = VFBC4
PORT VFBC4_Wd_End_Burst = wd_end_burst, DIR = I, BUS = VFBC4
PORT VFBC4_Wd_Flush = wd_flush, DIR = I, BUS = VFBC4
PORT VFBC4_Wd_Data = wd_data, DIR = I, BUS = VFBC4, VEC = [C_VFBC4_RDWD_DATA_WIDTH-1:0]
PORT VFBC4_Wd_Data_BE = wd_data_be, DIR = I, BUS = VFBC4, VEC = [C_VFBC4_RDWD_DATA_WIDTH/8-1:0]
PORT VFBC4_Wd_Full = wd_full, DIR = O, BUS = VFBC4
PORT VFBC4_Wd_Almost_Full = wd_almost_full, DIR = O, BUS = VFBC4
PORT VFBC4_Rd_Clk = rd_clk, DIR = I, BUS = VFBC4
PORT VFBC4_Rd_Reset = rd_reset, DIR = I, BUS = VFBC4
PORT VFBC4_Rd_Read = rd_read, DIR = I, BUS = VFBC4
PORT VFBC4_Rd_End_Burst = rd_end_burst, DIR = I, BUS = VFBC4
PORT VFBC4_Rd_Flush = rd_flush, DIR = I, BUS = VFBC4
PORT VFBC4_Rd_Data = rd_data, DIR = O, BUS = VFBC4, VEC = [C_VFBC4_RDWD_DATA_WIDTH-1:0]
PORT VFBC4_Rd_Empty = rd_empty, DIR = O, BUS = VFBC4
PORT VFBC4_Rd_Almost_Empty = rd_almost_empty, DIR = O, BUS = VFBC4
PORT MCB4_cmd_clk = cmd_clk, DIR = I, BUS = MCB4
PORT MCB4_cmd_en = cmd_en, DIR = I, BUS = MCB4
PORT MCB4_cmd_instr = cmd_instr, DIR = I, BUS = MCB4, VEC = [2:0]
PORT MCB4_cmd_bl = cmd_bl, DIR = I, BUS = MCB4, VEC = [5:0]
PORT MCB4_cmd_byte_addr = cmd_byte_addr, DIR = I, BUS = MCB4, VEC = [29:0]
PORT MCB4_cmd_empty = cmd_empty, DIR = O, BUS = MCB4
PORT MCB4_cmd_full = cmd_full, DIR = O, BUS = MCB4
PORT MCB4_wr_clk = wr_clk, DIR = I, BUS = MCB4
PORT MCB4_wr_en = wr_en, DIR = I, BUS = MCB4
PORT MCB4_wr_mask = wr_mask, DIR = I, BUS = MCB4, VEC = [C_PIM4_DATA_WIDTH/8-1:0]
PORT MCB4_wr_data = wr_data, DIR = I, BUS = MCB4, VEC = [C_PIM4_DATA_WIDTH-1:0]
PORT MCB4_wr_full = wr_full, DIR = O, BUS = MCB4
PORT MCB4_wr_empty = wr_empty, DIR = O, BUS = MCB4
PORT MCB4_wr_count = wr_count, DIR = O, BUS = MCB4, VEC = [6:0]
PORT MCB4_wr_underrun = wr_underrun, DIR = O, BUS = MCB4
PORT MCB4_wr_error = wr_error, DIR = O, BUS = MCB4
PORT MCB4_rd_clk = rd_clk, DIR = I, BUS = MCB4
PORT MCB4_rd_en = rd_en, DIR = I, BUS = MCB4
PORT MCB4_rd_data = rd_data, DIR = O, BUS = MCB4, VEC = [C_PIM4_DATA_WIDTH-1:0]
PORT MCB4_rd_full = rd_full, DIR = O, BUS = MCB4
PORT MCB4_rd_empty = rd_empty, DIR = O, BUS = MCB4
PORT MCB4_rd_count = rd_count, DIR = O, BUS = MCB4, VEC = [6:0]
PORT MCB4_rd_overflow = rd_overflow, DIR = O, BUS = MCB4
PORT MCB4_rd_error = rd_error, DIR = O, BUS = MCB4
PORT FSL5_M_Clk = FSL_M_Clk, DIR = I, BUS = XCL5, SIGIS = CLK, INITIALVAL = VCC
PORT FSL5_M_Write = FSL_M_Write, DIR = I, BUS = XCL5
PORT FSL5_M_Data = FSL_M_Data, DIR = I, BUS = XCL5, VEC = [0:31]
PORT FSL5_M_Control = FSL_M_Control, DIR = I, BUS = XCL5
PORT FSL5_M_Full = FSL_M_Full, DIR = O, BUS = XCL5
PORT FSL5_S_Clk = FSL_S_Clk, DIR = I, BUS = XCL5
PORT FSL5_S_Read = FSL_S_Read, DIR = I, BUS = XCL5
PORT FSL5_S_Data = FSL_S_Data, DIR = O, BUS = XCL5, VEC = [0:31]
PORT FSL5_S_Control = FSL_S_Control, DIR = O, BUS = XCL5
PORT FSL5_S_Exists = FSL_S_Exists, DIR = O, BUS = XCL5
PORT FSL5_B_M_Clk = FSL_M_Clk, DIR = I, BUS = XCL5_B, SIGIS = CLK, INITIALVAL = VCC
PORT FSL5_B_M_Write = FSL_M_Write, DIR = I, BUS = XCL5_B
PORT FSL5_B_M_Data = FSL_M_Data, DIR = I, BUS = XCL5_B, VEC = [0:31]
PORT FSL5_B_M_Control = FSL_M_Control, DIR = I, BUS = XCL5_B
PORT FSL5_B_M_Full = FSL_M_Full, DIR = O, BUS = XCL5_B
PORT FSL5_B_S_Clk = FSL_S_Clk, DIR = I, BUS = XCL5_B
PORT FSL5_B_S_Read = FSL_S_Read, DIR = I, BUS = XCL5_B
PORT FSL5_B_S_Data = FSL_S_Data, DIR = O, BUS = XCL5_B, VEC = [0:31]
PORT FSL5_B_S_Control = FSL_S_Control, DIR = O, BUS = XCL5_B
PORT FSL5_B_S_Exists = FSL_S_Exists, DIR = O, BUS = XCL5_B
PORT SPLB5_Clk = "", DIR = I, BUS = SPLB5, SIGIS = CLK, INITIALVAL = VCC
PORT SPLB5_Rst = SPLB_Rst, DIR = I, BUS = SPLB5, SIGIS = RST
PORT SPLB5_PLB_ABus = PLB_ABus, DIR = I, BUS = SPLB5, VEC = [0:31]
PORT SPLB5_PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB5
PORT SPLB5_PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB5
PORT SPLB5_PLB_masterID = PLB_masterID, DIR = I, BUS = SPLB5, VEC = [0:(C_SPLB5_MID_WIDTH-1)]
PORT SPLB5_PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB5
PORT SPLB5_PLB_BE = PLB_BE, DIR = I, BUS = SPLB5, VEC = [0:((C_SPLB5_DWIDTH/8)-1)]
PORT SPLB5_PLB_UABus = PLB_UABus, DIR = I, BUS = SPLB5, VEC = [0:31]
PORT SPLB5_PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB5
PORT SPLB5_PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB5
PORT SPLB5_PLB_abort = PLB_abort, DIR = I, BUS = SPLB5
PORT SPLB5_PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB5
PORT SPLB5_PLB_MSize = PLB_MSize, DIR = I, BUS = SPLB5, VEC = [0:1]
PORT SPLB5_PLB_size = PLB_size, DIR = I, BUS = SPLB5, VEC = [0:3]
PORT SPLB5_PLB_type = PLB_type, DIR = I, BUS = SPLB5, VEC = [0:2]
PORT SPLB5_PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB5
PORT SPLB5_PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB5
PORT SPLB5_PLB_wrPendPri = PLB_wrPendPri, DIR = I, BUS = SPLB5, VEC = [0:1]
PORT SPLB5_PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB5
PORT SPLB5_PLB_rdPendPri = PLB_rdPendPri, DIR = I, BUS = SPLB5, VEC = [0:1]
PORT SPLB5_PLB_reqPri = PLB_reqPri, DIR = I, BUS = SPLB5, VEC = [0:1]
PORT SPLB5_PLB_TAttribute = PLB_TAttribute, DIR = I, BUS = SPLB5, VEC = [0:15]
PORT SPLB5_PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB5
PORT SPLB5_PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB5
PORT SPLB5_PLB_wrDBus = PLB_wrDBus, DIR = I, BUS = SPLB5, VEC = [0:(C_SPLB5_DWIDTH-1)]
PORT SPLB5_Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB5
PORT SPLB5_Sl_SSize = Sl_SSize, DIR = O, BUS = SPLB5, VEC = [0:1]
PORT SPLB5_Sl_wait = Sl_wait, DIR = O, BUS = SPLB5
PORT SPLB5_Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB5
PORT SPLB5_Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB5
PORT SPLB5_Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB5
PORT SPLB5_Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB5
PORT SPLB5_Sl_rdDBus = Sl_rdDBus, DIR = O, BUS = SPLB5, VEC = [0:(C_SPLB5_DWIDTH-1)]
PORT SPLB5_Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, BUS = SPLB5, VEC = [0:3]
PORT SPLB5_Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB5
PORT SPLB5_Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB5
PORT SPLB5_Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB5
PORT SPLB5_Sl_MBusy = Sl_MBusy, DIR = O, BUS = SPLB5, VEC = [0:(C_SPLB5_NUM_MASTERS-1)]
PORT SPLB5_Sl_MRdErr = Sl_MRdErr, DIR = O, BUS = SPLB5, VEC = [0:(C_SPLB5_NUM_MASTERS-1)]
PORT SPLB5_Sl_MWrErr = Sl_MWrErr, DIR = O, BUS = SPLB5, VEC = [0:(C_SPLB5_NUM_MASTERS-1)]
PORT SPLB5_Sl_MIRQ = Sl_MIRQ, DIR = O, BUS = SPLB5, VEC = [0:(C_SPLB5_NUM_MASTERS-1)]
PORT SDMA5_Clk = "", DIR = I, SIGIS = CLK, ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 3), ASSIGNMENT = REQUIRE
PORT SDMA5_Rx_IntOut = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 3)
PORT SDMA5_Tx_IntOut = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 3)
PORT SDMA5_RstOut = LL_RST_ACK, DIR = O, BUS = SDMA_LL5
PORT SDMA5_TX_D = LL_Tx_Data, DIR = O, BUS = SDMA_LL5, VEC = [0:31]
PORT SDMA5_TX_Rem = LL_Tx_Rem, DIR = O, BUS = SDMA_LL5, VEC = [0:3]
PORT SDMA5_TX_SOF = LL_Tx_SOF_n, DIR = O, BUS = SDMA_LL5
PORT SDMA5_TX_EOF = LL_Tx_EOF_n, DIR = O, BUS = SDMA_LL5
PORT SDMA5_TX_SOP = LL_Tx_SOP_n, DIR = O, BUS = SDMA_LL5
PORT SDMA5_TX_EOP = LL_Tx_EOP_n, DIR = O, BUS = SDMA_LL5
PORT SDMA5_TX_Src_Rdy = LL_Tx_SrcRdy_n, DIR = O, BUS = SDMA_LL5
PORT SDMA5_TX_Dst_Rdy = LL_Tx_DstRdy_n, DIR = I, BUS = SDMA_LL5, INITIALVAL = VCC
PORT SDMA5_RX_D = LL_Rx_Data, DIR = I, BUS = SDMA_LL5, INITIALVAL = GND, VEC = [0:31]
PORT SDMA5_RX_Rem = LL_Rx_Rem, DIR = I, BUS = SDMA_LL5, INITIALVAL = VCC, VEC = [0:3]
PORT SDMA5_RX_SOF = LL_Rx_SOF_n, DIR = I, BUS = SDMA_LL5, INITIALVAL = VCC
PORT SDMA5_RX_EOF = LL_Rx_EOF_n, DIR = I, BUS = SDMA_LL5, INITIALVAL = VCC
PORT SDMA5_RX_SOP = LL_Rx_SOP_n, DIR = I, BUS = SDMA_LL5, INITIALVAL = VCC
PORT SDMA5_RX_EOP = LL_Rx_EOP_n, DIR = I, BUS = SDMA_LL5, INITIALVAL = VCC
PORT SDMA5_RX_Src_Rdy = LL_Rx_SrcRdy_n, DIR = I, BUS = SDMA_LL5, INITIALVAL = VCC
PORT SDMA5_RX_Dst_Rdy = LL_Rx_DstRdy_n, DIR = O, BUS = SDMA_LL5
PORT SDMA_CTRL5_Clk = "", DIR = I, BUS = SDMA_CTRL5, SIGIS = CLK, INITIALVAL = VCC
PORT SDMA_CTRL5_Rst = SPLB_Rst, DIR = I, BUS = SDMA_CTRL5, SIGIS = RST
PORT SDMA_CTRL5_PLB_ABus = PLB_ABus, DIR = I, BUS = SDMA_CTRL5, VEC = [0:31]
PORT SDMA_CTRL5_PLB_PAValid = PLB_PAValid, DIR = I, BUS = SDMA_CTRL5
PORT SDMA_CTRL5_PLB_SAValid = PLB_SAValid, DIR = I, BUS = SDMA_CTRL5
PORT SDMA_CTRL5_PLB_masterID = PLB_masterID, DIR = I, BUS = SDMA_CTRL5, VEC = [0:(C_SDMA_CTRL5_MID_WIDTH-1)]
PORT SDMA_CTRL5_PLB_RNW = PLB_RNW, DIR = I, BUS = SDMA_CTRL5
PORT SDMA_CTRL5_PLB_BE = PLB_BE, DIR = I, BUS = SDMA_CTRL5, VEC = [0:((C_SDMA_CTRL5_DWIDTH/8)-1)]
PORT SDMA_CTRL5_PLB_UABus = PLB_UABus, DIR = I, BUS = SDMA_CTRL5, VEC = [0:31]
PORT SDMA_CTRL5_PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SDMA_CTRL5
PORT SDMA_CTRL5_PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SDMA_CTRL5
PORT SDMA_CTRL5_PLB_abort = PLB_abort, DIR = I, BUS = SDMA_CTRL5
PORT SDMA_CTRL5_PLB_busLock = PLB_busLock, DIR = I, BUS = SDMA_CTRL5
PORT SDMA_CTRL5_PLB_MSize = PLB_MSize, DIR = I, BUS = SDMA_CTRL5, VEC = [0:1]
PORT SDMA_CTRL5_PLB_size = PLB_size, DIR = I, BUS = SDMA_CTRL5, VEC = [0:3]
PORT SDMA_CTRL5_PLB_type = PLB_type, DIR = I, BUS = SDMA_CTRL5, VEC = [0:2]
PORT SDMA_CTRL5_PLB_lockErr = PLB_lockErr, DIR = I, BUS = SDMA_CTRL5
PORT SDMA_CTRL5_PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SDMA_CTRL5
PORT SDMA_CTRL5_PLB_wrPendPri = PLB_wrPendPri, DIR = I, BUS = SDMA_CTRL5, VEC = [0:1]
PORT SDMA_CTRL5_PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SDMA_CTRL5
PORT SDMA_CTRL5_PLB_rdPendPri = PLB_rdPendPri, DIR = I, BUS = SDMA_CTRL5, VEC = [0:1]
PORT SDMA_CTRL5_PLB_reqPri = PLB_reqPri, DIR = I, BUS = SDMA_CTRL5, VEC = [0:1]
PORT SDMA_CTRL5_PLB_TAttribute = PLB_TAttribute, DIR = I, BUS = SDMA_CTRL5, VEC = [0:15]
PORT SDMA_CTRL5_PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SDMA_CTRL5
PORT SDMA_CTRL5_PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SDMA_CTRL5
PORT SDMA_CTRL5_PLB_wrDBus = PLB_wrDBus, DIR = I, BUS = SDMA_CTRL5, VEC = [0:(C_SDMA_CTRL5_DWIDTH-1)]
PORT SDMA_CTRL5_Sl_addrAck = Sl_addrAck, DIR = O, BUS = SDMA_CTRL5
PORT SDMA_CTRL5_Sl_SSize = Sl_SSize, DIR = O, BUS = SDMA_CTRL5, VEC = [0:1]
PORT SDMA_CTRL5_Sl_wait = Sl_wait, DIR = O, BUS = SDMA_CTRL5
PORT SDMA_CTRL5_Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SDMA_CTRL5
PORT SDMA_CTRL5_Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SDMA_CTRL5
PORT SDMA_CTRL5_Sl_wrComp = Sl_wrComp, DIR = O, BUS = SDMA_CTRL5
PORT SDMA_CTRL5_Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SDMA_CTRL5
PORT SDMA_CTRL5_Sl_rdDBus = Sl_rdDBus, DIR = O, BUS = SDMA_CTRL5, VEC = [0:(C_SDMA_CTRL5_DWIDTH-1)]
PORT SDMA_CTRL5_Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, BUS = SDMA_CTRL5, VEC = [0:3]
PORT SDMA_CTRL5_Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SDMA_CTRL5
PORT SDMA_CTRL5_Sl_rdComp = Sl_rdComp, DIR = O, BUS = SDMA_CTRL5
PORT SDMA_CTRL5_Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SDMA_CTRL5
PORT SDMA_CTRL5_Sl_MBusy = Sl_MBusy, DIR = O, BUS = SDMA_CTRL5, VEC = [0:(C_SDMA_CTRL5_NUM_MASTERS-1)]
PORT SDMA_CTRL5_Sl_MRdErr = Sl_MRdErr, DIR = O, BUS = SDMA_CTRL5, VEC = [0:(C_SDMA_CTRL5_NUM_MASTERS-1)]
PORT SDMA_CTRL5_Sl_MWrErr = Sl_MWrErr, DIR = O, BUS = SDMA_CTRL5, VEC = [0:(C_SDMA_CTRL5_NUM_MASTERS-1)]
PORT SDMA_CTRL5_Sl_MIRQ = Sl_MIRQ, DIR = O, BUS = SDMA_CTRL5, VEC = [0:(C_SDMA_CTRL5_NUM_MASTERS-1)]
PORT PIM5_Addr = Addr, DIR = I, BUS = MPMC_PIM5, VEC = [31:0]
PORT PIM5_AddrReq = AddrReq, DIR = I, BUS = MPMC_PIM5
PORT PIM5_AddrAck = AddrAck, DIR = O, BUS = MPMC_PIM5
PORT PIM5_RNW = RNW, DIR = I, BUS = MPMC_PIM5
PORT PIM5_Size = Size, DIR = I, BUS = MPMC_PIM5, VEC = [3:0]
PORT PIM5_RdModWr = RdModWr, DIR = I, BUS = MPMC_PIM5
PORT PIM5_WrFIFO_Data = WrFIFO_Data, DIR = I, BUS = MPMC_PIM5, VEC = [(C_PIM5_DATA_WIDTH-1):0]
PORT PIM5_WrFIFO_BE = WrFIFO_BE, DIR = I, BUS = MPMC_PIM5, VEC = [(C_PIM5_DATA_WIDTH/8-1):0]
PORT PIM5_WrFIFO_Push = WrFIFO_Push, DIR = I, BUS = MPMC_PIM5
PORT PIM5_RdFIFO_Data = RdFIFO_Data, DIR = O, BUS = MPMC_PIM5, VEC = [(C_PIM5_DATA_WIDTH-1):0]
PORT PIM5_RdFIFO_Pop = RdFIFO_Pop, DIR = I, BUS = MPMC_PIM5
PORT PIM5_RdFIFO_RdWdAddr = RdFIFO_RdWdAddr, DIR = O, BUS = MPMC_PIM5, VEC = [3:0]
PORT PIM5_WrFIFO_Empty = WrFIFO_Empty, DIR = O, BUS = MPMC_PIM5
PORT PIM5_WrFIFO_AlmostFull = WrFIFO_AlmostFull, DIR = O, BUS = MPMC_PIM5
PORT PIM5_WrFIFO_Flush = WrFIFO_Flush, DIR = I, BUS = MPMC_PIM5
PORT PIM5_RdFIFO_Empty = RdFIFO_Empty, DIR = O, BUS = MPMC_PIM5
PORT PIM5_RdFIFO_Flush = RdFIFO_Flush, DIR = I, BUS = MPMC_PIM5
PORT PIM5_RdFIFO_Latency = RDFIFO_Latency, DIR = O, BUS = MPMC_PIM5, VEC = [1:0]
PORT PIM5_InitDone = InitDone, DIR = O, BUS = MPMC_PIM5
PORT PPC440MC5_MIMCReadNotWrite = MIMCREADNOTWRITE, DIR = I, BUS = PPC440MC5
PORT PPC440MC5_MIMCAddress = MIMCADDRESS, DIR = I, BUS = PPC440MC5, VEC = [0:35]
PORT PPC440MC5_MIMCAddressValid = MIMCADDRESSVALID, DIR = I, BUS = PPC440MC5
PORT PPC440MC5_MIMCWriteData = MIMCWRITEDATA, DIR = I, BUS = PPC440MC5, VEC = [0:127]
PORT PPC440MC5_MIMCWriteDataValid = MIMCWRITEDATAVALID, DIR = I, BUS = PPC440MC5
PORT PPC440MC5_MIMCByteEnable = MIMCBYTEENABLE, DIR = I, BUS = PPC440MC5, VEC = [0:15]
PORT PPC440MC5_MIMCBankConflict = MIMCBANKCONFLICT, DIR = I, BUS = PPC440MC5
PORT PPC440MC5_MIMCRowConflict = MIMCROWCONFLICT, DIR = I, BUS = PPC440MC5
PORT PPC440MC5_MCMIReadData = MCMIREADDATA, DIR = O, BUS = PPC440MC5, VEC = [0:127]
PORT PPC440MC5_MCMIReadDataValid = MCMIREADDATAVALID, DIR = O, BUS = PPC440MC5
PORT PPC440MC5_MCMIReadDataErr = MCMIREADDATAERR, DIR = O, BUS = PPC440MC5
PORT PPC440MC5_MCMIAddrReadyToAccept = MCMIADDRREADYTOACCEPT, DIR = O, BUS = PPC440MC5
PORT VFBC5_Cmd_Clk = cmd_clk, DIR = I, BUS = VFBC5
PORT VFBC5_Cmd_Reset = cmd_reset, DIR = I, BUS = VFBC5
PORT VFBC5_Cmd_Data = cmd_data, DIR = I, BUS = VFBC5, VEC = [31:0]
PORT VFBC5_Cmd_Write = cmd_write, DIR = I, BUS = VFBC5
PORT VFBC5_Cmd_End = cmd_end, DIR = I, BUS = VFBC5
PORT VFBC5_Cmd_Full = cmd_full, DIR = O, BUS = VFBC5
PORT VFBC5_Cmd_Almost_Full = cmd_almost_full, DIR = O, BUS = VFBC5
PORT VFBC5_Cmd_Idle = cmd_idle, DIR = O, BUS = VFBC5
PORT VFBC5_Wd_Clk = wd_clk, DIR = I, BUS = VFBC5
PORT VFBC5_Wd_Reset = wd_reset, DIR = I, BUS = VFBC5
PORT VFBC5_Wd_Write = wd_write, DIR = I, BUS = VFBC5
PORT VFBC5_Wd_End_Burst = wd_end_burst, DIR = I, BUS = VFBC5
PORT VFBC5_Wd_Flush = wd_flush, DIR = I, BUS = VFBC5
PORT VFBC5_Wd_Data = wd_data, DIR = I, BUS = VFBC5, VEC = [C_VFBC5_RDWD_DATA_WIDTH-1:0]
PORT VFBC5_Wd_Data_BE = wd_data_be, DIR = I, BUS = VFBC5, VEC = [C_VFBC5_RDWD_DATA_WIDTH/8-1:0]
PORT VFBC5_Wd_Full = wd_full, DIR = O, BUS = VFBC5
PORT VFBC5_Wd_Almost_Full = wd_almost_full, DIR = O, BUS = VFBC5
PORT VFBC5_Rd_Clk = rd_clk, DIR = I, BUS = VFBC5
PORT VFBC5_Rd_Reset = rd_reset, DIR = I, BUS = VFBC5
PORT VFBC5_Rd_Read = rd_read, DIR = I, BUS = VFBC5
PORT VFBC5_Rd_End_Burst = rd_end_burst, DIR = I, BUS = VFBC5
PORT VFBC5_Rd_Flush = rd_flush, DIR = I, BUS = VFBC5
PORT VFBC5_Rd_Data = rd_data, DIR = O, BUS = VFBC5, VEC = [C_VFBC5_RDWD_DATA_WIDTH-1:0]
PORT VFBC5_Rd_Empty = rd_empty, DIR = O, BUS = VFBC5
PORT VFBC5_Rd_Almost_Empty = rd_almost_empty, DIR = O, BUS = VFBC5
PORT MCB5_cmd_clk = cmd_clk, DIR = I, BUS = MCB5
PORT MCB5_cmd_en = cmd_en, DIR = I, BUS = MCB5
PORT MCB5_cmd_instr = cmd_instr, DIR = I, BUS = MCB5, VEC = [2:0]
PORT MCB5_cmd_bl = cmd_bl, DIR = I, BUS = MCB5, VEC = [5:0]
PORT MCB5_cmd_byte_addr = cmd_byte_addr, DIR = I, BUS = MCB5, VEC = [29:0]
PORT MCB5_cmd_empty = cmd_empty, DIR = O, BUS = MCB5
PORT MCB5_cmd_full = cmd_full, DIR = O, BUS = MCB5
PORT MCB5_wr_clk = wr_clk, DIR = I, BUS = MCB5
PORT MCB5_wr_en = wr_en, DIR = I, BUS = MCB5
PORT MCB5_wr_mask = wr_mask, DIR = I, BUS = MCB5, VEC = [C_PIM5_DATA_WIDTH/8-1:0]
PORT MCB5_wr_data = wr_data, DIR = I, BUS = MCB5, VEC = [C_PIM5_DATA_WIDTH-1:0]
PORT MCB5_wr_full = wr_full, DIR = O, BUS = MCB5
PORT MCB5_wr_empty = wr_empty, DIR = O, BUS = MCB5
PORT MCB5_wr_count = wr_count, DIR = O, BUS = MCB5, VEC = [6:0]
PORT MCB5_wr_underrun = wr_underrun, DIR = O, BUS = MCB5
PORT MCB5_wr_error = wr_error, DIR = O, BUS = MCB5
PORT MCB5_rd_clk = rd_clk, DIR = I, BUS = MCB5
PORT MCB5_rd_en = rd_en, DIR = I, BUS = MCB5
PORT MCB5_rd_data = rd_data, DIR = O, BUS = MCB5, VEC = [C_PIM5_DATA_WIDTH-1:0]
PORT MCB5_rd_full = rd_full, DIR = O, BUS = MCB5
PORT MCB5_rd_empty = rd_empty, DIR = O, BUS = MCB5
PORT MCB5_rd_count = rd_count, DIR = O, BUS = MCB5, VEC = [6:0]
PORT MCB5_rd_overflow = rd_overflow, DIR = O, BUS = MCB5
PORT MCB5_rd_error = rd_error, DIR = O, BUS = MCB5
PORT FSL6_M_Clk = FSL_M_Clk, DIR = I, BUS = XCL6, SIGIS = CLK, INITIALVAL = VCC
PORT FSL6_M_Write = FSL_M_Write, DIR = I, BUS = XCL6
PORT FSL6_M_Data = FSL_M_Data, DIR = I, BUS = XCL6, VEC = [0:31]
PORT FSL6_M_Control = FSL_M_Control, DIR = I, BUS = XCL6
PORT FSL6_M_Full = FSL_M_Full, DIR = O, BUS = XCL6
PORT FSL6_S_Clk = FSL_S_Clk, DIR = I, BUS = XCL6
PORT FSL6_S_Read = FSL_S_Read, DIR = I, BUS = XCL6
PORT FSL6_S_Data = FSL_S_Data, DIR = O, BUS = XCL6, VEC = [0:31]
PORT FSL6_S_Control = FSL_S_Control, DIR = O, BUS = XCL6
PORT FSL6_S_Exists = FSL_S_Exists, DIR = O, BUS = XCL6
PORT FSL6_B_M_Clk = FSL_M_Clk, DIR = I, BUS = XCL6_B, SIGIS = CLK, INITIALVAL = VCC
PORT FSL6_B_M_Write = FSL_M_Write, DIR = I, BUS = XCL6_B
PORT FSL6_B_M_Data = FSL_M_Data, DIR = I, BUS = XCL6_B, VEC = [0:31]
PORT FSL6_B_M_Control = FSL_M_Control, DIR = I, BUS = XCL6_B
PORT FSL6_B_M_Full = FSL_M_Full, DIR = O, BUS = XCL6_B
PORT FSL6_B_S_Clk = FSL_S_Clk, DIR = I, BUS = XCL6_B
PORT FSL6_B_S_Read = FSL_S_Read, DIR = I, BUS = XCL6_B
PORT FSL6_B_S_Data = FSL_S_Data, DIR = O, BUS = XCL6_B, VEC = [0:31]
PORT FSL6_B_S_Control = FSL_S_Control, DIR = O, BUS = XCL6_B
PORT FSL6_B_S_Exists = FSL_S_Exists, DIR = O, BUS = XCL6_B
PORT SPLB6_Clk = "", DIR = I, BUS = SPLB6, SIGIS = CLK, INITIALVAL = VCC
PORT SPLB6_Rst = SPLB_Rst, DIR = I, BUS = SPLB6, SIGIS = RST
PORT SPLB6_PLB_ABus = PLB_ABus, DIR = I, BUS = SPLB6, VEC = [0:31]
PORT SPLB6_PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB6
PORT SPLB6_PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB6
PORT SPLB6_PLB_masterID = PLB_masterID, DIR = I, BUS = SPLB6, VEC = [0:(C_SPLB6_MID_WIDTH-1)]
PORT SPLB6_PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB6
PORT SPLB6_PLB_BE = PLB_BE, DIR = I, BUS = SPLB6, VEC = [0:((C_SPLB6_DWIDTH/8)-1)]
PORT SPLB6_PLB_UABus = PLB_UABus, DIR = I, BUS = SPLB6, VEC = [0:31]
PORT SPLB6_PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB6
PORT SPLB6_PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB6
PORT SPLB6_PLB_abort = PLB_abort, DIR = I, BUS = SPLB6
PORT SPLB6_PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB6
PORT SPLB6_PLB_MSize = PLB_MSize, DIR = I, BUS = SPLB6, VEC = [0:1]
PORT SPLB6_PLB_size = PLB_size, DIR = I, BUS = SPLB6, VEC = [0:3]
PORT SPLB6_PLB_type = PLB_type, DIR = I, BUS = SPLB6, VEC = [0:2]
PORT SPLB6_PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB6
PORT SPLB6_PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB6
PORT SPLB6_PLB_wrPendPri = PLB_wrPendPri, DIR = I, BUS = SPLB6, VEC = [0:1]
PORT SPLB6_PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB6
PORT SPLB6_PLB_rdPendPri = PLB_rdPendPri, DIR = I, BUS = SPLB6, VEC = [0:1]
PORT SPLB6_PLB_reqPri = PLB_reqPri, DIR = I, BUS = SPLB6, VEC = [0:1]
PORT SPLB6_PLB_TAttribute = PLB_TAttribute, DIR = I, BUS = SPLB6, VEC = [0:15]
PORT SPLB6_PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB6
PORT SPLB6_PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB6
PORT SPLB6_PLB_wrDBus = PLB_wrDBus, DIR = I, BUS = SPLB6, VEC = [0:(C_SPLB6_DWIDTH-1)]
PORT SPLB6_Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB6
PORT SPLB6_Sl_SSize = Sl_SSize, DIR = O, BUS = SPLB6, VEC = [0:1]
PORT SPLB6_Sl_wait = Sl_wait, DIR = O, BUS = SPLB6
PORT SPLB6_Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB6
PORT SPLB6_Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB6
PORT SPLB6_Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB6
PORT SPLB6_Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB6
PORT SPLB6_Sl_rdDBus = Sl_rdDBus, DIR = O, BUS = SPLB6, VEC = [0:(C_SPLB6_DWIDTH-1)]
PORT SPLB6_Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, BUS = SPLB6, VEC = [0:3]
PORT SPLB6_Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB6
PORT SPLB6_Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB6
PORT SPLB6_Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB6
PORT SPLB6_Sl_MBusy = Sl_MBusy, DIR = O, BUS = SPLB6, VEC = [0:(C_SPLB6_NUM_MASTERS-1)]
PORT SPLB6_Sl_MRdErr = Sl_MRdErr, DIR = O, BUS = SPLB6, VEC = [0:(C_SPLB6_NUM_MASTERS-1)]
PORT SPLB6_Sl_MWrErr = Sl_MWrErr, DIR = O, BUS = SPLB6, VEC = [0:(C_SPLB6_NUM_MASTERS-1)]
PORT SPLB6_Sl_MIRQ = Sl_MIRQ, DIR = O, BUS = SPLB6, VEC = [0:(C_SPLB6_NUM_MASTERS-1)]
PORT SDMA6_Clk = "", DIR = I, SIGIS = CLK, ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 3), ASSIGNMENT = REQUIRE
PORT SDMA6_Rx_IntOut = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 3)
PORT SDMA6_Tx_IntOut = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 3)
PORT SDMA6_RstOut = LL_RST_ACK, DIR = O, BUS = SDMA_LL6
PORT SDMA6_TX_D = LL_Tx_Data, DIR = O, BUS = SDMA_LL6, VEC = [0:31]
PORT SDMA6_TX_Rem = LL_Tx_Rem, DIR = O, BUS = SDMA_LL6, VEC = [0:3]
PORT SDMA6_TX_SOF = LL_Tx_SOF_n, DIR = O, BUS = SDMA_LL6
PORT SDMA6_TX_EOF = LL_Tx_EOF_n, DIR = O, BUS = SDMA_LL6
PORT SDMA6_TX_SOP = LL_Tx_SOP_n, DIR = O, BUS = SDMA_LL6
PORT SDMA6_TX_EOP = LL_Tx_EOP_n, DIR = O, BUS = SDMA_LL6
PORT SDMA6_TX_Src_Rdy = LL_Tx_SrcRdy_n, DIR = O, BUS = SDMA_LL6
PORT SDMA6_TX_Dst_Rdy = LL_Tx_DstRdy_n, DIR = I, BUS = SDMA_LL6, INITIALVAL = VCC
PORT SDMA6_RX_D = LL_Rx_Data, DIR = I, BUS = SDMA_LL6, INITIALVAL = GND, VEC = [0:31]
PORT SDMA6_RX_Rem = LL_Rx_Rem, DIR = I, BUS = SDMA_LL6, INITIALVAL = VCC, VEC = [0:3]
PORT SDMA6_RX_SOF = LL_Rx_SOF_n, DIR = I, BUS = SDMA_LL6, INITIALVAL = VCC
PORT SDMA6_RX_EOF = LL_Rx_EOF_n, DIR = I, BUS = SDMA_LL6, INITIALVAL = VCC
PORT SDMA6_RX_SOP = LL_Rx_SOP_n, DIR = I, BUS = SDMA_LL6, INITIALVAL = VCC
PORT SDMA6_RX_EOP = LL_Rx_EOP_n, DIR = I, BUS = SDMA_LL6, INITIALVAL = VCC
PORT SDMA6_RX_Src_Rdy = LL_Rx_SrcRdy_n, DIR = I, BUS = SDMA_LL6, INITIALVAL = VCC
PORT SDMA6_RX_Dst_Rdy = LL_Rx_DstRdy_n, DIR = O, BUS = SDMA_LL6
PORT SDMA_CTRL6_Clk = "", DIR = I, BUS = SDMA_CTRL6, SIGIS = CLK, INITIALVAL = VCC
PORT SDMA_CTRL6_Rst = SPLB_Rst, DIR = I, BUS = SDMA_CTRL6, SIGIS = RST
PORT SDMA_CTRL6_PLB_ABus = PLB_ABus, DIR = I, BUS = SDMA_CTRL6, VEC = [0:31]
PORT SDMA_CTRL6_PLB_PAValid = PLB_PAValid, DIR = I, BUS = SDMA_CTRL6
PORT SDMA_CTRL6_PLB_SAValid = PLB_SAValid, DIR = I, BUS = SDMA_CTRL6
PORT SDMA_CTRL6_PLB_masterID = PLB_masterID, DIR = I, BUS = SDMA_CTRL6, VEC = [0:(C_SDMA_CTRL6_MID_WIDTH-1)]
PORT SDMA_CTRL6_PLB_RNW = PLB_RNW, DIR = I, BUS = SDMA_CTRL6
PORT SDMA_CTRL6_PLB_BE = PLB_BE, DIR = I, BUS = SDMA_CTRL6, VEC = [0:((C_SDMA_CTRL6_DWIDTH/8)-1)]
PORT SDMA_CTRL6_PLB_UABus = PLB_UABus, DIR = I, BUS = SDMA_CTRL6, VEC = [0:31]
PORT SDMA_CTRL6_PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SDMA_CTRL6
PORT SDMA_CTRL6_PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SDMA_CTRL6
PORT SDMA_CTRL6_PLB_abort = PLB_abort, DIR = I, BUS = SDMA_CTRL6
PORT SDMA_CTRL6_PLB_busLock = PLB_busLock, DIR = I, BUS = SDMA_CTRL6
PORT SDMA_CTRL6_PLB_MSize = PLB_MSize, DIR = I, BUS = SDMA_CTRL6, VEC = [0:1]
PORT SDMA_CTRL6_PLB_size = PLB_size, DIR = I, BUS = SDMA_CTRL6, VEC = [0:3]
PORT SDMA_CTRL6_PLB_type = PLB_type, DIR = I, BUS = SDMA_CTRL6, VEC = [0:2]
PORT SDMA_CTRL6_PLB_lockErr = PLB_lockErr, DIR = I, BUS = SDMA_CTRL6
PORT SDMA_CTRL6_PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SDMA_CTRL6
PORT SDMA_CTRL6_PLB_wrPendPri = PLB_wrPendPri, DIR = I, BUS = SDMA_CTRL6, VEC = [0:1]
PORT SDMA_CTRL6_PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SDMA_CTRL6
PORT SDMA_CTRL6_PLB_rdPendPri = PLB_rdPendPri, DIR = I, BUS = SDMA_CTRL6, VEC = [0:1]
PORT SDMA_CTRL6_PLB_reqPri = PLB_reqPri, DIR = I, BUS = SDMA_CTRL6, VEC = [0:1]
PORT SDMA_CTRL6_PLB_TAttribute = PLB_TAttribute, DIR = I, BUS = SDMA_CTRL6, VEC = [0:15]
PORT SDMA_CTRL6_PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SDMA_CTRL6
PORT SDMA_CTRL6_PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SDMA_CTRL6
PORT SDMA_CTRL6_PLB_wrDBus = PLB_wrDBus, DIR = I, BUS = SDMA_CTRL6, VEC = [0:(C_SDMA_CTRL6_DWIDTH-1)]
PORT SDMA_CTRL6_Sl_addrAck = Sl_addrAck, DIR = O, BUS = SDMA_CTRL6
PORT SDMA_CTRL6_Sl_SSize = Sl_SSize, DIR = O, BUS = SDMA_CTRL6, VEC = [0:1]
PORT SDMA_CTRL6_Sl_wait = Sl_wait, DIR = O, BUS = SDMA_CTRL6
PORT SDMA_CTRL6_Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SDMA_CTRL6
PORT SDMA_CTRL6_Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SDMA_CTRL6
PORT SDMA_CTRL6_Sl_wrComp = Sl_wrComp, DIR = O, BUS = SDMA_CTRL6
PORT SDMA_CTRL6_Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SDMA_CTRL6
PORT SDMA_CTRL6_Sl_rdDBus = Sl_rdDBus, DIR = O, BUS = SDMA_CTRL6, VEC = [0:(C_SDMA_CTRL6_DWIDTH-1)]
PORT SDMA_CTRL6_Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, BUS = SDMA_CTRL6, VEC = [0:3]
PORT SDMA_CTRL6_Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SDMA_CTRL6
PORT SDMA_CTRL6_Sl_rdComp = Sl_rdComp, DIR = O, BUS = SDMA_CTRL6
PORT SDMA_CTRL6_Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SDMA_CTRL6
PORT SDMA_CTRL6_Sl_MBusy = Sl_MBusy, DIR = O, BUS = SDMA_CTRL6, VEC = [0:(C_SDMA_CTRL6_NUM_MASTERS-1)]
PORT SDMA_CTRL6_Sl_MRdErr = Sl_MRdErr, DIR = O, BUS = SDMA_CTRL6, VEC = [0:(C_SDMA_CTRL6_NUM_MASTERS-1)]
PORT SDMA_CTRL6_Sl_MWrErr = Sl_MWrErr, DIR = O, BUS = SDMA_CTRL6, VEC = [0:(C_SDMA_CTRL6_NUM_MASTERS-1)]
PORT SDMA_CTRL6_Sl_MIRQ = Sl_MIRQ, DIR = O, BUS = SDMA_CTRL6, VEC = [0:(C_SDMA_CTRL6_NUM_MASTERS-1)]
PORT PIM6_Addr = Addr, DIR = I, BUS = MPMC_PIM6, VEC = [31:0]
PORT PIM6_AddrReq = AddrReq, DIR = I, BUS = MPMC_PIM6
PORT PIM6_AddrAck = AddrAck, DIR = O, BUS = MPMC_PIM6
PORT PIM6_RNW = RNW, DIR = I, BUS = MPMC_PIM6
PORT PIM6_Size = Size, DIR = I, BUS = MPMC_PIM6, VEC = [3:0]
PORT PIM6_RdModWr = RdModWr, DIR = I, BUS = MPMC_PIM6
PORT PIM6_WrFIFO_Data = WrFIFO_Data, DIR = I, BUS = MPMC_PIM6, VEC = [(C_PIM6_DATA_WIDTH-1):0]
PORT PIM6_WrFIFO_BE = WrFIFO_BE, DIR = I, BUS = MPMC_PIM6, VEC = [(C_PIM6_DATA_WIDTH/8-1):0]
PORT PIM6_WrFIFO_Push = WrFIFO_Push, DIR = I, BUS = MPMC_PIM6
PORT PIM6_RdFIFO_Data = RdFIFO_Data, DIR = O, BUS = MPMC_PIM6, VEC = [(C_PIM6_DATA_WIDTH-1):0]
PORT PIM6_RdFIFO_Pop = RdFIFO_Pop, DIR = I, BUS = MPMC_PIM6
PORT PIM6_RdFIFO_RdWdAddr = RdFIFO_RdWdAddr, DIR = O, BUS = MPMC_PIM6, VEC = [3:0]
PORT PIM6_WrFIFO_Empty = WrFIFO_Empty, DIR = O, BUS = MPMC_PIM6
PORT PIM6_WrFIFO_AlmostFull = WrFIFO_AlmostFull, DIR = O, BUS = MPMC_PIM6
PORT PIM6_WrFIFO_Flush = WrFIFO_Flush, DIR = I, BUS = MPMC_PIM6
PORT PIM6_RdFIFO_Empty = RdFIFO_Empty, DIR = O, BUS = MPMC_PIM6
PORT PIM6_RdFIFO_Flush = RdFIFO_Flush, DIR = I, BUS = MPMC_PIM6
PORT PIM6_RdFIFO_Latency = RDFIFO_Latency, DIR = O, BUS = MPMC_PIM6, VEC = [1:0]
PORT PIM6_InitDone = InitDone, DIR = O, BUS = MPMC_PIM6
PORT PPC440MC6_MIMCReadNotWrite = MIMCREADNOTWRITE, DIR = I, BUS = PPC440MC6
PORT PPC440MC6_MIMCAddress = MIMCADDRESS, DIR = I, BUS = PPC440MC6, VEC = [0:35]
PORT PPC440MC6_MIMCAddressValid = MIMCADDRESSVALID, DIR = I, BUS = PPC440MC6
PORT PPC440MC6_MIMCWriteData = MIMCWRITEDATA, DIR = I, BUS = PPC440MC6, VEC = [0:127]
PORT PPC440MC6_MIMCWriteDataValid = MIMCWRITEDATAVALID, DIR = I, BUS = PPC440MC6
PORT PPC440MC6_MIMCByteEnable = MIMCBYTEENABLE, DIR = I, BUS = PPC440MC6, VEC = [0:15]
PORT PPC440MC6_MIMCBankConflict = MIMCBANKCONFLICT, DIR = I, BUS = PPC440MC6
PORT PPC440MC6_MIMCRowConflict = MIMCROWCONFLICT, DIR = I, BUS = PPC440MC6
PORT PPC440MC6_MCMIReadData = MCMIREADDATA, DIR = O, BUS = PPC440MC6, VEC = [0:127]
PORT PPC440MC6_MCMIReadDataValid = MCMIREADDATAVALID, DIR = O, BUS = PPC440MC6
PORT PPC440MC6_MCMIReadDataErr = MCMIREADDATAERR, DIR = O, BUS = PPC440MC6
PORT PPC440MC6_MCMIAddrReadyToAccept = MCMIADDRREADYTOACCEPT, DIR = O, BUS = PPC440MC6
PORT VFBC6_Cmd_Clk = cmd_clk, DIR = I, BUS = VFBC6
PORT VFBC6_Cmd_Reset = cmd_reset, DIR = I, BUS = VFBC6
PORT VFBC6_Cmd_Data = cmd_data, DIR = I, BUS = VFBC6, VEC = [31:0]
PORT VFBC6_Cmd_Write = cmd_write, DIR = I, BUS = VFBC6
PORT VFBC6_Cmd_End = cmd_end, DIR = I, BUS = VFBC6
PORT VFBC6_Cmd_Full = cmd_full, DIR = O, BUS = VFBC6
PORT VFBC6_Cmd_Almost_Full = cmd_almost_full, DIR = O, BUS = VFBC6
PORT VFBC6_Cmd_Idle = cmd_idle, DIR = O, BUS = VFBC6
PORT VFBC6_Wd_Clk = wd_clk, DIR = I, BUS = VFBC6
PORT VFBC6_Wd_Reset = wd_reset, DIR = I, BUS = VFBC6
PORT VFBC6_Wd_Write = wd_write, DIR = I, BUS = VFBC6
PORT VFBC6_Wd_End_Burst = wd_end_burst, DIR = I, BUS = VFBC6
PORT VFBC6_Wd_Flush = wd_flush, DIR = I, BUS = VFBC6
PORT VFBC6_Wd_Data = wd_data, DIR = I, BUS = VFBC6, VEC = [C_VFBC6_RDWD_DATA_WIDTH-1:0]
PORT VFBC6_Wd_Data_BE = wd_data_be, DIR = I, BUS = VFBC6, VEC = [C_VFBC6_RDWD_DATA_WIDTH/8-1:0]
PORT VFBC6_Wd_Full = wd_full, DIR = O, BUS = VFBC6
PORT VFBC6_Wd_Almost_Full = wd_almost_full, DIR = O, BUS = VFBC6
PORT VFBC6_Rd_Clk = rd_clk, DIR = I, BUS = VFBC6
PORT VFBC6_Rd_Reset = rd_reset, DIR = I, BUS = VFBC6
PORT VFBC6_Rd_Read = rd_read, DIR = I, BUS = VFBC6
PORT VFBC6_Rd_End_Burst = rd_end_burst, DIR = I, BUS = VFBC6
PORT VFBC6_Rd_Flush = rd_flush, DIR = I, BUS = VFBC6
PORT VFBC6_Rd_Data = rd_data, DIR = O, BUS = VFBC6, VEC = [C_VFBC6_RDWD_DATA_WIDTH-1:0]
PORT VFBC6_Rd_Empty = rd_empty, DIR = O, BUS = VFBC6
PORT VFBC6_Rd_Almost_Empty = rd_almost_empty, DIR = O, BUS = VFBC6
PORT MCB6_cmd_clk = cmd_clk, DIR = I, BUS = MCB6
PORT MCB6_cmd_en = cmd_en, DIR = I, BUS = MCB6
PORT MCB6_cmd_instr = cmd_instr, DIR = I, BUS = MCB6, VEC = [2:0]
PORT MCB6_cmd_bl = cmd_bl, DIR = I, BUS = MCB6, VEC = [5:0]
PORT MCB6_cmd_byte_addr = cmd_byte_addr, DIR = I, BUS = MCB6, VEC = [29:0]
PORT MCB6_cmd_empty = cmd_empty, DIR = O, BUS = MCB6
PORT MCB6_cmd_full = cmd_full, DIR = O, BUS = MCB6
PORT MCB6_wr_clk = wr_clk, DIR = I, BUS = MCB6
PORT MCB6_wr_en = wr_en, DIR = I, BUS = MCB6
PORT MCB6_wr_mask = wr_mask, DIR = I, BUS = MCB6, VEC = [C_PIM6_DATA_WIDTH/8-1:0]
PORT MCB6_wr_data = wr_data, DIR = I, BUS = MCB6, VEC = [C_PIM6_DATA_WIDTH-1:0]
PORT MCB6_wr_full = wr_full, DIR = O, BUS = MCB6
PORT MCB6_wr_empty = wr_empty, DIR = O, BUS = MCB6
PORT MCB6_wr_count = wr_count, DIR = O, BUS = MCB6, VEC = [6:0]
PORT MCB6_wr_underrun = wr_underrun, DIR = O, BUS = MCB6
PORT MCB6_wr_error = wr_error, DIR = O, BUS = MCB6
PORT MCB6_rd_clk = rd_clk, DIR = I, BUS = MCB6
PORT MCB6_rd_en = rd_en, DIR = I, BUS = MCB6
PORT MCB6_rd_data = rd_data, DIR = O, BUS = MCB6, VEC = [C_PIM6_DATA_WIDTH-1:0]
PORT MCB6_rd_full = rd_full, DIR = O, BUS = MCB6
PORT MCB6_rd_empty = rd_empty, DIR = O, BUS = MCB6
PORT MCB6_rd_count = rd_count, DIR = O, BUS = MCB6, VEC = [6:0]
PORT MCB6_rd_overflow = rd_overflow, DIR = O, BUS = MCB6
PORT MCB6_rd_error = rd_error, DIR = O, BUS = MCB6
PORT FSL7_M_Clk = FSL_M_Clk, DIR = I, BUS = XCL7, SIGIS = CLK, INITIALVAL = VCC
PORT FSL7_M_Write = FSL_M_Write, DIR = I, BUS = XCL7
PORT FSL7_M_Data = FSL_M_Data, DIR = I, BUS = XCL7, VEC = [0:31]
PORT FSL7_M_Control = FSL_M_Control, DIR = I, BUS = XCL7
PORT FSL7_M_Full = FSL_M_Full, DIR = O, BUS = XCL7
PORT FSL7_S_Clk = FSL_S_Clk, DIR = I, BUS = XCL7
PORT FSL7_S_Read = FSL_S_Read, DIR = I, BUS = XCL7
PORT FSL7_S_Data = FSL_S_Data, DIR = O, BUS = XCL7, VEC = [0:31]
PORT FSL7_S_Control = FSL_S_Control, DIR = O, BUS = XCL7
PORT FSL7_S_Exists = FSL_S_Exists, DIR = O, BUS = XCL7
PORT FSL7_B_M_Clk = FSL_M_Clk, DIR = I, BUS = XCL7_B, SIGIS = CLK, INITIALVAL = VCC
PORT FSL7_B_M_Write = FSL_M_Write, DIR = I, BUS = XCL7_B
PORT FSL7_B_M_Data = FSL_M_Data, DIR = I, BUS = XCL7_B, VEC = [0:31]
PORT FSL7_B_M_Control = FSL_M_Control, DIR = I, BUS = XCL7_B
PORT FSL7_B_M_Full = FSL_M_Full, DIR = O, BUS = XCL7_B
PORT FSL7_B_S_Clk = FSL_S_Clk, DIR = I, BUS = XCL7_B
PORT FSL7_B_S_Read = FSL_S_Read, DIR = I, BUS = XCL7_B
PORT FSL7_B_S_Data = FSL_S_Data, DIR = O, BUS = XCL7_B, VEC = [0:31]
PORT FSL7_B_S_Control = FSL_S_Control, DIR = O, BUS = XCL7_B
PORT FSL7_B_S_Exists = FSL_S_Exists, DIR = O, BUS = XCL7_B
PORT SPLB7_Clk = "", DIR = I, BUS = SPLB7, SIGIS = CLK, INITIALVAL = VCC
PORT SPLB7_Rst = SPLB_Rst, DIR = I, BUS = SPLB7, SIGIS = RST
PORT SPLB7_PLB_ABus = PLB_ABus, DIR = I, BUS = SPLB7, VEC = [0:31]
PORT SPLB7_PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB7
PORT SPLB7_PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB7
PORT SPLB7_PLB_masterID = PLB_masterID, DIR = I, BUS = SPLB7, VEC = [0:(C_SPLB7_MID_WIDTH-1)]
PORT SPLB7_PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB7
PORT SPLB7_PLB_BE = PLB_BE, DIR = I, BUS = SPLB7, VEC = [0:((C_SPLB7_DWIDTH/8)-1)]
PORT SPLB7_PLB_UABus = PLB_UABus, DIR = I, BUS = SPLB7, VEC = [0:31]
PORT SPLB7_PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB7
PORT SPLB7_PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB7
PORT SPLB7_PLB_abort = PLB_abort, DIR = I, BUS = SPLB7
PORT SPLB7_PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB7
PORT SPLB7_PLB_MSize = PLB_MSize, DIR = I, BUS = SPLB7, VEC = [0:1]
PORT SPLB7_PLB_size = PLB_size, DIR = I, BUS = SPLB7, VEC = [0:3]
PORT SPLB7_PLB_type = PLB_type, DIR = I, BUS = SPLB7, VEC = [0:2]
PORT SPLB7_PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB7
PORT SPLB7_PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB7
PORT SPLB7_PLB_wrPendPri = PLB_wrPendPri, DIR = I, BUS = SPLB7, VEC = [0:1]
PORT SPLB7_PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB7
PORT SPLB7_PLB_rdPendPri = PLB_rdPendPri, DIR = I, BUS = SPLB7, VEC = [0:1]
PORT SPLB7_PLB_reqPri = PLB_reqPri, DIR = I, BUS = SPLB7, VEC = [0:1]
PORT SPLB7_PLB_TAttribute = PLB_TAttribute, DIR = I, BUS = SPLB7, VEC = [0:15]
PORT SPLB7_PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB7
PORT SPLB7_PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB7
PORT SPLB7_PLB_wrDBus = PLB_wrDBus, DIR = I, BUS = SPLB7, VEC = [0:(C_SPLB7_DWIDTH-1)]
PORT SPLB7_Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB7
PORT SPLB7_Sl_SSize = Sl_SSize, DIR = O, BUS = SPLB7, VEC = [0:1]
PORT SPLB7_Sl_wait = Sl_wait, DIR = O, BUS = SPLB7
PORT SPLB7_Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB7
PORT SPLB7_Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB7
PORT SPLB7_Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB7
PORT SPLB7_Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB7
PORT SPLB7_Sl_rdDBus = Sl_rdDBus, DIR = O, BUS = SPLB7, VEC = [0:(C_SPLB7_DWIDTH-1)]
PORT SPLB7_Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, BUS = SPLB7, VEC = [0:3]
PORT SPLB7_Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB7
PORT SPLB7_Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB7
PORT SPLB7_Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB7
PORT SPLB7_Sl_MBusy = Sl_MBusy, DIR = O, BUS = SPLB7, VEC = [0:(C_SPLB7_NUM_MASTERS-1)]
PORT SPLB7_Sl_MRdErr = Sl_MRdErr, DIR = O, BUS = SPLB7, VEC = [0:(C_SPLB7_NUM_MASTERS-1)]
PORT SPLB7_Sl_MWrErr = Sl_MWrErr, DIR = O, BUS = SPLB7, VEC = [0:(C_SPLB7_NUM_MASTERS-1)]
PORT SPLB7_Sl_MIRQ = Sl_MIRQ, DIR = O, BUS = SPLB7, VEC = [0:(C_SPLB7_NUM_MASTERS-1)]
PORT SDMA7_Clk = "", DIR = I, SIGIS = CLK, ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 3), ASSIGNMENT = REQUIRE
PORT SDMA7_Rx_IntOut = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 3)
PORT SDMA7_Tx_IntOut = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 3)
PORT SDMA7_RstOut = LL_RST_ACK, DIR = O, BUS = SDMA_LL7
PORT SDMA7_TX_D = LL_Tx_Data, DIR = O, BUS = SDMA_LL7, VEC = [0:31]
PORT SDMA7_TX_Rem = LL_Tx_Rem, DIR = O, BUS = SDMA_LL7, VEC = [0:3]
PORT SDMA7_TX_SOF = LL_Tx_SOF_n, DIR = O, BUS = SDMA_LL7
PORT SDMA7_TX_EOF = LL_Tx_EOF_n, DIR = O, BUS = SDMA_LL7
PORT SDMA7_TX_SOP = LL_Tx_SOP_n, DIR = O, BUS = SDMA_LL7
PORT SDMA7_TX_EOP = LL_Tx_EOP_n, DIR = O, BUS = SDMA_LL7
PORT SDMA7_TX_Src_Rdy = LL_Tx_SrcRdy_n, DIR = O, BUS = SDMA_LL7
PORT SDMA7_TX_Dst_Rdy = LL_Tx_DstRdy_n, DIR = I, BUS = SDMA_LL7, INITIALVAL = VCC
PORT SDMA7_RX_D = LL_Rx_Data, DIR = I, BUS = SDMA_LL7, INITIALVAL = GND, VEC = [0:31]
PORT SDMA7_RX_Rem = LL_Rx_Rem, DIR = I, BUS = SDMA_LL7, INITIALVAL = VCC, VEC = [0:3]
PORT SDMA7_RX_SOF = LL_Rx_SOF_n, DIR = I, BUS = SDMA_LL7, INITIALVAL = VCC
PORT SDMA7_RX_EOF = LL_Rx_EOF_n, DIR = I, BUS = SDMA_LL7, INITIALVAL = VCC
PORT SDMA7_RX_SOP = LL_Rx_SOP_n, DIR = I, BUS = SDMA_LL7, INITIALVAL = VCC
PORT SDMA7_RX_EOP = LL_Rx_EOP_n, DIR = I, BUS = SDMA_LL7, INITIALVAL = VCC
PORT SDMA7_RX_Src_Rdy = LL_Rx_SrcRdy_n, DIR = I, BUS = SDMA_LL7, INITIALVAL = VCC
PORT SDMA7_RX_Dst_Rdy = LL_Rx_DstRdy_n, DIR = O, BUS = SDMA_LL7
PORT SDMA_CTRL7_Clk = "", DIR = I, BUS = SDMA_CTRL7, SIGIS = CLK, INITIALVAL = VCC
PORT SDMA_CTRL7_Rst = SPLB_Rst, DIR = I, BUS = SDMA_CTRL7, SIGIS = RST
PORT SDMA_CTRL7_PLB_ABus = PLB_ABus, DIR = I, BUS = SDMA_CTRL7, VEC = [0:31]
PORT SDMA_CTRL7_PLB_PAValid = PLB_PAValid, DIR = I, BUS = SDMA_CTRL7
PORT SDMA_CTRL7_PLB_SAValid = PLB_SAValid, DIR = I, BUS = SDMA_CTRL7
PORT SDMA_CTRL7_PLB_masterID = PLB_masterID, DIR = I, BUS = SDMA_CTRL7, VEC = [0:(C_SDMA_CTRL7_MID_WIDTH-1)]
PORT SDMA_CTRL7_PLB_RNW = PLB_RNW, DIR = I, BUS = SDMA_CTRL7
PORT SDMA_CTRL7_PLB_BE = PLB_BE, DIR = I, BUS = SDMA_CTRL7, VEC = [0:((C_SDMA_CTRL7_DWIDTH/8)-1)]
PORT SDMA_CTRL7_PLB_UABus = PLB_UABus, DIR = I, BUS = SDMA_CTRL7, VEC = [0:31]
PORT SDMA_CTRL7_PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SDMA_CTRL7
PORT SDMA_CTRL7_PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SDMA_CTRL7
PORT SDMA_CTRL7_PLB_abort = PLB_abort, DIR = I, BUS = SDMA_CTRL7
PORT SDMA_CTRL7_PLB_busLock = PLB_busLock, DIR = I, BUS = SDMA_CTRL7
PORT SDMA_CTRL7_PLB_MSize = PLB_MSize, DIR = I, BUS = SDMA_CTRL7, VEC = [0:1]
PORT SDMA_CTRL7_PLB_size = PLB_size, DIR = I, BUS = SDMA_CTRL7, VEC = [0:3]
PORT SDMA_CTRL7_PLB_type = PLB_type, DIR = I, BUS = SDMA_CTRL7, VEC = [0:2]
PORT SDMA_CTRL7_PLB_lockErr = PLB_lockErr, DIR = I, BUS = SDMA_CTRL7
PORT SDMA_CTRL7_PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SDMA_CTRL7
PORT SDMA_CTRL7_PLB_wrPendPri = PLB_wrPendPri, DIR = I, BUS = SDMA_CTRL7, VEC = [0:1]
PORT SDMA_CTRL7_PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SDMA_CTRL7
PORT SDMA_CTRL7_PLB_rdPendPri = PLB_rdPendPri, DIR = I, BUS = SDMA_CTRL7, VEC = [0:1]
PORT SDMA_CTRL7_PLB_reqPri = PLB_reqPri, DIR = I, BUS = SDMA_CTRL7, VEC = [0:1]
PORT SDMA_CTRL7_PLB_TAttribute = PLB_TAttribute, DIR = I, BUS = SDMA_CTRL7, VEC = [0:15]
PORT SDMA_CTRL7_PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SDMA_CTRL7
PORT SDMA_CTRL7_PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SDMA_CTRL7
PORT SDMA_CTRL7_PLB_wrDBus = PLB_wrDBus, DIR = I, BUS = SDMA_CTRL7, VEC = [0:(C_SDMA_CTRL7_DWIDTH-1)]
PORT SDMA_CTRL7_Sl_addrAck = Sl_addrAck, DIR = O, BUS = SDMA_CTRL7
PORT SDMA_CTRL7_Sl_SSize = Sl_SSize, DIR = O, BUS = SDMA_CTRL7, VEC = [0:1]
PORT SDMA_CTRL7_Sl_wait = Sl_wait, DIR = O, BUS = SDMA_CTRL7
PORT SDMA_CTRL7_Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SDMA_CTRL7
PORT SDMA_CTRL7_Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SDMA_CTRL7
PORT SDMA_CTRL7_Sl_wrComp = Sl_wrComp, DIR = O, BUS = SDMA_CTRL7
PORT SDMA_CTRL7_Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SDMA_CTRL7
PORT SDMA_CTRL7_Sl_rdDBus = Sl_rdDBus, DIR = O, BUS = SDMA_CTRL7, VEC = [0:(C_SDMA_CTRL7_DWIDTH-1)]
PORT SDMA_CTRL7_Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, BUS = SDMA_CTRL7, VEC = [0:3]
PORT SDMA_CTRL7_Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SDMA_CTRL7
PORT SDMA_CTRL7_Sl_rdComp = Sl_rdComp, DIR = O, BUS = SDMA_CTRL7
PORT SDMA_CTRL7_Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SDMA_CTRL7
PORT SDMA_CTRL7_Sl_MBusy = Sl_MBusy, DIR = O, BUS = SDMA_CTRL7, VEC = [0:(C_SDMA_CTRL7_NUM_MASTERS-1)]
PORT SDMA_CTRL7_Sl_MRdErr = Sl_MRdErr, DIR = O, BUS = SDMA_CTRL7, VEC = [0:(C_SDMA_CTRL7_NUM_MASTERS-1)]
PORT SDMA_CTRL7_Sl_MWrErr = Sl_MWrErr, DIR = O, BUS = SDMA_CTRL7, VEC = [0:(C_SDMA_CTRL7_NUM_MASTERS-1)]
PORT SDMA_CTRL7_Sl_MIRQ = Sl_MIRQ, DIR = O, BUS = SDMA_CTRL7, VEC = [0:(C_SDMA_CTRL7_NUM_MASTERS-1)]
PORT PIM7_Addr = Addr, DIR = I, BUS = MPMC_PIM7, VEC = [31:0]
PORT PIM7_AddrReq = AddrReq, DIR = I, BUS = MPMC_PIM7
PORT PIM7_AddrAck = AddrAck, DIR = O, BUS = MPMC_PIM7
PORT PIM7_RNW = RNW, DIR = I, BUS = MPMC_PIM7
PORT PIM7_Size = Size, DIR = I, BUS = MPMC_PIM7, VEC = [3:0]
PORT PIM7_RdModWr = RdModWr, DIR = I, BUS = MPMC_PIM7
PORT PIM7_WrFIFO_Data = WrFIFO_Data, DIR = I, BUS = MPMC_PIM7, VEC = [(C_PIM7_DATA_WIDTH-1):0]
PORT PIM7_WrFIFO_BE = WrFIFO_BE, DIR = I, BUS = MPMC_PIM7, VEC = [(C_PIM7_DATA_WIDTH/8-1):0]
PORT PIM7_WrFIFO_Push = WrFIFO_Push, DIR = I, BUS = MPMC_PIM7
PORT PIM7_RdFIFO_Data = RdFIFO_Data, DIR = O, BUS = MPMC_PIM7, VEC = [(C_PIM7_DATA_WIDTH-1):0]
PORT PIM7_RdFIFO_Pop = RdFIFO_Pop, DIR = I, BUS = MPMC_PIM7
PORT PIM7_RdFIFO_RdWdAddr = RdFIFO_RdWdAddr, DIR = O, BUS = MPMC_PIM7, VEC = [3:0]
PORT PIM7_WrFIFO_Empty = WrFIFO_Empty, DIR = O, BUS = MPMC_PIM7
PORT PIM7_WrFIFO_AlmostFull = WrFIFO_AlmostFull, DIR = O, BUS = MPMC_PIM7
PORT PIM7_WrFIFO_Flush = WrFIFO_Flush, DIR = I, BUS = MPMC_PIM7
PORT PIM7_RdFIFO_Empty = RdFIFO_Empty, DIR = O, BUS = MPMC_PIM7
PORT PIM7_RdFIFO_Flush = RdFIFO_Flush, DIR = I, BUS = MPMC_PIM7
PORT PIM7_RdFIFO_Latency = RDFIFO_Latency, DIR = O, BUS = MPMC_PIM7, VEC = [1:0]
PORT PIM7_InitDone = InitDone, DIR = O, BUS = MPMC_PIM7
PORT PPC440MC7_MIMCReadNotWrite = MIMCREADNOTWRITE, DIR = I, BUS = PPC440MC7
PORT PPC440MC7_MIMCAddress = MIMCADDRESS, DIR = I, BUS = PPC440MC7, VEC = [0:35]
PORT PPC440MC7_MIMCAddressValid = MIMCADDRESSVALID, DIR = I, BUS = PPC440MC7
PORT PPC440MC7_MIMCWriteData = MIMCWRITEDATA, DIR = I, BUS = PPC440MC7, VEC = [0:127]
PORT PPC440MC7_MIMCWriteDataValid = MIMCWRITEDATAVALID, DIR = I, BUS = PPC440MC7
PORT PPC440MC7_MIMCByteEnable = MIMCBYTEENABLE, DIR = I, BUS = PPC440MC7, VEC = [0:15]
PORT PPC440MC7_MIMCBankConflict = MIMCBANKCONFLICT, DIR = I, BUS = PPC440MC7
PORT PPC440MC7_MIMCRowConflict = MIMCROWCONFLICT, DIR = I, BUS = PPC440MC7
PORT PPC440MC7_MCMIReadData = MCMIREADDATA, DIR = O, BUS = PPC440MC7, VEC = [0:127]
PORT PPC440MC7_MCMIReadDataValid = MCMIREADDATAVALID, DIR = O, BUS = PPC440MC7
PORT PPC440MC7_MCMIReadDataErr = MCMIREADDATAERR, DIR = O, BUS = PPC440MC7
PORT PPC440MC7_MCMIAddrReadyToAccept = MCMIADDRREADYTOACCEPT, DIR = O, BUS = PPC440MC7
PORT VFBC7_Cmd_Clk = cmd_clk, DIR = I, BUS = VFBC7
PORT VFBC7_Cmd_Reset = cmd_reset, DIR = I, BUS = VFBC7
PORT VFBC7_Cmd_Data = cmd_data, DIR = I, BUS = VFBC7, VEC = [31:0]
PORT VFBC7_Cmd_Write = cmd_write, DIR = I, BUS = VFBC7
PORT VFBC7_Cmd_End = cmd_end, DIR = I, BUS = VFBC7
PORT VFBC7_Cmd_Full = cmd_full, DIR = O, BUS = VFBC7
PORT VFBC7_Cmd_Almost_Full = cmd_almost_full, DIR = O, BUS = VFBC7
PORT VFBC7_Cmd_Idle = cmd_idle, DIR = O, BUS = VFBC7
PORT VFBC7_Wd_Clk = wd_clk, DIR = I, BUS = VFBC7
PORT VFBC7_Wd_Reset = wd_reset, DIR = I, BUS = VFBC7
PORT VFBC7_Wd_Write = wd_write, DIR = I, BUS = VFBC7
PORT VFBC7_Wd_End_Burst = wd_end_burst, DIR = I, BUS = VFBC7
PORT VFBC7_Wd_Flush = wd_flush, DIR = I, BUS = VFBC7
PORT VFBC7_Wd_Data = wd_data, DIR = I, BUS = VFBC7, VEC = [C_VFBC7_RDWD_DATA_WIDTH-1:0]
PORT VFBC7_Wd_Data_BE = wd_data_be, DIR = I, BUS = VFBC7, VEC = [C_VFBC7_RDWD_DATA_WIDTH/8-1:0]
PORT VFBC7_Wd_Full = wd_full, DIR = O, BUS = VFBC7
PORT VFBC7_Wd_Almost_Full = wd_almost_full, DIR = O, BUS = VFBC7
PORT VFBC7_Rd_Clk = rd_clk, DIR = I, BUS = VFBC7
PORT VFBC7_Rd_Reset = rd_reset, DIR = I, BUS = VFBC7
PORT VFBC7_Rd_Read = rd_read, DIR = I, BUS = VFBC7
PORT VFBC7_Rd_End_Burst = rd_end_burst, DIR = I, BUS = VFBC7
PORT VFBC7_Rd_Flush = rd_flush, DIR = I, BUS = VFBC7
PORT VFBC7_Rd_Data = rd_data, DIR = O, BUS = VFBC7, VEC = [C_VFBC7_RDWD_DATA_WIDTH-1:0]
PORT VFBC7_Rd_Empty = rd_empty, DIR = O, BUS = VFBC7
PORT VFBC7_Rd_Almost_Empty = rd_almost_empty, DIR = O, BUS = VFBC7
PORT MCB7_cmd_clk = cmd_clk, DIR = I, BUS = MCB7
PORT MCB7_cmd_en = cmd_en, DIR = I, BUS = MCB7
PORT MCB7_cmd_instr = cmd_instr, DIR = I, BUS = MCB7, VEC = [2:0]
PORT MCB7_cmd_bl = cmd_bl, DIR = I, BUS = MCB7, VEC = [5:0]
PORT MCB7_cmd_byte_addr = cmd_byte_addr, DIR = I, BUS = MCB7, VEC = [29:0]
PORT MCB7_cmd_empty = cmd_empty, DIR = O, BUS = MCB7
PORT MCB7_cmd_full = cmd_full, DIR = O, BUS = MCB7
PORT MCB7_wr_clk = wr_clk, DIR = I, BUS = MCB7
PORT MCB7_wr_en = wr_en, DIR = I, BUS = MCB7
PORT MCB7_wr_mask = wr_mask, DIR = I, BUS = MCB7, VEC = [C_PIM7_DATA_WIDTH/8-1:0]
PORT MCB7_wr_data = wr_data, DIR = I, BUS = MCB7, VEC = [C_PIM7_DATA_WIDTH-1:0]
PORT MCB7_wr_full = wr_full, DIR = O, BUS = MCB7
PORT MCB7_wr_empty = wr_empty, DIR = O, BUS = MCB7
PORT MCB7_wr_count = wr_count, DIR = O, BUS = MCB7, VEC = [6:0]
PORT MCB7_wr_underrun = wr_underrun, DIR = O, BUS = MCB7
PORT MCB7_wr_error = wr_error, DIR = O, BUS = MCB7
PORT MCB7_rd_clk = rd_clk, DIR = I, BUS = MCB7
PORT MCB7_rd_en = rd_en, DIR = I, BUS = MCB7
PORT MCB7_rd_data = rd_data, DIR = O, BUS = MCB7, VEC = [C_PIM7_DATA_WIDTH-1:0]
PORT MCB7_rd_full = rd_full, DIR = O, BUS = MCB7
PORT MCB7_rd_empty = rd_empty, DIR = O, BUS = MCB7
PORT MCB7_rd_count = rd_count, DIR = O, BUS = MCB7, VEC = [6:0]
PORT MCB7_rd_overflow = rd_overflow, DIR = O, BUS = MCB7
PORT MCB7_rd_error = rd_error, DIR = O, BUS = MCB7
PORT MPMC_CTRL_Clk = "", DIR = I, BUS = MPMC_CTRL, SIGIS = CLK, INITIALVAL = VCC
PORT MPMC_CTRL_Rst = SPLB_Rst, DIR = I, BUS = MPMC_CTRL, SIGIS = RST
PORT MPMC_CTRL_PLB_ABus = PLB_ABus, DIR = I, BUS = MPMC_CTRL, VEC = [0:31]
PORT MPMC_CTRL_PLB_PAValid = PLB_PAValid, DIR = I, BUS = MPMC_CTRL
PORT MPMC_CTRL_PLB_SAValid = PLB_SAValid, DIR = I, BUS = MPMC_CTRL
PORT MPMC_CTRL_PLB_masterID = PLB_masterID, DIR = I, BUS = MPMC_CTRL, VEC = [0:(C_MPMC_CTRL_MID_WIDTH-1)]
PORT MPMC_CTRL_PLB_RNW = PLB_RNW, DIR = I, BUS = MPMC_CTRL
PORT MPMC_CTRL_PLB_BE = PLB_BE, DIR = I, BUS = MPMC_CTRL, VEC = [0:((C_MPMC_CTRL_DWIDTH/8)-1)]
PORT MPMC_CTRL_PLB_UABus = PLB_UABus, DIR = I, BUS = MPMC_CTRL, VEC = [0:31]
PORT MPMC_CTRL_PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = MPMC_CTRL
PORT MPMC_CTRL_PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = MPMC_CTRL
PORT MPMC_CTRL_PLB_abort = PLB_abort, DIR = I, BUS = MPMC_CTRL
PORT MPMC_CTRL_PLB_busLock = PLB_busLock, DIR = I, BUS = MPMC_CTRL
PORT MPMC_CTRL_PLB_MSize = PLB_MSize, DIR = I, BUS = MPMC_CTRL, VEC = [0:1]
PORT MPMC_CTRL_PLB_size = PLB_size, DIR = I, BUS = MPMC_CTRL, VEC = [0:3]
PORT MPMC_CTRL_PLB_type = PLB_type, DIR = I, BUS = MPMC_CTRL, VEC = [0:2]
PORT MPMC_CTRL_PLB_lockErr = PLB_lockErr, DIR = I, BUS = MPMC_CTRL
PORT MPMC_CTRL_PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = MPMC_CTRL
PORT MPMC_CTRL_PLB_wrPendPri = PLB_wrPendPri, DIR = I, BUS = MPMC_CTRL, VEC = [0:1]
PORT MPMC_CTRL_PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = MPMC_CTRL
PORT MPMC_CTRL_PLB_rdPendPri = PLB_rdPendPri, DIR = I, BUS = MPMC_CTRL, VEC = [0:1]
PORT MPMC_CTRL_PLB_reqPri = PLB_reqPri, DIR = I, BUS = MPMC_CTRL, VEC = [0:1]
PORT MPMC_CTRL_PLB_TAttribute = PLB_TAttribute, DIR = I, BUS = MPMC_CTRL, VEC = [0:15]
PORT MPMC_CTRL_PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = MPMC_CTRL
PORT MPMC_CTRL_PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = MPMC_CTRL
PORT MPMC_CTRL_PLB_wrDBus = PLB_wrDBus, DIR = I, BUS = MPMC_CTRL, VEC = [0:(C_MPMC_CTRL_DWIDTH-1)]
PORT MPMC_CTRL_Sl_addrAck = Sl_addrAck, DIR = O, BUS = MPMC_CTRL
PORT MPMC_CTRL_Sl_SSize = Sl_SSize, DIR = O, BUS = MPMC_CTRL, VEC = [0:1]
PORT MPMC_CTRL_Sl_wait = Sl_wait, DIR = O, BUS = MPMC_CTRL
PORT MPMC_CTRL_Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = MPMC_CTRL
PORT MPMC_CTRL_Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = MPMC_CTRL
PORT MPMC_CTRL_Sl_wrComp = Sl_wrComp, DIR = O, BUS = MPMC_CTRL
PORT MPMC_CTRL_Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = MPMC_CTRL
PORT MPMC_CTRL_Sl_rdDBus = Sl_rdDBus, DIR = O, BUS = MPMC_CTRL, VEC = [0:(C_MPMC_CTRL_DWIDTH-1)]
PORT MPMC_CTRL_Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, BUS = MPMC_CTRL, VEC = [0:3]
PORT MPMC_CTRL_Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = MPMC_CTRL
PORT MPMC_CTRL_Sl_rdComp = Sl_rdComp, DIR = O, BUS = MPMC_CTRL
PORT MPMC_CTRL_Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = MPMC_CTRL
PORT MPMC_CTRL_Sl_MBusy = Sl_MBusy, DIR = O, BUS = MPMC_CTRL, VEC = [0:(C_MPMC_CTRL_NUM_MASTERS-1)]
PORT MPMC_CTRL_Sl_MRdErr = Sl_MRdErr, DIR = O, BUS = MPMC_CTRL, VEC = [0:(C_MPMC_CTRL_NUM_MASTERS-1)]
PORT MPMC_CTRL_Sl_MWrErr = Sl_MWrErr, DIR = O, BUS = MPMC_CTRL, VEC = [0:(C_MPMC_CTRL_NUM_MASTERS-1)]
PORT MPMC_CTRL_Sl_MIRQ = Sl_MIRQ, DIR = O, BUS = MPMC_CTRL, VEC = [0:(C_MPMC_CTRL_NUM_MASTERS-1)]
PORT MPMC_Clk0 = "", DIR = I, SIGIS = CLK, INITIALVAL = VCC, ASSIGNMENT = REQUIRE
PORT MPMC_Clk0_DIV2 = "", DIR = I, SIGIS = CLK, INITIALVAL = VCC, ISVALID = (([xstrncmp C_FAMILY  virtex5 ]) && C_USE_STATIC_PHY == 0 && ([xstrncmp C_MEM_TYPE  DDR2 ])), ASSIGNMENT = REQUIRE
PORT MPMC_Clk90 = "", DIR = I, SIGIS = CLK, INITIALVAL = VCC, ASSIGNMENT = REQUIRE, ISVALID = (![xstrncmp C_FAMILY  spartan6 ] && ![xstrncmp C_FAMILY  virtex6 ] && ([xstrncmp C_MEM_TYPE  DDR ] || [xstrncmp C_MEM_TYPE  DDR2 ] || C_DEBUG_REG_ENABLE == 1))
PORT MPMC_Clk_200MHz = "", DIR = I, SIGIS = CLK, INITIALVAL = VCC, ISVALID = (([xstrncmp C_FAMILY  virtex4 ] || [xstrncmp C_FAMILY  qvirtex4 ] || [xstrncmp C_FAMILY  qrvirtex4 ] || [xstrncmp C_FAMILY  virtex5 ] || [xstrncmp C_FAMILY  virtex6 ]) && ([xstrncmp C_MEM_TYPE  DDR ] || [xstrncmp C_MEM_TYPE  DDR2 ] || [xstrncmp C_MEM_TYPE  DDR3 ]) && C_USE_STATIC_PHY == 0 && C_NUM_IDELAYCTRL > 0), ASSIGNMENT = REQUIRE
PORT MPMC_Rst = "", DIR = I, SIGIS = RST, ASSIGNMENT = REQUIRE
PORT MPMC_Clk_Mem = "", DIR = I, SIGIS = CLK, INITIALVAL = VCC, ISVALID = (C_USE_STATIC_PHY == 1 || [xstrncmp C_MEM_TYPE  SDRAM ] || (([xstrncmp C_MEM_TYPE  DDR2 ] || [xstrncmp C_MEM_TYPE  DDR3 ]) && [xstrncmp C_FAMILY  virtex6 ]) ), ASSIGNMENT = REQUIRE
PORT MPMC_Clk_Mem_2x = "", DIR = I, SIGIS = CLK, INITIALVAL = VCC, ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = REQUIRE
PORT MPMC_Clk_Mem_2x_180 = "", DIR = I, SIGIS = CLK, INITIALVAL = VCC, ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = REQUIRE
PORT MPMC_Clk_Mem_2x_CE0 = "", DIR = I, SIGIS = CLK, INITIALVAL = VCC, ISVALID = ([xstrncmp C_FAMILY  spartan6 ] && C_MCB_USE_EXTERNAL_BUFPLL == 1), ASSIGNMENT = REQUIRE
PORT MPMC_Clk_Mem_2x_CE90 = "", DIR = I, SIGIS = CLK, INITIALVAL = VCC, ISVALID = ([xstrncmp C_FAMILY  spartan6 ] && C_MCB_USE_EXTERNAL_BUFPLL == 1), ASSIGNMENT = REQUIRE
PORT MPMC_Clk_Wr_I0 = "", DIR = I, SIGIS = CLK, INITIALVAL = VCC, ISVALID = (([xstrncmp C_MEM_TYPE  DDR2 ] || [xstrncmp C_MEM_TYPE  DDR3 ]) && [xstrncmp C_FAMILY  virtex6 ]), ASSIGNMENT = REQUIRE
PORT MPMC_Clk_Wr_O0 = "", DIR = I, SIGIS = CLK, INITIALVAL = VCC, ISVALID = (([xstrncmp C_MEM_TYPE  DDR2 ] || [xstrncmp C_MEM_TYPE  DDR3 ]) && [xstrncmp C_FAMILY  virtex6 ])
PORT MPMC_Clk_Wr_I1 = "", DIR = I, SIGIS = CLK, INITIALVAL = VCC, ISVALID = (([xstrncmp C_MEM_TYPE  DDR2 ] || [xstrncmp C_MEM_TYPE  DDR3 ]) && [xstrncmp C_FAMILY  virtex6 ])
PORT MPMC_Clk_Wr_O1 = "", DIR = I, SIGIS = CLK, INITIALVAL = VCC, ISVALID = (([xstrncmp C_MEM_TYPE  DDR2 ] || [xstrncmp C_MEM_TYPE  DDR3 ]) && [xstrncmp C_FAMILY  virtex6 ])
PORT MPMC_PLL_Lock = "", DIR = I, ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = REQUIRE
PORT MPMC_Idelayctrl_Rdy_I = "", DIR = I, INITIALVAL = VCC, ISVALID = (([xstrncmp C_FAMILY  virtex4 ] || [xstrncmp C_FAMILY  qvirtex4 ] || [xstrncmp C_FAMILY  qrvirtex4 ] || [xstrncmp C_FAMILY  virtex5 ] || [xstrncmp C_FAMILY  virtex6 ]) && ([xstrncmp C_MEM_TYPE  DDR ] || [xstrncmp C_MEM_TYPE  DDR2 ] || [xstrncmp C_MEM_TYPE  DDR3 ]) && C_USE_STATIC_PHY == 0)
PORT MPMC_Idelayctrl_Rdy_O = "", DIR = O, ISVALID = (([xstrncmp C_FAMILY  virtex4 ] || [xstrncmp C_FAMILY  qvirtex4 ] || [xstrncmp C_FAMILY  qrvirtex4 ] || [xstrncmp C_FAMILY  virtex5 ] || [xstrncmp C_FAMILY  virtex6 ]) && ([xstrncmp C_MEM_TYPE  DDR ] || [xstrncmp C_MEM_TYPE  DDR2 ] || [xstrncmp C_MEM_TYPE  DDR3 ]) && C_USE_STATIC_PHY == 0)
PORT MPMC_InitDone = "", DIR = O
PORT MPMC_ECC_Intr = "", DIR = O, SIGIS = INTERRUPT, ISVALID = (C_INCLUDE_ECC_SUPPORT == 1)
PORT MPMC_DCM_PSEN = "", DIR = O, ISVALID = ((C_USE_STATIC_PHY == 1 || [xstrncmp C_MEM_TYPE  SDRAM ] || [xstrncmp C_FAMILY  virtex6 ]) && ![xstrncmp C_FAMILY  spartan6 ])
PORT MPMC_DCM_PSINCDEC = "", DIR = O, ISVALID = ((C_USE_STATIC_PHY == 1 || [xstrncmp C_MEM_TYPE  SDRAM ] || [xstrncmp C_FAMILY  virtex6 ]) && ![xstrncmp C_FAMILY  spartan6 ])
PORT MPMC_DCM_PSDONE = "", DIR = I, ISVALID = ((C_USE_STATIC_PHY == 1 || [xstrncmp C_MEM_TYPE  SDRAM ] || [xstrncmp C_FAMILY  virtex6 ]) && ![xstrncmp C_FAMILY  spartan6 ])
PORT SDRAM_Clk = "", DIR = O, VEC = [C_MEM_CLK_WIDTH-1:0], SIGIS = CLK, ISVALID = ([xstrncmp C_MEM_TYPE  SDRAM ] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = SDRAM_CLK
PORT SDRAM_CE = "", DIR = O, VEC = [C_MEM_CE_WIDTH-1:0], ISVALID = ([xstrncmp C_MEM_TYPE  SDRAM ] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = SDRAM_CLK_ENABLE
PORT SDRAM_CS_n = "", DIR = O, VEC = [C_MEM_CS_N_WIDTH-1:0], ISVALID = ([xstrncmp C_MEM_TYPE  SDRAM ] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = SDRAM_CHIP_SELECT
PORT SDRAM_RAS_n = "", DIR = O, ISVALID = ([xstrncmp C_MEM_TYPE  SDRAM ] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = SDRAM_ROW_ADDR_SELECT
PORT SDRAM_CAS_n = "", DIR = O, ISVALID = ([xstrncmp C_MEM_TYPE  SDRAM ] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = SDRAM_COL_ADDR_SELECT
PORT SDRAM_WE_n = "", DIR = O, ISVALID = ([xstrncmp C_MEM_TYPE  SDRAM ] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = SDRAM_WRITE_ENABLE
PORT SDRAM_BankAddr = "", DIR = O, VEC = [C_MEM_BANKADDR_WIDTH-1:0], ISVALID = ([xstrncmp C_MEM_TYPE  SDRAM ] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = SDRAM_BANKADDR
PORT SDRAM_Addr = "", DIR = O, VEC = [C_MEM_ADDR_WIDTH-1:0], ISVALID = ([xstrncmp C_MEM_TYPE  SDRAM ] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = SDRAM_ADDRESS
PORT SDRAM_DQ = "", DIR = IO, VEC = [C_ECC_DATA_WIDTH  + C_MEM_DATA_WIDTH-1:0], THREE_STATE = FALSE, ISVALID = ([xstrncmp C_MEM_TYPE  SDRAM ] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = SDRAM_DATA
PORT SDRAM_DM = "", DIR = O, VEC = [C_ECC_DM_WIDTH    + C_MEM_DM_WIDTH-1:0], ISVALID = ([xstrncmp C_MEM_TYPE  SDRAM ] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = SDRAM_DATA_MASK
PORT DDR_Clk = "", DIR = O, VEC = [C_MEM_CLK_WIDTH-1:0], SIGIS = CLK, ISVALID = ([xstrncmp C_MEM_TYPE  DDR ] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR_Clk
PORT DDR_Clk_n = "", DIR = O, VEC = [C_MEM_CLK_WIDTH-1:0], SIGIS = CLK, ISVALID = ([xstrncmp C_MEM_TYPE  DDR ] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR_Clk_n
PORT DDR_CE = "", DIR = O, VEC = [C_MEM_CE_WIDTH-1:0], ISVALID = ([xstrncmp C_MEM_TYPE  DDR ] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR_CLOCK_ENABLE
PORT DDR_CS_n = "", DIR = O, VEC = [C_MEM_CS_N_WIDTH-1:0], ISVALID = ([xstrncmp C_MEM_TYPE  DDR ] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR_CHIP_SELECT
PORT DDR_RAS_n = "", DIR = O, ISVALID = ([xstrncmp C_MEM_TYPE  DDR ] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR_ROW_ADDR_SELECT
PORT DDR_CAS_n = "", DIR = O, ISVALID = ([xstrncmp C_MEM_TYPE  DDR ] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR_COL_ADDR_SELECT
PORT DDR_WE_n = "", DIR = O, ISVALID = ([xstrncmp C_MEM_TYPE  DDR ] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR_WRITE_ENABLE
PORT DDR_BankAddr = "", DIR = O, VEC = [C_MEM_BANKADDR_WIDTH-1:0], ISVALID = ([xstrncmp C_MEM_TYPE  DDR ] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR_BANKADDR
PORT DDR_Addr = "", DIR = O, VEC = [C_MEM_ADDR_WIDTH-1:0], ISVALID = ([xstrncmp C_MEM_TYPE  DDR ] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR_ADDRESS
PORT DDR_DQ = "", DIR = IO, VEC = [C_ECC_DATA_WIDTH  + C_MEM_DATA_WIDTH-1:0], THREE_STATE = FALSE, ISVALID = ([xstrncmp C_MEM_TYPE  DDR ] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR_DATA
PORT DDR_DM = "", DIR = O, VEC = [C_ECC_DM_WIDTH    + C_MEM_DM_WIDTH-1:0], ISVALID = ([xstrncmp C_MEM_TYPE  DDR ] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR_DATA_MASK
PORT DDR_DQS = "", DIR = IO, VEC = [C_ECC_DQS_WIDTH   + C_MEM_DQS_WIDTH-1:0], THREE_STATE = FALSE, ISVALID = ([xstrncmp C_MEM_TYPE  DDR ] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR_DATA_STROBE
PORT DDR_DQS_Div_O = "", DIR = O, ISVALID = ([xstrncmp C_MEM_TYPE  DDR ] && (C_USE_STATIC_PHY == 0) && ([xstrncmp C_FAMILY  spartan3 ] || [xstrncmp C_FAMILY  aspartan3 ] || [xstrncmp C_FAMILY  spartan3a ] || [xstrncmp C_FAMILY  aspartan3a ] || [xstrncmp C_FAMILY  spartan3an ] || [xstrncmp C_FAMILY  spartan3e ] || [xstrncmp C_FAMILY  aspartan3e ] || [xstrncmp C_FAMILY  spartan3adsp ] || [xstrncmp C_FAMILY  aspartan3adsp ])), IO_IF = memory_0, IO_IS = DDR_DQS_DIV_O, ASSIGNMENT = REQUIRE
PORT DDR_DQS_Div_I = "", DIR = I, ISVALID = ([xstrncmp C_MEM_TYPE  DDR ] && (C_USE_STATIC_PHY == 0) && ([xstrncmp C_FAMILY  spartan3 ] || [xstrncmp C_FAMILY  aspartan3 ] || [xstrncmp C_FAMILY  spartan3a ] || [xstrncmp C_FAMILY  aspartan3a ] || [xstrncmp C_FAMILY  spartan3an ] || [xstrncmp C_FAMILY  spartan3e ] || [xstrncmp C_FAMILY  aspartan3e ] || [xstrncmp C_FAMILY  spartan3adsp ] || [xstrncmp C_FAMILY  aspartan3adsp ])), IO_IF = memory_0, IO_IS = DDR_DQS_DIV_I, ASSIGNMENT = REQUIRE
PORT DDR2_Clk = "", DIR = O, VEC = [C_MEM_CLK_WIDTH-1:0], SIGIS = CLK, ISVALID = ([xstrncmp C_MEM_TYPE  DDR2 ] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR2_Clk
PORT DDR2_Clk_n = "", DIR = O, VEC = [C_MEM_CLK_WIDTH-1:0], SIGIS = CLK, ISVALID = ([xstrncmp C_MEM_TYPE  DDR2 ] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR2_Clk_n
PORT DDR2_CE = "", DIR = O, VEC = [C_MEM_CE_WIDTH-1:0], ISVALID = ([xstrncmp C_MEM_TYPE  DDR2 ] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR2_CLK_ENABLE
PORT DDR2_CS_n = "", DIR = O, VEC = [C_MEM_CS_N_WIDTH-1:0], ISVALID = ([xstrncmp C_MEM_TYPE  DDR2 ] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR2_CHIP_SELECT
PORT DDR2_ODT = "", DIR = O, VEC = [C_MEM_ODT_WIDTH-1:0], ISVALID = ([xstrncmp C_MEM_TYPE  DDR2 ] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR2_ODT
PORT DDR2_RAS_n = "", DIR = O, ISVALID = ([xstrncmp C_MEM_TYPE  DDR2 ] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR2_ROW_ADDR_SELECT
PORT DDR2_CAS_n = "", DIR = O, ISVALID = ([xstrncmp C_MEM_TYPE  DDR2 ] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR2_COL_ADDR_SELECT
PORT DDR2_WE_n = "", DIR = O, ISVALID = ([xstrncmp C_MEM_TYPE  DDR2 ] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR2_WRITE_ENABLE
PORT DDR2_BankAddr = "", DIR = O, VEC = [C_MEM_BANKADDR_WIDTH-1:0], ISVALID = ([xstrncmp C_MEM_TYPE  DDR2 ] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR2_BANKADDR
PORT DDR2_Addr = "", DIR = O, VEC = [C_MEM_ADDR_WIDTH-1:0], ISVALID = ([xstrncmp C_MEM_TYPE  DDR2 ] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR2_ADDRESS
PORT DDR2_DQ = "", DIR = IO, VEC = [C_ECC_DATA_WIDTH  + C_MEM_DATA_WIDTH-1:0], THREE_STATE = FALSE, ISVALID = ([xstrncmp C_MEM_TYPE  DDR2 ] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR2_DATA
PORT DDR2_DM = "", DIR = O, VEC = [C_ECC_DM_WIDTH    + C_MEM_DM_WIDTH-1:0], ISVALID = ([xstrncmp C_MEM_TYPE  DDR2 ] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR2_DATA_MASK
PORT DDR2_DQS = "", DIR = IO, VEC = [C_ECC_DQS_WIDTH   + C_MEM_DQS_WIDTH-1:0], THREE_STATE = FALSE, ISVALID = ([xstrncmp C_MEM_TYPE  DDR2 ] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR2_DATA_STROBE
PORT DDR2_DQS_n = "", DIR = IO, VEC = [C_ECC_DQS_WIDTH   + C_MEM_DQS_WIDTH-1:0], THREE_STATE = FALSE, ISVALID = ([xstrncmp C_MEM_TYPE  DDR2 ] && ![xstrncmp C_FAMILY  spartan6 ] && C_DDR2_DQSN_ENABLE == 1), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR2_DATA_STROBE_N
PORT DDR2_DQS_Div_O = "", DIR = O, ISVALID = ([xstrncmp C_MEM_TYPE  DDR2 ] && (C_USE_STATIC_PHY == 0) && ([xstrncmp C_FAMILY  spartan3 ] || [xstrncmp C_FAMILY  aspartan3 ] || [xstrncmp C_FAMILY  spartan3a ] || [xstrncmp C_FAMILY  aspartan3a ] || [xstrncmp C_FAMILY  spartan3an ] || [xstrncmp C_FAMILY  spartan3e ] || [xstrncmp C_FAMILY  aspartan3e ] || [xstrncmp C_FAMILY  spartan3adsp ] || [xstrncmp C_FAMILY  aspartan3adsp ])), IO_IF = memory_0, IO_IS = DDR2_DQS_DIV_O, ASSIGNMENT = REQUIRE
PORT DDR2_DQS_Div_I = "", DIR = I, ISVALID = ([xstrncmp C_MEM_TYPE  DDR2 ] && (C_USE_STATIC_PHY == 0) && ([xstrncmp C_FAMILY  spartan3 ] || [xstrncmp C_FAMILY  aspartan3 ] || [xstrncmp C_FAMILY  spartan3a ] || [xstrncmp C_FAMILY  aspartan3a ] || [xstrncmp C_FAMILY  spartan3an ] || [xstrncmp C_FAMILY  spartan3e ] || [xstrncmp C_FAMILY  aspartan3e ] || [xstrncmp C_FAMILY  spartan3adsp ] || [xstrncmp C_FAMILY  aspartan3adsp ])), IO_IF = memory_0, IO_IS = DDR2_DQS_DIV_I, ASSIGNMENT = REQUIRE
PORT DDR3_Clk = "", DIR = O, VEC = [C_MEM_CLK_WIDTH-1:0], SIGIS = CLK, ISVALID = ([xstrncmp C_MEM_TYPE  DDR3 ] && ![xstrncmp C_FAMILY  spartan6  ]), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR3_Clk
PORT DDR3_Clk_n = "", DIR = O, VEC = [C_MEM_CLK_WIDTH-1:0], SIGIS = CLK, ISVALID = ([xstrncmp C_MEM_TYPE  DDR3 ] && ![xstrncmp C_FAMILY  spartan6  ]), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR3_Clk_n
PORT DDR3_CE = "", DIR = O, VEC = [C_MEM_CE_WIDTH-1:0], ISVALID = ([xstrncmp C_MEM_TYPE  DDR3 ] && ![xstrncmp C_FAMILY  spartan6  ]), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR3_CLK_ENABLE
PORT DDR3_CS_n = "", DIR = O, VEC = [C_MEM_CS_N_WIDTH-1:0], ISVALID = ([xstrncmp C_MEM_TYPE  DDR3 ] && ![xstrncmp C_FAMILY  spartan6  ]), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR3_CHIP_SELECT
PORT DDR3_ODT = "", DIR = O, VEC = [C_MEM_ODT_WIDTH-1:0], ISVALID = ([xstrncmp C_MEM_TYPE  DDR3 ] && ![xstrncmp C_FAMILY  spartan6  ]), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR3_ODT
PORT DDR3_RAS_n = "", DIR = O, ISVALID = ([xstrncmp C_MEM_TYPE  DDR3 ] && ![xstrncmp C_FAMILY  spartan6  ]), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR3_ROW_ADDR_SELECT
PORT DDR3_CAS_n = "", DIR = O, ISVALID = ([xstrncmp C_MEM_TYPE  DDR3 ] && ![xstrncmp C_FAMILY  spartan6  ]), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR3_COL_ADDR_SELECT
PORT DDR3_WE_n = "", DIR = O, ISVALID = ([xstrncmp C_MEM_TYPE  DDR3 ] && ![xstrncmp C_FAMILY  spartan6  ]), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR3_WRITE_ENABLE
PORT DDR3_BankAddr = "", DIR = O, VEC = [C_MEM_BANKADDR_WIDTH-1:0], ISVALID = ([xstrncmp C_MEM_TYPE  DDR3 ] && ![xstrncmp C_FAMILY  spartan6  ]), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR3_BANKADDR
PORT DDR3_Addr = "", DIR = O, VEC = [C_MEM_ADDR_WIDTH-1:0], ISVALID = ([xstrncmp C_MEM_TYPE  DDR3 ] && ![xstrncmp C_FAMILY  spartan6  ]), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR3_ADDRESS
PORT DDR3_DQ = "", DIR = IO, VEC = [C_ECC_DATA_WIDTH  + C_MEM_DATA_WIDTH-1:0], THREE_STATE = FALSE, ISVALID = ([xstrncmp C_MEM_TYPE  DDR3 ] && ![xstrncmp C_FAMILY  spartan6  ]), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR3_DATA
PORT DDR3_DM = "", DIR = O, VEC = [C_ECC_DM_WIDTH    + C_MEM_DM_WIDTH-1:0], ISVALID = ([xstrncmp C_MEM_TYPE  DDR3 ] && ![xstrncmp C_FAMILY  spartan6  ]), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR3_DATA_MASK
PORT DDR3_Reset_n = "", DIR = O, ISVALID = ([xstrncmp C_MEM_TYPE  DDR3 ] && ![xstrncmp C_FAMILY  spartan6  ]), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR3_RESET_N
PORT DDR3_DQS = "", DIR = IO, VEC = [C_ECC_DQS_WIDTH   + C_MEM_DQS_WIDTH-1:0], THREE_STATE = FALSE, ISVALID = ([xstrncmp C_MEM_TYPE  DDR3 ] && ![xstrncmp C_FAMILY  spartan6  ]), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR3_DATA_STROBE
PORT DDR3_DQS_n = "", DIR = IO, VEC = [C_ECC_DQS_WIDTH   + C_MEM_DQS_WIDTH-1:0], THREE_STATE = FALSE, ISVALID = ([xstrncmp C_MEM_TYPE  DDR3 ] && ![xstrncmp C_FAMILY  spartan6  ]), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR3_DATA_STROBE_N
PORT mcbx_dram_addr = "", DIR = O, VEC = [C_MEM_ADDR_WIDTH-1:0], ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = MCB_ADDRESS
PORT mcbx_dram_ba = "", DIR = O, VEC = [C_MEM_BANKADDR_WIDTH-1:0], ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = MCB_BANKADDR
PORT mcbx_dram_ras_n = "", DIR = O, ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = MCB_ROW_ADDR_SELECT
PORT mcbx_dram_cas_n = "", DIR = O, ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = MCB_COL_ADDR_SELECT
PORT mcbx_dram_we_n = "", DIR = O, ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = MCB_WRITE_ENABLE
PORT mcbx_dram_cke = "", DIR = O, ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = MCB_CLK_ENABLE
PORT mcbx_dram_clk = "", DIR = O, SIGIS = CLK, ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = MCB_CLK
PORT mcbx_dram_clk_n = "", DIR = O, SIGIS = CLK, ISVALID = ([xstrncmp C_FAMILY  spartan6 ] && ([xstrncmp C_MEM_TYPE  LPDDR ] || [xstrncmp C_MEM_TYPE  DDR ] || [xstrncmp C_MEM_TYPE  DDR2 ] || [xstrncmp C_MEM_TYPE  DDR3 ])), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = MCB_CLK_N
PORT mcbx_dram_dq = "", DIR = IO, VEC = [C_MEM_DATA_WIDTH-1:0], THREE_STATE = FALSE, ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = MCB_DQ
PORT mcbx_dram_dqs = "", DIR = IO, THREE_STATE = FALSE, ISVALID = ([xstrncmp C_FAMILY  spartan6 ] && ([xstrncmp C_MEM_TYPE  LPDDR ] || [xstrncmp C_MEM_TYPE  DDR ] || [xstrncmp C_MEM_TYPE  DDR2 ] || [xstrncmp C_MEM_TYPE  DDR3 ])), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = MCB_DQS
PORT mcbx_dram_dqs_n = "", DIR = IO, THREE_STATE = FALSE, ISVALID = ([xstrncmp C_FAMILY  spartan6 ] && ([xstrncmp C_MEM_TYPE  DDR3 ] || ([xstrncmp C_MEM_TYPE  DDR2 ] && C_DDR2_DQSN_ENABLE == 1))), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = MCB_DQS_N
PORT mcbx_dram_udqs = "", DIR = IO, THREE_STATE = FALSE, ISVALID = ([xstrncmp C_FAMILY  spartan6 ] && (C_MEM_DATA_WIDTH > 8) && ([xstrncmp C_MEM_TYPE  LPDDR ] || [xstrncmp C_MEM_TYPE  DDR ] || [xstrncmp C_MEM_TYPE  DDR2 ] || [xstrncmp C_MEM_TYPE  DDR3 ])), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = MCB_UDQS
PORT mcbx_dram_udqs_n = "", DIR = IO, THREE_STATE = FALSE, ISVALID = ([xstrncmp C_FAMILY  spartan6 ] && (C_MEM_DATA_WIDTH > 8) && ([xstrncmp C_MEM_TYPE  DDR3 ] || ([xstrncmp C_MEM_TYPE  DDR2 ] && C_DDR2_DQSN_ENABLE == 1))), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = MCB_UDQS_N
PORT mcbx_dram_udm = "", DIR = O, ISVALID = ([xstrncmp C_FAMILY  spartan6 ] && (C_MEM_DATA_WIDTH > 8)), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = MCB_UDM
PORT mcbx_dram_ldm = "", DIR = O, ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = MCB_LDM
PORT mcbx_dram_odt = "", DIR = O, ISVALID = ([xstrncmp C_FAMILY  spartan6 ] && ([xstrncmp C_MEM_TYPE  DDR2 ] || [xstrncmp C_MEM_TYPE  DDR3 ])), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = MCB_ODT
PORT mcbx_dram_ddr3_rst = "", DIR = O, ISVALID = ([xstrncmp C_FAMILY  spartan6 ] && [xstrncmp C_MEM_TYPE  DDR3 ]), IO_IF = memory_0, IO_IS = MCB_Rst
PORT selfrefresh_enter = "", DIR = I, INITIALVAL = GND, ISVALID = ([xstrncmp C_FAMILY  spartan6 ])
PORT selfrefresh_mode = "", DIR = O, ISVALID = ([xstrncmp C_FAMILY  spartan6 ])
PORT calib_recal = "", DIR = I, INITIALVAL = GND, ISVALID = ([xstrncmp C_FAMILY  spartan6 ])
PORT rzq = "", DIR = IO, THREE_STATE = FALSE, ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), IO_IF = memory_0, IO_IS = rzq
PORT zio = "", DIR = IO, THREE_STATE = FALSE, ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), IO_IF = memory_0, IO_IS = zio

END

FINISH_SINGLE_MPD

START_SINGLE_MPD xps_ll_temac_v2_03_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : xps_ll_temac
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN xps_ll_temac

## Peripheral Options
OPTION PLATGEN_SYSLEVEL_UPDATE_PROC = generate_corelevel_ucf
OPTION STYLE = HDL
OPTION RUN_NGCBUILD = TRUE
OPTION PAY_CORE = soft_temac_wrap_v2, ISVALID = (C_TEMAC_TYPE==2), LIBNAME = soft_temac_wrap_v2_03_a
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION LAST_UPDATED = 12.2
OPTION USAGE_LEVEL = BASE_USER
OPTION IPLEVEL_DRC_PROC = check_iplevel_settings
OPTION SYSLEVEL_DRC_PROC = check_syslevel_settings
OPTION DESC = XPS LocalLink Tri-mode Ethernet MAC
OPTION IP_GROUP = Communication High-Speed:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=PRODUCTION, spartan3=PRODUCTION, spartan3an=PRODUCTION, spartan3a=PRODUCTION, spartan3e=PRODUCTION, spartan3adsp=PRODUCTION, virtex4lx=PRODUCTION, virtex4sx=PRODUCTION, virtex4fx=PRODUCTION, virtex5lx=PRODUCTION, virtex5sx=PRODUCTION, virtex5fx=PRODUCTION, aspartan3e=PRODUCTION, aspartan3a=PRODUCTION, aspartan3adsp=PRODUCTION, qvirtex4lx=PRODUCTION, qvirtex4sx=PRODUCTION, qvirtex4fx=PRODUCTION, qrvirtex4lx=PRODUCTION, qrvirtex4sx=PRODUCTION, qrvirtex4fx=PRODUCTION, spartan6t=PRODUCTION, spartan6=PRODUCTION, spartan6l=PRE_PRODUCTION, qspartan6t=PRODUCTION, qspartan6=PRODUCTION, aspartan6t=PRODUCTION, aspartan6=PRODUCTION, virtex6lx=PRODUCTION, virtex6sx=PRODUCTION, virtex6hx=PRODUCTION, virtex6cx=PRODUCTION, virtex6llx=PRE_PRODUCTION, virtex6lsx=PRE_PRODUCTION, qspartan6l=PRE_PRODUCTION, qrvirtex5=PRE_PRODUCTION, qvirtex6lx=PRE_PRODUCTION, qvirtex6sx=PRE_PRODUCTION, qvirtex6fx=PRE_PRODUCTION, qvirtex6tx=PRE_PRODUCTION)

IO_INTERFACE IO_IF = temacif_0, IO_TYPE = XIL_TEMAC_V1
IO_INTERFACE IO_IF = temacif_1, IO_TYPE = XIL_TEMAC_V1

## Bus Interfaces
BUS_INTERFACE BUS = SPLB, BUS_STD = PLBV46, BUS_TYPE = SLAVE
BUS_INTERFACE BUS = LLINK0, BUS_STD = XIL_LL_DMA, BUS_TYPE = INITIATOR
BUS_INTERFACE BUS = LLINK1, BUS_STD = XIL_LL_DMA, BUS_TYPE = INITIATOR, ISVALID = (C_TEMAC1_ENABLED==1)

## Generics for VHDL or Parameters for Verilog
PARAMETER C_NUM_IDELAYCTRL = 0, DT = INTEGER, RANGE = (0:16), IO_IF = temacif_0, IO_IS = C_NUM_IDELAYCTRL
PARAMETER C_IDELAYCTRL_LOC = NOT_SET, DT = STRING, TYPE = NON_HDL, IO_IS = C_IDELAYCTRL_LOC
PARAMETER C_SUBFAMILY = FX, DT = string
PARAMETER C_RESERVED = 0, DT = INTEGER
PARAMETER C_SPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB, TYPE = NON_HDL, ASSIGNMENT = CONSTANT
PARAMETER C_FAMILY = virtex5, DT = STRING, IPLEVEL_UPDATE_VALUE_PROC = update_cfamily
PARAMETER C_BASEADDR = 0xffffffff, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_HIGHADDR, MIN_SIZE = 0x80000, ASSIGNMENT = REQUIRE
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_BASEADDR, ASSIGNMENT = REQUIRE
PARAMETER C_SPLB_DWIDTH = 32, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_AWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_NUM_MASTERS = 8, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_MID_WIDTH = 3, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_P2P = 0, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_INCLUDE_IO = 1, DT = INTEGER, RANGE = (0,1)
PARAMETER C_PHY_TYPE = 1, DT = INTEGER, RANGE = (0:5), VALUES = (0= MII, 1= GMII, 2=  RGMII V1.3 , 3= RGMII V2.0 , 4=SGMII, 5=  1000Base-X ), IO_IF = temacif_0, IO_IS = C_PHY_TYPE
PARAMETER C_TEMAC1_ENABLED = 0, DT = INTEGER, RANGE = (0,1), IO_IF = temacif_0, IO_IS = C_TEMAC1_ENABLED
PARAMETER C_TEMAC0_TXFIFO = 4096, DT = INTEGER, RANGE = (2048, 4096, 8192, 16384, 32768), VALUES = (2048= 2048B, 4096= 4096B, 8192= 8192B, 16384= 16384B, 32768= 32768B )
PARAMETER C_TEMAC0_RXFIFO = 4096, DT = INTEGER, RANGE = (2048, 4096, 8192, 16384, 32768), VALUES = (2048= 2048B, 4096= 4096B, 8192= 8192B, 16384= 16384B, 32768= 32768B )
PARAMETER C_TEMAC1_TXFIFO = 4096, DT = INTEGER, RANGE = (2048, 4096, 8192, 16384, 32768), VALUES = (2048= 2048B, 4096= 4096B, 8192= 8192B, 16384= 16384B, 32768= 32768B ), ISVALID = (C_TEMAC1_ENABLED==1)
PARAMETER C_TEMAC1_RXFIFO = 4096, DT = INTEGER, RANGE = (2048, 4096, 8192, 16384, 32768), VALUES = (2048= 2048B, 4096= 4096B, 8192= 8192B, 16384= 16384B, 32768= 32768B ), ISVALID = (C_TEMAC1_ENABLED==1)
PARAMETER C_BUS2CORE_CLK_RATIO = 2, DT = INTEGER, RANGE = (1,2)
PARAMETER C_TEMAC_TYPE = 0, DT = INTEGER, RANGE = (0:3), VALUES = (0=  V5 Hard TEMAC , 1=  V4 Hard TEMAC , 2=  Soft TEMAC , 3=  V6 Hard TEMAC  ), IO_IF = temacif_0, IO_IS = C_TEMAC_TYPE
PARAMETER C_TEMAC0_TXCSUM = 0, DT = INTEGER, RANGE = (0,1)
PARAMETER C_TEMAC0_RXCSUM = 0, DT = INTEGER, RANGE = (0,1)
PARAMETER C_TEMAC1_TXCSUM = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_TEMAC1_ENABLED==1)
PARAMETER C_TEMAC1_RXCSUM = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_TEMAC1_ENABLED==1)
PARAMETER C_TEMAC0_PHYADDR = 0b00001, DT = std_logic_vector, IO_IF = temacif_0, IO_IS = C_TEMAC0_PHYADDR
PARAMETER C_TEMAC1_PHYADDR = 0b00010, DT = std_logic_vector, IO_IF = temacif_0, IO_IS = C_TEMAC1_PHYADDR, ISVALID = (C_TEMAC1_ENABLED==1)
PARAMETER C_TEMAC0_TXVLAN_TRAN = 0, DT = INTEGER, RANGE = (0,1)
PARAMETER C_TEMAC0_RXVLAN_TRAN = 0, DT = INTEGER, RANGE = (0,1)
PARAMETER C_TEMAC1_TXVLAN_TRAN = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_TEMAC1_ENABLED==1)
PARAMETER C_TEMAC1_RXVLAN_TRAN = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_TEMAC1_ENABLED==1)
PARAMETER C_TEMAC0_TXVLAN_TAG = 0, DT = INTEGER, RANGE = (0,1)
PARAMETER C_TEMAC0_RXVLAN_TAG = 0, DT = INTEGER, RANGE = (0,1)
PARAMETER C_TEMAC1_TXVLAN_TAG = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_TEMAC1_ENABLED==1)
PARAMETER C_TEMAC1_RXVLAN_TAG = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_TEMAC1_ENABLED==1)
PARAMETER C_TEMAC0_TXVLAN_STRP = 0, DT = INTEGER, RANGE = (0,1)
PARAMETER C_TEMAC0_RXVLAN_STRP = 0, DT = INTEGER, RANGE = (0,1)
PARAMETER C_TEMAC1_TXVLAN_STRP = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_TEMAC1_ENABLED==1)
PARAMETER C_TEMAC1_RXVLAN_STRP = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_TEMAC1_ENABLED==1)
PARAMETER C_TEMAC0_MCAST_EXTEND = 0, DT = INTEGER, RANGE = (0,1)
PARAMETER C_TEMAC1_MCAST_EXTEND = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_TEMAC1_ENABLED==1)
PARAMETER C_TEMAC0_STATS = 0, DT = INTEGER, RANGE = (0,1)
PARAMETER C_TEMAC1_STATS = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_TEMAC1_ENABLED==1)
PARAMETER C_TEMAC0_AVB = 0, DT = INTEGER, RANGE = (0,1)
PARAMETER C_TEMAC1_AVB = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_TEMAC1_ENABLED==1)
PARAMETER C_SIMULATION = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_TEMAC_TYPE==2)

## Ports
PORT TemacIntc0_Irpt = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, INTERRUPT_PRIORITY = LOW
PORT TemacIntc1_Irpt = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, INTERRUPT_PRIORITY = LOW, ISVALID = ( C_TEMAC1_ENABLED == 1 )
PORT TemacPhy_RST_n = "", DIR = O, IO_IF = temacif_0, IO_IS = PhyResetN
PORT GTX_CLK_0 = "", DIR = I, SIGIS = CLK, INITIALVAL = GND, IO_IF = temacif_0, IO_IS = GTX_CLK_0, ISVALID = ( C_PHY_TYPE == 1 || C_PHY_TYPE == 2 || C_PHY_TYPE == 3 || (C_TEMAC_TYPE == 2 && C_PHY_TYPE == 0) || ((C_TEMAC0_STATS == 1 || C_TEMAC1_STATS == 1)&&[xstrncmp C_FAMILY  spartan6 ]))
PORT MGTCLK_P = "", DIR = I, INITIALVAL = GND, IO_IF = temacif_0, IO_IS = MGTCLK_P, ISVALID = ( C_PHY_TYPE == 4 || C_PHY_TYPE == 5)
PORT MGTCLK_N = "", DIR = I, INITIALVAL = GND, IO_IF = temacif_0, IO_IS = MGTCLK_N, ISVALID = ( C_PHY_TYPE == 4 || C_PHY_TYPE == 5)
PORT REFCLK = "", DIR = I, SIGIS = CLK, INITIALVAL = GND, ISVALID = ( C_PHY_TYPE == 1 || C_PHY_TYPE == 2 || C_PHY_TYPE == 3 || (C_TEMAC_TYPE == 2 && C_PHY_TYPE == 0) || ((C_TEMAC0_STATS == 1 || C_TEMAC1_STATS == 1)&&!([xstrncmp C_FAMILY  spartan6 ])))
PORT DCLK = "", DIR = I, SIGIS = CLK, INITIALVAL = GND, ISVALID = ( C_TEMAC_TYPE == 1 && (C_PHY_TYPE == 4 || C_PHY_TYPE == 5))
PORT SPLB_Clk = "", DIR = I, SIGIS = CLK, BUS = SPLB
PORT SPLB_Rst = SPLB_Rst, DIR = I, SIGIS = RST, BUS = SPLB
PORT Core_Clk = "", DIR = I, SIGIS = CLK, ISVALID = ( C_BUS2CORE_CLK_RATIO == 2)
PORT PLB_ABus = PLB_ABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB
PORT PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB
PORT PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB
PORT PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB
PORT PLB_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB_MID_WIDTH-1)], BUS = SPLB
PORT PLB_abort = PLB_abort, DIR = I, BUS = SPLB
PORT PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB
PORT PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB
PORT PLB_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB_DWIDTH/8)-1)], BUS = SPLB
PORT PLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB
PORT PLB_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB
PORT PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB
PORT PLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB
PORT PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB
PORT PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB
PORT PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB
PORT PLB_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB
PORT Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB
PORT Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB
PORT Sl_wait = Sl_wait, DIR = O, BUS = SPLB
PORT Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB
PORT Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB
PORT Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB
PORT Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB
PORT Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB
PORT Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB
PORT Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB
PORT Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB
PORT Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT LlinkTemac0_CLK = LL_Clk, DIR = I, SIGIS = CLK, INITIALVAL = VCC
PORT LlinkTemac0_RST = LL_RST_ACK, DIR = I, BUS = LLINK0, INITIALVAL = VCC
PORT LlinkTemac0_SOP_n = LL_Tx_SOP_n, DIR = I, BUS = LLINK0, INITIALVAL = VCC
PORT LlinkTemac0_EOP_n = LL_Tx_EOP_n, DIR = I, BUS = LLINK0, INITIALVAL = VCC
PORT LlinkTemac0_SOF_n = LL_Tx_SOF_n, DIR = I, BUS = LLINK0, INITIALVAL = VCC
PORT LlinkTemac0_EOF_n = LL_Tx_EOF_n, DIR = I, BUS = LLINK0, INITIALVAL = VCC
PORT LlinkTemac0_REM = LL_Tx_Rem, DIR = I, BUS = LLINK0, INITIALVAL = VCC, VEC = [0:3]
PORT LlinkTemac0_Data = LL_Tx_Data, DIR = I, BUS = LLINK0, INITIALVAL = GND, VEC = [0:31]
PORT LlinkTemac0_SRC_RDY_n = LL_Tx_SrcRdy_n, DIR = I, BUS = LLINK0, INITIALVAL = VCC
PORT Temac0Llink_DST_RDY_n = LL_Tx_DstRdy_n, DIR = O, BUS = LLINK0
PORT Temac0Llink_SOP_n = LL_Rx_SOP_n, DIR = O, BUS = LLINK0
PORT Temac0Llink_EOP_n = LL_Rx_EOP_n, DIR = O, BUS = LLINK0
PORT Temac0Llink_SOF_n = LL_Rx_SOF_n, DIR = O, BUS = LLINK0
PORT Temac0Llink_EOF_n = LL_Rx_EOF_n, DIR = O, BUS = LLINK0
PORT Temac0Llink_REM = LL_Rx_Rem, DIR = O, BUS = LLINK0, VEC = [0:3]
PORT Temac0Llink_Data = LL_Rx_Data, DIR = O, BUS = LLINK0, VEC = [0:31]
PORT Temac0Llink_SRC_RDY_n = LL_Rx_SrcRdy_n, DIR = O, BUS = LLINK0
PORT LlinkTemac0_DST_RDY_n = LL_Rx_DstRdy_n, DIR = I, BUS = LLINK0, INITIALVAL = VCC
PORT LlinkTemac1_CLK = "", DIR = I, SIGIS = CLK, INITIALVAL = VCC, ISVALID = ( C_TEMAC1_ENABLED == 1 )
PORT LlinkTemac1_RST = LL_RST_ACK, DIR = I, BUS = LLINK1, INITIALVAL = VCC, ISVALID = ( C_TEMAC1_ENABLED == 1 )
PORT LlinkTemac1_SOP_n = LL_Tx_SOP_n, DIR = I, BUS = LLINK1, INITIALVAL = VCC, ISVALID = ( C_TEMAC1_ENABLED == 1 )
PORT LlinkTemac1_EOP_n = LL_Tx_EOP_n, DIR = I, BUS = LLINK1, INITIALVAL = VCC, ISVALID = ( C_TEMAC1_ENABLED == 1 )
PORT LlinkTemac1_SOF_n = LL_Tx_SOF_n, DIR = I, BUS = LLINK1, INITIALVAL = VCC, ISVALID = ( C_TEMAC1_ENABLED == 1 )
PORT LlinkTemac1_EOF_n = LL_Tx_EOF_n, DIR = I, BUS = LLINK1, INITIALVAL = VCC, ISVALID = ( C_TEMAC1_ENABLED == 1 )
PORT LlinkTemac1_REM = LL_Tx_Rem, DIR = I, BUS = LLINK1, INITIALVAL = VCC, VEC = [0:3], ISVALID = ( C_TEMAC1_ENABLED == 1 )
PORT LlinkTemac1_Data = LL_Tx_Data, DIR = I, BUS = LLINK1, INITIALVAL = GND, VEC = [0:31], ISVALID = ( C_TEMAC1_ENABLED == 1 )
PORT LlinkTemac1_SRC_RDY_n = LL_Tx_SrcRdy_n, DIR = I, BUS = LLINK1, INITIALVAL = VCC, ISVALID = ( C_TEMAC1_ENABLED == 1 )
PORT Temac1Llink_DST_RDY_n = LL_Tx_DstRdy_n, DIR = O, BUS = LLINK1, ISVALID = ( C_TEMAC1_ENABLED == 1 )
PORT Temac1Llink_SOP_n = LL_Rx_SOP_n, DIR = O, BUS = LLINK1, ISVALID = ( C_TEMAC1_ENABLED == 1 )
PORT Temac1Llink_EOP_n = LL_Rx_EOP_n, DIR = O, BUS = LLINK1, ISVALID = ( C_TEMAC1_ENABLED == 1 )
PORT Temac1Llink_SOF_n = LL_Rx_SOF_n, DIR = O, BUS = LLINK1, ISVALID = ( C_TEMAC1_ENABLED == 1 )
PORT Temac1Llink_EOF_n = LL_Rx_EOF_n, DIR = O, BUS = LLINK1, ISVALID = ( C_TEMAC1_ENABLED == 1 )
PORT Temac1Llink_REM = LL_Rx_Rem, DIR = O, BUS = LLINK1, VEC = [0:3], ISVALID = ( C_TEMAC1_ENABLED == 1 )
PORT Temac1Llink_Data = LL_Rx_Data, DIR = O, BUS = LLINK1, VEC = [0:31], ISVALID = ( C_TEMAC1_ENABLED == 1 )
PORT Temac1Llink_SRC_RDY_n = LL_Rx_SrcRdy_n, DIR = O, BUS = LLINK1, ISVALID = ( C_TEMAC1_ENABLED == 1 )
PORT LlinkTemac1_DST_RDY_n = LL_Rx_DstRdy_n, DIR = I, BUS = LLINK1, INITIALVAL = VCC, ISVALID = ( C_TEMAC1_ENABLED == 1 )
PORT MII_TXD_0 = "", DIR = O, VEC = [3:0], ENDIAN = LITTLE, IO_IF = temacif_0, IO_IS = MII_TXD_0, ISVALID = ( C_PHY_TYPE == 0)
PORT MII_TX_EN_0 = "", DIR = O, IO_IF = temacif_0, IO_IS = MII_TX_EN_0, ISVALID = ( C_PHY_TYPE == 0)
PORT MII_TX_ER_0 = "", DIR = O, IO_IF = temacif_0, IO_IS = MII_TX_ER_0, ISVALID = ( C_PHY_TYPE == 0)
PORT MII_RXD_0 = "", DIR = I, VEC = [3:0], ENDIAN = LITTLE, INITIALVAL = GND, IO_IF = temacif_0, IO_IS = MII_RXD_0, ISVALID = ( C_PHY_TYPE == 0)
PORT MII_RX_DV_0 = "", DIR = I, INITIALVAL = GND, IO_IF = temacif_0, IO_IS = MII_RX_DV_0, ISVALID = ( C_PHY_TYPE == 0)
PORT MII_RX_ER_0 = "", DIR = I, INITIALVAL = GND, IO_IF = temacif_0, IO_IS = MII_RX_ER_0, ISVALID = ( C_PHY_TYPE == 0)
PORT MII_RX_CLK_0 = "", DIR = I, INITIALVAL = GND, IO_IF = temacif_0, IO_IS = MII_RX_CLK_0, ISVALID = ( C_PHY_TYPE == 0)
PORT MII_TX_CLK_0 = "", DIR = I, INITIALVAL = GND, IO_IF = temacif_0, IO_IS = MII_TX_CLK_0, ISVALID = ( C_PHY_TYPE == 0 || C_PHY_TYPE == 1 )
PORT MII_TXD_1 = "", DIR = O, VEC = [3:0], ENDIAN = LITTLE, ISVALID = ( C_PHY_TYPE == 0 && C_TEMAC1_ENABLED == 1 )
PORT MII_TX_EN_1 = "", DIR = O, ISVALID = ( C_PHY_TYPE == 0 && C_TEMAC1_ENABLED == 1 )
PORT MII_TX_ER_1 = "", DIR = O, ISVALID = ( C_PHY_TYPE == 0 && C_TEMAC1_ENABLED == 1 )
PORT MII_RXD_1 = "", DIR = I, VEC = [3:0], ENDIAN = LITTLE, INITIALVAL = GND, ISVALID = ( C_PHY_TYPE == 0 && C_TEMAC1_ENABLED == 1 )
PORT MII_RX_DV_1 = "", DIR = I, INITIALVAL = GND, ISVALID = ( C_PHY_TYPE == 0 && C_TEMAC1_ENABLED == 1 )
PORT MII_RX_ER_1 = "", DIR = I, INITIALVAL = GND, ISVALID = ( C_PHY_TYPE == 0 && C_TEMAC1_ENABLED == 1 )
PORT MII_RX_CLK_1 = "", DIR = I, INITIALVAL = GND, ISVALID = ( C_PHY_TYPE == 0 && C_TEMAC1_ENABLED == 1 )
PORT MII_TX_CLK_1 = "", DIR = I, INITIALVAL = GND, ISVALID = ( (C_PHY_TYPE == 0 || C_PHY_TYPE == 1) && C_TEMAC1_ENABLED == 1 )
PORT GMII_TXD_0 = "", DIR = O, VEC = [7:0], ENDIAN = LITTLE, IO_IF = temacif_0, IO_IS = GMII_TXD_0, ISVALID = ( C_PHY_TYPE == 1)
PORT GMII_TX_EN_0 = "", DIR = O, IO_IF = temacif_0, IO_IS = GMII_TX_EN_0, ISVALID = ( C_PHY_TYPE == 1)
PORT GMII_TX_ER_0 = "", DIR = O, IO_IF = temacif_0, IO_IS = GMII_TX_ER_0, ISVALID = ( C_PHY_TYPE == 1)
PORT GMII_TX_CLK_0 = "", DIR = O, IO_IF = temacif_0, IO_IS = GMII_TX_CLK_0, ISVALID = ( C_PHY_TYPE == 1)
PORT GMII_RXD_0 = "", DIR = I, VEC = [7:0], ENDIAN = LITTLE, INITIALVAL = GND, IO_IF = temacif_0, IO_IS = GMII_RXD_0, ISVALID = ( C_PHY_TYPE == 1)
PORT GMII_RX_DV_0 = "", DIR = I, INITIALVAL = GND, IO_IF = temacif_0, IO_IS = GMII_RX_DV_0, ISVALID = ( C_PHY_TYPE == 1)
PORT GMII_RX_ER_0 = "", DIR = I, INITIALVAL = GND, IO_IF = temacif_0, IO_IS = GMII_RX_ER_0, ISVALID = ( C_PHY_TYPE == 1)
PORT GMII_RX_CLK_0 = "", DIR = I, INITIALVAL = GND, IO_IF = temacif_0, IO_IS = GMII_RX_CLK_0, ISVALID = ( C_PHY_TYPE == 1)
PORT GMII_TXD_1 = "", DIR = O, VEC = [7:0], ENDIAN = LITTLE, ISVALID = ( C_PHY_TYPE == 1 && C_TEMAC1_ENABLED == 1 )
PORT GMII_TX_EN_1 = "", DIR = O, ISVALID = ( C_PHY_TYPE == 1 && C_TEMAC1_ENABLED == 1 )
PORT GMII_TX_ER_1 = "", DIR = O, ISVALID = ( C_PHY_TYPE == 1 && C_TEMAC1_ENABLED == 1 )
PORT GMII_TX_CLK_1 = "", DIR = O, ISVALID = ( C_PHY_TYPE == 1 && C_TEMAC1_ENABLED == 1 )
PORT GMII_RXD_1 = "", DIR = I, VEC = [7:0], ENDIAN = LITTLE, INITIALVAL = GND, ISVALID = ( C_PHY_TYPE == 1 && C_TEMAC1_ENABLED == 1 )
PORT GMII_RX_DV_1 = "", DIR = I, INITIALVAL = GND, ISVALID = ( C_PHY_TYPE == 1 && C_TEMAC1_ENABLED == 1 )
PORT GMII_RX_ER_1 = "", DIR = I, INITIALVAL = GND, ISVALID = ( C_PHY_TYPE == 1 && C_TEMAC1_ENABLED == 1 )
PORT GMII_RX_CLK_1 = "", DIR = I, INITIALVAL = GND, ISVALID = ( C_PHY_TYPE == 1 && C_TEMAC1_ENABLED == 1 )
PORT TXP_0 = "", DIR = O, IO_IF = temacif_0, IO_IS = TXP_0, ISVALID = ( C_PHY_TYPE == 4 || C_PHY_TYPE == 5 )
PORT TXN_0 = "", DIR = O, IO_IF = temacif_0, IO_IS = TXN_0, ISVALID = ( C_PHY_TYPE == 4 || C_PHY_TYPE == 5 )
PORT RXP_0 = "", DIR = I, INITIALVAL = VCC, IO_IF = temacif_0, IO_IS = RXP_0, ISVALID = ( C_PHY_TYPE == 4 || C_PHY_TYPE == 5 )
PORT RXN_0 = "", DIR = I, INITIALVAL = GND, IO_IF = temacif_0, IO_IS = RXN_0, ISVALID = ( C_PHY_TYPE == 4 || C_PHY_TYPE == 5 )
PORT TXP_1 = "", DIR = O, IO_IF = temacif_1, IO_IS = TXP_1, ISVALID = ( (C_PHY_TYPE == 4 || C_PHY_TYPE == 5) && C_TEMAC1_ENABLED == 1 )
PORT TXN_1 = "", DIR = O, IO_IF = temacif_1, IO_IS = TXN_1, ISVALID = ( (C_PHY_TYPE == 4 || C_PHY_TYPE == 5) && C_TEMAC1_ENABLED == 1 )
PORT RXP_1 = "", DIR = I, INITIALVAL = VCC, IO_IF = temacif_1, IO_IS = RXP_1, ISVALID = ( (C_PHY_TYPE == 4 || C_PHY_TYPE == 5) && C_TEMAC1_ENABLED == 1 )
PORT RXN_1 = "", DIR = I, INITIALVAL = GND, IO_IF = temacif_1, IO_IS = RXN_1, ISVALID = ( (C_PHY_TYPE == 4 || C_PHY_TYPE == 5) && C_TEMAC1_ENABLED == 1 )
PORT RGMII_TXD_0 = "", DIR = O, VEC = [3:0], ENDIAN = LITTLE, IO_IF = temacif_0, IO_IS = RGMII_TXD_0, ISVALID = ( C_PHY_TYPE == 2 || C_PHY_TYPE == 3 )
PORT RGMII_TX_CTL_0 = "", DIR = O, IO_IF = temacif_0, IO_IS = RGMII_TX_CTL_0, ISVALID = ( C_PHY_TYPE == 2 || C_PHY_TYPE == 3 )
PORT RGMII_TXC_0 = "", DIR = O, IO_IF = temacif_0, IO_IS = RGMII_TXC_0, ISVALID = ( C_PHY_TYPE == 2 || C_PHY_TYPE == 3 )
PORT RGMII_RXD_0 = "", DIR = I, VEC = [3:0], ENDIAN = LITTLE, INITIALVAL = GND, IO_IF = temacif_0, IO_IS = RGMII_RXD_0, ISVALID = ( C_PHY_TYPE == 2 || C_PHY_TYPE == 3 )
PORT RGMII_RX_CTL_0 = "", DIR = I, INITIALVAL = GND, IO_IF = temacif_0, IO_IS = RGMII_RX_CTL_0, ISVALID = ( C_PHY_TYPE == 2 || C_PHY_TYPE == 3 )
PORT RGMII_RXC_0 = "", DIR = I, INITIALVAL = GND, IO_IF = temacif_0, IO_IS = RGMII_RXC_0, ISVALID = ( C_PHY_TYPE == 2 || C_PHY_TYPE == 3 )
PORT RGMII_TXD_1 = "", DIR = O, VEC = [3:0], ENDIAN = LITTLE, ISVALID = ( (C_PHY_TYPE == 2 || C_PHY_TYPE == 3) && C_TEMAC1_ENABLED == 1 )
PORT RGMII_TX_CTL_1 = "", DIR = O, ISVALID = ( (C_PHY_TYPE == 2 || C_PHY_TYPE == 3) && C_TEMAC1_ENABLED == 1 )
PORT RGMII_TXC_1 = "", DIR = O, ISVALID = ( (C_PHY_TYPE == 2 || C_PHY_TYPE == 3) && C_TEMAC1_ENABLED == 1 )
PORT RGMII_RXD_1 = "", DIR = I, VEC = [3:0], ENDIAN = LITTLE, INITIALVAL = GND, ISVALID = ( (C_PHY_TYPE == 2 || C_PHY_TYPE == 3) && C_TEMAC1_ENABLED == 1 )
PORT RGMII_RX_CTL_1 = "", DIR = I, INITIALVAL = GND, ISVALID = ( (C_PHY_TYPE == 2 || C_PHY_TYPE == 3) && C_TEMAC1_ENABLED == 1 )
PORT RGMII_RXC_1 = "", DIR = I, INITIALVAL = GND, ISVALID = ( (C_PHY_TYPE == 2 || C_PHY_TYPE == 3) && C_TEMAC1_ENABLED == 1 )
PORT MDC_0 = "", DIR = O, IO_IF = temacif_0, IO_IS = MDC_0
PORT MDC_1 = "", DIR = O, IO_IF = temacif_1, IO_IS = MDC_1, ISVALID = ( C_TEMAC1_ENABLED == 1 )
PORT HostMiimRdy = host_mii_rdy, DIR = I
PORT HostRdData = host_rd_data, DIR = I, VEC = [31:0], ENDIAN = LITTLE
PORT HostMiimSel = host_mii_sel, DIR = O
PORT HostReq = host_req, DIR = O
PORT HostAddr = host_addr, DIR = O, VEC = [9:0], ENDIAN = LITTLE
PORT HostEmac1Sel = host_emac1_sel, DIR = O
PORT Temac0AvbTxClk = "", DIR = O, ISVALID = ( C_TEMAC0_AVB == 1 )
PORT Temac0AvbTxClkEn = "", DIR = O, ISVALID = ( C_TEMAC0_AVB == 1 )
PORT Temac0AvbRxClk = "", DIR = O, ISVALID = ( C_TEMAC0_AVB == 1 )
PORT Temac0AvbRxClkEn = "", DIR = O, ISVALID = ( C_TEMAC0_AVB == 1 )
PORT Avb2Mac0TxData = "", DIR = I, INITIALVAL = GND, VEC = [7:0], ENDIAN = LITTLE, ISVALID = ( C_TEMAC0_AVB == 1 )
PORT Avb2Mac0TxDataValid = "", DIR = I, INITIALVAL = GND, ISVALID = ( C_TEMAC0_AVB == 1 )
PORT Avb2Mac0TxUnderrun = "", DIR = I, INITIALVAL = GND, ISVALID = ( C_TEMAC0_AVB == 1 )
PORT Mac02AvbTxAck = "", DIR = O, ISVALID = ( C_TEMAC0_AVB == 1 )
PORT Mac02AvbRxData = "", DIR = O, VEC = [7:0], ENDIAN = LITTLE, ISVALID = ( C_TEMAC0_AVB == 1 )
PORT Mac02AvbRxDataValid = "", DIR = O, ISVALID = ( C_TEMAC0_AVB == 1 )
PORT Mac02AvbRxFrameGood = "", DIR = O, ISVALID = ( C_TEMAC0_AVB == 1 )
PORT Mac02AvbRxFrameBad = "", DIR = O, ISVALID = ( C_TEMAC0_AVB == 1 )
PORT Temac02AvbTxData = "", DIR = O, VEC = [7:0], ENDIAN = LITTLE, ISVALID = ( C_TEMAC0_AVB == 1 )
PORT Temac02AvbTxDataValid = "", DIR = O, ISVALID = ( C_TEMAC0_AVB == 1 )
PORT Temac02AvbTxUnderrun = "", DIR = O, ISVALID = ( C_TEMAC0_AVB == 1 )
PORT Avb2Temac0TxAck = "", DIR = I, INITIALVAL = GND, ISVALID = ( C_TEMAC0_AVB == 1 )
PORT Avb2Temac0RxData = "", DIR = I, INITIALVAL = GND, VEC = [7:0], ENDIAN = LITTLE, ISVALID = ( C_TEMAC0_AVB == 1 )
PORT Avb2Temac0RxDataValid = "", DIR = I, INITIALVAL = GND, ISVALID = ( C_TEMAC0_AVB == 1 )
PORT Avb2Temac0RxFrameGood = "", DIR = I, INITIALVAL = GND, ISVALID = ( C_TEMAC0_AVB == 1 )
PORT Avb2Temac0RxFrameBad = "", DIR = I, INITIALVAL = GND, ISVALID = ( C_TEMAC0_AVB == 1 )
PORT Temac1AvbTxClk = "", DIR = O, ISVALID = ( C_TEMAC1_AVB == 1 && C_TEMAC1_ENABLED == 1 )
PORT Temac1AvbTxClkEn = "", DIR = O, ISVALID = ( C_TEMAC1_AVB == 1 && C_TEMAC1_ENABLED == 1 )
PORT Temac1AvbRxClk = "", DIR = O, ISVALID = ( C_TEMAC1_AVB == 1 && C_TEMAC1_ENABLED == 1 )
PORT Temac1AvbRxClkEn = "", DIR = O, ISVALID = ( C_TEMAC1_AVB == 1 && C_TEMAC1_ENABLED == 1 )
PORT Avb2Mac1TxData = "", DIR = I, INITIALVAL = GND, VEC = [7:0], ENDIAN = LITTLE, ISVALID = ( C_TEMAC1_AVB == 1 && C_TEMAC1_ENABLED == 1 )
PORT Avb2Mac1TxDataValid = "", DIR = I, INITIALVAL = GND, ISVALID = ( C_TEMAC1_AVB == 1 && C_TEMAC1_ENABLED == 1 )
PORT Avb2Mac1TxUnderrun = "", DIR = I, INITIALVAL = GND, ISVALID = ( C_TEMAC1_AVB == 1 && C_TEMAC1_ENABLED == 1 )
PORT Mac12AvbTxAck = "", DIR = O, ISVALID = ( C_TEMAC1_AVB == 1 && C_TEMAC1_ENABLED == 1 )
PORT Mac12AvbRxData = "", DIR = O, VEC = [7:0], ENDIAN = LITTLE, ISVALID = ( C_TEMAC1_AVB == 1 && C_TEMAC1_ENABLED == 1 )
PORT Mac12AvbRxDataValid = "", DIR = O, ISVALID = ( C_TEMAC1_AVB == 1 && C_TEMAC1_ENABLED == 1 )
PORT Mac12AvbRxFrameGood = "", DIR = O, ISVALID = ( C_TEMAC1_AVB == 1 && C_TEMAC1_ENABLED == 1 )
PORT Mac12AvbRxFrameBad = "", DIR = O, ISVALID = ( C_TEMAC1_AVB == 1 && C_TEMAC1_ENABLED == 1 )
PORT Temac12AvbTxData = "", DIR = O, VEC = [7:0], ENDIAN = LITTLE, ISVALID = ( C_TEMAC1_AVB == 1 && C_TEMAC1_ENABLED == 1 )
PORT Temac12AvbTxDataValid = "", DIR = O, ISVALID = ( C_TEMAC1_AVB == 1 && C_TEMAC1_ENABLED == 1 )
PORT Temac12AvbTxUnderrun = "", DIR = O, ISVALID = ( C_TEMAC1_AVB == 1 && C_TEMAC1_ENABLED == 1 )
PORT Avb2Temac1TxAck = "", DIR = I, INITIALVAL = GND, ISVALID = ( C_TEMAC1_AVB == 1 && C_TEMAC1_ENABLED == 1 )
PORT Avb2Temac1RxData = "", DIR = I, INITIALVAL = GND, VEC = [7:0], ENDIAN = LITTLE, ISVALID = ( C_TEMAC1_AVB == 1 && C_TEMAC1_ENABLED == 1 )
PORT Avb2Temac1RxDataValid = "", DIR = I, INITIALVAL = GND, ISVALID = ( C_TEMAC1_AVB == 1 && C_TEMAC1_ENABLED == 1 )
PORT Avb2Temac1RxFrameGood = "", DIR = I, INITIALVAL = GND, ISVALID = ( C_TEMAC1_AVB == 1 && C_TEMAC1_ENABLED == 1 )
PORT Avb2Temac1RxFrameBad = "", DIR = I, INITIALVAL = GND, ISVALID = ( C_TEMAC1_AVB == 1 && C_TEMAC1_ENABLED == 1 )
PORT TxClientClk_0 = "", DIR = O, ISVALID = ( C_TEMAC0_STATS == 1 )
PORT ClientTxStat_0 = "", DIR = O, ISVALID = ( C_TEMAC0_STATS == 1 )
PORT ClientTxStatsVld_0 = "", DIR = O, ISVALID = ( C_TEMAC0_STATS == 1 )
PORT ClientTxStatsByteVld_0 = "", DIR = O, ISVALID = ( C_TEMAC0_STATS == 1 )
PORT RxClientClk_0 = "", DIR = O, ISVALID = ( C_TEMAC0_STATS == 1 )
PORT ClientRxStats_0 = "", DIR = O, VEC = [6:0], ENDIAN = LITTLE, ISVALID = ( C_TEMAC0_STATS == 1 )
PORT ClientRxStatsVld_0 = "", DIR = O, ISVALID = ( C_TEMAC0_STATS == 1 )
PORT ClientRxStatsByteVld_0 = "", DIR = O, ISVALID = ( C_TEMAC0_STATS == 1 )
PORT TxClientClk_1 = "", DIR = O, ISVALID = ( C_TEMAC1_ENABLED == 1 && C_TEMAC1_STATS == 1 )
PORT ClientTxStat_1 = "", DIR = O, ISVALID = ( C_TEMAC1_ENABLED == 1 && C_TEMAC1_STATS == 1 )
PORT ClientTxStatsVld_1 = "", DIR = O, ISVALID = ( C_TEMAC1_ENABLED == 1 && C_TEMAC1_STATS == 1 )
PORT ClientTxStatsByteVld_1 = "", DIR = O, ISVALID = ( C_TEMAC1_ENABLED == 1 && C_TEMAC1_STATS == 1 )
PORT RxClientClk_1 = "", DIR = O, ISVALID = ( C_TEMAC1_ENABLED == 1 && C_TEMAC1_STATS == 1 )
PORT ClientRxStats_1 = "", DIR = O, VEC = [6:0], ENDIAN = LITTLE, ISVALID = ( C_TEMAC1_ENABLED == 1 && C_TEMAC1_STATS == 1 )
PORT ClientRxStatsVld_1 = "", DIR = O, ISVALID = ( C_TEMAC1_ENABLED == 1 && C_TEMAC1_STATS == 1 )
PORT ClientRxStatsByteVld_1 = "", DIR = O, ISVALID = ( C_TEMAC1_ENABLED == 1 && C_TEMAC1_STATS == 1 )
PORT MDIO_0_I = "", DIR = I, INITIALVAL = VCC, IO_IF = temacif_0, IO_IS = MDIO_0_I
PORT MDIO_0_O = "", DIR = O, INITIALVAL = VCC, IO_IF = temacif_0, IO_IS = MDIO_0_O
PORT MDIO_0_T = "", DIR = O, INITIALVAL = VCC, IO_IF = temacif_0, IO_IS = MDIO_0_T
PORT MDIO_0 = "", DIR = IO, THREE_STATE = TRUE, INITIALVAL = VCC, IO_IF = temacif_0, IO_IS = MDIO_0, TRI_I = MDIO_0_I, TRI_O = MDIO_0_O, TRI_T = MDIO_0_T
PORT MDIO_1_I = "", DIR = I, INITIALVAL = VCC, IO_IF = temacif_1, IO_IS = MDIO_1_I, ISVALID = ( C_TEMAC1_ENABLED == 1 )
PORT MDIO_1_O = "", DIR = O, INITIALVAL = VCC, IO_IF = temacif_1, IO_IS = MDIO_1_O, ISVALID = ( C_TEMAC1_ENABLED == 1 )
PORT MDIO_1_T = "", DIR = O, INITIALVAL = VCC, IO_IF = temacif_1, IO_IS = MDIO_1_T, ISVALID = ( C_TEMAC1_ENABLED == 1 )
PORT MDIO_1 = "", DIR = IO, THREE_STATE = TRUE, INITIALVAL = VCC, IO_IF = temacif_1, IO_IS = MDIO_1, ISVALID = ( C_TEMAC1_ENABLED == 1 ), TRI_I = MDIO_1_I, TRI_O = MDIO_1_O, TRI_T = MDIO_1_T

END

FINISH_SINGLE_MPD

START_SINGLE_MPD xps_tft_v2_01_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : xps_tft
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN xps_tft

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = MIXED
OPTION RUN_NGCBUILD = TRUE
OPTION PLATGEN_SYSLEVEL_UPDATE_PROC = generate_corelevel_ucf
OPTION DESC = XPS TFT
OPTION LONG_DESC = XPS TFT
OPTION IP_GROUP = IO Modules:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=PRODUCTION, spartan3=PRODUCTION, spartan3an=PRODUCTION, spartan3a=PRODUCTION, spartan3e=PRODUCTION, spartan3adsp=PRODUCTION, virtex4lx=PRODUCTION, virtex4sx=PRODUCTION, virtex4fx=PRODUCTION, virtex5lx=PRODUCTION, virtex5sx=PRODUCTION, virtex5fx=PRODUCTION, aspartan3e=PRODUCTION, aspartan3a=PRODUCTION, aspartan3adsp=PRODUCTION, qvirtex4lx=PRODUCTION, qvirtex4sx=PRODUCTION, qvirtex4fx=PRODUCTION, qrvirtex4lx=PRODUCTION, qrvirtex4sx=PRODUCTION, qrvirtex4fx=PRODUCTION, spartan6t=PRODUCTION, spartan6=PRODUCTION, spartan6l=PRE_PRODUCTION, qspartan6t=PRODUCTION, qspartan6=PRODUCTION, aspartan6t=PRODUCTION, aspartan6=PRODUCTION, virtex6lx=PRODUCTION, virtex6sx=PRODUCTION, virtex6hx=PRODUCTION, virtex6cx=PRODUCTION, virtex6llx=PRE_PRODUCTION, virtex6lsx=PRE_PRODUCTION, qspartan6l=PRE_PRODUCTION, qvirtex6lx=PRE_PRODUCTION, qvirtex6sx=PRE_PRODUCTION, qvirtex6fx=PRE_PRODUCTION, qvirtex6tx=PRE_PRODUCTION)
OPTION STYLE = HDL

IO_INTERFACE IO_IF = tft_0, IO_TYPE = XIL_TFT_V1

## Bus Interfaces
BUS_INTERFACE BUS = MPLB, BUS_TYPE = MASTER, BUS_STD = PLBV46, GENERATE_BURSTS = TRUE, UNKNOWN = REQUIRE
BUS_INTERFACE BUS = SPLB, BUS_TYPE = SLAVE, BUS_STD = PLBV46, ISVALID = (C_DCR_SPLB_SLAVE_IF==1), UNKNOWN = REQUIRE
BUS_INTERFACE BUS = SDCR, BUS_TYPE = SLAVE, BUS_STD = DCR, ISVALID = (C_DCR_SPLB_SLAVE_IF==0), UNKNOWN = REQUIRE

## Generics for VHDL or Parameters for Verilog
PARAMETER C_FAMILY = virtex5, DT = STRING
PARAMETER C_DCR_SPLB_SLAVE_IF = 1, DT = INTEGER, BUS = SPLB, RANGE = (0, 1), ASSIGNMENT = REQUIRE
PARAMETER C_TFT_INTERFACE = 1, DT = INTEGER, RANGE = (0, 1), ASSIGNMENT = REQUIRE
PARAMETER C_I2C_SLAVE_ADDR = 0b1110110, DT = std_logic_vector, ADDRESS = NONE, ISVALID = (C_TFT_INTERFACE==1), ASSIGNMENT = REQUIRE
PARAMETER C_DEFAULT_TFT_BASE_ADDR = 0xf0000000, DT = std_logic_vector, ADDRESS = NONE, ASSIGNMENT = REQUIRE
PARAMETER C_DCR_BASEADDR = 0b1111111111, DT = std_logic_vector, BUS = SDCR, ADDRESS = BASE, PAIR = C_DCR_HIGHADDR, MIN_SIZE = 4, ISVALID = (C_DCR_SPLB_SLAVE_IF==0), ASSIGNMENT = REQUIRE
PARAMETER C_DCR_HIGHADDR = 0b0000000000, DT = std_logic_vector, BUS = SDCR, ADDRESS = HIGH, PAIR = C_DCR_BASEADDR, ISVALID = (C_DCR_SPLB_SLAVE_IF==0), ASSIGNMENT = REQUIRE
PARAMETER C_MPLB_AWIDTH = 32, DT = INTEGER, BUS = MPLB, ASSIGNMENT = CONSTANT
PARAMETER C_MPLB_DWIDTH = 64, DT = INTEGER, BUS = MPLB, RANGE = (64, 128)
PARAMETER C_MPLB_NATIVE_DWIDTH = 64, DT = INTEGER, BUS = MPLB, ASSIGNMENT = CONSTANT
PARAMETER C_MPLB_SMALLEST_SLAVE = 32, DT = INTEGER, BUS = MPLB, RANGE = (32, 64, 128)
PARAMETER C_SPLB_AWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_DWIDTH = 32, DT = INTEGER, BUS = SPLB, RANGE = (32, 64, 128)
PARAMETER C_SPLB_P2P = 0, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB, RANGE = (0:4)
PARAMETER C_SPLB_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB, RANGE = (0:16)
PARAMETER C_SPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_BASEADDR = 0xffffffff, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_SPLB_HIGHADDR, MIN_SIZE = 0x10, ISVALID = (C_DCR_SPLB_SLAVE_IF==1), ASSIGNMENT = REQUIRE
PARAMETER C_SPLB_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_SPLB_BASEADDR, ISVALID = (C_DCR_SPLB_SLAVE_IF==1), ASSIGNMENT = REQUIRE

## Ports
PORT SPLB_Clk = "", DIR = I, SIGIS = CLK, BUS = SPLB
PORT SPLB_Rst = SPLB_Rst, DIR = I, SIGIS = RST, BUS = SPLB
PORT MPLB_Clk = "", DIR = I, SIGIS = CLK, BUS = MPLB
PORT MPLB_Rst = MPLB_Rst, DIR = I, SIGIS = RST, BUS = MPLB
PORT MD_error = "", DIR = O
PORT IP2INTC_Irpt = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = EDGE_RISING
PORT M_request = M_request, DIR = O, BUS = MPLB
PORT M_priority = M_priority, DIR = O, VEC = [0:1], BUS = MPLB
PORT M_busLock = M_busLock, DIR = O, BUS = MPLB
PORT M_RNW = M_RNW, DIR = O, BUS = MPLB
PORT M_BE = M_BE, DIR = O, VEC = [0:((C_MPLB_DWIDTH/8)-1)], BUS = MPLB
PORT M_MSize = M_MSize, DIR = O, VEC = [0:1], BUS = MPLB
PORT M_size = M_size, DIR = O, VEC = [0:3], BUS = MPLB
PORT M_type = M_type, DIR = O, VEC = [0:2], BUS = MPLB
PORT M_ABus = M_ABus, DIR = O, VEC = [0:31], BUS = MPLB
PORT M_wrBurst = M_wrBurst, DIR = O, BUS = MPLB
PORT M_rdBurst = M_rdBurst, DIR = O, BUS = MPLB
PORT M_wrDBus = M_wrDBus, DIR = O, VEC = [0:(C_MPLB_DWIDTH-1)], BUS = MPLB
PORT PLB_MSSize = PLB_MSSize, DIR = I, VEC = [0:1], BUS = MPLB
PORT PLB_MAddrAck = PLB_MAddrAck, DIR = I, BUS = MPLB
PORT PLB_MRearbitrate = PLB_MRearbitrate, DIR = I, BUS = MPLB
PORT PLB_MTimeout = PLB_MTimeout, DIR = I, BUS = MPLB
PORT PLB_MRdErr = PLB_MRdErr, DIR = I, BUS = MPLB
PORT PLB_MWrErr = PLB_MWrErr, DIR = I, BUS = MPLB
PORT PLB_MRdDBus = PLB_MRdDBus, DIR = I, VEC = [0:(C_MPLB_DWIDTH-1)], BUS = MPLB
PORT PLB_MRdDAck = PLB_MRdDAck, DIR = I, BUS = MPLB
PORT PLB_MWrDAck = PLB_MWrDAck, DIR = I, BUS = MPLB
PORT PLB_MRdBTerm = PLB_MRdBTerm, DIR = I, BUS = MPLB
PORT PLB_MWrBTerm = PLB_MWrBTerm, DIR = I, BUS = MPLB
PORT M_TAttribute = M_TAttribute, DIR = O, VEC = [0:15], BUS = MPLB
PORT M_lockErr = M_lockErr, DIR = O, BUS = MPLB
PORT M_abort = M_abort, DIR = O, BUS = MPLB
PORT M_UABus = M_UABus, DIR = O, VEC = [0:31], BUS = MPLB
PORT PLB_MBusy = PLB_MBusy, DIR = I, BUS = MPLB
PORT PLB_MIRQ = PLB_MIRQ, DIR = I, BUS = MPLB
PORT PLB_MRdWdAddr = PLB_MRdWdAddr, DIR = I, VEC = [0:3], BUS = MPLB
PORT PLB_ABus = PLB_ABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB
PORT PLB_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB_MID_WIDTH-1)], BUS = SPLB
PORT PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB
PORT PLB_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB_DWIDTH/8)-1)], BUS = SPLB
PORT PLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB
PORT PLB_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB
PORT PLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB
PORT Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB
PORT Sl_wait = Sl_wait, DIR = O, BUS = SPLB
PORT Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB
PORT Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB
PORT Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB
PORT Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB
PORT Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB
PORT Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT PLB_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB
PORT PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB
PORT PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB
PORT PLB_abort = PLB_abort, DIR = I, BUS = SPLB
PORT PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB
PORT PLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB
PORT PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB
PORT PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB
PORT PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB
PORT PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB
PORT PLB_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB
PORT Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB
PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB
PORT Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB
PORT Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT DCR_Clk = "", DIR = I, SIGIS = CLK, ISVALID = (C_DCR_SPLB_SLAVE_IF==0), ASSIGNMENT = REQUIRE
PORT DCR_Rst = "", DIR = I, SIGIS = RST, ISVALID = (C_DCR_SPLB_SLAVE_IF==0), ASSIGNMENT = REQUIRE
PORT DCR_Read = DCR_Read, DIR = I, BUS = SDCR
PORT DCR_Write = DCR_Write, DIR = I, BUS = SDCR
PORT DCR_ABus = DCR_ABus, DIR = I, VEC = [0:9], BUS = SDCR
PORT DCR_Sl_DBus = DCR_Sl_DBus, DIR = I, VEC = [0:31], BUS = SDCR
PORT Sl_DCRDBus = Sl_dcrDBus, DIR = O, VEC = [0:31], BUS = SDCR
PORT Sl_DCRAck = Sl_dcrAck, DIR = O, BUS = SDCR
PORT SYS_TFT_Clk = "", DIR = I, SIGIS = CLK
PORT TFT_HSYNC = "", DIR = O, DESC = 'TFT Horizontal Sync', IO_IF = tft_0, IO_IS = tft_hsync
PORT TFT_VSYNC = "", DIR = O, DESC = 'TFT Verical Sync', IO_IF = tft_0, IO_IS = tft_vsync
PORT TFT_DE = "", DIR = O, DESC = 'TFT Data Enable Sync', IO_IF = tft_0, IO_IS = tft_de
PORT TFT_DPS = "", DIR = O, DESC = 'TFT Display scan method', IO_IF = tft_0, IO_IS = tft_dps
PORT TFT_VGA_CLK = "", DIR = O, DESC = 'TFT VGA clock output', IO_IF = tft_0, IO_IS = tft_vga_clk
PORT TFT_VGA_R = "", DIR = O, VEC = [5:0], ISVALID = (C_TFT_INTERFACE==0), DESC = 'TFT VGA RED data', IO_IF = tft_0, IO_IS = tft_vga_r
PORT TFT_VGA_G = "", DIR = O, VEC = [5:0], ISVALID = (C_TFT_INTERFACE==0), DESC = 'TFT VGA GREEN data', IO_IF = tft_0, IO_IS = tft_vga_g
PORT TFT_VGA_B = "", DIR = O, VEC = [5:0], ISVALID = (C_TFT_INTERFACE==0), DESC = 'TFT VGA BLUE data', IO_IF = tft_0, IO_IS = tft_vga_b
PORT TFT_DVI_CLK_P = "", DIR = O, ISVALID = (C_TFT_INTERFACE==1), DESC = 'TFT DVI Clock', IO_IF = tft_0, IO_IS = tft_dvi_clk
PORT TFT_DVI_CLK_N = "", DIR = O, ISVALID = (C_TFT_INTERFACE==1), DESC = 'TFT DVI Clock', IO_IF = tft_0, IO_IS = tft_dvi_clk
PORT TFT_DVI_DATA = "", DIR = O, VEC = [11:0], ISVALID = (C_TFT_INTERFACE==1), DESC = 'TFT DVI data', IO_IF = tft_0, IO_IS = tft_dvi_data
PORT TFT_IIC_SCL_I = "", DIR = I
PORT TFT_IIC_SCL_O = "", DIR = O
PORT TFT_IIC_SCL_T = "", DIR = O
PORT TFT_IIC_SDA_I = "", DIR = I
PORT TFT_IIC_SDA_O = "", DIR = O
PORT TFT_IIC_SDA_T = "", DIR = O
PORT TFT_IIC_SCL = "", DIR = IO, THREE_STATE = TRUE, TRI_I = TFT_IIC_SCL_I, TRI_O = TFT_IIC_SCL_O, TRI_T = TFT_IIC_SCL_T, ISVALID = (C_TFT_INTERFACE==1), DESC = 'Chrontel I2C Clock', IO_IF = tft_0, IO_IS = tft_i2c_clk
PORT TFT_IIC_SDA = "", DIR = IO, THREE_STATE = TRUE, TRI_I = TFT_IIC_SDA_I, TRI_O = TFT_IIC_SDA_O, TRI_T = TFT_IIC_SDA_T, ISVALID = (C_TFT_INTERFACE==1), DESC = 'Chrontel I2C Data', IO_IF = tft_0, IO_IS = tft_i2c_data

END

FINISH_SINGLE_MPD

START_SINGLE_MPD ppc440mc_ddr2_v3_00_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : ppc440mc_ddr2
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN ppc440mc_ddr2

## Peripheral Options
OPTION RUN_NGCBUILD = TRUE
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VERILOG
OPTION PLATGEN_SYSLEVEL_UPDATE_PROC = generate_corelevel_ucf
OPTION USAGE_LEVEL = BASE_USER
OPTION LAST_UPDATED = 12.1
OPTION DESC = PowerPC 440 DDR2 Memory Controller
OPTION LONG_DESC = A wrapper to instantiate the PowerPC 440 DDR2 Memory Controller
OPTION IP_GROUP = Memory and Memory Controller:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=SUPERSEDED, spartan3=SUPERSEDED, spartan3an=SUPERSEDED, spartan3a=SUPERSEDED, spartan3e=SUPERSEDED, spartan3adsp=SUPERSEDED, virtex4lx=SUPERSEDED, virtex4sx=SUPERSEDED, virtex4fx=SUPERSEDED, virtex5lx=SUPERSEDED, virtex5sx=SUPERSEDED, virtex5fx=SUPERSEDED, aspartan3e=SUPERSEDED, aspartan3a=SUPERSEDED, aspartan3adsp=SUPERSEDED, qvirtex4lx=SUPERSEDED, qvirtex4sx=SUPERSEDED, qvirtex4fx=SUPERSEDED, qrvirtex4lx=SUPERSEDED, qrvirtex4sx=SUPERSEDED, qrvirtex4fx=SUPERSEDED, spartan6t=SUPERSEDED, spartan6=SUPERSEDED, spartan6l=SUPERSEDED, qspartan6t=SUPERSEDED, qspartan6=SUPERSEDED, aspartan6t=SUPERSEDED, aspartan6=SUPERSEDED, virtex6lx=SUPERSEDED, virtex6sx=SUPERSEDED, virtex6hx=SUPERSEDED, virtex6cx=SUPERSEDED, virtex6llx=SUPERSEDED, virtex6lsx=SUPERSEDED, qspartan6l=SUPERSEDED, qrvirtex5=SUPERSEDED, qvirtex6lx=SUPERSEDED, qvirtex6sx=SUPERSEDED, qvirtex6fx=SUPERSEDED, qvirtex6tx=SUPERSEDED)
OPTION STYLE = HDL

IO_INTERFACE IO_IF = memory_0, IO_TYPE = XIL_MEMORY_V1

## Bus Interfaces
BUS_INTERFACE BUS = PPC440MC, BUS_STD = XIL_PPC440MC, BUS_TYPE = TARGET

## Generics for VHDL or Parameters for Verilog
PARAMETER C_DDR_BAWIDTH = 2, DT = integer, RANGE = (2,3), IO_IF = memory_0, IO_IS = C_MEM_BANKADDR_WIDTH
PARAMETER C_NUM_CLK_PAIRS = 1, DT = integer, RANGE = (1:5), IO_IF = memory_0, IO_IS = C_MEM_CLK_WIDTH
PARAMETER C_DDR_DWIDTH = 64, DT = integer, RANGE = (16,32,64,72), IO_IF = memory_0, IO_IS = C_DDR_DWIDTH
PARAMETER C_DDR_CAWIDTH = 10, DT = integer, IO_IF = memory_0, IO_IS = C_DDR_COL_AWIDTH
PARAMETER C_NUM_RANKS_MEM = 1, DT = integer, IO_IF = memory_0, IO_IS = C_NUM_RANKS_MEM
PARAMETER C_CS_BITS = 0, DT = integer, IO_IF = memory_0, IO_IS = C_CS_BITS, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_ddr_cs_bits, ASSIGNMENT = UPDATE
PARAMETER C_DDR_DM_WIDTH = 8, DT = integer, RANGE = (2,4,8,9), IO_IF = memory_0, IO_IS = C_DDR_DM_WIDTH, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_ddr_dm_width, ASSIGNMENT = UPDATE
PARAMETER C_DQ_BITS = 6, DT = integer, IO_IF = memory_0, IO_IS = C_DQ_BITS, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_ddr_dq_bits, ASSIGNMENT = UPDATE
PARAMETER C_DDR2_ODT_WIDTH = 1, DT = integer, RANGE = (0:4), IO_IF = memory_0, IO_IS = C_DDR2_ODT_WIDTH
PARAMETER C_DDR2_ADDT_LAT = 0, DT = integer, RANGE = (0:4), IO_IF = memory_0, IO_IS = C_DDR2_ADDT_LAT
PARAMETER C_INCLUDE_ECC_SUPPORT = 0, DT = integer, RANGE = (0,1)
PARAMETER C_DDR2_ODT_SETTING = 1, DT = integer, RANGE = (0:3), IO_IF = memory_0, IO_IS = C_MEM_ODT_TYPE
PARAMETER C_DQS_BITS = 3, DT = integer, IO_IF = memory_0, IO_IS = C_DQS_BITS, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_ddr_dqs_bits, ASSIGNMENT = UPDATE
PARAMETER C_DDR_DQS_WIDTH = 8, DT = integer, RANGE = (2,4,8,9), IO_IF = memory_0, IO_IS = C_DDR_DQS_WIDTH, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_ddr_dqs_width, ASSIGNMENT = UPDATE
PARAMETER C_DDR_RAWIDTH = 14, DT = integer, IO_IF = memory_0, IO_IS = C_MEM_ADDR_WIDTH
PARAMETER C_DDR_BURST_LENGTH = 4, DT = integer, RANGE = (4,8)
PARAMETER C_DDR_CAS_LAT = 5, DT = integer, RANGE = (3:5), IO_IF = memory_0, IO_IS = C_DDR_CAS_LAT
PARAMETER C_REG_DIMM = 0, DT = integer, RANGE = (0:1), IO_IF = memory_0, IO_IS = C_REG_DIMM
PARAMETER C_MIB_MC_CLOCK_RATIO = 0, DT = integer, RANGE = (0:2)
PARAMETER C_MEM_BASEADDR = 0xFFFFFFFF, ADDRESS = BASE, PAIR = C_MEM_HIGHADDR, ADDR_TYPE = MEMORY, ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = C_BASEADDR, CACHEABLE = TRUE, PERMIT = BASE_USER, DESC = Bank 0 Base Address
PARAMETER C_MEM_HIGHADDR = 0x00000000, ADDRESS = HIGH, PAIR = C_MEM_BASEADDR, ADDR_TYPE = MEMORY, ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = C_HIGHADDR, PERMIT = BASE_USER, DESC = Bank 0 High Address
PARAMETER C_REDUCE_DRV = 0, DT = integer, RANGE = (0:1), IO_IF = memory_0, IO_IS = C_REDUCE_DRV
PARAMETER C_DDR_TREFI = 7800, DT = integer, IO_IF = memory_0, IO_IS = C_DDR_TREFI
PARAMETER C_DDR_TRAS = 40000, DT = integer, IO_IF = memory_0, IO_IS = C_DDR_TRAS
PARAMETER C_DDR_TRCD = 15000, DT = integer, IO_IF = memory_0, IO_IS = C_DDR_TRCD
PARAMETER C_DDR_TRFC = 70000, DT = integer, IO_IF = memory_0, IO_IS = C_DDR_TRFC
PARAMETER C_DDR_TRP = 15000, DT = integer, IO_IF = memory_0, IO_IS = C_DDR_TRP
PARAMETER C_DDR_TRTP = 7500, DT = integer, IO_IF = memory_0, IO_IS = C_DDR_TRTP
PARAMETER C_DDR_TWR = 15000, DT = integer, IO_IF = memory_0, IO_IS = C_DDR_TWR
PARAMETER C_DDR_TWTR = 10000, DT = integer, IO_IF = memory_0, IO_IS = C_DDR_TWTR
PARAMETER C_MC_MIBCLK_PERIOD_PS = 3000, DT = integer, RANGE = (3000:8000)
PARAMETER C_IDEL_HIGH_PERF = TRUE, DT = string
PARAMETER C_SIM_ONLY = 0, DT = integer, RANGE = (0:1)
PARAMETER C_NUM_IDELAYCTRL = 1, DT = integer, IO_IF = memory_0, IO_IS = C_NUM_IDELAYCTRL
PARAMETER C_IODELAY_GRP = NOT_SET, DT = STRING, ASSIGNMENT = OPTIONAL_UPDATE, IO_IF = memory_0, IO_IS = C_IODELAY_GRP, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_iodelay_grp
PARAMETER C_READ_DATA_PIPELINE = 0, DT = integer, RANGE = (0:1)
PARAMETER C_FPGA_SPEED_GRADE = 1, DT = integer, SYSLEVEL_UPDATE_VALUE_PROC = iplevel_update_speedgrade

## Ports
PORT mc_mibclk = "", DIR = I, SIGIS = CLK, ASSIGNMENT = REQUIRE
PORT mi_mcclk90 = "", DIR = I, SIGIS = CLK, ASSIGNMENT = REQUIRE
PORT mi_mcreset = "", DIR = I, SIGIS = RST, ASSIGNMENT = REQUIRE
PORT mi_mcclkdiv2 = "", DIR = I, SIGIS = CLK, ASSIGNMENT = REQUIRE
PORT mi_mcclk_200 = "", DIR = I, SIGIS = CLK, ASSIGNMENT = REQUIRE
PORT mi_mcaddressvalid = mimcaddressvalid, DIR = I, BUS = PPC440MC
PORT mi_mcaddress = mimcaddress, DIR = I, VEC = [0:35], BUS = PPC440MC
PORT mi_mcbankconflict = mimcbankconflict, DIR = I, BUS = PPC440MC
PORT mi_mcrowconflict = mimcrowconflict, DIR = I, BUS = PPC440MC
PORT mi_mcbyteenable = mimcbyteenable, DIR = I, VEC = [0:15], BUS = PPC440MC
PORT mi_mcwritedata = mimcwritedata, DIR = I, VEC = [0:127], BUS = PPC440MC
PORT mi_mcreadnotwrite = mimcreadnotwrite, DIR = I, BUS = PPC440MC
PORT mi_mcwritedatavalid = mimcwritedatavalid, DIR = I, BUS = PPC440MC
PORT mc_miaddrreadytoaccept = mcmiaddrreadytoaccept, DIR = O, BUS = PPC440MC
PORT mc_mireaddata = mcmireaddata, DIR = O, VEC = [0:127], BUS = PPC440MC
PORT mc_mireaddataerr = mcmireaddataerr, DIR = O, BUS = PPC440MC
PORT mc_mireaddatavalid = mcmireaddatavalid, DIR = O, BUS = PPC440MC
PORT idelay_ctrl_rdy_i = "", DIR = I, PERMIT = BASE_USER, INITIALVAL = VCC, IO_IF = memory_0, IO_IS = idelay_ctrl_rdy_i
PORT idelay_ctrl_rdy = "", DIR = O, PERMIT = BASE_USER, IO_IF = memory_0, IO_IS = idelay_ctrl_rdy
PORT DDR2_DQ = "", DIR = IO, VEC = [(C_DDR_DWIDTH-1):0], IOB_STATE = BUF, THREE_STATE = FALSE, PERMIT = BASE_USER, IO_IF = memory_0, IO_IS = ddr2_data
PORT DDR2_DQS = "", DIR = IO, VEC = [(C_DDR_DQS_WIDTH-1):0], IOB_STATE = BUF, THREE_STATE = FALSE, PERMIT = BASE_USER, IO_IF = memory_0, IO_IS = ddr2_data_strobe
PORT DDR2_DQS_N = "", DIR = IO, VEC = [(C_DDR_DQS_WIDTH-1):0], IOB_STATE = BUF, THREE_STATE = FALSE, PERMIT = BASE_USER, IO_IF = memory_0, IO_IS = ddr2_data_strobe_n
PORT DDR2_A = "", DIR = O, VEC = [(C_DDR_RAWIDTH-1):0], PERMIT = BASE_USER, IO_IF = memory_0, IO_IS = DDR2_ADDRESS
PORT DDR2_BA = "", DIR = O, VEC = [(C_DDR_BAWIDTH-1):0], PERMIT = BASE_USER, IO_IF = memory_0, IO_IS = DDR2_BankAddr
PORT DDR2_RAS_N = "", DIR = O, PERMIT = BASE_USER, IO_IF = memory_0, IO_IS = ddr2_row_addr_select
PORT DDR2_CAS_N = "", DIR = O, PERMIT = BASE_USER, IO_IF = memory_0, IO_IS = ddr2_col_addr_select
PORT DDR2_WE_N = "", DIR = O, PERMIT = BASE_USER, IO_IF = memory_0, IO_IS = ddr2_write_enable
PORT DDR2_CS_N = "", DIR = O, VEC = [(C_NUM_RANKS_MEM-1):0], PERMIT = BASE_USER, IO_IF = memory_0, IO_IS = ddr2_chip_select
PORT DDR2_ODT = "", DIR = O, VEC = [(C_DDR2_ODT_WIDTH-1):0], PERMIT = BASE_USER, IO_IF = memory_0, IO_IS = DDR2_ODT
PORT DDR2_CKE = "", DIR = O, VEC = [(C_NUM_RANKS_MEM-1):0], PERMIT = BASE_USER, IO_IF = memory_0, IO_IS = ddr2_clk_enable
PORT DDR2_DM = "", DIR = O, VEC = [(C_DDR_DM_WIDTH-1):0], PERMIT = BASE_USER, IO_IF = memory_0, IO_IS = ddr2_data_mask
PORT DDR2_CK = "", DIR = O, VEC = [(C_NUM_CLK_PAIRS-1):0], PERMIT = BASE_USER, IO_IF = memory_0, IO_IS = DDR2_CLK
PORT DDR2_CK_N = "", DIR = O, VEC = [(C_NUM_CLK_PAIRS-1):0], PERMIT = BASE_USER, IO_IF = memory_0, IO_IS = DDR2_CLK_N

END

FINISH_SINGLE_MPD

START_SINGLE_MPD xps_iic_v2_02_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : xps_iic
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN xps_iic

## Peripheral Options
OPTION STYLE = HDL
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION USAGE_LEVEL = BASE_USER
OPTION DESC = XPS IIC Interface
OPTION LONG_DESC = PLBV46 interface to Philips I2C bus v2.1
OPTION IP_GROUP = Communication Low-Speed:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=SUPERSEDED, spartan3=SUPERSEDED, spartan3an=SUPERSEDED, spartan3a=SUPERSEDED, spartan3e=SUPERSEDED, spartan3adsp=SUPERSEDED, virtex4lx=SUPERSEDED, virtex4sx=SUPERSEDED, virtex4fx=SUPERSEDED, virtex5lx=SUPERSEDED, virtex5sx=SUPERSEDED, virtex5fx=SUPERSEDED, aspartan3e=SUPERSEDED, aspartan3a=SUPERSEDED, aspartan3adsp=SUPERSEDED, qvirtex4lx=SUPERSEDED, qvirtex4sx=SUPERSEDED, qvirtex4fx=SUPERSEDED, qrvirtex4lx=SUPERSEDED, qrvirtex4sx=SUPERSEDED, qrvirtex4fx=SUPERSEDED, spartan6t=SUPERSEDED, spartan6=SUPERSEDED, spartan6l=SUPERSEDED, qspartan6t=SUPERSEDED, qspartan6=SUPERSEDED, aspartan6t=SUPERSEDED, aspartan6=SUPERSEDED, virtex6lx=SUPERSEDED, virtex6sx=SUPERSEDED, virtex6hx=SUPERSEDED, virtex6cx=SUPERSEDED, virtex6llx=SUPERSEDED, virtex6lsx=SUPERSEDED, qspartan6l=SUPERSEDED, qrvirtex5=SUPERSEDED, qvirtex6lx=SUPERSEDED, qvirtex6sx=SUPERSEDED, qvirtex6fx=SUPERSEDED, qvirtex6tx=SUPERSEDED)
OPTION RUN_NGCBUILD = FALSE

IO_INTERFACE IO_IF = iic_0, IO_TYPE = XIL_IIC_V1

## Bus Interfaces
BUS_INTERFACE BUS = SPLB, BUS_TYPE = SLAVE, BUS_STD = PLBV46

## Generics for VHDL or Parameters for Verilog
PARAMETER C_IIC_FREQ = 100000, DT = INTEGER, DESC = IIC (SCL) Clock Frequency, IO_IF = iic_0, IO_IS = clk_out_freq
PARAMETER C_TEN_BIT_ADR = 0, DT = INTEGER, RANGE = (0,1), DESC = IIC Address Width, IO_IF = iic_0, IO_IS = slave_respond_mode, VALUES = (0= 7-bit addresses , 1= 10-bit addresses )
PARAMETER C_GPO_WIDTH = 1, DT = INTEGER, RANGE = (1:8), DESC = General Purpose Output Bus Width, IO_IF = iic_0, IO_IS = gpo
PARAMETER C_CLK_FREQ = 25000000, DT = INTEGER, IO_IS = clk_freq, CLK_PORT = SPLB_Clk, CLK_UNIT = HZ
PARAMETER C_SCL_INERTIAL_DELAY = 0, DT = INTEGER, RANGE = (0:255), DESC = SCL intertial delay filter value in clocks, IO_IF = iic_0
PARAMETER C_SDA_INERTIAL_DELAY = 0, DT = INTEGER, RANGE = (0:255), DESC = SDA intertial delay filter value in clocks, IO_IF = iic_0
PARAMETER C_BASEADDR = 0xffffffff, DT = std_logic_vector(0 to 31), BUS = SPLB, ADDRESS = BASE, PAIR = C_HIGHADDR, MIN_SIZE = 0x00200, ASSIGNMENT = REQUIRE
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector(0 to 31), BUS = SPLB, ADDRESS = HIGH, PAIR = C_BASEADDR, ASSIGNMENT = REQUIRE
PARAMETER C_SPLB_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_AWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_DWIDTH = 32, DT = INTEGER, BUS = SPLB, RANGE = (32,64, 128)
PARAMETER C_SPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB, TYPE = NON_HDL, ASSIGNMENT = CONSTANT
PARAMETER C_FAMILY = virtex5, DT = STRING

## Ports
PORT Sda_I = "", DIR = I
PORT Sda_O = "", DIR = O
PORT Sda_T = "", DIR = O
PORT Scl_I = "", DIR = I
PORT Scl_O = "", DIR = O
PORT Scl_T = "", DIR = O
PORT Gpo = "", DIR = O, VEC = [(32-C_GPO_WIDTH):(32-1)], PERMIT = BASE_USER, DESC = ''IIC General Purpose Output'', IO_IF = iic_0, IO_IS = gpo
PORT IIC2INTC_Irpt = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, INTERRUPT_PRIORITY = LOW
PORT SPLB_Clk = "", DIR = I, SIGIS = CLK, BUS = SPLB
PORT SPLB_Rst = SPLB_Rst, DIR = I, SIGIS = RST, BUS = SPLB
PORT PLB_ABus = PLB_ABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB
PORT PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB
PORT PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB
PORT PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB
PORT PLB_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB_MID_WIDTH-1)], BUS = SPLB
PORT PLB_abort = PLB_abort, DIR = I, BUS = SPLB
PORT PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB
PORT PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB
PORT PLB_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB_DWIDTH/8)-1)], BUS = SPLB
PORT PLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB
PORT PLB_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB
PORT PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB
PORT PLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB
PORT PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB
PORT PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB
PORT PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB
PORT PLB_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB
PORT Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB
PORT Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB
PORT Sl_wait = Sl_wait, DIR = O, BUS = SPLB
PORT Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB
PORT Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB
PORT Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB
PORT Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB
PORT Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB
PORT Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB
PORT Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB
PORT Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB
PORT Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sda = "", DIR = IO, THREE_STATE = TRUE, TRI_I = Sda_I, TRI_O = Sda_O, TRI_T = Sda_T, PERMIT = BASE_USER, DESC = ''IIC Serial Data'', IO_IF = iic_0, IO_IS = Serial_Data
PORT Scl = "", DIR = IO, THREE_STATE = TRUE, TRI_I = Scl_I, TRI_O = Scl_O, TRI_T = Scl_T, PERMIT = BASE_USER, DESC = ''IIC Serial Clock'', IO_IF = iic_0, IO_IS = Serial_Clock

END

FINISH_SINGLE_MPD

START_SINGLE_MPD xps_mailbox_v2_00_b 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : xps_mailbox
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN xps_mailbox

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION STYLE = HDL
OPTION HDL = VHDL
OPTION RUN_NGCBUILD = TRUE
OPTION SYSLEVEL_DRC_PROC = check_syslevel_settings
OPTION PLATGEN_SYSLEVEL_UPDATE_PROC = generate_corelevel_ucf
OPTION USAGE_LEVEL = BASE_USER
OPTION DESC = XPS Mailbox
OPTION IP_GROUP = Interprocessor Communication:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=PRODUCTION, spartan3=PRODUCTION, spartan3an=PRODUCTION, spartan3a=PRODUCTION, spartan3e=PRODUCTION, spartan3adsp=PRODUCTION, virtex4lx=PRODUCTION, virtex4sx=PRODUCTION, virtex4fx=PRODUCTION, virtex5lx=PRODUCTION, virtex5sx=PRODUCTION, virtex5fx=PRODUCTION, aspartan3e=PRODUCTION, aspartan3a=PRODUCTION, aspartan3adsp=PRODUCTION, qvirtex4lx=PRODUCTION, qvirtex4sx=PRODUCTION, qvirtex4fx=PRODUCTION, qrvirtex4lx=PRODUCTION, qrvirtex4sx=PRODUCTION, qrvirtex4fx=PRODUCTION, spartan6t=PRODUCTION, spartan6=PRODUCTION, spartan6l=PRE_PRODUCTION, qspartan6t=PRODUCTION, qspartan6=PRODUCTION, aspartan6t=PRODUCTION, aspartan6=PRODUCTION, virtex6lx=PRODUCTION, virtex6sx=PRODUCTION, virtex6hx=PRODUCTION, virtex6cx=PRODUCTION, virtex6llx=PRE_PRODUCTION, virtex6lsx=PRE_PRODUCTION, qspartan6l=PRE_PRODUCTION, qrvirtex5=PRE_PRODUCTION, qvirtex6lx=PRE_PRODUCTION, qvirtex6sx=PRE_PRODUCTION, qvirtex6fx=PRE_PRODUCTION, qvirtex6tx=PRE_PRODUCTION)


## Bus Interfaces
BUS_INTERFACE BUS = SPLB0, BUS_TYPE = SLAVE, BUS_STD = PLBV46, EXCLUDE_BUSIF = DWFSL0:DRFSL0, ISVALID = (C_INTERFACE_0_IS_FSL == 0)
BUS_INTERFACE BUS = SPLB1, BUS_TYPE = SLAVE, BUS_STD = PLBV46, EXCLUDE_BUSIF = DWFSL1:DRFSL1, ISVALID = (C_INTERFACE_1_IS_FSL == 0)
BUS_INTERFACE BUS = DWFSL0, BUS_STD = XIL_DWFSL, BUS_TYPE = TARGET, EXCLUDE_BUSIF = SPLB0, ISVALID = (C_INTERFACE_0_IS_FSL == 1)
BUS_INTERFACE BUS = DRFSL0, BUS_STD = XIL_DRFSL, BUS_TYPE = INITIATOR, EXCLUDE_BUSIF = SPLB0, ISVALID = (C_INTERFACE_0_IS_FSL == 1)
BUS_INTERFACE BUS = DWFSL1, BUS_STD = XIL_DWFSL, BUS_TYPE = TARGET, EXCLUDE_BUSIF = SPLB1, ISVALID = (C_INTERFACE_1_IS_FSL == 1)
BUS_INTERFACE BUS = DRFSL1, BUS_STD = XIL_DRFSL, BUS_TYPE = INITIATOR, EXCLUDE_BUSIF = SPLB1, ISVALID = (C_INTERFACE_1_IS_FSL == 1)

## Generics for VHDL or Parameters for Verilog
PARAMETER C_FAMILY = virtex4, DT = string
PARAMETER C_EXT_RESET_HIGH = 1, DT = integer, RANGE = (0:1)
PARAMETER C_SPLB0_BASEADDR = 0xFFFFFFFF, DT = std_logic_vector, BUS = SPLB0, ADDRESS = BASE, PAIR = C_SPLB0_HIGHADDR, MIN_SIZE = 0x100, ISVALID = (C_INTERFACE_0_IS_FSL == 0)
PARAMETER C_SPLB0_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = SPLB0, ADDRESS = HIGH, PAIR = C_SPLB0_BASEADDR, ISVALID = (C_INTERFACE_0_IS_FSL == 0)
PARAMETER C_SPLB0_AWIDTH = 32, DT = INTEGER, BUS = SPLB0, ISVALID = (C_INTERFACE_0_IS_FSL == 0)
PARAMETER C_SPLB0_DWIDTH = 32, DT = INTEGER, BUS = SPLB0, ISVALID = (C_INTERFACE_0_IS_FSL == 0)
PARAMETER C_SPLB0_P2P = 0, DT = INTEGER, BUS = SPLB0, ISVALID = (C_INTERFACE_0_IS_FSL == 0)
PARAMETER C_SPLB0_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB0, ISVALID = (C_INTERFACE_0_IS_FSL == 0)
PARAMETER C_SPLB0_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB0, ISVALID = (C_INTERFACE_0_IS_FSL == 0)
PARAMETER C_SPLB0_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB0, ISVALID = (C_INTERFACE_0_IS_FSL == 0)
PARAMETER C_SPLB0_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB0, RANGE = (32:32), ASSIGNMENT = CONSTANT, ISVALID = (C_INTERFACE_0_IS_FSL == 0)
PARAMETER C_SPLB1_BASEADDR = 0xFFFFFFFF, DT = std_logic_vector, BUS = SPLB1, ADDRESS = BASE, PAIR = C_SPLB1_HIGHADDR, MIN_SIZE = 0x100, ISVALID = (C_INTERFACE_1_IS_FSL == 0)
PARAMETER C_SPLB1_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = SPLB1, ADDRESS = HIGH, PAIR = C_SPLB1_BASEADDR, ISVALID = (C_INTERFACE_1_IS_FSL == 0)
PARAMETER C_SPLB1_AWIDTH = 32, DT = INTEGER, BUS = SPLB1, ISVALID = (C_INTERFACE_1_IS_FSL == 0)
PARAMETER C_SPLB1_DWIDTH = 32, DT = INTEGER, BUS = SPLB1, ISVALID = (C_INTERFACE_1_IS_FSL == 0)
PARAMETER C_SPLB1_P2P = 0, DT = INTEGER, BUS = SPLB1, ISVALID = (C_INTERFACE_1_IS_FSL == 0)
PARAMETER C_SPLB1_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB1, ISVALID = (C_INTERFACE_1_IS_FSL == 0)
PARAMETER C_SPLB1_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB1, ISVALID = (C_INTERFACE_1_IS_FSL == 0)
PARAMETER C_SPLB1_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB1, ISVALID = (C_INTERFACE_1_IS_FSL == 0)
PARAMETER C_SPLB1_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB1, RANGE = (32:32), ASSIGNMENT = CONSTANT, ISVALID = (C_INTERFACE_1_IS_FSL == 0)
PARAMETER C_ASYNC_CLKS = 0, DT = integer, RANGE = (0:1)
PARAMETER C_IMPL_STYLE = 0, DT = integer, RANGE = (0:1)
PARAMETER C_FSL_DWIDTH = 32, DT = integer
PARAMETER C_INTERFACE_0_IS_FSL = 0, DT = integer, RANGE = (0:1)
PARAMETER C_INTERFACE_1_IS_FSL = 0, DT = integer, RANGE = (0:1)
PARAMETER C_MAILBOX_DEPTH = 16, DT = integer, RANGE = (!C_ASYNC_CLKS*16 | C_ASYNC_CLKS*!C_IMPL_STYLE*16 | C_ASYNC_CLKS*C_IMPL_STYLE*512 : !C_ASYNC_CLKS*8192 | C_ASYNC_CLKS*!C_IMPL_STYLE*256 | C_ASYNC_CLKS*C_IMPL_STYLE*8192)
PARAMETER C_READ_CLOCK_PERIOD_0 = 0, DT = integer, TYPE = NON_HDL
PARAMETER C_READ_CLOCK_PERIOD_1 = 0, DT = integer, TYPE = NON_HDL

## Ports
PORT SPLB0_Clk = "", DIR = I, SIGIS = CLK, INITIALVAL = VCC, BUS = SPLB0
PORT SPLB0_Rst = PLB_Rst, DIR = I, SIGIS = RST, BUS = SPLB0
PORT PLB0_ABus = PLB_ABus, DIR = I, VEC = [0:31], BUS = SPLB0
PORT PLB0_PAValid = PLB_PAValid, DIR = I, BUS = SPLB0
PORT PLB0_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB0_MID_WIDTH-1)], BUS = SPLB0
PORT PLB0_RNW = PLB_RNW, DIR = I, BUS = SPLB0
PORT PLB0_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB0_DWIDTH/8)-1)], BUS = SPLB0
PORT PLB0_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB0
PORT PLB0_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB0
PORT PLB0_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB0_DWIDTH-1)], BUS = SPLB0
PORT Sl0_addrAck = Sl_addrAck, DIR = O, BUS = SPLB0
PORT Sl0_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB0
PORT Sl0_wait = Sl_wait, DIR = O, BUS = SPLB0
PORT Sl0_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB0
PORT Sl0_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB0
PORT Sl0_wrComp = Sl_wrComp, DIR = O, BUS = SPLB0
PORT Sl0_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB0_DWIDTH-1)], BUS = SPLB0
PORT Sl0_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB0
PORT Sl0_rdComp = Sl_rdComp, DIR = O, BUS = SPLB0
PORT Sl0_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB0_NUM_MASTERS-1)], BUS = SPLB0
PORT Sl0_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB0_NUM_MASTERS-1)], BUS = SPLB0
PORT Sl0_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB0_NUM_MASTERS-1)], BUS = SPLB0
PORT PLB0_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB0
PORT PLB0_SAValid = PLB_SAValid, DIR = I, BUS = SPLB0
PORT PLB0_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB0
PORT PLB0_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB0
PORT PLB0_abort = PLB_abort, DIR = I, BUS = SPLB0
PORT PLB0_busLock = PLB_busLock, DIR = I, BUS = SPLB0
PORT PLB0_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB0
PORT PLB0_lockErr = PLB_lockErr, DIR = I, BUS = SPLB0
PORT PLB0_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB0
PORT PLB0_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB0
PORT PLB0_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB0
PORT PLB0_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB0
PORT PLB0_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB0
PORT PLB0_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB0
PORT PLB0_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB0
PORT PLB0_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB0
PORT Sl0_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB0
PORT Sl0_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB0
PORT Sl0_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB0
PORT Sl0_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB0_NUM_MASTERS-1)], BUS = SPLB0
PORT SPLB1_Clk = "", DIR = I, SIGIS = CLK, INITIALVAL = VCC, BUS = SPLB1
PORT SPLB1_Rst = PLB_Rst, DIR = I, SIGIS = RST, BUS = SPLB1
PORT PLB1_ABus = PLB_ABus, DIR = I, VEC = [0:31], BUS = SPLB1
PORT PLB1_PAValid = PLB_PAValid, DIR = I, BUS = SPLB1
PORT PLB1_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB1_MID_WIDTH-1)], BUS = SPLB1
PORT PLB1_RNW = PLB_RNW, DIR = I, BUS = SPLB1
PORT PLB1_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB1_DWIDTH/8)-1)], BUS = SPLB1
PORT PLB1_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB1
PORT PLB1_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB1
PORT PLB1_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB1_DWIDTH-1)], BUS = SPLB1
PORT Sl1_addrAck = Sl_addrAck, DIR = O, BUS = SPLB1
PORT Sl1_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB1
PORT Sl1_wait = Sl_wait, DIR = O, BUS = SPLB1
PORT Sl1_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB1
PORT Sl1_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB1
PORT Sl1_wrComp = Sl_wrComp, DIR = O, BUS = SPLB1
PORT Sl1_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB1_DWIDTH-1)], BUS = SPLB1
PORT Sl1_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB1
PORT Sl1_rdComp = Sl_rdComp, DIR = O, BUS = SPLB1
PORT Sl1_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB1_NUM_MASTERS-1)], BUS = SPLB1
PORT Sl1_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB1_NUM_MASTERS-1)], BUS = SPLB1
PORT Sl1_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB1_NUM_MASTERS-1)], BUS = SPLB1
PORT PLB1_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB1
PORT PLB1_SAValid = PLB_SAValid, DIR = I, BUS = SPLB1
PORT PLB1_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB1
PORT PLB1_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB1
PORT PLB1_abort = PLB_abort, DIR = I, BUS = SPLB1
PORT PLB1_busLock = PLB_busLock, DIR = I, BUS = SPLB1
PORT PLB1_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB1
PORT PLB1_lockErr = PLB_lockErr, DIR = I, BUS = SPLB1
PORT PLB1_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB1
PORT PLB1_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB1
PORT PLB1_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB1
PORT PLB1_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB1
PORT PLB1_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB1
PORT PLB1_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB1
PORT PLB1_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB1
PORT PLB1_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB1
PORT Sl1_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB1
PORT Sl1_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB1
PORT Sl1_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB1
PORT Sl1_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB1_NUM_MASTERS-1)], BUS = SPLB1
PORT FSL_Clk = "", DIR = I, SIGIS = CLK, INITIALVAL = VCC
PORT SYS_Rst = "", DIR = I, INITIALVAL = GND
PORT FSL_Rst = FSL_Rst, DIR = O
PORT FSL0_M_Clk = FSL_M_Clk, DIR = I, SIGIS = CLK, INITIALVAL = VCC, BUS = DWFSL0
PORT FSL0_M_Data = FSL_M_Data, DIR = I, VEC = [0:C_FSL_DWIDTH-1], BUS = DWFSL0
PORT FSL0_M_Control = FSL_M_Control, DIR = I, BUS = DWFSL0
PORT FSL0_M_Write = FSL_M_Write, DIR = I, BUS = DWFSL0
PORT FSL0_M_Full = FSL_M_Full, DIR = O, BUS = DWFSL0
PORT FSL0_S_Clk = FSL_S_Clk, DIR = I, SIGIS = CLK, INITIALVAL = VCC, BUS = DRFSL0
PORT FSL0_S_Data = FSL_S_Data, DIR = O, VEC = [0:C_FSL_DWIDTH-1], BUS = DRFSL0
PORT FSL0_S_Control = FSL_S_Control, DIR = O, BUS = DRFSL0
PORT FSL0_S_Read = FSL_S_Read, DIR = I, BUS = DRFSL0
PORT FSL0_S_Exists = FSL_S_Exists, DIR = O, BUS = DRFSL0
PORT FSL1_M_Clk = FSL_M_Clk, DIR = I, SIGIS = CLK, INITIALVAL = VCC, BUS = DWFSL1
PORT FSL1_M_Data = FSL_M_Data, DIR = I, VEC = [0:C_FSL_DWIDTH-1], BUS = DWFSL1
PORT FSL1_M_Control = FSL_M_Control, DIR = I, BUS = DWFSL1
PORT FSL1_M_Write = FSL_M_Write, DIR = I, BUS = DWFSL1
PORT FSL1_M_Full = FSL_M_Full, DIR = O, BUS = DWFSL1
PORT FSL1_S_Clk = FSL_S_Clk, DIR = I, SIGIS = CLK, INITIALVAL = VCC, BUS = DRFSL1
PORT FSL1_S_Data = FSL_S_Data, DIR = O, VEC = [0:C_FSL_DWIDTH-1], BUS = DRFSL1
PORT FSL1_S_Control = FSL_S_Control, DIR = O, BUS = DRFSL1
PORT FSL1_S_Read = FSL_S_Read, DIR = I, BUS = DRFSL1
PORT FSL1_S_Exists = FSL_S_Exists, DIR = O, BUS = DRFSL1
PORT Interrupt_0 = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, INTERRUPT_PRIORITY = HIGH
PORT Interrupt_1 = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, INTERRUPT_PRIORITY = HIGH

END

FINISH_SINGLE_MPD

START_SINGLE_MPD clock_generator_v3_02_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : clock_generator
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN clock_generator

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION SYSLEVEL_UPDATE_PROC = update_clock_circuit
OPTION RUN_NGCBUILD = TRUE
OPTION DESC = Clock Generator
OPTION LONG_DESC = Clock generator for processor system.
OPTION IP_GROUP = 'Clock, Reset and Interrupt:MICROBLAZE:PPC'
OPTION ARCH_SUPPORT_MAP = (aspartan3=SUPERSEDED, spartan3=SUPERSEDED, spartan3an=SUPERSEDED, spartan3a=SUPERSEDED, spartan3e=SUPERSEDED, spartan3adsp=SUPERSEDED, virtex4lx=SUPERSEDED, virtex4sx=SUPERSEDED, virtex4fx=SUPERSEDED, virtex5lx=SUPERSEDED, virtex5sx=SUPERSEDED, virtex5fx=SUPERSEDED, aspartan3e=SUPERSEDED, aspartan3a=SUPERSEDED, aspartan3adsp=SUPERSEDED, qvirtex4lx=SUPERSEDED, qvirtex4sx=SUPERSEDED, qvirtex4fx=SUPERSEDED, qrvirtex4lx=SUPERSEDED, qrvirtex4sx=SUPERSEDED, qrvirtex4fx=SUPERSEDED, spartan6t=SUPERSEDED, spartan6=SUPERSEDED, spartan6l=SUPERSEDED, qspartan6t=SUPERSEDED, qspartan6=SUPERSEDED, aspartan6t=SUPERSEDED, aspartan6=SUPERSEDED, virtex6lx=SUPERSEDED, virtex6sx=SUPERSEDED, virtex6hx=SUPERSEDED, virtex6cx=SUPERSEDED, virtex6llx=SUPERSEDED, virtex6lsx=SUPERSEDED, qspartan6l=SUPERSEDED, qrvirtex5=SUPERSEDED, qvirtex6lx=SUPERSEDED, qvirtex6sx=SUPERSEDED, qvirtex6fx=SUPERSEDED, qvirtex6tx=SUPERSEDED)
OPTION STYLE = HDL


## Bus Interfaces

## Generics for VHDL or Parameters for Verilog
PARAMETER C_FAMILY = virtex5, DT = STRING
PARAMETER C_SPEEDGRADE = 0, DT = STRING
PARAMETER C_EXT_RESET_HIGH = 1, DT = INTEGER
PARAMETER C_CLK_GEN = update, DT = STRING, VALUES = (UPDATE=UPDATE, PASSED=PASSED, FAILED=FAILED), ASSIGNMENT = UPDATE
PARAMETER C_CLKOUT0_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE
PARAMETER C_CLKOUT0_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE
PARAMETER C_CLKOUT1_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE
PARAMETER C_CLKOUT1_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE
PARAMETER C_CLKOUT2_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE
PARAMETER C_CLKOUT2_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE
PARAMETER C_CLKOUT3_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE
PARAMETER C_CLKOUT3_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE
PARAMETER C_CLKOUT4_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE
PARAMETER C_CLKOUT4_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE
PARAMETER C_CLKOUT5_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE
PARAMETER C_CLKOUT5_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE
PARAMETER C_CLKOUT6_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE
PARAMETER C_CLKOUT6_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE
PARAMETER C_CLKOUT7_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE
PARAMETER C_CLKOUT7_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE
PARAMETER C_CLKOUT8_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE
PARAMETER C_CLKOUT8_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE
PARAMETER C_CLKOUT9_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE
PARAMETER C_CLKOUT9_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE
PARAMETER C_CLKOUT10_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE
PARAMETER C_CLKOUT10_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE
PARAMETER C_CLKOUT11_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE
PARAMETER C_CLKOUT11_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE
PARAMETER C_CLKOUT12_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE
PARAMETER C_CLKOUT12_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE
PARAMETER C_CLKOUT13_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE
PARAMETER C_CLKOUT13_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE
PARAMETER C_CLKOUT14_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE
PARAMETER C_CLKOUT14_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE
PARAMETER C_CLKOUT15_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE
PARAMETER C_CLKOUT15_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE
PARAMETER C_CLKFBOUT_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE
PARAMETER C_CLKFBOUT_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE
PARAMETER C_PSDONE_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE
PARAMETER C_PLL0_DIVCLK_DIVIDE = 1, DT = INTEGER, RANGE = (1:52), ASSIGNMENT = UPDATE
PARAMETER C_PLL0_CLKFBOUT_MULT = 1, DT = INTEGER, RANGE = (1:64), ASSIGNMENT = UPDATE
PARAMETER C_PLL0_CLKFBOUT_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_PLL0_CLKIN1_PERIOD = 0.000000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_PLL0_CLKOUT0_DIVIDE = 1, DT = INTEGER, RANGE = (1:128), ASSIGNMENT = UPDATE
PARAMETER C_PLL0_CLKOUT0_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_PLL0_CLKOUT0_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_PLL0_CLKOUT1_DIVIDE = 1, DT = INTEGER, RANGE = (1:128), ASSIGNMENT = UPDATE
PARAMETER C_PLL0_CLKOUT1_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_PLL0_CLKOUT1_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_PLL0_CLKOUT2_DIVIDE = 1, DT = INTEGER, RANGE = (1:128), ASSIGNMENT = UPDATE
PARAMETER C_PLL0_CLKOUT2_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_PLL0_CLKOUT2_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_PLL0_CLKOUT3_DIVIDE = 1, DT = INTEGER, RANGE = (1:128), ASSIGNMENT = UPDATE
PARAMETER C_PLL0_CLKOUT3_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_PLL0_CLKOUT3_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_PLL0_CLKOUT4_DIVIDE = 1, DT = INTEGER, RANGE = (1:128), ASSIGNMENT = UPDATE
PARAMETER C_PLL0_CLKOUT4_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_PLL0_CLKOUT4_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_PLL0_CLKOUT5_DIVIDE = 1, DT = INTEGER, RANGE = (1:128), ASSIGNMENT = UPDATE
PARAMETER C_PLL0_CLKOUT5_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_PLL0_CLKOUT5_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_PLL0_BANDWIDTH = OPTIMIZED, DT = STRING, VALUES = (OPTIMIZED=OPTIMIZED, LOW=LOW, HIGH=HIGH), ASSIGNMENT = UPDATE
PARAMETER C_PLL0_COMPENSATION = SYSTEM_SYNCHRONOUS, DT = STRING, VALUES = (SYSTEM_SYNCHRONOUS=SYSTEM_SYNCHRONOUS, SOURCE_SYNCHRONOUS=SOURCE_SYNCHRONOUS), ASSIGNMENT = UPDATE
PARAMETER C_PLL0_REF_JITTER = 0.100000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_PLL0_RESET_ON_LOSS_OF_LOCK = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_PLL0_RST_DEASSERT_CLK = CLKIN1, DT = STRING
PARAMETER C_PLL0_EXT_RESET_HIGH = 1, DT = INTEGER, ASSIGNMENT = UPDATE
PARAMETER C_PLL0_FAMILY = virtex5, DT = STRING, ASSIGNMENT = UPDATE
PARAMETER C_PLL0_CLKOUT0_DESKEW_ADJUST = NONE, DT = STRING, VALUES = (NONE=NONE, PPC=PPC), ASSIGNMENT = UPDATE
PARAMETER C_PLL0_CLKOUT1_DESKEW_ADJUST = NONE, DT = STRING, VALUES = (NONE=NONE, PPC=PPC), ASSIGNMENT = UPDATE
PARAMETER C_PLL0_CLKOUT2_DESKEW_ADJUST = NONE, DT = STRING, VALUES = (NONE=NONE, PPC=PPC), ASSIGNMENT = UPDATE
PARAMETER C_PLL0_CLKOUT3_DESKEW_ADJUST = NONE, DT = STRING, VALUES = (NONE=NONE, PPC=PPC), ASSIGNMENT = UPDATE
PARAMETER C_PLL0_CLKOUT4_DESKEW_ADJUST = NONE, DT = STRING, VALUES = (NONE=NONE, PPC=PPC), ASSIGNMENT = UPDATE
PARAMETER C_PLL0_CLKOUT5_DESKEW_ADJUST = NONE, DT = STRING, VALUES = (NONE=NONE, PPC=PPC), ASSIGNMENT = UPDATE
PARAMETER C_PLL0_CLKFBOUT_DESKEW_ADJUST = NONE, DT = STRING, VALUES = (NONE=NONE, PPC=PPC), ASSIGNMENT = UPDATE
PARAMETER C_PLL0_CLKIN1_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_PLL0_CLKFBOUT_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_PLL0_CLKOUT0_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_PLL0_CLKOUT1_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_PLL0_CLKOUT2_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_PLL0_CLKOUT3_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_PLL0_CLKOUT4_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_PLL0_CLKOUT5_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_PLL0_CLKIN1_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE
PARAMETER C_PLL0_CLKIN1_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE
PARAMETER C_PLL0_CLKFBIN_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE
PARAMETER C_PLL0_CLKFBIN_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE
PARAMETER C_PLL0_RST_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE
PARAMETER C_PLL1_DIVCLK_DIVIDE = 1, DT = INTEGER, RANGE = (1:52), ASSIGNMENT = UPDATE
PARAMETER C_PLL1_CLKFBOUT_MULT = 1, DT = INTEGER, RANGE = (1:64), ASSIGNMENT = UPDATE
PARAMETER C_PLL1_CLKFBOUT_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_PLL1_CLKIN1_PERIOD = 0.000000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_PLL1_CLKOUT0_DIVIDE = 1, DT = INTEGER, RANGE = (1:128), ASSIGNMENT = UPDATE
PARAMETER C_PLL1_CLKOUT0_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_PLL1_CLKOUT0_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_PLL1_CLKOUT1_DIVIDE = 1, DT = INTEGER, RANGE = (1:128), ASSIGNMENT = UPDATE
PARAMETER C_PLL1_CLKOUT1_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_PLL1_CLKOUT1_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_PLL1_CLKOUT2_DIVIDE = 1, DT = INTEGER, RANGE = (1:128), ASSIGNMENT = UPDATE
PARAMETER C_PLL1_CLKOUT2_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_PLL1_CLKOUT2_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_PLL1_CLKOUT3_DIVIDE = 1, DT = INTEGER, RANGE = (1:128), ASSIGNMENT = UPDATE
PARAMETER C_PLL1_CLKOUT3_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_PLL1_CLKOUT3_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_PLL1_CLKOUT4_DIVIDE = 1, DT = INTEGER, RANGE = (1:128), ASSIGNMENT = UPDATE
PARAMETER C_PLL1_CLKOUT4_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_PLL1_CLKOUT4_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_PLL1_CLKOUT5_DIVIDE = 1, DT = INTEGER, RANGE = (1:128), ASSIGNMENT = UPDATE
PARAMETER C_PLL1_CLKOUT5_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_PLL1_CLKOUT5_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_PLL1_BANDWIDTH = OPTIMIZED, DT = STRING, VALUES = (OPTIMIZED=OPTIMIZED, LOW=LOW, HIGH=HIGH), ASSIGNMENT = UPDATE
PARAMETER C_PLL1_COMPENSATION = SYSTEM_SYNCHRONOUS, DT = STRING, VALUES = (SYSTEM_SYNCHRONOUS=SYSTEM_SYNCHRONOUS, SOURCE_SYNCHRONOUS=SOURCE_SYNCHRONOUS), ASSIGNMENT = UPDATE
PARAMETER C_PLL1_REF_JITTER = 0.100000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_PLL1_RESET_ON_LOSS_OF_LOCK = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_PLL1_RST_DEASSERT_CLK = CLKIN1, DT = STRING
PARAMETER C_PLL1_EXT_RESET_HIGH = 1, DT = INTEGER, ASSIGNMENT = UPDATE
PARAMETER C_PLL1_FAMILY = virtex5, DT = STRING, ASSIGNMENT = UPDATE
PARAMETER C_PLL1_CLKOUT0_DESKEW_ADJUST = NONE, DT = STRING, VALUES = (NONE=NONE, PPC=PPC), ASSIGNMENT = UPDATE
PARAMETER C_PLL1_CLKOUT1_DESKEW_ADJUST = NONE, DT = STRING, VALUES = (NONE=NONE, PPC=PPC), ASSIGNMENT = UPDATE
PARAMETER C_PLL1_CLKOUT2_DESKEW_ADJUST = NONE, DT = STRING, VALUES = (NONE=NONE, PPC=PPC), ASSIGNMENT = UPDATE
PARAMETER C_PLL1_CLKOUT3_DESKEW_ADJUST = NONE, DT = STRING, VALUES = (NONE=NONE, PPC=PPC), ASSIGNMENT = UPDATE
PARAMETER C_PLL1_CLKOUT4_DESKEW_ADJUST = NONE, DT = STRING, VALUES = (NONE=NONE, PPC=PPC), ASSIGNMENT = UPDATE
PARAMETER C_PLL1_CLKOUT5_DESKEW_ADJUST = NONE, DT = STRING, VALUES = (NONE=NONE, PPC=PPC), ASSIGNMENT = UPDATE
PARAMETER C_PLL1_CLKFBOUT_DESKEW_ADJUST = NONE, DT = STRING, VALUES = (NONE=NONE, PPC=PPC), ASSIGNMENT = UPDATE
PARAMETER C_PLL1_CLKIN1_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_PLL1_CLKFBOUT_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_PLL1_CLKOUT0_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_PLL1_CLKOUT1_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_PLL1_CLKOUT2_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_PLL1_CLKOUT3_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_PLL1_CLKOUT4_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_PLL1_CLKOUT5_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_PLL1_CLKIN1_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE
PARAMETER C_PLL1_CLKIN1_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE
PARAMETER C_PLL1_CLKFBIN_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE
PARAMETER C_PLL1_CLKFBIN_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE
PARAMETER C_PLL1_RST_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE
PARAMETER C_DCM0_DFS_FREQUENCY_MODE = LOW, DT = STRING, VALUES = (LOW=LOW, HIGH=HIGH), ASSIGNMENT = UPDATE
PARAMETER C_DCM0_DLL_FREQUENCY_MODE = LOW, DT = STRING, VALUES = (LOW=LOW, HIGH=HIGH), ASSIGNMENT = UPDATE
PARAMETER C_DCM0_DUTY_CYCLE_CORRECTION = true, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_DCM0_CLKIN_DIVIDE_BY_2 = false, DT = BOOLEAN, VALUES = (TRUE=TRUE, FALSE=FALSE), ASSIGNMENT = UPDATE
PARAMETER C_DCM0_CLK_FEEDBACK = 1X, DT = STRING, VALUES = (NONE=NONE, 1X=1X, 2X=2X), ASSIGNMENT = UPDATE
PARAMETER C_DCM0_CLKOUT_PHASE_SHIFT = NONE, DT = STRING, VALUES = (NONE=NONE, FIXED=FIXED, VARIABLE=VARIABLE, VARIABLE_POSITIVE=VARIABLE POSITIVE, VARIABLE_CENTER=VARIABLE CENTER, DIRECT=DIRECT), ASSIGNMENT = UPDATE
PARAMETER C_DCM0_DSS_MODE = NONE, DT = STRING, VALUES = (NONE=NONE), ASSIGNMENT = UPDATE
PARAMETER C_DCM0_STARTUP_WAIT = false, DT = BOOLEAN, VALUES = (TRUE=TRUE, FALSE=FALSE), ASSIGNMENT = UPDATE
PARAMETER C_DCM0_PHASE_SHIFT = 0, DT = INTEGER, RANGE = (-255:1023), ASSIGNMENT = UPDATE
PARAMETER C_DCM0_CLKFX_MULTIPLY = 4, DT = INTEGER, RANGE = (2:32), ASSIGNMENT = UPDATE
PARAMETER C_DCM0_CLKFX_DIVIDE = 1, DT = INTEGER, RANGE = (1:32), ASSIGNMENT = UPDATE
PARAMETER C_DCM0_CLKDV_DIVIDE = 2.000000, DT = REAL, VALUES = (1.5 = 1.5, 2.0 = 2.0, 2.5 = 2.5, 3.0= 3.0, 3.5= 3.5, 4.0= 4.0, 4.5= 4.5, 5.0= 5.0, 5.5=5.5, 6.0= 6.0, 6.5= 6.5, 7.0= 7.0, 7.5= 7.5, 8.0= 8.0, 9.0= 9.0, 10.0= 10.0, 11.0= 11.0, 12.0= 12.0, 13.0= 13.0, 14.0= 14.0, 15.0= 15.0, 16.0= 16.0), ASSIGNMENT = UPDATE
PARAMETER C_DCM0_CLKIN_PERIOD = 0.000000, DT = REAL
PARAMETER C_DCM0_DESKEW_ADJUST = SYSTEM_SYNCHRONOUS, DT = STRING, VALUES = (SYSTEM_SYNCHRONOUS=SYSTEM SYNCHRONOUS, SOURCE_SYNCHRONOUS=SOURCE SYNCHRONOUS, 0=0, 1=1, 2=2, 3=3, 4=4, 5=5, 6=6, 7=7, 8=8, 9=9, 10=10, 11=11, 12=12, 13=13, 14=14, 15=15), ASSIGNMENT = UPDATE
PARAMETER C_DCM0_CLKIN_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_DCM0_CLKFB_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_DCM0_CLK0_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_DCM0_CLK90_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_DCM0_CLK180_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_DCM0_CLK270_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_DCM0_CLKDV_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_DCM0_CLKDV180_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_DCM0_CLK2X_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_DCM0_CLK2X180_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_DCM0_CLKFX_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_DCM0_CLKFX180_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_DCM0_EXT_RESET_HIGH = 1, DT = INTEGER, IO_IS = polarity, RANGE = (0:1), VALUES = (0=0:Active Low, 1=1:Active High), ASSIGNMENT = UPDATE
PARAMETER C_DCM0_FAMILY = virtex5, DT = STRING, ASSIGNMENT = UPDATE
PARAMETER C_DCM0_CLKIN_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE
PARAMETER C_DCM0_CLKIN_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE
PARAMETER C_DCM0_CLKFB_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE
PARAMETER C_DCM0_CLKFB_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE
PARAMETER C_DCM0_RST_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE
PARAMETER C_DCM1_DFS_FREQUENCY_MODE = LOW, DT = STRING, VALUES = (LOW=LOW, HIGH=HIGH), ASSIGNMENT = UPDATE
PARAMETER C_DCM1_DLL_FREQUENCY_MODE = LOW, DT = STRING, VALUES = (LOW=LOW, HIGH=HIGH), ASSIGNMENT = UPDATE
PARAMETER C_DCM1_DUTY_CYCLE_CORRECTION = true, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_DCM1_CLKIN_DIVIDE_BY_2 = false, DT = BOOLEAN, VALUES = (TRUE=TRUE, FALSE=FALSE), ASSIGNMENT = UPDATE
PARAMETER C_DCM1_CLK_FEEDBACK = 1X, DT = STRING, VALUES = (NONE=NONE, 1X=1X, 2X=2X), ASSIGNMENT = UPDATE
PARAMETER C_DCM1_CLKOUT_PHASE_SHIFT = NONE, DT = STRING, VALUES = (NONE=NONE, FIXED=FIXED, VARIABLE=VARIABLE, VARIABLE_POSITIVE=VARIABLE POSITIVE, VARIABLE_CENTER=VARIABLE CENTER, DIRECT=DIRECT), ASSIGNMENT = UPDATE
PARAMETER C_DCM1_DSS_MODE = NONE, DT = STRING, VALUES = (NONE=NONE), ASSIGNMENT = UPDATE
PARAMETER C_DCM1_STARTUP_WAIT = false, DT = BOOLEAN, VALUES = (TRUE=TRUE, FALSE=FALSE), ASSIGNMENT = UPDATE
PARAMETER C_DCM1_PHASE_SHIFT = 0, DT = INTEGER, RANGE = (-255:1023), ASSIGNMENT = UPDATE
PARAMETER C_DCM1_CLKFX_MULTIPLY = 4, DT = INTEGER, RANGE = (2:32), ASSIGNMENT = UPDATE
PARAMETER C_DCM1_CLKFX_DIVIDE = 1, DT = INTEGER, RANGE = (1:32), ASSIGNMENT = UPDATE
PARAMETER C_DCM1_CLKDV_DIVIDE = 2.000000, DT = REAL, VALUES = (1.5 = 1.5, 2.0 = 2.0, 2.5 = 2.5, 3.0= 3.0, 3.5= 3.5, 4.0= 4.0, 4.5= 4.5, 5.0= 5.0, 5.5=5.5, 6.0= 6.0, 6.5= 6.5, 7.0= 7.0, 7.5= 7.5, 8.0= 8.0, 9.0= 9.0, 10.0= 10.0, 11.0= 11.0, 12.0= 12.0, 13.0= 13.0, 14.0= 14.0, 15.0= 15.0, 16.0= 16.0), ASSIGNMENT = UPDATE
PARAMETER C_DCM1_CLKIN_PERIOD = 0.000000, DT = REAL
PARAMETER C_DCM1_DESKEW_ADJUST = SYSTEM_SYNCHRONOUS, DT = STRING, VALUES = (SYSTEM_SYNCHRONOUS=SYSTEM SYNCHRONOUS, SOURCE_SYNCHRONOUS=SOURCE SYNCHRONOUS, 0=0, 1=1, 2=2, 3=3, 4=4, 5=5, 6=6, 7=7, 8=8, 9=9, 10=10, 11=11, 12=12, 13=13, 14=14, 15=15), ASSIGNMENT = UPDATE
PARAMETER C_DCM1_CLKIN_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_DCM1_CLKFB_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_DCM1_CLK0_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_DCM1_CLK90_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_DCM1_CLK180_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_DCM1_CLK270_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_DCM1_CLKDV_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_DCM1_CLKDV180_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_DCM1_CLK2X_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_DCM1_CLK2X180_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_DCM1_CLKFX_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_DCM1_CLKFX180_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_DCM1_EXT_RESET_HIGH = 1, DT = INTEGER, IO_IS = polarity, RANGE = (0:1), VALUES = (0=0:Active Low, 1=1:Active High), ASSIGNMENT = UPDATE
PARAMETER C_DCM1_FAMILY = virtex5, DT = STRING, ASSIGNMENT = UPDATE
PARAMETER C_DCM1_CLKIN_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE
PARAMETER C_DCM1_CLKIN_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE
PARAMETER C_DCM1_CLKFB_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE
PARAMETER C_DCM1_CLKFB_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE
PARAMETER C_DCM1_RST_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE
PARAMETER C_DCM2_DFS_FREQUENCY_MODE = LOW, DT = STRING, VALUES = (LOW=LOW, HIGH=HIGH), ASSIGNMENT = UPDATE
PARAMETER C_DCM2_DLL_FREQUENCY_MODE = LOW, DT = STRING, VALUES = (LOW=LOW, HIGH=HIGH), ASSIGNMENT = UPDATE
PARAMETER C_DCM2_DUTY_CYCLE_CORRECTION = true, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_DCM2_CLKIN_DIVIDE_BY_2 = false, DT = BOOLEAN, VALUES = (TRUE=TRUE, FALSE=FALSE), ASSIGNMENT = UPDATE
PARAMETER C_DCM2_CLK_FEEDBACK = 1X, DT = STRING, VALUES = (NONE=NONE, 1X=1X, 2X=2X), ASSIGNMENT = UPDATE
PARAMETER C_DCM2_CLKOUT_PHASE_SHIFT = NONE, DT = STRING, VALUES = (NONE=NONE, FIXED=FIXED, VARIABLE=VARIABLE, VARIABLE_POSITIVE=VARIABLE POSITIVE, VARIABLE_CENTER=VARIABLE CENTER, DIRECT=DIRECT), ASSIGNMENT = UPDATE
PARAMETER C_DCM2_DSS_MODE = NONE, DT = STRING, VALUES = (NONE=NONE), ASSIGNMENT = UPDATE
PARAMETER C_DCM2_STARTUP_WAIT = false, DT = BOOLEAN, VALUES = (TRUE=TRUE, FALSE=FALSE), ASSIGNMENT = UPDATE
PARAMETER C_DCM2_PHASE_SHIFT = 0, DT = INTEGER, RANGE = (-255:1023), ASSIGNMENT = UPDATE
PARAMETER C_DCM2_CLKFX_MULTIPLY = 4, DT = INTEGER, RANGE = (2:32), ASSIGNMENT = UPDATE
PARAMETER C_DCM2_CLKFX_DIVIDE = 1, DT = INTEGER, RANGE = (1:32), ASSIGNMENT = UPDATE
PARAMETER C_DCM2_CLKDV_DIVIDE = 2.000000, DT = REAL, VALUES = (1.5 = 1.5, 2.0 = 2.0, 2.5 = 2.5, 3.0= 3.0, 3.5= 3.5, 4.0= 4.0, 4.5= 4.5, 5.0= 5.0, 5.5=5.5, 6.0= 6.0, 6.5= 6.5, 7.0= 7.0, 7.5= 7.5, 8.0= 8.0, 9.0= 9.0, 10.0= 10.0, 11.0= 11.0, 12.0= 12.0, 13.0= 13.0, 14.0= 14.0, 15.0= 15.0, 16.0= 16.0), ASSIGNMENT = UPDATE
PARAMETER C_DCM2_CLKIN_PERIOD = 0.000000, DT = REAL
PARAMETER C_DCM2_DESKEW_ADJUST = SYSTEM_SYNCHRONOUS, DT = STRING, VALUES = (SYSTEM_SYNCHRONOUS=SYSTEM SYNCHRONOUS, SOURCE_SYNCHRONOUS=SOURCE SYNCHRONOUS, 0=0, 1=1, 2=2, 3=3, 4=4, 5=5, 6=6, 7=7, 8=8, 9=9, 10=10, 11=11, 12=12, 13=13, 14=14, 15=15), ASSIGNMENT = UPDATE
PARAMETER C_DCM2_CLKIN_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_DCM2_CLKFB_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_DCM2_CLK0_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_DCM2_CLK90_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_DCM2_CLK180_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_DCM2_CLK270_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_DCM2_CLKDV_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_DCM2_CLKDV180_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_DCM2_CLK2X_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_DCM2_CLK2X180_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_DCM2_CLKFX_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_DCM2_CLKFX180_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_DCM2_EXT_RESET_HIGH = 1, DT = INTEGER, IO_IS = polarity, RANGE = (0:1), VALUES = (0=0:Active Low, 1=1:Active High), ASSIGNMENT = UPDATE
PARAMETER C_DCM2_FAMILY = virtex5, DT = STRING, ASSIGNMENT = UPDATE
PARAMETER C_DCM2_CLKIN_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE
PARAMETER C_DCM2_CLKIN_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE
PARAMETER C_DCM2_CLKFB_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE
PARAMETER C_DCM2_CLKFB_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE
PARAMETER C_DCM2_RST_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE
PARAMETER C_DCM3_DFS_FREQUENCY_MODE = LOW, DT = STRING, VALUES = (LOW=LOW, HIGH=HIGH), ASSIGNMENT = UPDATE
PARAMETER C_DCM3_DLL_FREQUENCY_MODE = LOW, DT = STRING, VALUES = (LOW=LOW, HIGH=HIGH), ASSIGNMENT = UPDATE
PARAMETER C_DCM3_DUTY_CYCLE_CORRECTION = true, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_DCM3_CLKIN_DIVIDE_BY_2 = false, DT = BOOLEAN, VALUES = (TRUE=TRUE, FALSE=FALSE), ASSIGNMENT = UPDATE
PARAMETER C_DCM3_CLK_FEEDBACK = 1X, DT = STRING, VALUES = (NONE=NONE, 1X=1X, 2X=2X), ASSIGNMENT = UPDATE
PARAMETER C_DCM3_CLKOUT_PHASE_SHIFT = NONE, DT = STRING, VALUES = (NONE=NONE, FIXED=FIXED, VARIABLE=VARIABLE, VARIABLE_POSITIVE=VARIABLE POSITIVE, VARIABLE_CENTER=VARIABLE CENTER, DIRECT=DIRECT), ASSIGNMENT = UPDATE
PARAMETER C_DCM3_DSS_MODE = NONE, DT = STRING, VALUES = (NONE=NONE), ASSIGNMENT = UPDATE
PARAMETER C_DCM3_STARTUP_WAIT = false, DT = BOOLEAN, VALUES = (TRUE=TRUE, FALSE=FALSE), ASSIGNMENT = UPDATE
PARAMETER C_DCM3_PHASE_SHIFT = 0, DT = INTEGER, RANGE = (-255:1023), ASSIGNMENT = UPDATE
PARAMETER C_DCM3_CLKFX_MULTIPLY = 4, DT = INTEGER, RANGE = (2:32), ASSIGNMENT = UPDATE
PARAMETER C_DCM3_CLKFX_DIVIDE = 1, DT = INTEGER, RANGE = (1:32), ASSIGNMENT = UPDATE
PARAMETER C_DCM3_CLKDV_DIVIDE = 2.000000, DT = REAL, VALUES = (1.5 = 1.5, 2.0 = 2.0, 2.5 = 2.5, 3.0= 3.0, 3.5= 3.5, 4.0= 4.0, 4.5= 4.5, 5.0= 5.0, 5.5=5.5, 6.0= 6.0, 6.5= 6.5, 7.0= 7.0, 7.5= 7.5, 8.0= 8.0, 9.0= 9.0, 10.0= 10.0, 11.0= 11.0, 12.0= 12.0, 13.0= 13.0, 14.0= 14.0, 15.0= 15.0, 16.0= 16.0), ASSIGNMENT = UPDATE
PARAMETER C_DCM3_CLKIN_PERIOD = 0.000000, DT = REAL
PARAMETER C_DCM3_DESKEW_ADJUST = SYSTEM_SYNCHRONOUS, DT = STRING, VALUES = (SYSTEM_SYNCHRONOUS=SYSTEM SYNCHRONOUS, SOURCE_SYNCHRONOUS=SOURCE SYNCHRONOUS, 0=0, 1=1, 2=2, 3=3, 4=4, 5=5, 6=6, 7=7, 8=8, 9=9, 10=10, 11=11, 12=12, 13=13, 14=14, 15=15), ASSIGNMENT = UPDATE
PARAMETER C_DCM3_CLKIN_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_DCM3_CLKFB_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_DCM3_CLK0_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_DCM3_CLK90_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_DCM3_CLK180_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_DCM3_CLK270_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_DCM3_CLKDV_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_DCM3_CLKDV180_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_DCM3_CLK2X_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_DCM3_CLK2X180_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_DCM3_CLKFX_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_DCM3_CLKFX180_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_DCM3_EXT_RESET_HIGH = 1, DT = INTEGER, IO_IS = polarity, RANGE = (0:1), VALUES = (0=0:Active Low, 1=1:Active High), ASSIGNMENT = UPDATE
PARAMETER C_DCM3_FAMILY = virtex5, DT = STRING, ASSIGNMENT = UPDATE
PARAMETER C_DCM3_CLKIN_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE
PARAMETER C_DCM3_CLKIN_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE
PARAMETER C_DCM3_CLKFB_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE
PARAMETER C_DCM3_CLKFB_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE
PARAMETER C_DCM3_RST_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE
PARAMETER C_MMCM0_BANDWIDTH = OPTIMIZED, DT = STRING, VALUE = (OPTIMIZED=OPTIMIZED, HIGH=HIGH, LOW=LOW), ASSIGNMENT = UPDATE
PARAMETER C_MMCM0_CLKFBOUT_MULT_F = 1.000000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM0_CLKFBOUT_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM0_CLKFBOUT_USE_FINE_PS = false, DT = BOOLEAN, ASSIGNMENT = UPDATE
PARAMETER C_MMCM0_CLKIN1_PERIOD = 0.000000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM0_CLKOUT0_DIVIDE_F = 1.000000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM0_CLKOUT0_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM0_CLKOUT0_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM0_CLKOUT1_DIVIDE = 1, DT = INTEGER, ASSIGNMENT = UPDATE
PARAMETER C_MMCM0_CLKOUT1_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM0_CLKOUT1_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM0_CLKOUT2_DIVIDE = 1, DT = INTEGER, ASSIGNMENT = UPDATE
PARAMETER C_MMCM0_CLKOUT2_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM0_CLKOUT2_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM0_CLKOUT3_DIVIDE = 1, DT = INTEGER, ASSIGNMENT = UPDATE
PARAMETER C_MMCM0_CLKOUT3_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM0_CLKOUT3_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM0_CLKOUT4_DIVIDE = 1, DT = INTEGER, ASSIGNMENT = UPDATE
PARAMETER C_MMCM0_CLKOUT4_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM0_CLKOUT4_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM0_CLKOUT4_CASCADE = false, DT = BOOLEAN, ASSIGNMENT = UPDATE
PARAMETER C_MMCM0_CLKOUT5_DIVIDE = 1, DT = INTEGER, ASSIGNMENT = UPDATE
PARAMETER C_MMCM0_CLKOUT5_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM0_CLKOUT5_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM0_CLKOUT6_DIVIDE = 1, DT = INTEGER, ASSIGNMENT = UPDATE
PARAMETER C_MMCM0_CLKOUT6_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM0_CLKOUT6_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM0_CLKOUT0_USE_FINE_PS = false, DT = BOOLEAN, ASSIGNMENT = UPDATE
PARAMETER C_MMCM0_CLKOUT1_USE_FINE_PS = false, DT = BOOLEAN, ASSIGNMENT = UPDATE
PARAMETER C_MMCM0_CLKOUT2_USE_FINE_PS = false, DT = BOOLEAN, ASSIGNMENT = UPDATE
PARAMETER C_MMCM0_CLKOUT3_USE_FINE_PS = false, DT = BOOLEAN, ASSIGNMENT = UPDATE
PARAMETER C_MMCM0_CLKOUT4_USE_FINE_PS = false, DT = BOOLEAN, ASSIGNMENT = UPDATE
PARAMETER C_MMCM0_CLKOUT5_USE_FINE_PS = false, DT = BOOLEAN, ASSIGNMENT = UPDATE
PARAMETER C_MMCM0_CLKOUT6_USE_FINE_PS = false, DT = BOOLEAN, ASSIGNMENT = UPDATE
PARAMETER C_MMCM0_COMPENSATION = ZHOLD, DT = STRING, ASSIGNMENT = UPDATE
PARAMETER C_MMCM0_DIVCLK_DIVIDE = 1, DT = INTEGER, ASSIGNMENT = UPDATE
PARAMETER C_MMCM0_REF_JITTER1 = 0.010000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM0_CLKIN1_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_MMCM0_CLKFBOUT_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_MMCM0_CLOCK_HOLD = false, DT = BOOLEAN, ASSIGNMENT = UPDATE
PARAMETER C_MMCM0_STARTUP_WAIT = false, DT = BOOLEAN, ASSIGNMENT = UPDATE
PARAMETER C_MMCM0_EXT_RESET_HIGH = 1, DT = INTEGER, ASSIGNMENT = UPDATE
PARAMETER C_MMCM0_FAMILY = virtex6, DT = STRING, ASSIGNMENT = UPDATE
PARAMETER C_MMCM0_CLKOUT0_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_MMCM0_CLKOUT1_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_MMCM0_CLKOUT2_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_MMCM0_CLKOUT3_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_MMCM0_CLKOUT4_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_MMCM0_CLKOUT5_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_MMCM0_CLKOUT6_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_MMCM0_CLKIN1_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE
PARAMETER C_MMCM0_CLKIN1_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE
PARAMETER C_MMCM0_CLKFBIN_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE
PARAMETER C_MMCM0_CLKFBIN_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE
PARAMETER C_MMCM0_RST_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE
PARAMETER C_MMCM1_BANDWIDTH = OPTIMIZED, DT = STRING, VALUE = (OPTIMIZED=OPTIMIZED, HIGH=HIGH, LOW=LOW), ASSIGNMENT = UPDATE
PARAMETER C_MMCM1_CLKFBOUT_MULT_F = 1.000000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM1_CLKFBOUT_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM1_CLKFBOUT_USE_FINE_PS = false, DT = BOOLEAN, ASSIGNMENT = UPDATE
PARAMETER C_MMCM1_CLKIN1_PERIOD = 0.000000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM1_CLKOUT0_DIVIDE_F = 1.000000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM1_CLKOUT0_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM1_CLKOUT0_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM1_CLKOUT1_DIVIDE = 1, DT = INTEGER, ASSIGNMENT = UPDATE
PARAMETER C_MMCM1_CLKOUT1_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM1_CLKOUT1_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM1_CLKOUT2_DIVIDE = 1, DT = INTEGER, ASSIGNMENT = UPDATE
PARAMETER C_MMCM1_CLKOUT2_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM1_CLKOUT2_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM1_CLKOUT3_DIVIDE = 1, DT = INTEGER, ASSIGNMENT = UPDATE
PARAMETER C_MMCM1_CLKOUT3_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM1_CLKOUT3_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM1_CLKOUT4_DIVIDE = 1, DT = INTEGER, ASSIGNMENT = UPDATE
PARAMETER C_MMCM1_CLKOUT4_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM1_CLKOUT4_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM1_CLKOUT4_CASCADE = false, DT = BOOLEAN, ASSIGNMENT = UPDATE
PARAMETER C_MMCM1_CLKOUT5_DIVIDE = 1, DT = INTEGER, ASSIGNMENT = UPDATE
PARAMETER C_MMCM1_CLKOUT5_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM1_CLKOUT5_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM1_CLKOUT6_DIVIDE = 1, DT = INTEGER, ASSIGNMENT = UPDATE
PARAMETER C_MMCM1_CLKOUT6_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM1_CLKOUT6_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM1_CLKOUT0_USE_FINE_PS = false, DT = BOOLEAN, ASSIGNMENT = UPDATE
PARAMETER C_MMCM1_CLKOUT1_USE_FINE_PS = false, DT = BOOLEAN, ASSIGNMENT = UPDATE
PARAMETER C_MMCM1_CLKOUT2_USE_FINE_PS = false, DT = BOOLEAN, ASSIGNMENT = UPDATE
PARAMETER C_MMCM1_CLKOUT3_USE_FINE_PS = false, DT = BOOLEAN, ASSIGNMENT = UPDATE
PARAMETER C_MMCM1_CLKOUT4_USE_FINE_PS = false, DT = BOOLEAN, ASSIGNMENT = UPDATE
PARAMETER C_MMCM1_CLKOUT5_USE_FINE_PS = false, DT = BOOLEAN, ASSIGNMENT = UPDATE
PARAMETER C_MMCM1_CLKOUT6_USE_FINE_PS = false, DT = BOOLEAN, ASSIGNMENT = UPDATE
PARAMETER C_MMCM1_COMPENSATION = ZHOLD, DT = STRING, ASSIGNMENT = UPDATE
PARAMETER C_MMCM1_DIVCLK_DIVIDE = 1, DT = INTEGER, ASSIGNMENT = UPDATE
PARAMETER C_MMCM1_REF_JITTER1 = 0.010000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM1_CLKIN1_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_MMCM1_CLKFBOUT_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_MMCM1_CLOCK_HOLD = false, DT = BOOLEAN, ASSIGNMENT = UPDATE
PARAMETER C_MMCM1_STARTUP_WAIT = false, DT = BOOLEAN, ASSIGNMENT = UPDATE
PARAMETER C_MMCM1_EXT_RESET_HIGH = 1, DT = INTEGER, ASSIGNMENT = UPDATE
PARAMETER C_MMCM1_FAMILY = virtex6, DT = STRING, ASSIGNMENT = UPDATE
PARAMETER C_MMCM1_CLKOUT0_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_MMCM1_CLKOUT1_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_MMCM1_CLKOUT2_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_MMCM1_CLKOUT3_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_MMCM1_CLKOUT4_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_MMCM1_CLKOUT5_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_MMCM1_CLKOUT6_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_MMCM1_CLKIN1_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE
PARAMETER C_MMCM1_CLKIN1_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE
PARAMETER C_MMCM1_CLKFBIN_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE
PARAMETER C_MMCM1_CLKFBIN_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE
PARAMETER C_MMCM1_RST_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE
PARAMETER C_MMCM2_BANDWIDTH = OPTIMIZED, DT = STRING, VALUE = (OPTIMIZED=OPTIMIZED, HIGH=HIGH, LOW=LOW), ASSIGNMENT = UPDATE
PARAMETER C_MMCM2_CLKFBOUT_MULT_F = 1.000000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM2_CLKFBOUT_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM2_CLKFBOUT_USE_FINE_PS = false, DT = BOOLEAN, ASSIGNMENT = UPDATE
PARAMETER C_MMCM2_CLKIN1_PERIOD = 0.000000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM2_CLKOUT0_DIVIDE_F = 1.000000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM2_CLKOUT0_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM2_CLKOUT0_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM2_CLKOUT1_DIVIDE = 1, DT = INTEGER, ASSIGNMENT = UPDATE
PARAMETER C_MMCM2_CLKOUT1_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM2_CLKOUT1_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM2_CLKOUT2_DIVIDE = 1, DT = INTEGER, ASSIGNMENT = UPDATE
PARAMETER C_MMCM2_CLKOUT2_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM2_CLKOUT2_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM2_CLKOUT3_DIVIDE = 1, DT = INTEGER, ASSIGNMENT = UPDATE
PARAMETER C_MMCM2_CLKOUT3_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM2_CLKOUT3_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM2_CLKOUT4_DIVIDE = 1, DT = INTEGER, ASSIGNMENT = UPDATE
PARAMETER C_MMCM2_CLKOUT4_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM2_CLKOUT4_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM2_CLKOUT4_CASCADE = false, DT = BOOLEAN, ASSIGNMENT = UPDATE
PARAMETER C_MMCM2_CLKOUT5_DIVIDE = 1, DT = INTEGER, ASSIGNMENT = UPDATE
PARAMETER C_MMCM2_CLKOUT5_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM2_CLKOUT5_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM2_CLKOUT6_DIVIDE = 1, DT = INTEGER, ASSIGNMENT = UPDATE
PARAMETER C_MMCM2_CLKOUT6_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM2_CLKOUT6_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM2_CLKOUT0_USE_FINE_PS = false, DT = BOOLEAN, ASSIGNMENT = UPDATE
PARAMETER C_MMCM2_CLKOUT1_USE_FINE_PS = false, DT = BOOLEAN, ASSIGNMENT = UPDATE
PARAMETER C_MMCM2_CLKOUT2_USE_FINE_PS = false, DT = BOOLEAN, ASSIGNMENT = UPDATE
PARAMETER C_MMCM2_CLKOUT3_USE_FINE_PS = false, DT = BOOLEAN, ASSIGNMENT = UPDATE
PARAMETER C_MMCM2_CLKOUT4_USE_FINE_PS = false, DT = BOOLEAN, ASSIGNMENT = UPDATE
PARAMETER C_MMCM2_CLKOUT5_USE_FINE_PS = false, DT = BOOLEAN, ASSIGNMENT = UPDATE
PARAMETER C_MMCM2_CLKOUT6_USE_FINE_PS = false, DT = BOOLEAN, ASSIGNMENT = UPDATE
PARAMETER C_MMCM2_COMPENSATION = ZHOLD, DT = STRING, ASSIGNMENT = UPDATE
PARAMETER C_MMCM2_DIVCLK_DIVIDE = 1, DT = INTEGER, ASSIGNMENT = UPDATE
PARAMETER C_MMCM2_REF_JITTER1 = 0.010000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM2_CLKIN1_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_MMCM2_CLKFBOUT_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_MMCM2_CLOCK_HOLD = false, DT = BOOLEAN, ASSIGNMENT = UPDATE
PARAMETER C_MMCM2_STARTUP_WAIT = false, DT = BOOLEAN, ASSIGNMENT = UPDATE
PARAMETER C_MMCM2_EXT_RESET_HIGH = 1, DT = INTEGER, ASSIGNMENT = UPDATE
PARAMETER C_MMCM2_FAMILY = virtex6, DT = STRING, ASSIGNMENT = UPDATE
PARAMETER C_MMCM2_CLKOUT0_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_MMCM2_CLKOUT1_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_MMCM2_CLKOUT2_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_MMCM2_CLKOUT3_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_MMCM2_CLKOUT4_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_MMCM2_CLKOUT5_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_MMCM2_CLKOUT6_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_MMCM2_CLKIN1_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE
PARAMETER C_MMCM2_CLKIN1_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE
PARAMETER C_MMCM2_CLKFBIN_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE
PARAMETER C_MMCM2_CLKFBIN_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE
PARAMETER C_MMCM2_RST_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE
PARAMETER C_MMCM3_BANDWIDTH = OPTIMIZED, DT = STRING, VALUE = (OPTIMIZED=OPTIMIZED, HIGH=HIGH, LOW=LOW), ASSIGNMENT = UPDATE
PARAMETER C_MMCM3_CLKFBOUT_MULT_F = 1.000000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM3_CLKFBOUT_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM3_CLKFBOUT_USE_FINE_PS = false, DT = BOOLEAN, ASSIGNMENT = UPDATE
PARAMETER C_MMCM3_CLKIN1_PERIOD = 0.000000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM3_CLKOUT0_DIVIDE_F = 1.000000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM3_CLKOUT0_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM3_CLKOUT0_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM3_CLKOUT1_DIVIDE = 1, DT = INTEGER, ASSIGNMENT = UPDATE
PARAMETER C_MMCM3_CLKOUT1_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM3_CLKOUT1_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM3_CLKOUT2_DIVIDE = 1, DT = INTEGER, ASSIGNMENT = UPDATE
PARAMETER C_MMCM3_CLKOUT2_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM3_CLKOUT2_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM3_CLKOUT3_DIVIDE = 1, DT = INTEGER, ASSIGNMENT = UPDATE
PARAMETER C_MMCM3_CLKOUT3_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM3_CLKOUT3_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM3_CLKOUT4_DIVIDE = 1, DT = INTEGER, ASSIGNMENT = UPDATE
PARAMETER C_MMCM3_CLKOUT4_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM3_CLKOUT4_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM3_CLKOUT4_CASCADE = false, DT = BOOLEAN, ASSIGNMENT = UPDATE
PARAMETER C_MMCM3_CLKOUT5_DIVIDE = 1, DT = INTEGER, ASSIGNMENT = UPDATE
PARAMETER C_MMCM3_CLKOUT5_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM3_CLKOUT5_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM3_CLKOUT6_DIVIDE = 1, DT = INTEGER, ASSIGNMENT = UPDATE
PARAMETER C_MMCM3_CLKOUT6_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM3_CLKOUT6_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM3_CLKOUT0_USE_FINE_PS = false, DT = BOOLEAN, ASSIGNMENT = UPDATE
PARAMETER C_MMCM3_CLKOUT1_USE_FINE_PS = false, DT = BOOLEAN, ASSIGNMENT = UPDATE
PARAMETER C_MMCM3_CLKOUT2_USE_FINE_PS = false, DT = BOOLEAN, ASSIGNMENT = UPDATE
PARAMETER C_MMCM3_CLKOUT3_USE_FINE_PS = false, DT = BOOLEAN, ASSIGNMENT = UPDATE
PARAMETER C_MMCM3_CLKOUT4_USE_FINE_PS = false, DT = BOOLEAN, ASSIGNMENT = UPDATE
PARAMETER C_MMCM3_CLKOUT5_USE_FINE_PS = false, DT = BOOLEAN, ASSIGNMENT = UPDATE
PARAMETER C_MMCM3_CLKOUT6_USE_FINE_PS = false, DT = BOOLEAN, ASSIGNMENT = UPDATE
PARAMETER C_MMCM3_COMPENSATION = ZHOLD, DT = STRING, ASSIGNMENT = UPDATE
PARAMETER C_MMCM3_DIVCLK_DIVIDE = 1, DT = INTEGER, ASSIGNMENT = UPDATE
PARAMETER C_MMCM3_REF_JITTER1 = 0.010000, DT = REAL, ASSIGNMENT = UPDATE
PARAMETER C_MMCM3_CLKIN1_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_MMCM3_CLKFBOUT_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_MMCM3_CLOCK_HOLD = false, DT = BOOLEAN, ASSIGNMENT = UPDATE
PARAMETER C_MMCM3_STARTUP_WAIT = false, DT = BOOLEAN, ASSIGNMENT = UPDATE
PARAMETER C_MMCM3_EXT_RESET_HIGH = 1, DT = INTEGER, ASSIGNMENT = UPDATE
PARAMETER C_MMCM3_FAMILY = virtex6, DT = STRING, ASSIGNMENT = UPDATE
PARAMETER C_MMCM3_CLKOUT0_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_MMCM3_CLKOUT1_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_MMCM3_CLKOUT2_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_MMCM3_CLKOUT3_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_MMCM3_CLKOUT4_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_MMCM3_CLKOUT5_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_MMCM3_CLKOUT6_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE
PARAMETER C_MMCM3_CLKIN1_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE
PARAMETER C_MMCM3_CLKIN1_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE
PARAMETER C_MMCM3_CLKFBIN_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE
PARAMETER C_MMCM3_CLKFBIN_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE
PARAMETER C_MMCM3_RST_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE
PARAMETER C_CLKIN_FREQ = 0, DT = INTEGER, TYPE = NON_HDL
PARAMETER C_CLKFBIN_FREQ = 0, DT = INTEGER, TYPE = NON_HDL
PARAMETER C_CLKFBIN_DESKEW = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKOUT6=CLKOUT6, CLKOUT7=CLKOUT7, CLKOUT8=CLKOUT8, CLKOUT9=CLKOUT9, CLKOUT10=CLKOUT10, CLKOUT11=CLKOUT11, CLKOUT12=CLKOUT12, CLKOUT13=CLKOUT13, CLKOUT14=CLKOUT14, CLKOUT15=CLKOUT15), TYPE = NON_HDL
PARAMETER C_PSDONE_GROUP = NONE, DT = STRING, VALUES = (NONE=NONE, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3, MMCM0_FB=MMCM0_FB, MMCM1_FB=MMCM1_FB, MMCM2_FB=MMCM2_FB, MMCM3_FB=MMCM3_FB), TYPE = NON_HDL
PARAMETER C_CLKOUT0_FREQ = 0, DT = INTEGER, TYPE = NON_HDL
PARAMETER C_CLKOUT0_PHASE = 0, DT = INTEGER, RANGE = (0:359), TYPE = NON_HDL
PARAMETER C_CLKOUT0_GROUP = NONE, DT = STRING, VALUES = (NONE=NONE, PLL0=PLL0, PLL0_ADJUST=PLL0_ADJUST, PLL1=PLL1, PLL1_ADJUST=PLL1_ADJUST, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), TYPE = NON_HDL
PARAMETER C_CLKOUT0_BUF = TRUE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL
PARAMETER C_CLKOUT0_VARIABLE_PHASE = FALSE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL
PARAMETER C_CLKOUT1_FREQ = 0, DT = INTEGER, TYPE = NON_HDL
PARAMETER C_CLKOUT1_PHASE = 0, DT = INTEGER, RANGE = (0:359), TYPE = NON_HDL
PARAMETER C_CLKOUT1_GROUP = NONE, DT = STRING, VALUES = (NONE=NONE, PLL0=PLL0, PLL0_ADJUST=PLL0_ADJUST, PLL1=PLL1, PLL1_ADJUST=PLL1_ADJUST, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), TYPE = NON_HDL
PARAMETER C_CLKOUT1_BUF = TRUE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL
PARAMETER C_CLKOUT1_VARIABLE_PHASE = FALSE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL
PARAMETER C_CLKOUT2_FREQ = 0, DT = INTEGER, TYPE = NON_HDL
PARAMETER C_CLKOUT2_PHASE = 0, DT = INTEGER, RANGE = (0:359), TYPE = NON_HDL
PARAMETER C_CLKOUT2_GROUP = NONE, DT = STRING, VALUES = (NONE=NONE, PLL0=PLL0, PLL0_ADJUST=PLL0_ADJUST, PLL1=PLL1, PLL1_ADJUST=PLL1_ADJUST, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), TYPE = NON_HDL
PARAMETER C_CLKOUT2_BUF = TRUE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL
PARAMETER C_CLKOUT2_VARIABLE_PHASE = FALSE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL
PARAMETER C_CLKOUT3_FREQ = 0, DT = INTEGER, TYPE = NON_HDL
PARAMETER C_CLKOUT3_PHASE = 0, DT = INTEGER, RANGE = (0:359), TYPE = NON_HDL
PARAMETER C_CLKOUT3_GROUP = NONE, DT = STRING, VALUES = (NONE=NONE, PLL0=PLL0, PLL0_ADJUST=PLL0_ADJUST, PLL1=PLL1, PLL1_ADJUST=PLL1_ADJUST, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), TYPE = NON_HDL
PARAMETER C_CLKOUT3_BUF = TRUE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL
PARAMETER C_CLKOUT3_VARIABLE_PHASE = FALSE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL
PARAMETER C_CLKOUT4_FREQ = 0, DT = INTEGER, TYPE = NON_HDL
PARAMETER C_CLKOUT4_PHASE = 0, DT = INTEGER, RANGE = (0:359), TYPE = NON_HDL
PARAMETER C_CLKOUT4_GROUP = NONE, DT = STRING, VALUES = (NONE=NONE, PLL0=PLL0, PLL0_ADJUST=PLL0_ADJUST, PLL1=PLL1, PLL1_ADJUST=PLL1_ADJUST, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), TYPE = NON_HDL
PARAMETER C_CLKOUT4_BUF = TRUE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL
PARAMETER C_CLKOUT4_VARIABLE_PHASE = FALSE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL
PARAMETER C_CLKOUT5_FREQ = 0, DT = INTEGER, TYPE = NON_HDL
PARAMETER C_CLKOUT5_PHASE = 0, DT = INTEGER, RANGE = (0:359), TYPE = NON_HDL
PARAMETER C_CLKOUT5_GROUP = NONE, DT = STRING, VALUES = (NONE=NONE, PLL0=PLL0, PLL0_ADJUST=PLL0_ADJUST, PLL1=PLL1, PLL1_ADJUST=PLL1_ADJUST, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), TYPE = NON_HDL
PARAMETER C_CLKOUT5_BUF = TRUE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL
PARAMETER C_CLKOUT5_VARIABLE_PHASE = FALSE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL
PARAMETER C_CLKOUT6_FREQ = 0, DT = INTEGER, TYPE = NON_HDL
PARAMETER C_CLKOUT6_PHASE = 0, DT = INTEGER, RANGE = (0:359), TYPE = NON_HDL
PARAMETER C_CLKOUT6_GROUP = NONE, DT = STRING, VALUES = (NONE=NONE, PLL0=PLL0, PLL0_ADJUST=PLL0_ADJUST, PLL1=PLL1, PLL1_ADJUST=PLL1_ADJUST, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), TYPE = NON_HDL
PARAMETER C_CLKOUT6_BUF = TRUE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL
PARAMETER C_CLKOUT6_VARIABLE_PHASE = FALSE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL
PARAMETER C_CLKOUT7_FREQ = 0, DT = INTEGER, TYPE = NON_HDL
PARAMETER C_CLKOUT7_PHASE = 0, DT = INTEGER, RANGE = (0:359), TYPE = NON_HDL
PARAMETER C_CLKOUT7_GROUP = NONE, DT = STRING, VALUES = (NONE=NONE, PLL0=PLL0, PLL0_ADJUST=PLL0_ADJUST, PLL1=PLL1, PLL1_ADJUST=PLL1_ADJUST, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), TYPE = NON_HDL
PARAMETER C_CLKOUT7_BUF = TRUE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL
PARAMETER C_CLKOUT7_VARIABLE_PHASE = FALSE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL
PARAMETER C_CLKOUT8_FREQ = 0, DT = INTEGER, TYPE = NON_HDL
PARAMETER C_CLKOUT8_PHASE = 0, DT = INTEGER, RANGE = (0:359), TYPE = NON_HDL
PARAMETER C_CLKOUT8_GROUP = NONE, DT = STRING, VALUES = (NONE=NONE, PLL0=PLL0, PLL0_ADJUST=PLL0_ADJUST, PLL1=PLL1, PLL1_ADJUST=PLL1_ADJUST, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), TYPE = NON_HDL
PARAMETER C_CLKOUT8_BUF = TRUE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL
PARAMETER C_CLKOUT8_VARIABLE_PHASE = FALSE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL
PARAMETER C_CLKOUT9_FREQ = 0, DT = INTEGER, TYPE = NON_HDL
PARAMETER C_CLKOUT9_PHASE = 0, DT = INTEGER, RANGE = (0:359), TYPE = NON_HDL
PARAMETER C_CLKOUT9_GROUP = NONE, DT = STRING, VALUES = (NONE=NONE, PLL0=PLL0, PLL0_ADJUST=PLL0_ADJUST, PLL1=PLL1, PLL1_ADJUST=PLL1_ADJUST, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), TYPE = NON_HDL
PARAMETER C_CLKOUT9_BUF = TRUE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL
PARAMETER C_CLKOUT9_VARIABLE_PHASE = FALSE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL
PARAMETER C_CLKOUT10_FREQ = 0, DT = INTEGER, TYPE = NON_HDL
PARAMETER C_CLKOUT10_PHASE = 0, DT = INTEGER, RANGE = (0:359), TYPE = NON_HDL
PARAMETER C_CLKOUT10_GROUP = NONE, DT = STRING, VALUES = (NONE=NONE, PLL0=PLL0, PLL0_ADJUST=PLL0_ADJUST, PLL1=PLL1, PLL1_ADJUST=PLL1_ADJUST, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), TYPE = NON_HDL
PARAMETER C_CLKOUT10_BUF = TRUE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL
PARAMETER C_CLKOUT10_VARIABLE_PHASE = FALSE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL
PARAMETER C_CLKOUT11_FREQ = 0, DT = INTEGER, TYPE = NON_HDL
PARAMETER C_CLKOUT11_PHASE = 0, DT = INTEGER, RANGE = (0:359), TYPE = NON_HDL
PARAMETER C_CLKOUT11_GROUP = NONE, DT = STRING, VALUES = (NONE=NONE, PLL0=PLL0, PLL0_ADJUST=PLL0_ADJUST, PLL1=PLL1, PLL1_ADJUST=PLL1_ADJUST, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), TYPE = NON_HDL
PARAMETER C_CLKOUT11_BUF = TRUE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL
PARAMETER C_CLKOUT11_VARIABLE_PHASE = FALSE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL
PARAMETER C_CLKOUT12_FREQ = 0, DT = INTEGER, TYPE = NON_HDL
PARAMETER C_CLKOUT12_PHASE = 0, DT = INTEGER, RANGE = (0:359), TYPE = NON_HDL
PARAMETER C_CLKOUT12_GROUP = NONE, DT = STRING, VALUES = (NONE=NONE, PLL0=PLL0, PLL0_ADJUST=PLL0_ADJUST, PLL1=PLL1, PLL1_ADJUST=PLL1_ADJUST, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), TYPE = NON_HDL
PARAMETER C_CLKOUT12_BUF = TRUE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL
PARAMETER C_CLKOUT12_VARIABLE_PHASE = FALSE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL
PARAMETER C_CLKOUT13_FREQ = 0, DT = INTEGER, TYPE = NON_HDL
PARAMETER C_CLKOUT13_PHASE = 0, DT = INTEGER, RANGE = (0:359), TYPE = NON_HDL
PARAMETER C_CLKOUT13_GROUP = NONE, DT = STRING, VALUES = (NONE=NONE, PLL0=PLL0, PLL0_ADJUST=PLL0_ADJUST, PLL1=PLL1, PLL1_ADJUST=PLL1_ADJUST, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), TYPE = NON_HDL
PARAMETER C_CLKOUT13_BUF = TRUE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL
PARAMETER C_CLKOUT13_VARIABLE_PHASE = FALSE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL
PARAMETER C_CLKOUT14_FREQ = 0, DT = INTEGER, TYPE = NON_HDL
PARAMETER C_CLKOUT14_PHASE = 0, DT = INTEGER, RANGE = (0:359), TYPE = NON_HDL
PARAMETER C_CLKOUT14_GROUP = NONE, DT = STRING, VALUES = (NONE=NONE, PLL0=PLL0, PLL0_ADJUST=PLL0_ADJUST, PLL1=PLL1, PLL1_ADJUST=PLL1_ADJUST, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), TYPE = NON_HDL
PARAMETER C_CLKOUT14_BUF = TRUE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL
PARAMETER C_CLKOUT14_VARIABLE_PHASE = FALSE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL
PARAMETER C_CLKOUT15_FREQ = 0, DT = INTEGER, TYPE = NON_HDL
PARAMETER C_CLKOUT15_PHASE = 0, DT = INTEGER, RANGE = (0:359), TYPE = NON_HDL
PARAMETER C_CLKOUT15_GROUP = NONE, DT = STRING, VALUES = (NONE=NONE, PLL0=PLL0, PLL0_ADJUST=PLL0_ADJUST, PLL1=PLL1, PLL1_ADJUST=PLL1_ADJUST, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), TYPE = NON_HDL
PARAMETER C_CLKOUT15_BUF = TRUE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL
PARAMETER C_CLKOUT15_VARIABLE_PHASE = FALSE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL
PARAMETER C_CLKFBOUT_FREQ = 0, DT = INTEGER, TYPE = NON_HDL
PARAMETER C_CLKFBOUT_PHASE = 0, DT = INTEGER, RANGE = (0:0), TYPE = NON_HDL
PARAMETER C_CLKFBOUT_GROUP = NONE, DT = STRING, VALUES = (NONE=NONE, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), TYPE = NON_HDL
PARAMETER C_CLKFBOUT_BUF = TRUE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL

## Ports
PORT CLKIN = "", DIR = I, SIGIS = CLK
PORT CLKFBIN = "", DIR = I, SIGIS = CLK, ISVALID = (C_CLKFBIN_FREQ > 0)
PORT CLKOUT0 = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN, CLK_FACTOR = 1.0 * C_CLKOUT0_FREQ / C_CLKIN_FREQ
PORT CLKOUT1 = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN, CLK_FACTOR = 1.0 * C_CLKOUT1_FREQ / C_CLKIN_FREQ, ISVALID = (C_CLKOUT1_FREQ > 0)
PORT CLKOUT2 = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN, CLK_FACTOR = 1.0 * C_CLKOUT2_FREQ / C_CLKIN_FREQ, ISVALID = (C_CLKOUT2_FREQ > 0)
PORT CLKOUT3 = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN, CLK_FACTOR = 1.0 * C_CLKOUT3_FREQ / C_CLKIN_FREQ, ISVALID = (C_CLKOUT3_FREQ > 0)
PORT CLKOUT4 = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN, CLK_FACTOR = 1.0 * C_CLKOUT4_FREQ / C_CLKIN_FREQ, ISVALID = (C_CLKOUT4_FREQ > 0)
PORT CLKOUT5 = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN, CLK_FACTOR = 1.0 * C_CLKOUT5_FREQ / C_CLKIN_FREQ, ISVALID = (C_CLKOUT5_FREQ > 0)
PORT CLKOUT6 = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN, CLK_FACTOR = 1.0 * C_CLKOUT6_FREQ / C_CLKIN_FREQ, ISVALID = (C_CLKOUT6_FREQ > 0)
PORT CLKOUT7 = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN, CLK_FACTOR = 1.0 * C_CLKOUT7_FREQ / C_CLKIN_FREQ, ISVALID = (C_CLKOUT7_FREQ > 0)
PORT CLKOUT8 = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN, CLK_FACTOR = 1.0 * C_CLKOUT8_FREQ / C_CLKIN_FREQ, ISVALID = (C_CLKOUT8_FREQ > 0)
PORT CLKOUT9 = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN, CLK_FACTOR = 1.0 * C_CLKOUT9_FREQ / C_CLKIN_FREQ, ISVALID = (C_CLKOUT9_FREQ > 0)
PORT CLKOUT10 = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN, CLK_FACTOR = 1.0 * C_CLKOUT10_FREQ / C_CLKIN_FREQ, ISVALID = (C_CLKOUT10_FREQ > 0)
PORT CLKOUT11 = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN, CLK_FACTOR = 1.0 * C_CLKOUT11_FREQ / C_CLKIN_FREQ, ISVALID = (C_CLKOUT11_FREQ > 0)
PORT CLKOUT12 = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN, CLK_FACTOR = 1.0 * C_CLKOUT12_FREQ / C_CLKIN_FREQ, ISVALID = (C_CLKOUT12_FREQ > 0)
PORT CLKOUT13 = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN, CLK_FACTOR = 1.0 * C_CLKOUT13_FREQ / C_CLKIN_FREQ, ISVALID = (C_CLKOUT13_FREQ > 0)
PORT CLKOUT14 = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN, CLK_FACTOR = 1.0 * C_CLKOUT14_FREQ / C_CLKIN_FREQ, ISVALID = (C_CLKOUT14_FREQ > 0)
PORT CLKOUT15 = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN, CLK_FACTOR = 1.0 * C_CLKOUT15_FREQ / C_CLKIN_FREQ, ISVALID = (C_CLKOUT15_FREQ > 0)
PORT CLKFBOUT = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN, CLK_FACTOR = 1.0 * C_CLKFBOUT_FREQ / C_CLKIN_FREQ, ISVALID = (C_CLKFBOUT_FREQ > 0)
PORT PSCLK = "", DIR = I, SIGIS = CLK
PORT PSEN = "", DIR = I
PORT PSINCDEC = "", DIR = I
PORT PSDONE = "", DIR = O
PORT RST = "", DIR = I, SIGIS = RST
PORT LOCKED = "", DIR = O

END

FINISH_SINGLE_MPD

START_SINGLE_MPD opb_v20_v1_10_d 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : opb_v20
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN opb_v20

## Peripheral Options
OPTION IMP_NETLIST = TRUE
OPTION IPTYPE = BUS
OPTION BUS_STD = OPB
OPTION MAX_MASTERS = 16
OPTION DESC = On-chip Peripheral Bus (OPB) 2.0
OPTION LONG_DESC = OPB_V20 On-Chip Peripheral Bus V2.0 with OPB Arbiter (OPB_V20)
OPTION IP_GROUP = Bus and Bridge:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=SUPERSEDED, spartan3=SUPERSEDED, spartan3an=SUPERSEDED, spartan3a=SUPERSEDED, spartan3e=SUPERSEDED, spartan3adsp=SUPERSEDED, virtex4lx=SUPERSEDED, virtex4sx=SUPERSEDED, virtex4fx=SUPERSEDED, virtex5lx=SUPERSEDED, virtex5sx=SUPERSEDED, virtex5fx=SUPERSEDED, aspartan3e=SUPERSEDED, aspartan3a=SUPERSEDED, aspartan3adsp=SUPERSEDED, qvirtex4lx=SUPERSEDED, qvirtex4sx=SUPERSEDED, qvirtex4fx=SUPERSEDED, qrvirtex4lx=SUPERSEDED, qrvirtex4sx=SUPERSEDED, qrvirtex4fx=SUPERSEDED, spartan6t=SUPERSEDED, spartan6=SUPERSEDED, spartan6l=SUPERSEDED, qspartan6t=SUPERSEDED, qspartan6=SUPERSEDED, aspartan6t=SUPERSEDED, aspartan6=SUPERSEDED, virtex6lx=SUPERSEDED, virtex6sx=SUPERSEDED, virtex6hx=SUPERSEDED, virtex6cx=SUPERSEDED, virtex6llx=SUPERSEDED, virtex6lsx=SUPERSEDED, qspartan6l=SUPERSEDED, qrvirtex5=SUPERSEDED, qvirtex6lx=SUPERSEDED, qvirtex6sx=SUPERSEDED, qvirtex6fx=SUPERSEDED, qvirtex6tx=SUPERSEDED)
OPTION HDL = MIXED
OPTION RUN_NGCBUILD = FALSE
OPTION STYLE = HDL
OPTION MAX_SLAVES = 64

IO_INTERFACE IO_IF = reset_0

## Bus Interfaces

## Generics for VHDL or Parameters for Verilog
PARAMETER C_BASEADDR = 0xFFFFFFFF, DT = std_logic_vector, MIN_SIZE = 0x200, ISVALID = (C_PROC_INTRFCE == 1)
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector
PARAMETER C_OPB_AWIDTH = 32, DT = integer
PARAMETER C_OPB_DWIDTH = 32, DT = integer
PARAMETER C_NUM_MASTERS = 4, DT = integer
PARAMETER C_NUM_SLAVES = 4, DT = integer
PARAMETER C_USE_LUT_OR = 1, DT = integer, RANGE = (0,1)
PARAMETER C_EXT_RESET_HIGH = 1, DT = integer, IO_IF = reset_0, IO_IS = polarity, RANGE = (0,1)
PARAMETER C_DYNAM_PRIORITY = 0, DT = integer, RANGE = (0,1)
PARAMETER C_PARK = 0, DT = integer, RANGE = (0,1)
PARAMETER C_PROC_INTRFCE = 0, DT = integer, RANGE = (0,1)
PARAMETER C_REG_GRANTS = 1, DT = integer, RANGE = (0,1)
PARAMETER C_DEV_BLK_ID = 0, DT = integer, RANGE = (0:255)
PARAMETER C_DEV_MIR_ENABLE = 0, DT = integer, RANGE = (0,1)

## Ports
PORT OPB_Clk = "", DIR = I, SIGIS = CLK, ASSIGNMENT = REQUIRE
PORT OPB_Rst = OPB_Rst, DIR = O
PORT SYS_Rst = "", DIR = I, ASSIGNMENT = REQUIRE
PORT Debug_SYS_Rst = Debug_SYS_Rst, DIR = I
PORT WDT_Rst = WDT_Rst, DIR = I
PORT M_ABus = M_ABus, DIR = I, VEC = [0:(C_OPB_AWIDTH*C_NUM_MASTERS)-1]
PORT M_BE = M_BE, DIR = I, VEC = [0:(C_OPB_DWIDTH+7)/8*C_NUM_MASTERS-1]
PORT M_beXfer = M_beXfer, DIR = I, VEC = [0:C_NUM_MASTERS-1]
PORT M_busLock = M_busLock, DIR = I, VEC = [0:C_NUM_MASTERS-1]
PORT M_DBus = M_DBus, DIR = I, VEC = [0:(C_OPB_DWIDTH*C_NUM_MASTERS)-1]
PORT M_DBusEn = M_DBusEn, DIR = I, VEC = [0:C_NUM_MASTERS-1]
PORT M_DBusEn32_63 = M_DBusEn32_63, DIR = I, VEC = [0:C_NUM_MASTERS-1], INITIALVAL = VCC
PORT M_dwXfer = M_dwXfer, DIR = I, VEC = [0:C_NUM_MASTERS-1]
PORT M_fwXfer = M_fwXfer, DIR = I, VEC = [0:C_NUM_MASTERS-1]
PORT M_hwXfer = M_hwXfer, DIR = I, VEC = [0:C_NUM_MASTERS-1]
PORT M_request = M_request, DIR = I, VEC = [0:C_NUM_MASTERS-1]
PORT M_RNW = M_RNW, DIR = I, VEC = [0:C_NUM_MASTERS-1]
PORT M_select = M_select, DIR = I, VEC = [0:C_NUM_MASTERS-1]
PORT M_seqAddr = M_seqAddr, DIR = I, VEC = [0:C_NUM_MASTERS-1]
PORT Sl_beAck = Sl_beAck, DIR = I, VEC = [0:C_NUM_SLAVES-1]
PORT Sl_DBus = Sl_DBus, DIR = I, VEC = [0:(C_OPB_DWIDTH*C_NUM_SLAVES)-1]
PORT Sl_DBusEn = Sl_DBusEn, DIR = I, VEC = [0:C_NUM_SLAVES-1], INITIALVAL = VCC
PORT Sl_DBusEn32_63 = Sl_DBusEn32_63, DIR = I, VEC = [0:C_NUM_SLAVES-1], INITIALVAL = VCC
PORT Sl_errAck = Sl_errAck, DIR = I, VEC = [0:C_NUM_SLAVES-1]
PORT Sl_dwAck = Sl_dwAck, DIR = I, VEC = [0:C_NUM_SLAVES-1]
PORT Sl_fwAck = Sl_fwAck, DIR = I, VEC = [0:C_NUM_SLAVES-1]
PORT Sl_hwAck = Sl_hwAck, DIR = I, VEC = [0:C_NUM_SLAVES-1]
PORT Sl_retry = Sl_retry, DIR = I, VEC = [0:C_NUM_SLAVES-1]
PORT Sl_toutSup = Sl_toutSup, DIR = I, VEC = [0:C_NUM_SLAVES-1]
PORT Sl_xferAck = Sl_xferAck, DIR = I, VEC = [0:C_NUM_SLAVES-1]
PORT OPB_MRequest = OPB_MRequest, DIR = O, VEC = [0:C_NUM_MASTERS-1]
PORT OPB_ABus = OPB_ABus, DIR = O, VEC = [0:C_OPB_AWIDTH-1]
PORT OPB_BE = OPB_BE, DIR = O, VEC = [0:(C_OPB_DWIDTH+7)/8-1]
PORT OPB_beXfer = OPB_beXfer, DIR = O
PORT OPB_beAck = OPB_beAck, DIR = O
PORT OPB_busLock = OPB_busLock, DIR = O
PORT OPB_rdDBus = OPB_rdDBus, DIR = O, VEC = [0:C_OPB_DWIDTH-1]
PORT OPB_wrDBus = OPB_wrDBus, DIR = O, VEC = [0:C_OPB_DWIDTH-1]
PORT OPB_DBus = OPB_DBus, DIR = O, VEC = [0:C_OPB_DWIDTH-1]
PORT OPB_errAck = OPB_errAck, DIR = O
PORT OPB_dwAck = OPB_dwAck, DIR = O
PORT OPB_dwXfer = OPB_dwXfer, DIR = O
PORT OPB_fwAck = OPB_fwAck, DIR = O
PORT OPB_fwXfer = OPB_fwXfer, DIR = O
PORT OPB_hwAck = OPB_hwAck, DIR = O
PORT OPB_hwXfer = OPB_hwXfer, DIR = O
PORT OPB_MGrant = OPB_MGrant, DIR = O, VEC = [0:C_NUM_MASTERS-1]
PORT OPB_pendReq = OPB_pendReq, DIR = O, VEC = [0:C_NUM_MASTERS-1]
PORT OPB_retry = OPB_retry, DIR = O
PORT OPB_RNW = OPB_RNW, DIR = O
PORT OPB_select = OPB_select, DIR = O
PORT OPB_seqAddr = OPB_seqAddr, DIR = O
PORT OPB_timeout = OPB_timeout, DIR = O
PORT OPB_toutSup = OPB_toutSup, DIR = O
PORT OPB_xferAck = OPB_xferAck, DIR = O

END

FINISH_SINGLE_MPD

START_SINGLE_MPD dcr_v29_v1_00_b 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : dcr_v29
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN dcr_v29

## Peripheral Options
OPTION IPTYPE = BUS
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION BUS_STD = DCR
OPTION MAX_MASTERS = 1
OPTION MAX_SLAVES = 16
OPTION DWIDTH = 32
OPTION AWIDTH = 10
OPTION DESC = Device Control Register (DCR) Bus 2.9
OPTION LONG_DESC = 32-Bit Xilinx implementation of IBM 32-Bit Device Control Register Bus (DCR) Architecture Specification
OPTION IP_GROUP = Bus and Bridge:PPC
OPTION ARCH_SUPPORT_MAP = (virtex4lx=PRODUCTION, virtex4sx=PRODUCTION, virtex4fx=PRODUCTION, virtex5fx=PRODUCTION)
OPTION RUN_NGCBUILD = FALSE
OPTION STYLE = HDL


## Bus Interfaces

## Generics for VHDL or Parameters for Verilog
PARAMETER C_DCR_NUM_SLAVES = 4, DT = integer
PARAMETER C_DCR_AWIDTH = 10, DT = integer, ASSIGNMENT = CONSTANT
PARAMETER C_DCR_DWIDTH = 32, DT = integer, ASSIGNMENT = CONSTANT
PARAMETER C_USE_LUT_OR = 1, DT = integer

## Ports
PORT M_dcrABus = M_dcrABus, DIR = I, VEC = [0:C_DCR_AWIDTH-1]
PORT M_dcrDBus = M_dcrDBus, DIR = I, VEC = [0:C_DCR_DWIDTH-1]
PORT M_dcrRead = M_dcrRead, DIR = I
PORT M_dcrWrite = M_dcrWrite, DIR = I
PORT DCR_M_DBus = DCR_M_DBus, DIR = O, VEC = [0:C_DCR_DWIDTH-1]
PORT DCR_Ack = DCR_Ack, DIR = O
PORT DCR_ABus = DCR_ABus, DIR = O, VEC = [0:C_DCR_AWIDTH*C_DCR_NUM_SLAVES-1]
PORT DCR_Sl_DBus = DCR_Sl_DBus, DIR = O, VEC = [0:C_DCR_DWIDTH*C_DCR_NUM_SLAVES-1]
PORT DCR_Read = DCR_Read, DIR = O, VEC = [0:C_DCR_NUM_SLAVES-1]
PORT DCR_Write = DCR_Write, DIR = O, VEC = [0:C_DCR_NUM_SLAVES-1]
PORT Sl_dcrDBus = Sl_dcrDBus, DIR = I, VEC = [0:C_DCR_DWIDTH*C_DCR_NUM_SLAVES-1]
PORT Sl_dcrAck = Sl_dcrAck, DIR = I, VEC = [0:C_DCR_NUM_SLAVES-1]

END

FINISH_SINGLE_MPD

START_SINGLE_MPD dcm_module_v1_00_e 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : dcm_module
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN dcm_module

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION IPLEVEL_DRC_PROC = check_iplevel_settings
OPTION DESC = Digital Clock Manager (DCM)
OPTION LONG_DESC = The digital clock manager module is a wrapper around the DCM primitive which allows it to be used in the EDK tool suite.
OPTION IP_GROUP = 'Clock, Reset and Interrupt:MICROBLAZE:PPC'
OPTION ARCH_SUPPORT_MAP = (aspartan3=PRODUCTION, spartan3=PRODUCTION, spartan3an=PRODUCTION, spartan3a=PRODUCTION, spartan3e=PRODUCTION, spartan3adsp=PRODUCTION, virtex4lx=PRODUCTION, virtex4sx=PRODUCTION, virtex4fx=PRODUCTION, virtex5lx=PRODUCTION, virtex5sx=PRODUCTION, virtex5fx=PRODUCTION, aspartan3e=PRODUCTION, aspartan3a=PRODUCTION, aspartan3adsp=PRODUCTION, qvirtex4lx=PRODUCTION, qvirtex4sx=PRODUCTION, qvirtex4fx=PRODUCTION, qrvirtex4lx=PRODUCTION, qrvirtex4sx=PRODUCTION, qrvirtex4fx=PRODUCTION)
OPTION RUN_NGCBUILD = FALSE
OPTION STYLE = HDL


## Bus Interfaces

## Generics for VHDL or Parameters for Verilog
PARAMETER C_DFS_FREQUENCY_MODE = LOW, DT = STRING, VALUES = (LOW= Low, HIGH= High)
PARAMETER C_DLL_FREQUENCY_MODE = LOW, DT = STRING, VALUES = (LOW= Low, HIGH= High)
PARAMETER C_DUTY_CYCLE_CORRECTION = TRUE, DT = BOOLEAN, VALUES = (TRUE= True, FALSE= False)
PARAMETER C_CLKIN_DIVIDE_BY_2 = FALSE, DT = BOOLEAN, VALUES = (TRUE= True, FALSE= False)
PARAMETER C_CLK_FEEDBACK = 1X, DT = STRING, VALUES = (NONE= None, 1X= 1X, 2X= 2X)
PARAMETER C_CLKOUT_PHASE_SHIFT = NONE, DT = STRING, VALUES = (NONE= None, FIXED= Fixed, VARIABLE= Variable, VARIABLE_POSITIVE=  Variable Positive , VARIABLE_CENTER=  Variable Center , DIRECT= Direct)
PARAMETER C_DSS_MODE = NONE, DT = STRING, VALUES = (NONE= None)
PARAMETER C_STARTUP_WAIT = FALSE, DT = BOOLEAN, VALUES = (TRUE= True, FALSE= False)
PARAMETER C_PHASE_SHIFT = 0, DT = INTEGER, RANGE = (-255:1023)
PARAMETER C_CLKFX_MULTIPLY = 4, DT = INTEGER, RANGE = (2:32)
PARAMETER C_CLKFX_DIVIDE = 1, DT = INTEGER, RANGE = (1:32)
PARAMETER C_CLKDV_DIVIDE = 2.0, DT = REAL, VALUES = (1.5 = 1.5, 2.0 = 2.0, 2.5 = 2.5, 3.0= 3.0, 3.5= 3.5, 4.0= 4.0, 4.5= 4.5, 5.0= 5.0, 5.5=5.5, 6.0= 6.0, 6.5= 6.5, 7.0= 7.0, 7.5= 7.5, 8.0= 8.0, 9.0= 9.0, 10.0= 10.0, 11.0= 11.0, 12.0= 12.0, 13.0= 13.0, 14.0= 14.0, 15.0= 15.0, 16.0= 16.0)
PARAMETER C_CLKIN_PERIOD = 41.66666, DT = REAL, IO_IS = clk_freq, CLK_PORT = CLKIN, CLK_UNIT = NS
PARAMETER C_DESKEW_ADJUST = SYSTEM_SYNCHRONOUS, DT = STRING, VALUES = (SYSTEM_SYNCHRONOUS=  System Synchronous , SOURCE_SYNCHRONOUS=  Source Synchronous , 0= 0, 1= 1, 2= 2, 3= 3, 4= 4, 5= 5, 6= 6, 7= 7, 8= 8, 9= 9, 10= 10, 11= 11, 12= 12, 13= 13, 14= 14, 15= 15)
PARAMETER C_CLKIN_BUF = FALSE, DT = BOOLEAN, VALUES = (TRUE= True, FALSE= False)
PARAMETER C_CLKFB_BUF = FALSE, DT = BOOLEAN, VALUES = (TRUE= True, FALSE= False)
PARAMETER C_CLK0_BUF = FALSE, DT = BOOLEAN, VALUES = (TRUE= True, FALSE= False)
PARAMETER C_CLK90_BUF = FALSE, DT = BOOLEAN, VALUES = (TRUE= True, FALSE= False)
PARAMETER C_CLK180_BUF = FALSE, DT = BOOLEAN, VALUES = (TRUE= True, FALSE= False)
PARAMETER C_CLK270_BUF = FALSE, DT = BOOLEAN, VALUES = (TRUE= True, FALSE= False)
PARAMETER C_CLKDV_BUF = FALSE, DT = BOOLEAN, VALUES = (TRUE= True, FALSE= False)
PARAMETER C_CLK2X_BUF = FALSE, DT = BOOLEAN, VALUES = (TRUE= True, FALSE= False)
PARAMETER C_CLK2X180_BUF = FALSE, DT = BOOLEAN, VALUES = (TRUE= True, FALSE= False)
PARAMETER C_CLKFX_BUF = FALSE, DT = BOOLEAN, VALUES = (TRUE= True, FALSE= False)
PARAMETER C_CLKFX180_BUF = FALSE, DT = BOOLEAN, VALUES = (TRUE= True, FALSE= False)
PARAMETER C_EXT_RESET_HIGH = 1, DT = integer, IO_IS = polarity, RANGE = (0:1), VALUES = (0 =  0: Active Low , 1 =  1: Active High )
PARAMETER C_FAMILY = virtex2, DT = string

## Ports
PORT RST = "", DIR = I
PORT CLKIN = "", DIR = I, SIGIS = CLK
PORT CLKFB = "", DIR = I
PORT PSEN = "", DIR = I
PORT PSINCDEC = "", DIR = I
PORT PSCLK = "", DIR = I
PORT DSSEN = "", DIR = I
PORT CLK0 = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN, CLK_FACTOR = 1.0 / ( (C_CLKIN_DIVIDE_BY_2)? 2 : 1 )
PORT CLK90 = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN, CLK_FACTOR = 1.0 / ( (C_CLKIN_DIVIDE_BY_2)? 2 : 1 )
PORT CLK180 = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN, CLK_FACTOR = 1.0 / ( (C_CLKIN_DIVIDE_BY_2)? 2 : 1 )
PORT CLK270 = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN, CLK_FACTOR = 1.0 / ( (C_CLKIN_DIVIDE_BY_2)? 2 : 1 )
PORT CLKDV = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN, CLK_FACTOR = 1.0 / ((C_CLKDV_DIVIDE) * ((C_CLKIN_DIVIDE_BY_2)? 2 : 1 ))
PORT CLK2X = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN, CLK_FACTOR = 2.0 / ( (C_CLKIN_DIVIDE_BY_2)? 2 : 1 )
PORT CLK2X180 = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN, CLK_FACTOR = 2.0 / ( (C_CLKIN_DIVIDE_BY_2)? 2 : 1 )
PORT CLKFX = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN, CLK_FACTOR = 1.0 *  C_CLKFX_MULTIPLY / ((C_CLKFX_DIVIDE) * ((C_CLKIN_DIVIDE_BY_2)? 2 : 1 ))
PORT CLKFX180 = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN, CLK_FACTOR = 1.0 * C_CLKFX_MULTIPLY / ((C_CLKFX_DIVIDE) * ((C_CLKIN_DIVIDE_BY_2)? 2 : 1 ))
PORT STATUS = "", DIR = O, VEC = [7:0], ENDIAN = LITTLE
PORT LOCKED = "", DIR = O
PORT PSDONE = "", DIR = O

END

FINISH_SINGLE_MPD

START_SINGLE_MPD clock_generator_v4_00_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : clock_generator
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN clock_generator

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION IPLEVEL_DRC_PROC = clkgen_drc
OPTION ELABORATE_PROC = clkgen_elaborate
OPTION RUN_NGCBUILD = TRUE
OPTION DESC = Clock Generator
OPTION LONG_DESC = Clock generator for processor system.
OPTION IP_GROUP = 'Clock, Reset and Interrupt:MICROBLAZE:PPC'
OPTION ARCH_SUPPORT_MAP = (aspartan3=PRODUCTION, spartan3=PRODUCTION, spartan3an=PRODUCTION, spartan3a=PRODUCTION, spartan3e=PRODUCTION, spartan3adsp=PRODUCTION, virtex4lx=PRODUCTION, virtex4sx=PRODUCTION, virtex4fx=PRODUCTION, virtex5lx=PRODUCTION, virtex5sx=PRODUCTION, virtex5fx=PRODUCTION, aspartan3e=PRODUCTION, aspartan3a=PRODUCTION, aspartan3adsp=PRODUCTION, qvirtex4lx=PRODUCTION, qvirtex4sx=PRODUCTION, qvirtex4fx=PRODUCTION, qrvirtex4lx=PRODUCTION, qrvirtex4sx=PRODUCTION, qrvirtex4fx=PRODUCTION, spartan6t=PRODUCTION, spartan6=PRODUCTION, spartan6l=PRE_PRODUCTION, qspartan6t=PRODUCTION, qspartan6=PRODUCTION, aspartan6t=PRODUCTION, aspartan6=PRODUCTION, virtex6lx=PRODUCTION, virtex6sx=PRODUCTION, virtex6hx=PRODUCTION, virtex6cx=PRODUCTION, virtex6llx=PRE_PRODUCTION, virtex6lsx=PRE_PRODUCTION, qspartan6l=PRE_PRODUCTION, qrvirtex5=PRE_PRODUCTION, qvirtex6lx=PRE_PRODUCTION, qvirtex6sx=PRE_PRODUCTION, qvirtex6fx=PRE_PRODUCTION, qvirtex6tx=PRE_PRODUCTION)
OPTION STYLE = HDL


## Bus Interfaces

## Generics for VHDL or Parameters for Verilog
PARAMETER C_FAMILY = virtex6, DT = STRING
PARAMETER C_DEVICE = NOT_SET, DT = STRING
PARAMETER C_PACKAGE = NOT_SET, DT = STRING
PARAMETER C_SPEEDGRADE = NOT_SET, DT = STRING
PARAMETER C_CLKIN_FREQ = 0, DT = INTEGER, TYPE = NON_HDL
PARAMETER C_CLKOUT0_FREQ = 0, DT = INTEGER, TYPE = NON_HDL
PARAMETER C_CLKOUT0_PHASE = 0, DT = INTEGER, RANGE = (0:359), TYPE = NON_HDL
PARAMETER C_CLKOUT0_GROUP = NONE, DT = STRING, VALUES = (NONE=NONE, PLL0=PLL0, PLL0_ADJUST=PLL0_ADJUST, PLL1=PLL1, PLL1_ADJUST=PLL1_ADJUST, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), TYPE = NON_HDL
PARAMETER C_CLKOUT0_BUF = TRUE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL
PARAMETER C_CLKOUT0_VARIABLE_PHASE = FALSE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ISVALID = ([xstrncmp C_FAMILY virtex6 ] || [xstrncmp C_FAMILY virtex6l ])
PARAMETER C_CLKOUT1_FREQ = 0, DT = INTEGER, TYPE = NON_HDL
PARAMETER C_CLKOUT1_PHASE = 0, DT = INTEGER, RANGE = (0:359), TYPE = NON_HDL
PARAMETER C_CLKOUT1_GROUP = NONE, DT = STRING, VALUES = (NONE=NONE, PLL0=PLL0, PLL0_ADJUST=PLL0_ADJUST, PLL1=PLL1, PLL1_ADJUST=PLL1_ADJUST, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), TYPE = NON_HDL
PARAMETER C_CLKOUT1_BUF = TRUE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL
PARAMETER C_CLKOUT1_VARIABLE_PHASE = FALSE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ISVALID = ([xstrncmp C_FAMILY virtex6 ] || [xstrncmp C_FAMILY virtex6l ])
PARAMETER C_CLKOUT2_FREQ = 0, DT = INTEGER, TYPE = NON_HDL
PARAMETER C_CLKOUT2_PHASE = 0, DT = INTEGER, RANGE = (0:359), TYPE = NON_HDL
PARAMETER C_CLKOUT2_GROUP = NONE, DT = STRING, VALUES = (NONE=NONE, PLL0=PLL0, PLL0_ADJUST=PLL0_ADJUST, PLL1=PLL1, PLL1_ADJUST=PLL1_ADJUST, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), TYPE = NON_HDL
PARAMETER C_CLKOUT2_BUF = TRUE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL
PARAMETER C_CLKOUT2_VARIABLE_PHASE = FALSE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ISVALID = ([xstrncmp C_FAMILY virtex6 ] || [xstrncmp C_FAMILY virtex6l ])
PARAMETER C_CLKOUT3_FREQ = 0, DT = INTEGER, TYPE = NON_HDL
PARAMETER C_CLKOUT3_PHASE = 0, DT = INTEGER, RANGE = (0:359), TYPE = NON_HDL
PARAMETER C_CLKOUT3_GROUP = NONE, DT = STRING, VALUES = (NONE=NONE, PLL0=PLL0, PLL0_ADJUST=PLL0_ADJUST, PLL1=PLL1, PLL1_ADJUST=PLL1_ADJUST, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), TYPE = NON_HDL
PARAMETER C_CLKOUT3_BUF = TRUE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL
PARAMETER C_CLKOUT3_VARIABLE_PHASE = FALSE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ISVALID = ([xstrncmp C_FAMILY virtex6 ] || [xstrncmp C_FAMILY virtex6l ])
PARAMETER C_CLKOUT4_FREQ = 0, DT = INTEGER, TYPE = NON_HDL
PARAMETER C_CLKOUT4_PHASE = 0, DT = INTEGER, RANGE = (0:359), TYPE = NON_HDL
PARAMETER C_CLKOUT4_GROUP = NONE, DT = STRING, VALUES = (NONE=NONE, PLL0=PLL0, PLL0_ADJUST=PLL0_ADJUST, PLL1=PLL1, PLL1_ADJUST=PLL1_ADJUST, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), TYPE = NON_HDL
PARAMETER C_CLKOUT4_BUF = TRUE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL
PARAMETER C_CLKOUT4_VARIABLE_PHASE = FALSE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ISVALID = ([xstrncmp C_FAMILY virtex6 ] || [xstrncmp C_FAMILY virtex6l ])
PARAMETER C_CLKOUT5_FREQ = 0, DT = INTEGER, TYPE = NON_HDL
PARAMETER C_CLKOUT5_PHASE = 0, DT = INTEGER, RANGE = (0:359), TYPE = NON_HDL
PARAMETER C_CLKOUT5_GROUP = NONE, DT = STRING, VALUES = (NONE=NONE, PLL0=PLL0, PLL0_ADJUST=PLL0_ADJUST, PLL1=PLL1, PLL1_ADJUST=PLL1_ADJUST, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), TYPE = NON_HDL
PARAMETER C_CLKOUT5_BUF = TRUE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL
PARAMETER C_CLKOUT5_VARIABLE_PHASE = FALSE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ISVALID = ([xstrncmp C_FAMILY virtex6 ] || [xstrncmp C_FAMILY virtex6l ])
PARAMETER C_CLKOUT6_FREQ = 0, DT = INTEGER, TYPE = NON_HDL
PARAMETER C_CLKOUT6_PHASE = 0, DT = INTEGER, RANGE = (0:359), TYPE = NON_HDL
PARAMETER C_CLKOUT6_GROUP = NONE, DT = STRING, VALUES = (NONE=NONE, PLL0=PLL0, PLL0_ADJUST=PLL0_ADJUST, PLL1=PLL1, PLL1_ADJUST=PLL1_ADJUST, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), TYPE = NON_HDL
PARAMETER C_CLKOUT6_BUF = TRUE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL
PARAMETER C_CLKOUT6_VARIABLE_PHASE = FALSE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ISVALID = ([xstrncmp C_FAMILY virtex6 ] || [xstrncmp C_FAMILY virtex6l ])
PARAMETER C_CLKOUT7_FREQ = 0, DT = INTEGER, TYPE = NON_HDL
PARAMETER C_CLKOUT7_PHASE = 0, DT = INTEGER, RANGE = (0:359), TYPE = NON_HDL
PARAMETER C_CLKOUT7_GROUP = NONE, DT = STRING, VALUES = (NONE=NONE, PLL0=PLL0, PLL0_ADJUST=PLL0_ADJUST, PLL1=PLL1, PLL1_ADJUST=PLL1_ADJUST, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), TYPE = NON_HDL
PARAMETER C_CLKOUT7_BUF = TRUE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL
PARAMETER C_CLKOUT7_VARIABLE_PHASE = FALSE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ISVALID = ([xstrncmp C_FAMILY virtex6 ] || [xstrncmp C_FAMILY virtex6l ])
PARAMETER C_CLKOUT8_FREQ = 0, DT = INTEGER, TYPE = NON_HDL
PARAMETER C_CLKOUT8_PHASE = 0, DT = INTEGER, RANGE = (0:359), TYPE = NON_HDL
PARAMETER C_CLKOUT8_GROUP = NONE, DT = STRING, VALUES = (NONE=NONE, PLL0=PLL0, PLL0_ADJUST=PLL0_ADJUST, PLL1=PLL1, PLL1_ADJUST=PLL1_ADJUST, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), TYPE = NON_HDL
PARAMETER C_CLKOUT8_BUF = TRUE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL
PARAMETER C_CLKOUT8_VARIABLE_PHASE = FALSE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ISVALID = ([xstrncmp C_FAMILY virtex6 ] || [xstrncmp C_FAMILY virtex6l ])
PARAMETER C_CLKOUT9_FREQ = 0, DT = INTEGER, TYPE = NON_HDL
PARAMETER C_CLKOUT9_PHASE = 0, DT = INTEGER, RANGE = (0:359), TYPE = NON_HDL
PARAMETER C_CLKOUT9_GROUP = NONE, DT = STRING, VALUES = (NONE=NONE, PLL0=PLL0, PLL0_ADJUST=PLL0_ADJUST, PLL1=PLL1, PLL1_ADJUST=PLL1_ADJUST, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), TYPE = NON_HDL
PARAMETER C_CLKOUT9_BUF = TRUE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL
PARAMETER C_CLKOUT9_VARIABLE_PHASE = FALSE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ISVALID = ([xstrncmp C_FAMILY virtex6 ] || [xstrncmp C_FAMILY virtex6l ])
PARAMETER C_CLKOUT10_FREQ = 0, DT = INTEGER, TYPE = NON_HDL
PARAMETER C_CLKOUT10_PHASE = 0, DT = INTEGER, RANGE = (0:359), TYPE = NON_HDL
PARAMETER C_CLKOUT10_GROUP = NONE, DT = STRING, VALUES = (NONE=NONE, PLL0=PLL0, PLL0_ADJUST=PLL0_ADJUST, PLL1=PLL1, PLL1_ADJUST=PLL1_ADJUST, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), TYPE = NON_HDL
PARAMETER C_CLKOUT10_BUF = TRUE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL
PARAMETER C_CLKOUT10_VARIABLE_PHASE = FALSE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ISVALID = ([xstrncmp C_FAMILY virtex6 ] || [xstrncmp C_FAMILY virtex6l ])
PARAMETER C_CLKOUT11_FREQ = 0, DT = INTEGER, TYPE = NON_HDL
PARAMETER C_CLKOUT11_PHASE = 0, DT = INTEGER, RANGE = (0:359), TYPE = NON_HDL
PARAMETER C_CLKOUT11_GROUP = NONE, DT = STRING, VALUES = (NONE=NONE, PLL0=PLL0, PLL0_ADJUST=PLL0_ADJUST, PLL1=PLL1, PLL1_ADJUST=PLL1_ADJUST, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), TYPE = NON_HDL
PARAMETER C_CLKOUT11_BUF = TRUE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL
PARAMETER C_CLKOUT11_VARIABLE_PHASE = FALSE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ISVALID = ([xstrncmp C_FAMILY virtex6 ] || [xstrncmp C_FAMILY virtex6l ])
PARAMETER C_CLKOUT12_FREQ = 0, DT = INTEGER, TYPE = NON_HDL
PARAMETER C_CLKOUT12_PHASE = 0, DT = INTEGER, RANGE = (0:359), TYPE = NON_HDL
PARAMETER C_CLKOUT12_GROUP = NONE, DT = STRING, VALUES = (NONE=NONE, PLL0=PLL0, PLL0_ADJUST=PLL0_ADJUST, PLL1=PLL1, PLL1_ADJUST=PLL1_ADJUST, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), TYPE = NON_HDL
PARAMETER C_CLKOUT12_BUF = TRUE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL
PARAMETER C_CLKOUT12_VARIABLE_PHASE = FALSE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ISVALID = ([xstrncmp C_FAMILY virtex6 ] || [xstrncmp C_FAMILY virtex6l ])
PARAMETER C_CLKOUT13_FREQ = 0, DT = INTEGER, TYPE = NON_HDL
PARAMETER C_CLKOUT13_PHASE = 0, DT = INTEGER, RANGE = (0:359), TYPE = NON_HDL
PARAMETER C_CLKOUT13_GROUP = NONE, DT = STRING, VALUES = (NONE=NONE, PLL0=PLL0, PLL0_ADJUST=PLL0_ADJUST, PLL1=PLL1, PLL1_ADJUST=PLL1_ADJUST, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), TYPE = NON_HDL
PARAMETER C_CLKOUT13_BUF = TRUE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL
PARAMETER C_CLKOUT13_VARIABLE_PHASE = FALSE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ISVALID = ([xstrncmp C_FAMILY virtex6 ] || [xstrncmp C_FAMILY virtex6l ])
PARAMETER C_CLKOUT14_FREQ = 0, DT = INTEGER, TYPE = NON_HDL
PARAMETER C_CLKOUT14_PHASE = 0, DT = INTEGER, RANGE = (0:359), TYPE = NON_HDL
PARAMETER C_CLKOUT14_GROUP = NONE, DT = STRING, VALUES = (NONE=NONE, PLL0=PLL0, PLL0_ADJUST=PLL0_ADJUST, PLL1=PLL1, PLL1_ADJUST=PLL1_ADJUST, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), TYPE = NON_HDL
PARAMETER C_CLKOUT14_BUF = TRUE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL
PARAMETER C_CLKOUT14_VARIABLE_PHASE = FALSE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ISVALID = ([xstrncmp C_FAMILY virtex6 ] || [xstrncmp C_FAMILY virtex6l ])
PARAMETER C_CLKOUT15_FREQ = 0, DT = INTEGER, TYPE = NON_HDL
PARAMETER C_CLKOUT15_PHASE = 0, DT = INTEGER, RANGE = (0:359), TYPE = NON_HDL
PARAMETER C_CLKOUT15_GROUP = NONE, DT = STRING, VALUES = (NONE=NONE, PLL0=PLL0, PLL0_ADJUST=PLL0_ADJUST, PLL1=PLL1, PLL1_ADJUST=PLL1_ADJUST, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), TYPE = NON_HDL
PARAMETER C_CLKOUT15_BUF = TRUE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL
PARAMETER C_CLKOUT15_VARIABLE_PHASE = FALSE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ISVALID = ([xstrncmp C_FAMILY virtex6 ] || [xstrncmp C_FAMILY virtex6l ])
PARAMETER C_CLKFBIN_FREQ = 0, DT = INTEGER, TYPE = NON_HDL
PARAMETER C_CLKFBIN_DESKEW = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKOUT6=CLKOUT6, CLKOUT7=CLKOUT7, CLKOUT8=CLKOUT8, CLKOUT9=CLKOUT9, CLKOUT10=CLKOUT10, CLKOUT11=CLKOUT11, CLKOUT12=CLKOUT12, CLKOUT13=CLKOUT13, CLKOUT14=CLKOUT14, CLKOUT15=CLKOUT15), TYPE = NON_HDL, ISVALID = ([xstrncmp C_FAMILY virtex6 ] || [xstrncmp C_FAMILY virtex6l ])
PARAMETER C_CLKFBOUT_FREQ = 0, DT = INTEGER, TYPE = NON_HDL
PARAMETER C_CLKFBOUT_PHASE = 0, DT = INTEGER, RANGE = (0:0), TYPE = NON_HDL, ISVALID = ([xstrncmp C_FAMILY virtex6 ] || [xstrncmp C_FAMILY virtex6l ])
PARAMETER C_CLKFBOUT_GROUP = NONE, DT = STRING, VALUES = (NONE=NONE, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), TYPE = NON_HDL, ISVALID = ([xstrncmp C_FAMILY virtex6 ] || [xstrncmp C_FAMILY virtex6l ])
PARAMETER C_CLKFBOUT_BUF = TRUE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL
PARAMETER C_PSDONE_GROUP = NONE, DT = STRING, VALUES = (NONE=NONE, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3, MMCM0_FB=MMCM0_FB, MMCM1_FB=MMCM1_FB, MMCM2_FB=MMCM2_FB, MMCM3_FB=MMCM3_FB), TYPE = NON_HDL, ISVALID = ([xstrncmp C_FAMILY virtex6 ] || [xstrncmp C_FAMILY virtex6l ])
PARAMETER C_EXT_RESET_HIGH = 1, TYPE = NON_HDL
PARAMETER C_CLK_GEN = UPDATE, VALUES = (UPDATE=UPDATE, PASSED=PASSED, FAILED=FAILED), ASSIGNMENT = UPDATE

## Ports
PORT CLKIN = "", DIR = I, SIGIS = CLK
PORT CLKOUT0 = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN, CLK_FACTOR = 1.0 * C_CLKOUT0_FREQ / C_CLKIN_FREQ
PORT CLKOUT1 = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN, CLK_FACTOR = 1.0 * C_CLKOUT1_FREQ / C_CLKIN_FREQ, ISVALID = (C_CLKOUT1_FREQ > 0)
PORT CLKOUT2 = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN, CLK_FACTOR = 1.0 * C_CLKOUT2_FREQ / C_CLKIN_FREQ, ISVALID = (C_CLKOUT2_FREQ > 0)
PORT CLKOUT3 = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN, CLK_FACTOR = 1.0 * C_CLKOUT3_FREQ / C_CLKIN_FREQ, ISVALID = (C_CLKOUT3_FREQ > 0)
PORT CLKOUT4 = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN, CLK_FACTOR = 1.0 * C_CLKOUT4_FREQ / C_CLKIN_FREQ, ISVALID = (C_CLKOUT4_FREQ > 0)
PORT CLKOUT5 = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN, CLK_FACTOR = 1.0 * C_CLKOUT5_FREQ / C_CLKIN_FREQ, ISVALID = (C_CLKOUT5_FREQ > 0)
PORT CLKOUT6 = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN, CLK_FACTOR = 1.0 * C_CLKOUT6_FREQ / C_CLKIN_FREQ, ISVALID = (C_CLKOUT6_FREQ > 0)
PORT CLKOUT7 = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN, CLK_FACTOR = 1.0 * C_CLKOUT7_FREQ / C_CLKIN_FREQ, ISVALID = (C_CLKOUT7_FREQ > 0)
PORT CLKOUT8 = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN, CLK_FACTOR = 1.0 * C_CLKOUT8_FREQ / C_CLKIN_FREQ, ISVALID = (C_CLKOUT8_FREQ > 0)
PORT CLKOUT9 = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN, CLK_FACTOR = 1.0 * C_CLKOUT9_FREQ / C_CLKIN_FREQ, ISVALID = (C_CLKOUT9_FREQ > 0)
PORT CLKOUT10 = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN, CLK_FACTOR = 1.0 * C_CLKOUT10_FREQ / C_CLKIN_FREQ, ISVALID = (C_CLKOUT10_FREQ > 0)
PORT CLKOUT11 = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN, CLK_FACTOR = 1.0 * C_CLKOUT11_FREQ / C_CLKIN_FREQ, ISVALID = (C_CLKOUT11_FREQ > 0)
PORT CLKOUT12 = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN, CLK_FACTOR = 1.0 * C_CLKOUT12_FREQ / C_CLKIN_FREQ, ISVALID = (C_CLKOUT12_FREQ > 0)
PORT CLKOUT13 = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN, CLK_FACTOR = 1.0 * C_CLKOUT13_FREQ / C_CLKIN_FREQ, ISVALID = (C_CLKOUT13_FREQ > 0)
PORT CLKOUT14 = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN, CLK_FACTOR = 1.0 * C_CLKOUT14_FREQ / C_CLKIN_FREQ, ISVALID = (C_CLKOUT14_FREQ > 0)
PORT CLKOUT15 = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN, CLK_FACTOR = 1.0 * C_CLKOUT15_FREQ / C_CLKIN_FREQ, ISVALID = (C_CLKOUT15_FREQ > 0)
PORT CLKFBIN = "", DIR = I, SIGIS = CLK, ISVALID = (C_CLKFBIN_FREQ > 0)
PORT CLKFBOUT = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN, CLK_FACTOR = 1.0 * C_CLKFBOUT_FREQ / C_CLKIN_FREQ, ISVALID = (C_CLKFBOUT_FREQ > 0)
PORT PSCLK = "", DIR = I, SIGIS = CLK
PORT PSEN = "", DIR = I
PORT PSINCDEC = "", DIR = I
PORT PSDONE = "", DIR = O
PORT RST = "", DIR = I, SIGIS = RST
PORT LOCKED = "", DIR = O

END

FINISH_SINGLE_MPD

START_SINGLE_MPD mpmc_v6_00_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : mpmc
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN mpmc

## Peripheral Options
OPTION HDL = MIXED
OPTION IMP_NETLIST = TRUE
OPTION IPTYPE = PERIPHERAL
OPTION RUN_NGCBUILD = TRUE
OPTION USAGE_LEVEL = BASE_USER
OPTION IPLEVEL_DRC_PROC = check_iplevel_drcs
OPTION SYSLEVEL_DRC_PROC = check_syslevel_drcs
OPTION PLATGEN_SYSLEVEL_UPDATE_PROC = platgen_syslevel_update
OPTION CLK_FREQ_RATIOS = (MPMC_Clk0 / MPMC_Clk90=(1/1), MPMC_Clk0 / MPMC_Clk0_DIV2=(2/1), MPMC_Clk0 / MPMC_CTRL_Clk=([1:2]/1), MPMC_Clk0 / (FSL0_M_Clk, FSL1_M_Clk, FSL2_M_Clk, FSL3_M_Clk, FSL4_M_Clk, FSL5_M_Clk, FSL6_M_Clk, FSL7_M_Clk)=([1:2]/1), MPMC_Clk0 / (SPLB0_Clk, SPLB1_Clk, SPLB2_Clk, SPLB3_Clk, SPLB4_Clk, SPLB5_Clk, SPLB6_Clk, SPLB7_Clk)=([1:2]/1), MPMC_Clk0 / (SDMA0_Clk, SDMA1_Clk, SDMA2_Clk, SDMA3_Clk, SDMA4_Clk, SDMA5_Clk, SDMA6_Clk, SDMA7_Clk)=([1:2]/1), SDMA0_Clk / SDMA_CTRL0_Clk=([1:2]/1), SDMA1_Clk / SDMA_CTRL1_Clk=([1:2]/1), SDMA2_Clk / SDMA_CTRL2_Clk=([1:2]/1), SDMA3_Clk / SDMA_CTRL3_Clk=([1:2]/1), SDMA4_Clk / SDMA_CTRL4_Clk=([1:2]/1), SDMA5_Clk / SDMA_CTRL5_Clk=([1:2]/1), SDMA6_Clk / SDMA_CTRL6_Clk=([1:2]/1), SDMA7_Clk / SDMA_CTRL7_Clk=([1:2]/1))
OPTION DESC = Multi-Port Memory Controller(DDR/DDR2/SDRAM)
OPTION LONG_DESC = Multi-port memory controller.
OPTION IP_GROUP = Memory and Memory Controller:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=SUPERSEDED, spartan3=SUPERSEDED, spartan3an=SUPERSEDED, spartan3a=SUPERSEDED, spartan3e=SUPERSEDED, spartan3adsp=SUPERSEDED, virtex4lx=SUPERSEDED, virtex4sx=SUPERSEDED, virtex4fx=SUPERSEDED, virtex5lx=SUPERSEDED, virtex5sx=SUPERSEDED, virtex5fx=SUPERSEDED, aspartan3e=SUPERSEDED, aspartan3a=SUPERSEDED, aspartan3adsp=SUPERSEDED, qvirtex4lx=SUPERSEDED, qvirtex4sx=SUPERSEDED, qvirtex4fx=SUPERSEDED, qrvirtex4lx=SUPERSEDED, qrvirtex4sx=SUPERSEDED, qrvirtex4fx=SUPERSEDED, spartan6t=SUPERSEDED, spartan6=SUPERSEDED, spartan6l=SUPERSEDED, qspartan6t=SUPERSEDED, qspartan6=SUPERSEDED, aspartan6t=SUPERSEDED, aspartan6=SUPERSEDED, virtex6lx=SUPERSEDED, virtex6sx=SUPERSEDED, virtex6hx=SUPERSEDED, virtex6cx=SUPERSEDED, virtex6llx=SUPERSEDED, virtex6lsx=SUPERSEDED, qspartan6l=SUPERSEDED, qrvirtex5=SUPERSEDED, qvirtex6lx=SUPERSEDED, qvirtex6sx=SUPERSEDED, qvirtex6fx=SUPERSEDED, qvirtex6tx=SUPERSEDED)
OPTION STYLE = HDL

IO_INTERFACE IO_IF = memory_0, IO_TYPE = XIL_MEMORY_V1

## Bus Interfaces
BUS_INTERFACE BUS = XCL0, BUS_STD = XIL_MEMORY_CHANNEL, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 0 && C_PIM0_BASETYPE == 1 && !(C_USE_MCB_S6_PHY && C_PORT_CONFIG > 1))
BUS_INTERFACE BUS = XCL0_B, BUS_STD = XIL_MEMORY_CHANNEL, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 0 && C_PIM0_BASETYPE == 1 && C_XCL0_B_IN_USE && !(C_USE_MCB_S6_PHY && C_PORT_CONFIG > 1))
BUS_INTERFACE BUS = SPLB0, BUS_STD = PLBV46, BUS_TYPE = SLAVE, ISVALID = (C_NUM_PORTS > 0 && C_PIM0_BASETYPE == 2 && !(C_USE_MCB_S6_PHY && C_PORT_CONFIG == 4))
BUS_INTERFACE BUS = SDMA_CTRL0, BUS_STD = PLBV46, BUS_TYPE = SLAVE, ISVALID = (C_NUM_PORTS > 0 && C_PIM0_BASETYPE == 3 && !(C_USE_MCB_S6_PHY && C_PORT_CONFIG > 1))
BUS_INTERFACE BUS = SDMA_LL0, BUS_STD = XIL_LL_DMA, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 0 && C_PIM0_BASETYPE == 3 && !(C_USE_MCB_S6_PHY && C_PORT_CONFIG > 1))
BUS_INTERFACE BUS = MPMC_PIM0, BUS_STD = XIL_NPI, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 0 && C_PIM0_BASETYPE == 4 && !(C_USE_MCB_S6_PHY && C_PORT_CONFIG == 4))
BUS_INTERFACE BUS = PPC440MC0, BUS_STD = XIL_PPC440MC, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 0 && C_PIM0_BASETYPE == 5 && !C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = VFBC0, BUS_STD = XIL_VFBC, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 0 && C_PIM0_BASETYPE == 6 && !(C_USE_MCB_S6_PHY && C_PORT_CONFIG == 4))
BUS_INTERFACE BUS = MCB0, BUS_STD = XIL_MCB_PORT, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 0 && C_PIM0_BASETYPE == 7 && C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = XCL1, BUS_STD = XIL_MEMORY_CHANNEL, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 1 && !(C_USE_MCB_S6_PHY && C_PORT_CONFIG > 2))
BUS_INTERFACE BUS = XCL1_B, BUS_STD = XIL_MEMORY_CHANNEL, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 1 && C_XCL1_B_IN_USE && !(C_USE_MCB_S6_PHY && C_PORT_CONFIG > 2))
BUS_INTERFACE BUS = SPLB1, BUS_STD = PLBV46, BUS_TYPE = SLAVE, ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 2 && !(C_USE_MCB_S6_PHY && C_PORT_CONFIG == 4))
BUS_INTERFACE BUS = SDMA_CTRL1, BUS_STD = PLBV46, BUS_TYPE = SLAVE, ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 3 && !(C_USE_MCB_S6_PHY && C_PORT_CONFIG > 2))
BUS_INTERFACE BUS = SDMA_LL1, BUS_STD = XIL_LL_DMA, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 3 && !(C_USE_MCB_S6_PHY && C_PORT_CONFIG > 2))
BUS_INTERFACE BUS = MPMC_PIM1, BUS_STD = XIL_NPI, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 4 && !(C_USE_MCB_S6_PHY && C_PORT_CONFIG == 4))
BUS_INTERFACE BUS = PPC440MC1, BUS_STD = XIL_PPC440MC, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 5 && !C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = VFBC1, BUS_STD = XIL_VFBC, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 6 && !(C_USE_MCB_S6_PHY && C_PORT_CONFIG == 4))
BUS_INTERFACE BUS = MCB1, BUS_STD = XIL_MCB_PORT, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 7 && C_USE_MCB_S6_PHY && C_PORT_CONFIG < 4)
BUS_INTERFACE BUS = XCL2, BUS_STD = XIL_MEMORY_CHANNEL, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 1 && !(C_USE_MCB_S6_PHY && C_PORT_CONFIG > 2))
BUS_INTERFACE BUS = XCL2_B, BUS_STD = XIL_MEMORY_CHANNEL, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 1 && C_XCL2_B_IN_USE && !(C_USE_MCB_S6_PHY && C_PORT_CONFIG > 2))
BUS_INTERFACE BUS = SPLB2, BUS_STD = PLBV46, BUS_TYPE = SLAVE, ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 2 && !(C_USE_MCB_S6_PHY && C_PORT_CONFIG > 2))
BUS_INTERFACE BUS = SDMA_CTRL2, BUS_STD = PLBV46, BUS_TYPE = SLAVE, ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 3 && !(C_USE_MCB_S6_PHY && C_PORT_CONFIG > 2))
BUS_INTERFACE BUS = SDMA_LL2, BUS_STD = XIL_LL_DMA, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 3 && !(C_USE_MCB_S6_PHY && C_PORT_CONFIG > 2))
BUS_INTERFACE BUS = MPMC_PIM2, BUS_STD = XIL_NPI, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 4 && !(C_USE_MCB_S6_PHY && C_PORT_CONFIG > 2))
BUS_INTERFACE BUS = PPC440MC2, BUS_STD = XIL_PPC440MC, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 5 && !C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = VFBC2, BUS_STD = XIL_VFBC, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 6 && !(C_USE_MCB_S6_PHY && C_PORT_CONFIG > 2))
BUS_INTERFACE BUS = MCB2, BUS_STD = XIL_MCB_PORT, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 2 && (C_PIM2_BASETYPE == 7 || C_PIM2_BASETYPE == 8 || C_PIM2_BASETYPE == 9) && C_USE_MCB_S6_PHY && C_PORT_CONFIG < 3)
BUS_INTERFACE BUS = XCL3, BUS_STD = XIL_MEMORY_CHANNEL, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 1 && !(C_USE_MCB_S6_PHY && C_PORT_CONFIG > 1))
BUS_INTERFACE BUS = XCL3_B, BUS_STD = XIL_MEMORY_CHANNEL, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 1 && C_XCL3_B_IN_USE && !(C_USE_MCB_S6_PHY && C_PORT_CONFIG > 1))
BUS_INTERFACE BUS = SPLB3, BUS_STD = PLBV46, BUS_TYPE = SLAVE, ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 2 && !(C_USE_MCB_S6_PHY && C_PORT_CONFIG > 1))
BUS_INTERFACE BUS = SDMA_CTRL3, BUS_STD = PLBV46, BUS_TYPE = SLAVE, ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 3 && !(C_USE_MCB_S6_PHY && C_PORT_CONFIG > 1))
BUS_INTERFACE BUS = SDMA_LL3, BUS_STD = XIL_LL_DMA, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 3 && !(C_USE_MCB_S6_PHY && C_PORT_CONFIG > 1))
BUS_INTERFACE BUS = MPMC_PIM3, BUS_STD = XIL_NPI, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 4 && !(C_USE_MCB_S6_PHY && C_PORT_CONFIG > 1))
BUS_INTERFACE BUS = PPC440MC3, BUS_STD = XIL_PPC440MC, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 5 && !C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = VFBC3, BUS_STD = XIL_VFBC, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 6 && !(C_USE_MCB_S6_PHY && C_PORT_CONFIG > 1))
BUS_INTERFACE BUS = MCB3, BUS_STD = XIL_MCB_PORT, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 3 && (C_PIM3_BASETYPE == 7 || C_PIM3_BASETYPE == 8 || C_PIM3_BASETYPE == 9) && C_USE_MCB_S6_PHY && C_PORT_CONFIG < 2)
BUS_INTERFACE BUS = XCL4, BUS_STD = XIL_MEMORY_CHANNEL, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 1 && !C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = XCL4_B, BUS_STD = XIL_MEMORY_CHANNEL, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 1 && C_XCL4_B_IN_USE && !C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = SPLB4, BUS_STD = PLBV46, BUS_TYPE = SLAVE, ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 2 && !C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = SDMA_CTRL4, BUS_STD = PLBV46, BUS_TYPE = SLAVE, ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 3 && !C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = SDMA_LL4, BUS_STD = XIL_LL_DMA, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 3 && !C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = MPMC_PIM4, BUS_STD = XIL_NPI, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 4 && !C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = PPC440MC4, BUS_STD = XIL_PPC440MC, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 5 && !C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = VFBC4, BUS_STD = XIL_VFBC, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 6 && !C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = MCB4, BUS_STD = XIL_MCB_PORT, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 4 && (C_PIM4_BASETYPE == 8 || C_PIM4_BASETYPE == 9) && C_USE_MCB_S6_PHY && C_PORT_CONFIG == 0)
BUS_INTERFACE BUS = XCL5, BUS_STD = XIL_MEMORY_CHANNEL, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 1 && !C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = XCL5_B, BUS_STD = XIL_MEMORY_CHANNEL, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 1 && C_XCL5_B_IN_USE && !C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = SPLB5, BUS_STD = PLBV46, BUS_TYPE = SLAVE, ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 2 && !C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = SDMA_CTRL5, BUS_STD = PLBV46, BUS_TYPE = SLAVE, ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 3 && !C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = SDMA_LL5, BUS_STD = XIL_LL_DMA, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 3 && !C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = MPMC_PIM5, BUS_STD = XIL_NPI, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 4 && !C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = PPC440MC5, BUS_STD = XIL_PPC440MC, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 5 && !C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = VFBC5, BUS_STD = XIL_VFBC, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 6 && !C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = MCB5, BUS_STD = XIL_MCB_PORT, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 5 && (C_PIM5_BASETYPE == 8 || C_PIM5_BASETYPE == 9) && C_USE_MCB_S6_PHY && C_PORT_CONFIG == 0)
BUS_INTERFACE BUS = XCL6, BUS_STD = XIL_MEMORY_CHANNEL, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 1 && !C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = XCL6_B, BUS_STD = XIL_MEMORY_CHANNEL, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 1 && C_XCL6_B_IN_USE && !C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = SPLB6, BUS_STD = PLBV46, BUS_TYPE = SLAVE, ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 2 && !C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = SDMA_CTRL6, BUS_STD = PLBV46, BUS_TYPE = SLAVE, ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 3 && !C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = SDMA_LL6, BUS_STD = XIL_LL_DMA, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 3 && !C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = MPMC_PIM6, BUS_STD = XIL_NPI, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 4 && !C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = PPC440MC6, BUS_STD = XIL_PPC440MC, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 5 && !C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = VFBC6, BUS_STD = XIL_VFBC, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 6 && !C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = MCB6, BUS_STD = XIL_MCB_PORT, BUS_TYPE = TARGET, ISVALID = (0)
BUS_INTERFACE BUS = XCL7, BUS_STD = XIL_MEMORY_CHANNEL, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 1 && !C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = XCL7_B, BUS_STD = XIL_MEMORY_CHANNEL, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 1 && C_XCL7_B_IN_USE && !C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = SPLB7, BUS_STD = PLBV46, BUS_TYPE = SLAVE, ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 2 && !C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = SDMA_CTRL7, BUS_STD = PLBV46, BUS_TYPE = SLAVE, ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 3 && !C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = SDMA_LL7, BUS_STD = XIL_LL_DMA, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 3 && !C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = MPMC_PIM7, BUS_STD = XIL_NPI, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 4 && !C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = PPC440MC7, BUS_STD = XIL_PPC440MC, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 5 && !C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = VFBC7, BUS_STD = XIL_VFBC, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 6 && !C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = MCB7, BUS_STD = XIL_MCB_PORT, BUS_TYPE = TARGET, ISVALID = (0)
BUS_INTERFACE BUS = MPMC_CTRL, BUS_STD = PLBV46, BUS_TYPE = SLAVE, ISVALID = (C_INCLUDE_ECC_SUPPORT || C_USE_STATIC_PHY || C_DEBUG_REG_ENABLE || C_PM_ENABLE || [xstrncmp C_MEM_TYPE  SDRAM ])

## Generics for VHDL or Parameters for Verilog
PARAMETER C_FAMILY = virtex5, DT = STRING
PARAMETER C_BASEFAMILY = virtex5, DT = STRING, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_basefamily
PARAMETER C_SUBFAMILY = fx, DT = STRING, TYPE = NON_HDL
PARAMETER C_DEVICE = 5vlx50t, DT = STRING, TYPE = NON_HDL
PARAMETER C_PACKAGE = ff1136, DT = STRING, TYPE = NON_HDL
PARAMETER C_SPEEDGRADE = -1, DT = STRING, TYPE = NON_HDL
PARAMETER C_SPEEDGRADE_INT = 1, DT = INTEGER, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_speedgrade
PARAMETER C_NUM_PORTS = 1, DT = INTEGER, RANGE = (1:8), IPLEVEL_DRC_PROC = iplevel_drc_num_ports
PARAMETER C_PORT_CONFIG = 1, DT = INTEGER, RANGE = (0:4), ASSIGNMENT = REQUIRE, VALUES = (0=B32 B32 U32 U32 U32 U32, 1=B32 B32 B32 B32, 2=B64 B32 B32, 3=B64 B64, 4=B128), ISVALID = (C_USE_MCB_S6_PHY), IO_IS = C_PORT_CONFIG
PARAMETER C_ALL_PIMS_SHARE_ADDRESSES = 1, DT = INTEGER, RANGE = (0,1)
PARAMETER C_MPMC_BASEADDR = 0xFFFFFFFF, BUS = XCL0:XCL0_B:SPLB0:SDMA_LL0:PPC440MC0:VFBC0:XCL1:XCL1_B:SPLB1:SDMA_LL1:PPC440MC1:VFBC1:XCL2:XCL2_B:SPLB2:SDMA_LL2:PPC440MC2:VFBC2:XCL3:XCL3_B:SPLB3:SDMA_LL3:PPC440MC3:VFBC3:XCL4:XCL4_B:SPLB4:SDMA_LL4:PPC440MC4:VFBC4:XCL5:XCL5_B:SPLB5:SDMA_LL5:PPC440MC5:VFBC5:XCL6:XCL6_B:SPLB6:SDMA_LL6:PPC440MC6:VFBC6:XCL7:XCL7_B:SPLB7:SDMA_LL7:PPC440MC7:VFBC7, ADDRESS = BASE, PAIR = C_MPMC_HIGHADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = (C_ALL_PIMS_SHARE_ADDRESSES), IO_IF = memory_0, IO_IS = C_BASEADDR, ASSIGNMENT = REQUIRE
PARAMETER C_MPMC_HIGHADDR = 0x00000000, BUS = XCL0:XCL0_B:SPLB0:SDMA_LL0:PPC440MC0:VFBC0:XCL1:XCL1_B:SPLB1:SDMA_LL1:PPC440MC1:VFBC1:XCL2:XCL2_B:SPLB2:SDMA_LL2:PPC440MC2:VFBC2:XCL3:XCL3_B:SPLB3:SDMA_LL3:PPC440MC3:VFBC3:XCL4:XCL4_B:SPLB4:SDMA_LL4:PPC440MC4:VFBC4:XCL5:XCL5_B:SPLB5:SDMA_LL5:PPC440MC5:VFBC5:XCL6:XCL6_B:SPLB6:SDMA_LL6:PPC440MC6:VFBC6:XCL7:XCL7_B:SPLB7:SDMA_LL7:PPC440MC7:VFBC7, ADDRESS = HIGH, PAIR = C_MPMC_BASEADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = (C_ALL_PIMS_SHARE_ADDRESSES), IO_IF = memory_0, IO_IS = C_HIGHADDR, ASSIGNMENT = REQUIRE
PARAMETER C_MPMC_SW_BASEADDR = 0xFFFFFFFF, DT = STD_LOGIC_VECTOR, ISVALID = (C_ALL_PIMS_SHARE_ADDRESSES == 0), TYPE = NON_HDL
PARAMETER C_MPMC_SW_HIGHADDR = 0x00000000, DT = STD_LOGIC_VECTOR, ISVALID = (C_ALL_PIMS_SHARE_ADDRESSES == 0), TYPE = NON_HDL
PARAMETER C_SDMA_CTRL_BASEADDR = 0xFFFFFFFF, DT = STD_LOGIC_VECTOR, BUS = SDMA_CTRL0:SDMA_CTRL1:SDMA_CTRL2:SDMA_CTRL3:SDMA_CTRL4:SDMA_CTRL5:SDMA_CTRL6:SDMA_CTRL7, ADDRESS = BASE, PAIR = C_SDMA_CTRL_HIGHADDR, ADDR_TYPE = REGISTER, ISVALID = ((C_ALL_PIMS_SHARE_ADDRESSES) && ((C_PIM0_BASETYPE == 3) || (C_PIM1_BASETYPE == 3) || (C_PIM2_BASETYPE == 3) || (C_PIM3_BASETYPE == 3) || (C_PIM4_BASETYPE == 3) || (C_PIM5_BASETYPE == 3) || (C_PIM6_BASETYPE == 3) || (C_PIM7_BASETYPE == 3))), ASSIGNMENT = REQUIRE
PARAMETER C_SDMA_CTRL_HIGHADDR = 0x00000000, DT = STD_LOGIC_VECTOR, BUS = SDMA_CTRL0:SDMA_CTRL1:SDMA_CTRL2:SDMA_CTRL3:SDMA_CTRL4:SDMA_CTRL5:SDMA_CTRL6:SDMA_CTRL7, ADDRESS = HIGH, PAIR = C_SDMA_CTRL_BASEADDR, ADDR_TYPE = REGISTER, ISVALID = ((C_ALL_PIMS_SHARE_ADDRESSES) && ((C_PIM0_BASETYPE == 3) || (C_PIM1_BASETYPE == 3) || (C_PIM2_BASETYPE == 3) || (C_PIM3_BASETYPE == 3) || (C_PIM4_BASETYPE == 3) || (C_PIM5_BASETYPE == 3) || (C_PIM6_BASETYPE == 3) || (C_PIM7_BASETYPE == 3))), ASSIGNMENT = REQUIRE
PARAMETER C_MPMC_CTRL_BASEADDR = 0xFFFFFFFF, DT = STD_LOGIC_VECTOR, BUS = MPMC_CTRL, ADDRESS = BASE, PAIR = C_MPMC_CTRL_HIGHADDR, ADDR_TYPE = REGISTER, ISVALID = (C_INCLUDE_ECC_SUPPORT || C_USE_STATIC_PHY || C_DEBUG_REG_ENABLE || C_PM_ENABLE), ASSIGNMENT = REQUIRE
PARAMETER C_MPMC_CTRL_HIGHADDR = 0x00000000, DT = STD_LOGIC_VECTOR, BUS = MPMC_CTRL, ADDRESS = HIGH, PAIR = C_MPMC_CTRL_BASEADDR, ADDR_TYPE = REGISTER, ISVALID = (C_INCLUDE_ECC_SUPPORT || C_USE_STATIC_PHY || C_DEBUG_REG_ENABLE || C_PM_ENABLE), ASSIGNMENT = REQUIRE
PARAMETER C_MPMC_CTRL_AWIDTH = 32, DT = INTEGER, BUS = MPMC_CTRL, ASSIGNMENT = CONSTANT, ISVALID = (C_INCLUDE_ECC_SUPPORT || C_USE_STATIC_PHY || C_DEBUG_REG_ENABLE || C_PM_ENABLE)
PARAMETER C_MPMC_CTRL_DWIDTH = 64, DT = INTEGER, BUS = MPMC_CTRL, RANGE = (32,64,128), ISVALID = (C_INCLUDE_ECC_SUPPORT || C_USE_STATIC_PHY || C_DEBUG_REG_ENABLE || C_PM_ENABLE)
PARAMETER C_MPMC_CTRL_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = MPMC_CTRL, ASSIGNMENT = CONSTANT, ISVALID = (C_INCLUDE_ECC_SUPPORT || C_USE_STATIC_PHY || C_DEBUG_REG_ENABLE || C_PM_ENABLE)
PARAMETER C_MPMC_CTRL_NUM_MASTERS = 1, DT = INTEGER, BUS = MPMC_CTRL, RANGE = (0:16), ISVALID = (C_INCLUDE_ECC_SUPPORT || C_USE_STATIC_PHY || C_DEBUG_REG_ENABLE || C_PM_ENABLE)
PARAMETER C_MPMC_CTRL_MID_WIDTH = 1, DT = INTEGER, BUS = MPMC_CTRL, RANGE = (0:4), ISVALID = (C_INCLUDE_ECC_SUPPORT || C_USE_STATIC_PHY || C_DEBUG_REG_ENABLE || C_PM_ENABLE)
PARAMETER C_MPMC_CTRL_P2P = 1, DT = INTEGER, BUS = MPMC_CTRL, RANGE = (0,1), ISVALID = (C_INCLUDE_ECC_SUPPORT || C_USE_STATIC_PHY || C_DEBUG_REG_ENABLE || C_PM_ENABLE)
PARAMETER C_MPMC_CTRL_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = MPMC_CTRL, ASSIGNMENT = CONSTANT, ISVALID = (C_INCLUDE_ECC_SUPPORT || C_USE_STATIC_PHY || C_DEBUG_REG_ENABLE || C_PM_ENABLE)
PARAMETER C_MPMC_CTRL_SMALLEST_MASTER = 32, DT = INTEGER, BUS = MPMC_CTRL, RANGE = (32,64,128), ISVALID = (C_INCLUDE_ECC_SUPPORT || C_USE_STATIC_PHY || C_DEBUG_REG_ENABLE || C_PM_ENABLE)
PARAMETER C_NUM_IDELAYCTRL = 1, DT = INTEGER, RANGE = (0:16), IO_IF = memory_0, IO_IS = C_NUM_IDELAYCTRL, ASSIGNMENT = OPTIONAL_UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_num_idelayctrl, ISVALID = (C_USE_MIG_V4_PHY | C_USE_MIG_V5_PHY)
PARAMETER C_IDELAYCTRL_LOC = NOT_SET, DT = STRING, TYPE = NON_HDL, IO_IF = memory_0, IO_IS = C_IDELAYCTRL_LOC, ASSIGNMENT = OPTIONAL_UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_idelayctrl_loc, ISVALID = (C_USE_MIG_V4_PHY | C_USE_MIG_V5_PHY)
PARAMETER C_IODELAY_GRP = NOT_SET, DT = STRING, ASSIGNMENT = OPTIONAL_UPDATE, IO_IF = memory_0, IO_IS = C_IODELAY_GRP, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_iodelay_grp, ISVALID = (C_USE_MIG_V6_PHY)
PARAMETER C_MCB_LOC = NOT_SET, DT = STRING, TYPE = NON_HDL, VALUES = (NOT_SET=NOT SET, MEMC1=MEMC1, MEMC2=MEMC2, MEMC3=MEMC3, MEMC4=MEMC4), IO_IF = memory_0, IO_IS = C_MCB_LOC, ASSIGNMENT = REQUIRE, ISVALID = (C_USE_MCB_S6_PHY)
PARAMETER C_MMCM_EXT_LOC = NOT_SET, DT = STRING, TYPE = NON_HDL, IO_IS = C_MMCM_EXT_LOC, ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mmcm_loc, ISVALID = (C_USE_MIG_V6_PHY)
PARAMETER C_MMCM_INT_LOC = NOT_SET, DT = STRING, TYPE = NON_HDL, IO_IS = C_MMCM_INT_LOC, ISVALID = (0)
PARAMETER C_MAX_REQ_ALLOWED = 1, DT = INTEGER, ASSIGNMENT = CONSTANT
PARAMETER C_ARB_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (!C_USE_MCB_S6_PHY)
PARAMETER C_WR_DATAPATH_TML_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (!C_USE_MCB_S6_PHY)
PARAMETER C_RD_DATAPATH_TML_MAX_FANOUT = 0, DT = INTEGER, RANGE = (0,1,2,4,8), ISVALID = (!C_USE_MCB_S6_PHY)
PARAMETER C_ARB_USE_DEFAULT = 0, DT = INTEGER, ASSIGNMENT = CONSTANT
PARAMETER C_ARB0_ALGO = ROUND_ROBIN, DT = STRING, VALUES = (ROUND_ROBIN=Round Robin, FIXED=Fixed, CUSTOM=Custom)
PARAMETER C_ARB0_NUM_SLOTS = 8, DT = INTEGER, RANGE = (1:16), ISVALID = ([xstrncmp C_ARB0_ALGO  CUSTOM ]), IPLEVEL_DRC_PROC = iplevel_drc_arb0_num_slots
PARAMETER C_ARB0_SLOT0 = 01234567, DT = STRING, ISVALID = (C_ARB0_NUM_SLOTS > 0  && [xstrncmp C_ARB0_ALGO  CUSTOM ]), TYPE = NON_HDL
PARAMETER C_ARB0_SLOT1 = 12345670, DT = STRING, ISVALID = (C_ARB0_NUM_SLOTS > 1  && [xstrncmp C_ARB0_ALGO  CUSTOM ]), TYPE = NON_HDL
PARAMETER C_ARB0_SLOT2 = 23456701, DT = STRING, ISVALID = (C_ARB0_NUM_SLOTS > 2  && [xstrncmp C_ARB0_ALGO  CUSTOM ]), TYPE = NON_HDL
PARAMETER C_ARB0_SLOT3 = 34567012, DT = STRING, ISVALID = (C_ARB0_NUM_SLOTS > 3  && [xstrncmp C_ARB0_ALGO  CUSTOM ]), TYPE = NON_HDL
PARAMETER C_ARB0_SLOT4 = 45670123, DT = STRING, ISVALID = (C_ARB0_NUM_SLOTS > 4  && [xstrncmp C_ARB0_ALGO  CUSTOM ]), TYPE = NON_HDL
PARAMETER C_ARB0_SLOT5 = 56701234, DT = STRING, ISVALID = (C_ARB0_NUM_SLOTS > 5  && [xstrncmp C_ARB0_ALGO  CUSTOM ]), TYPE = NON_HDL
PARAMETER C_ARB0_SLOT6 = 67012345, DT = STRING, ISVALID = (C_ARB0_NUM_SLOTS > 6  && [xstrncmp C_ARB0_ALGO  CUSTOM ]), TYPE = NON_HDL
PARAMETER C_ARB0_SLOT7 = 70123456, DT = STRING, ISVALID = (C_ARB0_NUM_SLOTS > 7  && [xstrncmp C_ARB0_ALGO  CUSTOM ]), TYPE = NON_HDL
PARAMETER C_ARB0_SLOT8 = 01234567, DT = STRING, ISVALID = (C_ARB0_NUM_SLOTS > 8  && [xstrncmp C_ARB0_ALGO  CUSTOM ]), TYPE = NON_HDL
PARAMETER C_ARB0_SLOT9 = 12345670, DT = STRING, ISVALID = (C_ARB0_NUM_SLOTS > 9  && [xstrncmp C_ARB0_ALGO  CUSTOM ]), TYPE = NON_HDL
PARAMETER C_ARB0_SLOT10 = 23456701, DT = STRING, ISVALID = (C_ARB0_NUM_SLOTS > 10 && [xstrncmp C_ARB0_ALGO  CUSTOM ]), TYPE = NON_HDL
PARAMETER C_ARB0_SLOT11 = 34567012, DT = STRING, ISVALID = (C_ARB0_NUM_SLOTS > 11 && [xstrncmp C_ARB0_ALGO  CUSTOM ]), TYPE = NON_HDL
PARAMETER C_ARB0_SLOT12 = 45670123, DT = STRING, ISVALID = (C_ARB0_NUM_SLOTS > 12 && [xstrncmp C_ARB0_ALGO  CUSTOM ]), TYPE = NON_HDL
PARAMETER C_ARB0_SLOT13 = 56701234, DT = STRING, ISVALID = (C_ARB0_NUM_SLOTS > 13 && [xstrncmp C_ARB0_ALGO  CUSTOM ]), TYPE = NON_HDL
PARAMETER C_ARB0_SLOT14 = 67012345, DT = STRING, ISVALID = (C_ARB0_NUM_SLOTS > 14 && [xstrncmp C_ARB0_ALGO  CUSTOM ]), TYPE = NON_HDL
PARAMETER C_ARB0_SLOT15 = 70123456, DT = STRING, ISVALID = (C_ARB0_NUM_SLOTS > 15 && [xstrncmp C_ARB0_ALGO  CUSTOM ]), TYPE = NON_HDL
PARAMETER C_PM_ENABLE = 0, DT = INTEGER, RANGE = (0,1)
PARAMETER C_PM_DC_WIDTH = 48, DT = INTEGER, RANGE = (1:64), ISVALID = (C_PM_ENABLE)
PARAMETER C_PM_GC_CNTR = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PM_ENABLE)
PARAMETER C_PM_GC_WIDTH = 48, DT = INTEGER, RANGE = (1:64), ISVALID = (C_PM_ENABLE)
PARAMETER C_PM_SHIFT_CNT_BY = 1, DT = INTEGER, RANGE = (0:3), ISVALID = (C_PM_ENABLE)
PARAMETER C_SKIP_SIM_INIT_DELAY = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (!C_USE_MCB_S6_PHY)
PARAMETER C_USE_MIG_S3_PHY = 0, DT = INTEGER, RANGE = (0,1), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_phy, ASSIGNMENT = UPDATE
PARAMETER C_USE_MIG_V4_PHY = 0, DT = INTEGER, RANGE = (0,1), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_phy, ASSIGNMENT = UPDATE
PARAMETER C_USE_MIG_V5_PHY = 0, DT = INTEGER, RANGE = (0,1), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_phy, ASSIGNMENT = UPDATE
PARAMETER C_USE_MIG_V6_PHY = 0, DT = INTEGER, RANGE = (0,1), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_phy, ASSIGNMENT = UPDATE
PARAMETER C_USE_MCB_S6_PHY = 0, DT = INTEGER, RANGE = (0,1), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_phy, ASSIGNMENT = UPDATE
PARAMETER C_USE_STATIC_PHY = 0, DT = INTEGER, RANGE = (0,1), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_phy, ASSIGNMENT = OPTIONAL_UPDATE, IO_IF = memory_0, IO_IS = C_USE_STATIC_PHY, ISVALID = (![xstrncmp C_BASEFAMILY  spartan6 ] && ![xstrncmp C_BASEFAMILY  virtex6 ])
PARAMETER C_STATIC_PHY_RDDATA_CLK_SEL = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_USE_STATIC_PHY)
PARAMETER C_STATIC_PHY_RDDATA_SWAP_RISE = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_USE_STATIC_PHY && ![xstrncmp C_MEM_TYPE  SDRAM ])
PARAMETER C_STATIC_PHY_RDEN_DELAY = 5, DT = INTEGER, RANGE = (0:15), ISVALID = (C_USE_STATIC_PHY), IO_IF = memory_0, IO_IS = C_STATIC_PHY_RDEN_DELAY
PARAMETER C_DEBUG_REG_ENABLE = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_USE_MIG_S3_PHY || C_USE_MIG_V4_PHY || C_USE_MIG_V5_PHY)
PARAMETER C_SPECIAL_BOARD = NONE, DT = STRING, VALUES = (NONE=NONE, S3E_STKIT=S3E_STKIT, S3E_1600E=S3E_1600E, S3A_STKIT=S3A_STKIT), IO_IF = memory_0, IO_IS = C_SPECIAL_BOARD, ISVALID = (C_USE_MIG_S3_PHY)
PARAMETER C_USE_MIG_FLOW = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_USE_MIG_S3_PHY || C_USE_MIG_V4_PHY || C_USE_MIG_V5_PHY || C_USE_MIG_V6_PHY), TYPE = NON_HDL, SYSLEVEL_DRC_PROC = syslevel_drc_mig_flow
PARAMETER C_MEM_ADDR_ORDER = BANK_ROW_COLUMN, DT = STRING, VALUES = (BANK_ROW_COLUMN=BANK_ROW_COLUMN, ROW_BANK_COLUMN=ROW_BANK_COLUMN), ISVALID = (C_USE_MCB_S6_PHY), IO_IS = C_MEM_ADDR_ORDER
PARAMETER C_MEM_CALIBRATION_MODE = 1, DT = INTEGER, RANGE = (0:1), VALUES = (1=CALIBRATION, 0=NO CALIBRATION), ISVALID = (C_USE_MCB_S6_PHY), IO_IS = C_MEM_CALIBRATION_MODE
PARAMETER C_MEM_CALIBRATION_DELAY = HALF, DT = STRING, VALUES = (QUARTER=QUARTER, FULL=FULL, HALF=HALF, THREEQUARTER=THREEQUARTER), ISVALID = (C_USE_MCB_S6_PHY), IO_IS = C_MEM_CALIBRATION_DELAY
PARAMETER C_MEM_CALIBRATION_SOFT_IP = FALSE, DT = STRING, VALUES = (FALSE=FALSE, TRUE=TRUE), ISVALID = (C_USE_MCB_S6_PHY), IO_IS = C_MEM_CALIBRATION_SOFT_IP
PARAMETER C_MEM_CALIBRATION_BYPASS = NO, DT = STRING, VALUES = (YES=YES, NO=NO), ISVALID = (C_USE_MCB_S6_PHY), IO_IS = C_MEM_CALIBRATION_BYPASS
PARAMETER C_MPMC_MCB_DRP_CLK_PRESENT = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_USE_MCB_S6_PHY), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mpmc_mcb_drp_clk_present
PARAMETER C_MEM_SKIP_IN_TERM_CAL = 1, DT = INTEGER, RANGE = (0:1), ISVALID = (C_USE_MCB_S6_PHY && [xstrncmp C_MEM_CALIBRATION_SOFT_IP  TRUE ] && ![xstrncmp C_MEM_TYPE  LPDDR ]), IO_IS = C_MEM_SKIP_IN_TERM_CAL
PARAMETER C_MEM_SKIP_DYNAMIC_CAL = 1, DT = INTEGER, RANGE = (0:1), ISVALID = (C_USE_MCB_S6_PHY && [xstrncmp C_MEM_CALIBRATION_SOFT_IP  TRUE ]), IO_IS = C_MEM_SKIP_DYNAMIC_CAL
PARAMETER C_MEM_SKIP_DYN_IN_TERM = 1, DT = INTEGER, RANGE = (0:1), ISVALID = (C_USE_MCB_S6_PHY && [xstrncmp C_MEM_CALIBRATION_SOFT_IP  TRUE ] && ![xstrncmp C_MEM_TYPE  LPDDR ]), IO_IS = C_MEM_SKIP_DYN_IN_TERM
PARAMETER C_MEM_INCDEC_THRESHOLD = 0x02, DT = INTEGER, RANGE = (0:255), ISVALID = (C_USE_MCB_S6_PHY), IO_IS = C_MEM_INCDEC_THRESHOLD
PARAMETER C_MEM_CHECK_MAX_INDELAY = 0, DT = INTEGER, RANGE = (0:1), ISVALID = (C_USE_MCB_S6_PHY), IO_IS = C_MEM_CHECK_MAX_INDELAY
PARAMETER C_MEM_CHECK_MAX_TAP_REG = 0, DT = INTEGER, RANGE = (0:1), ISVALID = (C_USE_MCB_S6_PHY), IO_IS = C_MEM_CHECK_MAX_TAP_REG
PARAMETER C_MEM_TZQINIT_MAXCNT = 512, DT = INTEGER, ISVALID = (C_USE_MCB_S6_PHY), IO_IS = C_MEM_TZQINIT_MAXCNT
PARAMETER C_MPMC_CLK_MEM_2X_PERIOD_PS = 1250, DT = INTEGER, RANGE = (1250:12500), ASSIGNMENT = OPTIONAL_UPDATE, CLK_PORT = MPMC_Clk_Mem_2x, CLK_UNIT = PS, ISVALID = (C_USE_MCB_S6_PHY), IO_IS = C_MPMC_CLK_MEM_2X_PERIOD_PS
PARAMETER C_MCB_USE_EXTERNAL_BUFPLL = 0, DT = INTEGER, RANGE = (0:1), ISVALID = (C_USE_MCB_S6_PHY), IO_IS = C_MCB_USE_EXTERNAL_BUFPLL
PARAMETER C_MCB_LDQSP_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = (C_USE_MCB_S6_PHY), IO_IS = C_MCB_LDQSP_TAP_DELAY_VAL
PARAMETER C_MCB_UDQSP_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = (C_USE_MCB_S6_PHY), IO_IS = C_MCB_UDQSP_TAP_DELAY_VAL
PARAMETER C_MCB_LDQSN_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = (C_USE_MCB_S6_PHY), IO_IS = C_MCB_LDQSN_TAP_DELAY_VAL
PARAMETER C_MCB_UDQSN_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = (C_USE_MCB_S6_PHY), IO_IS = C_MCB_UDQSN_TAP_DELAY_VAL
PARAMETER C_MCB_DQ0_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = (C_USE_MCB_S6_PHY), IO_IS = C_MCB_DQ0_TAP_DELAY_VAL
PARAMETER C_MCB_DQ1_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = (C_USE_MCB_S6_PHY), IO_IS = C_MCB_DQ1_TAP_DELAY_VAL
PARAMETER C_MCB_DQ2_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = (C_USE_MCB_S6_PHY), IO_IS = C_MCB_DQ2_TAP_DELAY_VAL
PARAMETER C_MCB_DQ3_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = (C_USE_MCB_S6_PHY), IO_IS = C_MCB_DQ3_TAP_DELAY_VAL
PARAMETER C_MCB_DQ4_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = (C_USE_MCB_S6_PHY), IO_IS = C_MCB_DQ4_TAP_DELAY_VAL
PARAMETER C_MCB_DQ5_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = (C_USE_MCB_S6_PHY), IO_IS = C_MCB_DQ5_TAP_DELAY_VAL
PARAMETER C_MCB_DQ6_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = (C_USE_MCB_S6_PHY), IO_IS = C_MCB_DQ6_TAP_DELAY_VAL
PARAMETER C_MCB_DQ7_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = (C_USE_MCB_S6_PHY), IO_IS = C_MCB_DQ7_TAP_DELAY_VAL
PARAMETER C_MCB_DQ8_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = (C_USE_MCB_S6_PHY), IO_IS = C_MCB_DQ8_TAP_DELAY_VAL
PARAMETER C_MCB_DQ9_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = (C_USE_MCB_S6_PHY), IO_IS = C_MCB_DQ9_TAP_DELAY_VAL
PARAMETER C_MCB_DQ10_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = (C_USE_MCB_S6_PHY), IO_IS = C_MCB_DQ10_TAP_DELAY_VAL
PARAMETER C_MCB_DQ11_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = (C_USE_MCB_S6_PHY), IO_IS = C_MCB_DQ11_TAP_DELAY_VAL
PARAMETER C_MCB_DQ12_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = (C_USE_MCB_S6_PHY), IO_IS = C_MCB_DQ12_TAP_DELAY_VAL
PARAMETER C_MCB_DQ13_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = (C_USE_MCB_S6_PHY), IO_IS = C_MCB_DQ13_TAP_DELAY_VAL
PARAMETER C_MCB_DQ14_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = (C_USE_MCB_S6_PHY), IO_IS = C_MCB_DQ14_TAP_DELAY_VAL
PARAMETER C_MCB_DQ15_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = (C_USE_MCB_S6_PHY), IO_IS = C_MCB_DQ15_TAP_DELAY_VAL
PARAMETER C_MEM_TYPE = DDR2, DT = STRING, VALUES = (DDR3=DDR3, DDR2=DDR2, DDR=DDR, LPDDR=LPDDR, SDRAM=SDRAM), IPLEVEL_DRC_PROC = iplevel_drc_mem_type, IO_IF = memory_0, IO_IS = C_MEM_TYPE
PARAMETER C_MEM_PARTNO = NONE, DT = STRING, TYPE = NON_HDL, IO_IF = memory_0, IO_IS = C_MEM_PARTNO, ASSIGNMENT = REQUIRE, IPLEVEL_DRC_PROC = iplevel_drc_partno
PARAMETER C_MEM_PART_DATA_DEPTH = 16, DT = INTEGER, RANGE = (1,2,4,8,16,32,64,128,256,512,1024), ASSIGNMENT = REQUIRE, TYPE = NON_HDL, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ]), IO_IF = memory_0, IO_IS = C_MEM_PART_DATA_DEPTH
PARAMETER C_MEM_PART_DATA_WIDTH = 8, DT = INTEGER, RANGE = (4,8,16,32,64), ASSIGNMENT = REQUIRE, TYPE = NON_HDL, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ]), IO_IF = memory_0, IO_IS = C_MEM_PART_DATA_WIDTH, IPLEVEL_DRC_PROC = iplevel_drc_mem_data_width
PARAMETER C_MEM_PART_NUM_BANK_BITS = 2, DT = INTEGER, RANGE = (1:4), ASSIGNMENT = REQUIRE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ]), IO_IF = memory_0, IO_IS = C_MEM_PART_NUM_BANK_BITS
PARAMETER C_MEM_PART_NUM_ROW_BITS = 13, DT = INTEGER, RANGE = (1:20), ASSIGNMENT = REQUIRE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ]), IO_IF = memory_0, IO_IS = C_MEM_PART_NUM_ROW_BITS
PARAMETER C_MEM_PART_NUM_COL_BITS = 9, DT = INTEGER, RANGE = (1:20), ASSIGNMENT = REQUIRE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ]), IO_IF = memory_0, IO_IS = C_MEM_PART_NUM_COL_BITS
PARAMETER C_MEM_PART_TRAS = 0, DT = INTEGER, ASSIGNMENT = REQUIRE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ]), IO_IF = memory_0, IO_IS = C_MEM_PART_TRAS
PARAMETER C_MEM_PART_TRASMAX = 0, DT = INTEGER, ASSIGNMENT = REQUIRE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ]), IO_IF = memory_0, IO_IS = C_MEM_PART_TRASMAX, TYPE = NON_HDL
PARAMETER C_MEM_PART_TRC = 0, DT = INTEGER, ASSIGNMENT = REQUIRE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ]), IO_IF = memory_0, IO_IS = C_MEM_PART_TRC, TYPE = NON_HDL
PARAMETER C_MEM_PART_TRCD = 0, DT = INTEGER, ASSIGNMENT = REQUIRE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ]), IO_IF = memory_0, IO_IS = C_MEM_PART_TRCD
PARAMETER C_MEM_PART_TDQSS = 1, DT = INTEGER, RANGE = (1), ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ] && [xstrncmp C_MEM_TYPE  DDR ]), IO_IF = memory_0, IO_IS = C_MEM_PART_TDQSS, TYPE = NON_HDL
PARAMETER C_MEM_PART_TWR = 0, DT = INTEGER, ASSIGNMENT = REQUIRE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ]), IO_IF = memory_0, IO_IS = C_MEM_PART_TWR
PARAMETER C_MEM_PART_TRP = 0, DT = INTEGER, ASSIGNMENT = REQUIRE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ]), IO_IF = memory_0, IO_IS = C_MEM_PART_TRP
PARAMETER C_MEM_PART_TMRD = 4, DT = INTEGER, ASSIGNMENT = REQUIRE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = (0), IO_IF = memory_0, IO_IS = C_MEM_PART_TMRD, TYPE = NON_HDL
PARAMETER C_MEM_PART_TRRD = 0, DT = INTEGER, ASSIGNMENT = REQUIRE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ]), IO_IF = memory_0, IO_IS = C_MEM_PART_TRRD, TYPE = NON_HDL
PARAMETER C_MEM_PART_TRFC = 0, DT = INTEGER, ASSIGNMENT = REQUIRE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ]), IO_IF = memory_0, IO_IS = C_MEM_PART_TRFC
PARAMETER C_MEM_PART_TREFI = 0, DT = INTEGER, ASSIGNMENT = REQUIRE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ]), IO_IF = memory_0, IO_IS = C_MEM_PART_TREFI
PARAMETER C_MEM_PART_TAL = 0, DT = INTEGER, RANGE = (0), ISVALID = (0), IO_IF = memory_0, IO_IS = C_MEM_PART_TAL, TYPE = NON_HDL
PARAMETER C_MEM_PART_TCCD = 0, DT = INTEGER, ASSIGNMENT = REQUIRE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ] && ([xstrncmp C_MEM_TYPE  DDR2 ] || [xstrncmp C_MEM_TYPE  DDR3 ])), IO_IF = memory_0, IO_IS = C_MEM_PART_TCCD, TYPE = NON_HDL
PARAMETER C_MEM_PART_TWTR = 0, DT = INTEGER, ASSIGNMENT = REQUIRE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ] && ([xstrncmp C_MEM_TYPE  DDR2 ] || [xstrncmp C_MEM_TYPE  DDR3 ])), IO_IF = memory_0, IO_IS = C_MEM_PART_TWTR
PARAMETER C_MEM_PART_TRTP = 7500, DT = INTEGER, RANGE = (7500), ISVALID = (0), IO_IF = memory_0, IO_IS = C_MEM_PART_TRTP
PARAMETER C_MEM_PART_TZQINIT = 512, DT = INTEGER, RANGE = (512), ISVALID = (0), IO_IF = memory_0, IO_IS = C_MEM_PART_TZQCS, TYPE = NON_HDL
PARAMETER C_MEM_PART_TZQCS = 64, DT = INTEGER, RANGE = (64), ISVALID = (0), IO_IF = memory_0, IO_IS = C_MEM_PART_TZQCS, TYPE = NON_HDL
PARAMETER C_MEM_PART_TPRDI = 1000000, DT = INTEGER, ISVALID = (C_USE_MIG_V6_PHY), IO_IF = memory_0, IO_IS = C_MEM_PART_TPRDI
PARAMETER C_MEM_PART_TZQI = 128000000, DT = INTEGER, ISVALID = (C_USE_MIG_V6_PHY && [xstrncmp C_MEM_TYPE  DDR3 ]), IO_IF = memory_0, IO_IS = C_MEM_PART_TZQI
PARAMETER C_MEM_PART_CAS_A_FMAX = 0, DT = INTEGER, TYPE = NON_HDL, ASSIGNMENT = REQUIRE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ]), IO_IF = memory_0, IO_IS = C_MEM_PART_CAS_A_FMAX
PARAMETER C_MEM_PART_CAS_A = 0, DT = INTEGER, TYPE = NON_HDL, ASSIGNMENT = REQUIRE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ]), VALUES = (1.5 = 1.5 (2), 2 = 2, 2.5 = 2.5 (3), 3 = 3, 3.5 = 3.5 (4), 4 = 4, 5 = 5, 6 = 6, 7 = 7, 8 = 8, 9 = 9, 10 = 10), IO_IF = memory_0, IO_IS = C_MEM_PART_CAS_A, IPLEVEL_DRC_PROC = iplevel_drc_cas_check
PARAMETER C_MEM_PART_CAS_B_FMAX = 0, DT = INTEGER, TYPE = NON_HDL, ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ] && C_MEM_PART_CAS_A_FMAX != 0), IO_IF = memory_0, IO_IS = C_MEM_PART_CAS_B_FMAX
PARAMETER C_MEM_PART_CAS_B = 0, DT = INTEGER, TYPE = NON_HDL, ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ] && C_MEM_PART_CAS_A_FMAX != 0), VALUES = (1.5 = 1.5 (2), 2 = 2, 2.5 = 2.5 (3), 3 = 3, 3.5 = 3.5 (4), 4 = 4, 5 = 5, 6 = 6, 7 = 7, 8 = 8, 9 = 9, 10 = 10), IO_IF = memory_0, IO_IS = C_MEM_PART_CAS_B, IPLEVEL_DRC_PROC = iplevel_drc_cas_check
PARAMETER C_MEM_PART_CAS_C_FMAX = 0, DT = INTEGER, TYPE = NON_HDL, ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ] && C_MEM_PART_CAS_B_FMAX != 0), IO_IF = memory_0, IO_IS = C_MEM_PART_CAS_C_FMAX
PARAMETER C_MEM_PART_CAS_C = 0, DT = INTEGER, TYPE = NON_HDL, ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ] && C_MEM_PART_CAS_B_FMAX != 0), VALUES = (1.5 = 1.5 (2), 2 = 2, 2.5 = 2.5 (3), 3 = 3, 3.5 = 3.5 (4), 4 = 4, 5 = 5, 6 = 6, 7 = 7, 8 = 8, 9 = 9, 10 = 10), IO_IF = memory_0, IO_IS = C_MEM_PART_CAS_C, IPLEVEL_DRC_PROC = iplevel_drc_cas_check
PARAMETER C_MEM_PART_CAS_D_FMAX = 0, DT = INTEGER, TYPE = NON_HDL, ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ] && C_MEM_PART_CAS_C_FMAX != 0), IO_IF = memory_0, IO_IS = C_MEM_PART_CAS_D_FMAX
PARAMETER C_MEM_PART_CAS_D = 0, DT = INTEGER, TYPE = NON_HDL, ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ] && C_MEM_PART_CAS_C_FMAX != 0), VALUES = (1.5 = 1.5 (2), 2 = 2, 2.5 = 2.5 (3), 3 = 3, 3.5 = 3.5 (4), 4 = 4, 5 = 5, 6 = 6, 7 = 7, 8 = 8, 9 = 9, 10 = 10), IO_IF = memory_0, IO_IS = C_MEM_PART_CAS_D, IPLEVEL_DRC_PROC = iplevel_drc_cas_check
PARAMETER C_MPMC_CLK0_PERIOD_PS = 1, DT = INTEGER, RANGE = (1:1000000), ASSIGNMENT = OPTIONAL_UPDATE, CLK_PORT = MPMC_Clk0, CLK_UNIT = PS
PARAMETER C_MPMC_CLK_MEM_PERIOD_PS = 1, DT = INTEGER, RANGE = (1:1000000), ASSIGNMENT = OPTIONAL_UPDATE, CLK_PORT = MPMC_Clk_Mem, CLK_UNIT = PS, TYPE = NON_HDL, ISVALID = (C_USE_STATIC_PHY || C_USE_MIG_V6_PHY)
PARAMETER C_MEM_CAS_LATENCY = 3, DT = INTEGER, RANGE = (2:10), ASSIGNMENT = OPTIONAL_UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_mem_cas_latency
PARAMETER C_MEM_ODT_TYPE = 0, DT = INTEGER, RANGE = (0:5), VALUES = (0= Disabled/Disabled , 1= 75 Ohm/RZQ/4 , 2= 150 Ohm/RZQ/2 , 3= 50 Ohm/RZQ/6, 4=Reserved/RZQ/12, 5=Reserved/RZQ/8), ISVALID = ([xstrncmp C_MEM_TYPE  DDR2 ] || [xstrncmp C_MEM_TYPE  DDR3 ]), IPLEVEL_DRC_PROC = iplevel_drc_mem_odt_type, IO_IS = C_MEM_ODT_TYPE
PARAMETER C_MEM_REDUCED_DRV = 0, DT = INTEGER, RANGE = (0:3), VALUES = (0=FULL/RZQ/6/FULL, 1=REDUCED/RZQ/7/HALF, 2=RESERVED/RESERVED/QUARTER, 3=RESERVED/RESERVED/THREEQUARTERS), IPLEVEL_DRC_PROC = iplevel_drc_mem_reduced_drv, ISVALID = ([xstrncmp C_MEM_TYPE  LPDDR ] || [xstrncmp C_MEM_TYPE  DDR ] || [xstrncmp C_MEM_TYPE  DDR2 ] || [xstrncmp C_MEM_TYPE  DDR3 ])
PARAMETER C_MEM_REG_DIMM = 0, DT = INTEGER, RANGE = (0,1), ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, IO_IF = memory_0, IO_IS = C_MEM_REG_DIMM, ISVALID = (!C_USE_MCB_S6_PHY)
PARAMETER C_MEM_CLK_WIDTH = 1, DT = INTEGER, RANGE = (1:16), ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, IO_IF = memory_0, IO_IS = C_MEM_CLK_WIDTH, ISVALID = (!C_USE_MCB_S6_PHY)
PARAMETER C_MEM_ODT_WIDTH = 1, DT = INTEGER, RANGE = (1:16), ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, IO_IF = memory_0, IO_IS = C_MEM_ODT_WIDTH, ISVALID = ([xstrncmp C_MEM_TYPE  DDR2 ] && !C_USE_MCB_S6_PHY), IPLEVEL_DRC_PROC = iplevel_drc_ranks_x_dimms_multiple
PARAMETER C_MEM_CE_WIDTH = 1, DT = INTEGER, RANGE = (1:16), ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, IO_IF = memory_0, IO_IS = C_MEM_CE_WIDTH, ISVALID = (!C_USE_MCB_S6_PHY)
PARAMETER C_MEM_CS_N_WIDTH = 1, DT = INTEGER, RANGE = (1:16), ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, IO_IF = memory_0, IO_IS = C_MEM_CS_N_WIDTH, IPLEVEL_DRC_PROC = iplevel_drc_ranks_x_dimms_multiple, ISVALID = (!C_USE_MCB_S6_PHY)
PARAMETER C_MEM_ADDR_WIDTH = 13, DT = INTEGER, RANGE = (1:20), IO_IF = memory_0, IO_IS = C_MEM_ADDR_WIDTH, ASSIGNMENT = UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_addr_width
PARAMETER C_MEM_BANKADDR_WIDTH = 2, DT = INTEGER, RANGE = (1:4), IO_IF = memory_0, IO_IS = C_MEM_BANKADDR_WIDTH, ASSIGNMENT = UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_bankaddr_width
PARAMETER C_MEM_DATA_WIDTH = 64, DT = INTEGER, RANGE = (4,8,16,32,64), IO_IF = memory_0, IO_IS = C_MEM_DATA_WIDTH, IPLEVEL_DRC_PROC = iplevel_drc_mem_data_width
PARAMETER C_MEM_BITS_DATA_PER_DQS = 8, DT = INTEGER, RANGE = (4:8), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_bits_data
PARAMETER C_MEM_DM_WIDTH = 8, DT = INTEGER, RANGE = (1,2,4,8), IO_IF = memory_0, IO_IS = C_MEM_DM_WIDTH, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_dm_width, ASSIGNMENT = UPDATE
PARAMETER C_MEM_DQS_WIDTH = 8, DT = INTEGER, RANGE = (1,2,4,8), IO_IF = memory_0, IO_IS = C_MEM_DQS_WIDTH, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_dqs_width, ASSIGNMENT = UPDATE
PARAMETER C_MEM_NUM_DIMMS = 1, DT = INTEGER, RANGE = (1)
PARAMETER C_MEM_NUM_RANKS = 1, DT = INTEGER, RANGE = (1:2), ISVALID = (!C_USE_MIG_V6_PHY && !C_USE_MCB_S6_PHY), ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, IPLEVEL_DRC_PROC = iplevel_drc_mem_num_ranks
PARAMETER C_MEM_DQS_IO_COL = 0x000000000000000000, DT = STD_LOGIC_VECTOR, IPLEVEL_DRC_PROC = iplevel_drc_mig_v3, ASSIGNMENT = CONSTANT
PARAMETER C_MEM_DQ_IO_MS = 0x000000000000000000, DT = STD_LOGIC_VECTOR, IPLEVEL_DRC_PROC = iplevel_drc_mig_v3, ASSIGNMENT = CONSTANT
PARAMETER C_DDR2_DQSN_ENABLE = 1, DT = INTEGER, RANGE = (0,1), IO_IS = C_DDR2_DQSN_ENABLE, IO_IF = memory_0, ISVALID = ([xstrncmp C_MEM_TYPE  DDR2 ]), IPLEVEL_DRC_PROC = iplevel_drc_ddr2_dqsn_enable
PARAMETER C_INCLUDE_ECC_SUPPORT = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_USE_MIG_S3_PHY || C_USE_MIG_V4_PHY || C_USE_MIG_V5_PHY || C_USE_STATIC_PHY)
PARAMETER C_ECC_DEFAULT_ON = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_INCLUDE_ECC_SUPPORT)
PARAMETER C_INCLUDE_ECC_TEST = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_INCLUDE_ECC_SUPPORT)
PARAMETER C_ECC_SEC_THRESHOLD = 1, DT = INTEGER, RANGE = (1:4095), ISVALID = (C_INCLUDE_ECC_SUPPORT)
PARAMETER C_ECC_DEC_THRESHOLD = 1, DT = INTEGER, RANGE = (1:4095), ISVALID = (C_INCLUDE_ECC_SUPPORT)
PARAMETER C_ECC_PEC_THRESHOLD = 1, DT = INTEGER, RANGE = (1:4095), ISVALID = (C_INCLUDE_ECC_SUPPORT)
PARAMETER C_ECC_DATA_WIDTH = 0, DT = INTEGER, RANGE = (0,3:8), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_ecc_datawidth, ISVALID = (C_INCLUDE_ECC_SUPPORT)
PARAMETER C_ECC_DM_WIDTH = 0, DT = INTEGER, RANGE = (0:1), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_ecc_dmwidth, ISVALID = (C_INCLUDE_ECC_SUPPORT)
PARAMETER C_ECC_DQS_WIDTH = 0, DT = INTEGER, RANGE = (0:1), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_ecc_dqswidth, ISVALID = (C_INCLUDE_ECC_SUPPORT)
PARAMETER C_MEM_PA_SR = 0, DT = INTEGER, RANGE = (0:1), VALUES = (0=FULL, 1=HALF), ISVALID = (C_USE_MCB_S6_PHY && [xstrncmp C_MEM_TYPE  LPDDR ]), IPLEVEL_DRC_PROC = iplevel_drc_mem_pa_sr
PARAMETER C_MEM_CAS_WR_LATENCY = 5, DT = INTEGER, RANGE = (5:8), ISVALID = ([xstrncmp C_MEM_TYPE  DDR3 ]), ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_mem_cas_wr_latency
PARAMETER C_MEM_AUTO_SR = ENABLED, DT = STRING, VALUES = (ENABLED=ENABLED, MANUAL=MANUAL), ISVALID = (C_USE_MCB_S6_PHY && [xstrncmp C_MEM_TYPE  DDR3 ])
PARAMETER C_MEM_HIGH_TEMP_SR = NORMAL, DT = STRING, VALUES = (NORMAL=NORMAL, EXTENDED=EXTENDED), ISVALID = (C_USE_MCB_S6_PHY && ([xstrncmp C_MEM_TYPE  DDR2 ] || [xstrncmp C_MEM_TYPE  DDR3 ]))
PARAMETER C_MEM_DYNAMIC_WRITE_ODT = OFF, DT = STRING, VALUES = (OFF=OFF, DIV2=DIV2, DIV4=DIV4), ISVALID = (C_USE_MCB_S6_PHY && [xstrncmp C_MEM_TYPE  DDR3 ])
PARAMETER C_MEM_WRLVL = 1, DT = INTEGER, RANGE = (0:1), ISVALID = (C_USE_MIG_V6_PHY && [xstrncmp C_MEM_TYPE  DDR3 ])
PARAMETER C_IDELAY_CLK_FREQ = DEFAULT, DT = STRING, VALUES = (DEFAULT=DEFAULT, 200.0=200.0, 300.0=300.0)
PARAMETER C_MEM_PHASE_DETECT = DEFAULT, DT = STRING, VALUES = (DEFAULT=DEFAULT, ON=ON, OFF=OFF)
PARAMETER C_MEM_IBUF_LPWR_MODE = DEFAULT, DT = STRING, VALUES = (DEFAULT=DEFAULT, ON=ON, OFF=OFF)
PARAMETER C_MEM_IODELAY_HP_MODE = DEFAULT, DT = STRING, VALUES = (DEFAULT=DEFAULT, ON=ON, OFF=OFF)
PARAMETER C_MEM_SIM_INIT_OPTION = DEFAULT, DT = STRING, VALUES = (DEFAULT=DEFAULT, SKIP_INIT=SKIP_INIT, SKIP_PU_DELAY=SKIP_PU_DELAY, NONE=NONE)
PARAMETER C_MEM_SIM_CAL_OPTION = DEFAULT, DT = STRING, VALUES = (DEFAULT=DEFAULT, SKIP_CAL=SKIP_CAL, FAST_CAL=FAST_CAL, FAST_WIN_DETECT=FAST_WIN_DETECT, NONE=NONE)
PARAMETER C_MEM_CAL_WIDTH = DEFAULT, DT = STRING, VALUES = (DEFAULT=DEFAULT, FULL=FULL, HALF=HALF)
PARAMETER C_MEM_NDQS_COL0 = 0, DT = INTEGER, ASSIGNMENT = OPTIONAL_UPDATE, RANGE = (0:18), ISVALID = (C_USE_MIG_V6_PHY), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_dqs_col, IO_IS = C_MEM_NDQS_COL0
PARAMETER C_MEM_NDQS_COL1 = 0, DT = INTEGER, ASSIGNMENT = OPTIONAL_UPDATE, RANGE = (0:18), ISVALID = (C_USE_MIG_V6_PHY), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_dqs_col, IO_IS = C_MEM_NDQS_COL1
PARAMETER C_MEM_NDQS_COL2 = 0, DT = INTEGER, ASSIGNMENT = OPTIONAL_UPDATE, RANGE = (0:18), ISVALID = (C_USE_MIG_V6_PHY), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_dqs_col, IO_IS = C_MEM_NDQS_COL2
PARAMETER C_MEM_NDQS_COL3 = 0, DT = INTEGER, ASSIGNMENT = OPTIONAL_UPDATE, RANGE = (0:18), ISVALID = (C_USE_MIG_V6_PHY), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_dqs_col, IO_IS = C_MEM_NDQS_COL3
PARAMETER C_MEM_DQS_LOC_COL0 = 0x000000000000000000000000000000000000, DT = STD_LOGIC_VECTOR, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_USE_MIG_V6_PHY), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_dqs_col, IO_IS = C_MEM_DQS_LOC_COL0
PARAMETER C_MEM_DQS_LOC_COL1 = 0x000000000000000000000000000000000000, DT = STD_LOGIC_VECTOR, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_USE_MIG_V6_PHY), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_dqs_col, IO_IS = C_MEM_DQS_LOC_COL1
PARAMETER C_MEM_DQS_LOC_COL2 = 0x000000000000000000000000000000000000, DT = STD_LOGIC_VECTOR, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_USE_MIG_V6_PHY), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_dqs_col, IO_IS = C_MEM_DQS_LOC_COL2
PARAMETER C_MEM_DQS_LOC_COL3 = 0x000000000000000000000000000000000000, DT = STD_LOGIC_VECTOR, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_USE_MIG_V6_PHY), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_dqs_col, IO_IS = C_MEM_DQS_LOC_COL3
PARAMETER C_MAINT_PRESCALER_PERIOD = 200000, DT = INTEGER, ISVALID = (C_USE_MIG_V6_PHY), IO_IS = C_MAINT_PRESCALER_PERIOD
PARAMETER C_TBY4TAPVALUE = 9999, DT = INTEGER, RANGE = (0:63,9999), ISVALID = (C_USE_MIG_V4_PHY)
PARAMETER C_PIM0_BASEADDR = 0xFFFFFFFF, BUS = XCL0:XCL0_B:SPLB0:SDMA_LL0:PPC440MC0:VFBC0, ADDRESS = BASE, PAIR = C_PIM0_HIGHADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = ((C_PIM0_BASETYPE != 0 && C_PIM0_BASETYPE != 4) && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_PIM0_HIGHADDR = 0x00000000, BUS = XCL0:XCL0_B:SPLB0:SDMA_LL0:PPC440MC0:VFBC0, ADDRESS = HIGH, PAIR = C_PIM0_BASEADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = ((C_PIM0_BASETYPE != 0 && C_PIM0_BASETYPE != 4) && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_PIM0_OFFSET = 0x00000000, BUS = XCL0:XCL0_B:SPLB0:SDMA_LL0:PPC440MC0, DT = STD_LOGIC_VECTOR, ISVALID = ((C_PIM0_BASETYPE == 1 || C_PIM0_BASETYPE == 2 || C_PIM0_BASETYPE == 5) && C_ALL_PIMS_SHARE_ADDRESSES == 0)
PARAMETER C_PIM0_DATA_WIDTH = 64, DT = INTEGER, BUS = MPMC_PIM0:VFBC0:MCB0, RANGE = (32,64,128), ISVALID = (C_PIM0_BASETYPE == 4 || C_PIM0_BASETYPE == 6 || ((C_PIM0_BASETYPE == 7 || C_PIM0_BASETYPE == 8 || C_PIM0_BASETYPE == 9) && C_USE_MCB_S6_PHY)), IPLEVEL_DRC_PROC = iplevel_drc_pim_data_width, ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_pim_data_width
PARAMETER C_PIM0_BASETYPE = 2, DT = INTEGER, BUS = XCL0:XCL0_B:SPLB0:SDMA_LL0:MPMC_PIM0:PPC440MC0:VFBC0:MCB0, RANGE = (0:9), VALUES = (0=INACTIVE, 1=XCL, 2=PLBV46, 3=SDMA, 4=NPI, 5=PPC440MC, 6=VFBC, 7=MCB, 8=MCB-Read, 9=MCB-Write), IPLEVEL_DRC_PROC = iplevel_drc_pim_basetype
PARAMETER C_PIM0_SUBTYPE = PLB, DT = STRING, BUS = XCL0:SPLB0:SDMA_LL0:MPMC_PIM0:PPC440MC0:VFBC0:MCB0, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_PIM0_BASETYPE != 0), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_pim_subtype, SYSLEVEL_DRC_PROC = syslevel_drc_splb_subtype
PARAMETER C_XCL0_LINESIZE = 4, DT = INTEGER, BUS = XCL0, RANGE = (1,4,8,16), ISVALID = (C_PIM0_BASETYPE == 1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_xcl_linesize
PARAMETER C_XCL0_WRITEXFER = 1, DT = INTEGER, BUS = XCL0, RANGE = (0:2), ISVALID = (C_PIM0_BASETYPE == 1)
PARAMETER C_XCL0_PIPE_STAGES = 2, DT = INTEGER, BUS = XCL0, RANGE = (0:3), ISVALID = (C_PIM0_BASETYPE == 1)
PARAMETER C_XCL0_B_IN_USE = 0, DT = INTEGER, BUS = XCL0, RANGE = (0,1), ISVALID = (C_PIM0_BASETYPE == 1)
PARAMETER C_PIM0_B_SUBTYPE = INACTIVE, DT = STRING, BUS = XCL0_B, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_XCL0_B_IN_USE), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_pim_subtype
PARAMETER C_XCL0_B_LINESIZE = 4, DT = INTEGER, BUS = XCL0_B, RANGE = (1,4,8,16), ISVALID = (C_XCL0_B_IN_USE), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_xcl_linesize
PARAMETER C_XCL0_B_WRITEXFER = 1, DT = INTEGER, BUS = XCL0_B, RANGE = (0:2), ISVALID = (C_XCL0_B_IN_USE)
PARAMETER C_SPLB0_AWIDTH = 32, DT = INTEGER, BUS = SPLB0, ASSIGNMENT = CONSTANT, ISVALID = (C_PIM0_BASETYPE == 2)
PARAMETER C_SPLB0_DWIDTH = 64, DT = INTEGER, BUS = SPLB0, RANGE = (32,64,128), ISVALID = (C_PIM0_BASETYPE == 2)
PARAMETER C_SPLB0_NATIVE_DWIDTH = 64, DT = INTEGER, BUS = SPLB0, RANGE = (32,64), ISVALID = (C_PIM0_BASETYPE == 2), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_splb_native_dwidth, ASSIGNMENT = OPTIONAL_UPDATE, SYSLEVEL_DRC_PROC = syslevel_drc_splb_native_dwidth, IO_IS = C_SPLB0_NATIVE_DWIDTH
PARAMETER C_SPLB0_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB0, RANGE = (0:16), ISVALID = (C_PIM0_BASETYPE == 2)
PARAMETER C_SPLB0_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB0, RANGE = (0:4), ISVALID = (C_PIM0_BASETYPE == 2)
PARAMETER C_SPLB0_P2P = 1, DT = INTEGER, BUS = SPLB0, RANGE = (0,1), ISVALID = (C_PIM0_BASETYPE == 2)
PARAMETER C_SPLB0_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB0, RANGE = (0,1), ISVALID = (C_PIM0_BASETYPE == 2)
PARAMETER C_SPLB0_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SPLB0, RANGE = (32,64,128), ISVALID = (C_PIM0_BASETYPE == 2)
PARAMETER C_SDMA_CTRL0_BASEADDR = 0xFFFFFFFF, BUS = SDMA_CTRL0, ADDRESS = BASE, PAIR = C_SDMA_CTRL0_HIGHADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = REGISTER, ISVALID = (C_PIM0_BASETYPE == 3 && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_SDMA_CTRL0_HIGHADDR = 0x00000000, BUS = SDMA_CTRL0, ADDRESS = HIGH, PAIR = C_SDMA_CTRL0_BASEADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = REGISTER, ISVALID = (C_PIM0_BASETYPE == 3 && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_SDMA_CTRL0_AWIDTH = 32, DT = INTEGER, BUS = SDMA_CTRL0, ASSIGNMENT = CONSTANT, ISVALID = (C_PIM0_BASETYPE == 3)
PARAMETER C_SDMA_CTRL0_DWIDTH = 64, DT = INTEGER, BUS = SDMA_CTRL0, RANGE = (32,64,128), ISVALID = (C_PIM0_BASETYPE == 3)
PARAMETER C_SDMA_CTRL0_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SDMA_CTRL0, RANGE = (32,64), ISVALID = (C_PIM0_BASETYPE == 3)
PARAMETER C_SDMA_CTRL0_NUM_MASTERS = 1, DT = INTEGER, BUS = SDMA_CTRL0, RANGE = (0:16), ISVALID = (C_PIM0_BASETYPE == 3)
PARAMETER C_SDMA_CTRL0_MID_WIDTH = 1, DT = INTEGER, BUS = SDMA_CTRL0, RANGE = (0:4), ISVALID = (C_PIM0_BASETYPE == 3)
PARAMETER C_SDMA_CTRL0_P2P = 1, DT = INTEGER, BUS = SDMA_CTRL0, RANGE = (0,1), ISVALID = (C_PIM0_BASETYPE == 3)
PARAMETER C_SDMA_CTRL0_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SDMA_CTRL0, RANGE = (0,1), ASSIGNMENT = CONSTANT, ISVALID = (C_PIM0_BASETYPE == 3)
PARAMETER C_SDMA_CTRL0_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SDMA_CTRL0, RANGE = (32,64,128), ISVALID = (C_PIM0_BASETYPE == 3)
PARAMETER C_SDMA0_COMPLETED_ERR_TX = 1, DT = INTEGER, BUS = SDMA_LL0, RANGE = (0,1), ISVALID = (C_PIM0_BASETYPE == 3)
PARAMETER C_SDMA0_COMPLETED_ERR_RX = 1, DT = INTEGER, BUS = SDMA_LL0, RANGE = (0,1), ISVALID = (C_PIM0_BASETYPE == 3)
PARAMETER C_SDMA0_PRESCALAR = 1023, DT = INTEGER, BUS = SDMA_LL0, RANGE = (0:1023), ISVALID = (C_PIM0_BASETYPE == 3)
PARAMETER C_SDMA0_PI2LL_CLK_RATIO = 1, DT = INTEGER, BUS = SDMA_LL0, RANGE = (1:2), ISVALID = (C_PIM0_BASETYPE == 3), ASSIGNMENT = REQUIRE
PARAMETER C_PPC440MC0_BURST_LENGTH = 4, DT = INTEGER, BUS = PPC440MC0, RANGE = (2,4,8), ISVALID = (C_PIM0_BASETYPE == 5)
PARAMETER C_PPC440MC0_PIPE_STAGES = 1, DT = INTEGER, BUS = PPC440MC0, RANGE = (0:2), ISVALID = (C_PIM0_BASETYPE == 5)
PARAMETER C_VFBC0_CMD_FIFO_DEPTH = 32, DT = INTEGER, BUS = VFBC0, RANGE = (32,64,128,256,512,1024,2048,4096,8192), ISVALID = (C_PIM0_BASETYPE == 6)
PARAMETER C_VFBC0_CMD_AFULL_COUNT = 3, DT = INTEGER, BUS = VFBC0, ISVALID = (C_PIM0_BASETYPE == 6)
PARAMETER C_VFBC0_RDWD_DATA_WIDTH = 32, DT = INTEGER, BUS = VFBC0, RANGE = (8,16,32,64), ISVALID = (C_PIM0_BASETYPE == 6)
PARAMETER C_VFBC0_RDWD_FIFO_DEPTH = 1024, DT = INTEGER, BUS = VFBC0, RANGE = (512,1024,2048,4096,8192), ISVALID = (C_PIM0_BASETYPE == 6)
PARAMETER C_VFBC0_RD_AEMPTY_WD_AFULL_COUNT = 3, DT = INTEGER, BUS = VFBC0, ISVALID = (C_PIM0_BASETYPE == 6)
PARAMETER C_PI0_RD_FIFO_TYPE = BRAM, DT = STRING, VALUES = ( BRAM = BRAM ,  SRL = SRL ,  DISABLED = Wr-Only ), ISVALID = (C_PIM0_BASETYPE != 0 && !C_USE_MCB_S6_PHY || C_PIM0_BASETYPE == 6)
PARAMETER C_PI0_WR_FIFO_TYPE = BRAM, DT = STRING, VALUES = ( BRAM = BRAM ,  SRL = SRL ,  DISABLED = Rd-Only ), ISVALID = (C_PIM0_BASETYPE != 0 && !C_USE_MCB_S6_PHY || C_PIM0_BASETYPE == 6), IPLEVEL_DRC_PROC = iplevel_drc_wr_fifo
PARAMETER C_PI0_ADDRACK_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM0_BASETYPE != 0 && !C_USE_MCB_S6_PHY)
PARAMETER C_PI0_RD_FIFO_APP_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM0_BASETYPE != 0 && ![xstrncmp C_PI0_RD_FIFO_TYPE DISABLED] && !C_USE_MCB_S6_PHY)
PARAMETER C_PI0_RD_FIFO_MEM_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM0_BASETYPE != 0 && ![xstrncmp C_PI0_RD_FIFO_TYPE DISABLED] && !C_USE_MCB_S6_PHY)
PARAMETER C_PI0_WR_FIFO_APP_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM0_BASETYPE != 0 && ![xstrncmp C_PI0_WR_FIFO_TYPE DISABLED] && !C_USE_MCB_S6_PHY)
PARAMETER C_PI0_WR_FIFO_MEM_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM0_BASETYPE != 0 && ![xstrncmp C_PI0_WR_FIFO_TYPE DISABLED] && !C_USE_MCB_S6_PHY)
PARAMETER C_PI0_PM_USED = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM0_BASETYPE != 0 && C_PM_ENABLE)
PARAMETER C_PI0_PM_DC_CNTR = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM0_BASETYPE != 0 && C_PM_ENABLE)
PARAMETER C_PIM1_BASEADDR = 0xFFFFFFFF, BUS = XCL1:XCL1_B:SPLB1:SDMA_LL1:PPC440MC1:VFBC1, ADDRESS = BASE, PAIR = C_PIM1_HIGHADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = (C_NUM_PORTS > 1 && (C_PIM1_BASETYPE != 0 && C_PIM1_BASETYPE != 4) && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_PIM1_HIGHADDR = 0x00000000, BUS = XCL1:XCL1_B:SPLB1:SDMA_LL1:PPC440MC1:VFBC1, ADDRESS = HIGH, PAIR = C_PIM1_BASEADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = (C_NUM_PORTS > 1 && (C_PIM1_BASETYPE != 0 && C_PIM1_BASETYPE != 4) && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_PIM1_OFFSET = 0x00000000, BUS = XCL1:XCL1_B:SPLB1:SDMA_LL1:PPC440MC1, DT = STD_LOGIC_VECTOR, ISVALID = (C_NUM_PORTS > 1 && (C_PIM1_BASETYPE == 1 || C_PIM1_BASETYPE == 2 || C_PIM1_BASETYPE == 5) && C_ALL_PIMS_SHARE_ADDRESSES == 0)
PARAMETER C_PIM1_DATA_WIDTH = 64, DT = INTEGER, BUS = MPMC_PIM1:VFBC1:MCB1, RANGE = (32,64), ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 4 || C_PIM1_BASETYPE == 6 || ((C_PIM1_BASETYPE == 7 || C_PIM1_BASETYPE == 8 || C_PIM1_BASETYPE == 9) && C_USE_MCB_S6_PHY)), IPLEVEL_DRC_PROC = iplevel_drc_pim_data_width, ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_pim_data_width
PARAMETER C_PIM1_BASETYPE = 0, DT = INTEGER, BUS = XCL1:SPLB1:SDMA_LL1:MPMC_PIM1:PPC440MC1:VFBC1:MCB1, RANGE = (0:9), VALUES = (0=INACTIVE, 1=XCL, 2=PLBV46, 3=SDMA, 4=NPI, 5=PPC440MC, 6=VFBC, 7=MCB, 8=MCB-Read, 9=MCB-Write), IPLEVEL_DRC_PROC = iplevel_drc_pim_basetype
PARAMETER C_PIM1_SUBTYPE = INACTIVE, DT = STRING, BUS = XCL1:SPLB1:SDMA_LL1:MPMC_PIM1:PPC440MC1:VFBC1:MCB1, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE != 0), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_pim_subtype, SYSLEVEL_DRC_PROC = syslevel_drc_splb_subtype
PARAMETER C_XCL1_LINESIZE = 4, DT = INTEGER, BUS = XCL1, RANGE = (1,4,8,16), ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_xcl_linesize
PARAMETER C_XCL1_WRITEXFER = 1, DT = INTEGER, BUS = XCL1, RANGE = (0:2), ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 1)
PARAMETER C_XCL1_PIPE_STAGES = 2, DT = INTEGER, BUS = XCL1, RANGE = (0:3), ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 1)
PARAMETER C_XCL1_B_IN_USE = 0, DT = INTEGER, BUS = XCL1, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 1)
PARAMETER C_PIM1_B_SUBTYPE = INACTIVE, DT = STRING, BUS = XCL1_B, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_NUM_PORTS > 1 && C_XCL1_B_IN_USE), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_pim_subtype
PARAMETER C_XCL1_B_LINESIZE = 4, DT = INTEGER, BUS = XCL1_B, RANGE = (1,4,8,16), ISVALID = (C_NUM_PORTS > 1 && C_XCL1_B_IN_USE), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_xcl_linesize
PARAMETER C_XCL1_B_WRITEXFER = 1, DT = INTEGER, BUS = XCL1_B, RANGE = (0:2), ISVALID = (C_NUM_PORTS > 1 && C_XCL1_B_IN_USE)
PARAMETER C_SPLB1_AWIDTH = 32, DT = INTEGER, BUS = SPLB1, ASSIGNMENT = CONSTANT, ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 2)
PARAMETER C_SPLB1_DWIDTH = 64, DT = INTEGER, BUS = SPLB1, RANGE = (32,64,128), ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 2)
PARAMETER C_SPLB1_NATIVE_DWIDTH = 64, DT = INTEGER, BUS = SPLB1, RANGE = (32,64), ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 2), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_splb_native_dwidth, ASSIGNMENT = OPTIONAL_UPDATE, SYSLEVEL_DRC_PROC = syslevel_drc_splb_native_dwidth, IO_IS = C_SPLB1_NATIVE_DWIDTH
PARAMETER C_SPLB1_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB1, RANGE = (0:16), ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 2)
PARAMETER C_SPLB1_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB1, RANGE = (0:4), ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 2)
PARAMETER C_SPLB1_P2P = 1, DT = INTEGER, BUS = SPLB1, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 2)
PARAMETER C_SPLB1_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB1, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 2)
PARAMETER C_SPLB1_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SPLB1, RANGE = (32,64,128), ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 2)
PARAMETER C_SDMA_CTRL1_BASEADDR = 0xFFFFFFFF, BUS = SDMA_CTRL1, ADDRESS = BASE, PAIR = C_SDMA_CTRL1_HIGHADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = REGISTER, ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 3 && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_SDMA_CTRL1_HIGHADDR = 0x00000000, BUS = SDMA_CTRL1, ADDRESS = HIGH, PAIR = C_SDMA_CTRL1_BASEADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = REGISTER, ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 3 && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_SDMA_CTRL1_AWIDTH = 32, DT = INTEGER, BUS = SDMA_CTRL1, ASSIGNMENT = CONSTANT, ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 3)
PARAMETER C_SDMA_CTRL1_DWIDTH = 64, DT = INTEGER, BUS = SDMA_CTRL1, RANGE = (32,64,128), ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 3)
PARAMETER C_SDMA_CTRL1_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SDMA_CTRL1, RANGE = (32,64), ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 3)
PARAMETER C_SDMA_CTRL1_NUM_MASTERS = 1, DT = INTEGER, BUS = SDMA_CTRL1, RANGE = (0:16), ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 3)
PARAMETER C_SDMA_CTRL1_MID_WIDTH = 1, DT = INTEGER, BUS = SDMA_CTRL1, RANGE = (0:4), ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 3)
PARAMETER C_SDMA_CTRL1_P2P = 1, DT = INTEGER, BUS = SDMA_CTRL1, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 3)
PARAMETER C_SDMA_CTRL1_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SDMA_CTRL1, RANGE = (0,1), ASSIGNMENT = CONSTANT, ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 3)
PARAMETER C_SDMA_CTRL1_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SDMA_CTRL1, RANGE = (32,64,128), ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 3)
PARAMETER C_SDMA1_COMPLETED_ERR_TX = 1, DT = INTEGER, BUS = SDMA_LL1, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 3)
PARAMETER C_SDMA1_COMPLETED_ERR_RX = 1, DT = INTEGER, BUS = SDMA_LL1, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 3)
PARAMETER C_SDMA1_PRESCALAR = 1023, DT = INTEGER, BUS = SDMA_LL1, RANGE = (0:1023), ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 3)
PARAMETER C_SDMA1_PI2LL_CLK_RATIO = 1, DT = INTEGER, BUS = SDMA_LL1, RANGE = (1:2), ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 3), ASSIGNMENT = REQUIRE
PARAMETER C_PPC440MC1_BURST_LENGTH = 4, DT = INTEGER, BUS = PPC440MC1, RANGE = (2,4,8), ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 5)
PARAMETER C_PPC440MC1_PIPE_STAGES = 1, DT = INTEGER, BUS = PPC440MC1, RANGE = (0:2), ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 5)
PARAMETER C_VFBC1_CMD_FIFO_DEPTH = 32, DT = INTEGER, BUS = VFBC1, RANGE = (32,64,128,256,512,1024,2048,4096,8192), ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 6)
PARAMETER C_VFBC1_CMD_AFULL_COUNT = 3, DT = INTEGER, BUS = VFBC1, ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 6)
PARAMETER C_VFBC1_RDWD_DATA_WIDTH = 32, DT = INTEGER, BUS = VFBC1, RANGE = (8,16,32,64), ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 6)
PARAMETER C_VFBC1_RDWD_FIFO_DEPTH = 1024, DT = INTEGER, BUS = VFBC1, RANGE = (512,1024,2048,4096,8192), ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 6)
PARAMETER C_VFBC1_RD_AEMPTY_WD_AFULL_COUNT = 3, DT = INTEGER, BUS = VFBC1, ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 6)
PARAMETER C_PI1_RD_FIFO_TYPE = BRAM, DT = STRING, VALUES = ( BRAM = BRAM ,  SRL = SRL ,  DISABLED = Wr-Only ), ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE != 0 && !C_USE_MCB_S6_PHY || C_PIM1_BASETYPE == 6)
PARAMETER C_PI1_WR_FIFO_TYPE = BRAM, DT = STRING, VALUES = ( BRAM = BRAM ,  SRL = SRL ,  DISABLED = Rd-Only ), ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE != 0 && !C_USE_MCB_S6_PHY || C_PIM1_BASETYPE == 6), IPLEVEL_DRC_PROC = iplevel_drc_wr_fifo
PARAMETER C_PI1_ADDRACK_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE != 0 && !C_USE_MCB_S6_PHY)
PARAMETER C_PI1_RD_FIFO_APP_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE != 0 && ![xstrncmp C_PI1_RD_FIFO_TYPE DISABLED] && !C_USE_MCB_S6_PHY)
PARAMETER C_PI1_RD_FIFO_MEM_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE != 0 && ![xstrncmp C_PI1_RD_FIFO_TYPE DISABLED] && !C_USE_MCB_S6_PHY)
PARAMETER C_PI1_WR_FIFO_APP_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE != 0 && ![xstrncmp C_PI1_WR_FIFO_TYPE DISABLED] && !C_USE_MCB_S6_PHY)
PARAMETER C_PI1_WR_FIFO_MEM_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE != 0 && ![xstrncmp C_PI1_WR_FIFO_TYPE DISABLED] && !C_USE_MCB_S6_PHY)
PARAMETER C_PI1_PM_USED = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE != 0 && C_PM_ENABLE)
PARAMETER C_PI1_PM_DC_CNTR = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE != 0 && C_PM_ENABLE)
PARAMETER C_PIM2_BASEADDR = 0xFFFFFFFF, BUS = XCL2:XCL2_B:SPLB2:SDMA_LL2:PPC440MC2:VFBC2, ADDRESS = BASE, PAIR = C_PIM2_HIGHADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = (C_NUM_PORTS > 2 && (C_PIM2_BASETYPE != 0 && C_PIM2_BASETYPE != 4) && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_PIM2_HIGHADDR = 0x00000000, BUS = XCL2:XCL2_B:SPLB2:SDMA_LL2:PPC440MC2:VFBC2, ADDRESS = HIGH, PAIR = C_PIM2_BASEADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = (C_NUM_PORTS > 2 && (C_PIM2_BASETYPE != 0 && C_PIM2_BASETYPE != 4) && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_PIM2_OFFSET = 0x00000000, BUS = XCL2:XCL2_B:SPLB2:SDMA_LL2:PPC440MC2, DT = STD_LOGIC_VECTOR, ISVALID = (C_NUM_PORTS > 2 && (C_PIM2_BASETYPE == 1 || C_PIM2_BASETYPE == 2 || C_PIM2_BASETYPE == 5) && C_ALL_PIMS_SHARE_ADDRESSES == 0)
PARAMETER C_PIM2_DATA_WIDTH = 64, DT = INTEGER, BUS = MPMC_PIM2:VFBC2:MCB2, RANGE = (32,64), ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 4 || C_PIM2_BASETYPE == 6 || ((C_PIM2_BASETYPE == 7 || C_PIM2_BASETYPE == 8 || C_PIM2_BASETYPE == 9) && C_USE_MCB_S6_PHY)), IPLEVEL_DRC_PROC = iplevel_drc_pim_data_width, ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_pim_data_width
PARAMETER C_PIM2_BASETYPE = 0, DT = INTEGER, BUS = XCL2:SPLB2:SDMA_LL2:MPMC_PIM2:PPC440MC2:VFBC2:MCB2, RANGE = (0:9), VALUES = (0=INACTIVE, 1=XCL, 2=PLBV46, 3=SDMA, 4=NPI, 5=PPC440MC, 6=VFBC, 7=MCB, 8=MCB-Read, 9=MCB-Write), IPLEVEL_DRC_PROC = iplevel_drc_pim_basetype
PARAMETER C_PIM2_SUBTYPE = INACTIVE, DT = STRING, BUS = XCL2:SPLB2:SDMA_LL2:MPMC_PIM2:PPC440MC2:VFBC2:MCB2, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE != 0), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_pim_subtype, SYSLEVEL_DRC_PROC = syslevel_drc_splb_subtype
PARAMETER C_XCL2_LINESIZE = 4, DT = INTEGER, BUS = XCL2, RANGE = (1,4,8,16), ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_xcl_linesize
PARAMETER C_XCL2_WRITEXFER = 1, DT = INTEGER, BUS = XCL2, RANGE = (0:2), ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 1)
PARAMETER C_XCL2_PIPE_STAGES = 2, DT = INTEGER, BUS = XCL2, RANGE = (0:3), ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 1)
PARAMETER C_XCL2_B_IN_USE = 0, DT = INTEGER, BUS = XCL2, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 1)
PARAMETER C_PIM2_B_SUBTYPE = INACTIVE, DT = STRING, BUS = XCL2_B, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_NUM_PORTS > 2 && C_XCL2_B_IN_USE), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_pim_subtype
PARAMETER C_XCL2_B_LINESIZE = 4, DT = INTEGER, BUS = XCL2_B, RANGE = (1,4,8,16), ISVALID = (C_NUM_PORTS > 2 && C_XCL2_B_IN_USE), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_xcl_linesize
PARAMETER C_XCL2_B_WRITEXFER = 1, DT = INTEGER, BUS = XCL2_B, RANGE = (0:2), ISVALID = (C_NUM_PORTS > 2 && C_XCL2_B_IN_USE)
PARAMETER C_SPLB2_AWIDTH = 32, DT = INTEGER, BUS = SPLB2, ASSIGNMENT = CONSTANT, ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 2)
PARAMETER C_SPLB2_DWIDTH = 64, DT = INTEGER, BUS = SPLB2, RANGE = (32,64,128), ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 2)
PARAMETER C_SPLB2_NATIVE_DWIDTH = 64, DT = INTEGER, BUS = SPLB2, RANGE = (32,64), ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 2), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_splb_native_dwidth, ASSIGNMENT = OPTIONAL_UPDATE, SYSLEVEL_DRC_PROC = syslevel_drc_splb_native_dwidth, IO_IS = C_SPLB2_NATIVE_DWIDTH
PARAMETER C_SPLB2_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB2, RANGE = (0:16), ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 2)
PARAMETER C_SPLB2_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB2, RANGE = (0:4), ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 2)
PARAMETER C_SPLB2_P2P = 1, DT = INTEGER, BUS = SPLB2, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 2)
PARAMETER C_SPLB2_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB2, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 2)
PARAMETER C_SPLB2_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SPLB2, RANGE = (32,64,128), ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 2)
PARAMETER C_SDMA_CTRL2_BASEADDR = 0xFFFFFFFF, BUS = SDMA_CTRL2, ADDRESS = BASE, PAIR = C_SDMA_CTRL2_HIGHADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = REGISTER, ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 3 && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_SDMA_CTRL2_HIGHADDR = 0x00000000, BUS = SDMA_CTRL2, ADDRESS = HIGH, PAIR = C_SDMA_CTRL2_BASEADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = REGISTER, ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 3 && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_SDMA_CTRL2_AWIDTH = 32, DT = INTEGER, BUS = SDMA_CTRL2, ASSIGNMENT = CONSTANT, ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 3)
PARAMETER C_SDMA_CTRL2_DWIDTH = 64, DT = INTEGER, BUS = SDMA_CTRL2, RANGE = (32,64,128), ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 3)
PARAMETER C_SDMA_CTRL2_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SDMA_CTRL2, RANGE = (32,64), ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 3)
PARAMETER C_SDMA_CTRL2_NUM_MASTERS = 1, DT = INTEGER, BUS = SDMA_CTRL2, RANGE = (0:16), ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 3)
PARAMETER C_SDMA_CTRL2_MID_WIDTH = 1, DT = INTEGER, BUS = SDMA_CTRL2, RANGE = (0:4), ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 3)
PARAMETER C_SDMA_CTRL2_P2P = 1, DT = INTEGER, BUS = SDMA_CTRL2, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 3)
PARAMETER C_SDMA_CTRL2_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SDMA_CTRL2, RANGE = (0,1), ASSIGNMENT = CONSTANT, ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 3)
PARAMETER C_SDMA_CTRL2_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SDMA_CTRL2, RANGE = (32,64,128), ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 3)
PARAMETER C_SDMA2_COMPLETED_ERR_TX = 1, DT = INTEGER, BUS = SDMA_LL2, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 3)
PARAMETER C_SDMA2_COMPLETED_ERR_RX = 1, DT = INTEGER, BUS = SDMA_LL2, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 3)
PARAMETER C_SDMA2_PRESCALAR = 1023, DT = INTEGER, BUS = SDMA_LL2, RANGE = (0:1023), ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 3)
PARAMETER C_SDMA2_PI2LL_CLK_RATIO = 1, DT = INTEGER, BUS = SDMA_LL2, RANGE = (1:2), ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 3), ASSIGNMENT = REQUIRE
PARAMETER C_PPC440MC2_BURST_LENGTH = 4, DT = INTEGER, BUS = PPC440MC2, RANGE = (2,4,8), ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 5)
PARAMETER C_PPC440MC2_PIPE_STAGES = 1, DT = INTEGER, BUS = PPC440MC2, RANGE = (0:2), ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 5)
PARAMETER C_VFBC2_CMD_FIFO_DEPTH = 32, DT = INTEGER, BUS = VFBC2, RANGE = (32,64,128,256,512,1024,2048,4096,8192), ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 6)
PARAMETER C_VFBC2_CMD_AFULL_COUNT = 3, DT = INTEGER, BUS = VFBC2, ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 6)
PARAMETER C_VFBC2_RDWD_DATA_WIDTH = 32, DT = INTEGER, BUS = VFBC2, RANGE = (8,16,32,64), ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 6)
PARAMETER C_VFBC2_RDWD_FIFO_DEPTH = 1024, DT = INTEGER, BUS = VFBC2, RANGE = (512,1024,2048,4096,8192), ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 6)
PARAMETER C_VFBC2_RD_AEMPTY_WD_AFULL_COUNT = 3, DT = INTEGER, BUS = VFBC2, ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 6)
PARAMETER C_PI2_RD_FIFO_TYPE = BRAM, DT = STRING, VALUES = ( BRAM = BRAM ,  SRL = SRL ,  DISABLED = Wr-Only ), ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE != 0 && !C_USE_MCB_S6_PHY || C_PIM2_BASETYPE == 6)
PARAMETER C_PI2_WR_FIFO_TYPE = BRAM, DT = STRING, VALUES = ( BRAM = BRAM ,  SRL = SRL ,  DISABLED = Rd-Only ), ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE != 0 && !C_USE_MCB_S6_PHY || C_PIM2_BASETYPE == 6), IPLEVEL_DRC_PROC = iplevel_drc_wr_fifo
PARAMETER C_PI2_ADDRACK_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE != 0 && !C_USE_MCB_S6_PHY)
PARAMETER C_PI2_RD_FIFO_APP_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE != 0 && ![xstrncmp C_PI2_RD_FIFO_TYPE DISABLED] && !C_USE_MCB_S6_PHY)
PARAMETER C_PI2_RD_FIFO_MEM_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE != 0 && ![xstrncmp C_PI2_RD_FIFO_TYPE DISABLED] && !C_USE_MCB_S6_PHY)
PARAMETER C_PI2_WR_FIFO_APP_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE != 0 && ![xstrncmp C_PI2_WR_FIFO_TYPE DISABLED] && !C_USE_MCB_S6_PHY)
PARAMETER C_PI2_WR_FIFO_MEM_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE != 0 && ![xstrncmp C_PI2_WR_FIFO_TYPE DISABLED] && !C_USE_MCB_S6_PHY)
PARAMETER C_PI2_PM_USED = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE != 0 && C_PM_ENABLE)
PARAMETER C_PI2_PM_DC_CNTR = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE != 0 && C_PM_ENABLE)
PARAMETER C_PIM3_BASEADDR = 0xFFFFFFFF, BUS = XCL3:XCL3_B:SPLB3:SDMA_LL3:PPC440MC3:VFBC3, ADDRESS = BASE, PAIR = C_PIM3_HIGHADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = (C_NUM_PORTS > 3 && (C_PIM3_BASETYPE != 0 && C_PIM3_BASETYPE != 4) && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_PIM3_HIGHADDR = 0x00000000, BUS = XCL3:XCL3_B:SPLB3:SDMA_LL3:PPC440MC3:VFBC3, ADDRESS = HIGH, PAIR = C_PIM3_BASEADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = (C_NUM_PORTS > 3 && (C_PIM3_BASETYPE != 0 && C_PIM3_BASETYPE != 4) && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_PIM3_OFFSET = 0x00000000, BUS = XCL3:XCL3_B:SPLB3:SDMA_LL3:PPC440MC3, DT = STD_LOGIC_VECTOR, ISVALID = (C_NUM_PORTS > 3 && (C_PIM3_BASETYPE == 1 || C_PIM3_BASETYPE == 2 || C_PIM3_BASETYPE == 5) && C_ALL_PIMS_SHARE_ADDRESSES == 0)
PARAMETER C_PIM3_DATA_WIDTH = 64, DT = INTEGER, BUS = MPMC_PIM3:VFBC3:MCB3, RANGE = (32,64), ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 4 || C_PIM3_BASETYPE == 6 || ((C_PIM3_BASETYPE == 7 || C_PIM3_BASETYPE == 8 || C_PIM3_BASETYPE == 9) && C_USE_MCB_S6_PHY)), IPLEVEL_DRC_PROC = iplevel_drc_pim_data_width, ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_pim_data_width
PARAMETER C_PIM3_BASETYPE = 0, DT = INTEGER, BUS = XCL3:SPLB3:SDMA_LL3:MPMC_PIM3:PPC440MC3:VFBC3:MCB3, RANGE = (0:9), VALUES = (0=INACTIVE, 1=XCL, 2=PLBV46, 3=SDMA, 4=NPI, 5=PPC440MC, 6=VFBC, 7=MCB, 8=MCB-Read, 9=MCB-Write), IPLEVEL_DRC_PROC = iplevel_drc_pim_basetype
PARAMETER C_PIM3_SUBTYPE = INACTIVE, DT = STRING, BUS = XCL3:SPLB3:SDMA_LL3:MPMC_PIM3:PPC440MC3:VFBC3:MCB3, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE != 0), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_pim_subtype, SYSLEVEL_DRC_PROC = syslevel_drc_splb_subtype
PARAMETER C_XCL3_LINESIZE = 4, DT = INTEGER, BUS = XCL3, RANGE = (1,4,8,16), ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_xcl_linesize
PARAMETER C_XCL3_WRITEXFER = 1, DT = INTEGER, BUS = XCL3, RANGE = (0:2), ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 1)
PARAMETER C_XCL3_PIPE_STAGES = 2, DT = INTEGER, BUS = XCL3, RANGE = (0:3), ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 1)
PARAMETER C_XCL3_B_IN_USE = 0, DT = INTEGER, BUS = XCL3, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 1)
PARAMETER C_PIM3_B_SUBTYPE = INACTIVE, DT = STRING, BUS = XCL3_B, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_NUM_PORTS > 3 && C_XCL3_B_IN_USE), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_pim_subtype
PARAMETER C_XCL3_B_LINESIZE = 4, DT = INTEGER, BUS = XCL3_B, RANGE = (1,4,8,16), ISVALID = (C_NUM_PORTS > 3 && C_XCL3_B_IN_USE), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_xcl_linesize
PARAMETER C_XCL3_B_WRITEXFER = 1, DT = INTEGER, BUS = XCL3_B, RANGE = (0:2), ISVALID = (C_NUM_PORTS > 3 && C_XCL3_B_IN_USE)
PARAMETER C_SPLB3_AWIDTH = 32, DT = INTEGER, BUS = SPLB3, ASSIGNMENT = CONSTANT, ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 2)
PARAMETER C_SPLB3_DWIDTH = 64, DT = INTEGER, BUS = SPLB3, RANGE = (32,64,128), ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 2)
PARAMETER C_SPLB3_NATIVE_DWIDTH = 64, DT = INTEGER, BUS = SPLB3, RANGE = (32,64), ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 2), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_splb_native_dwidth, ASSIGNMENT = OPTIONAL_UPDATE, SYSLEVEL_DRC_PROC = syslevel_drc_splb_native_dwidth, IO_IS = C_SPLB3_NATIVE_DWIDTH
PARAMETER C_SPLB3_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB3, RANGE = (0:16), ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 2)
PARAMETER C_SPLB3_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB3, RANGE = (0:4), ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 2)
PARAMETER C_SPLB3_P2P = 1, DT = INTEGER, BUS = SPLB3, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 2)
PARAMETER C_SPLB3_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB3, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 2)
PARAMETER C_SPLB3_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SPLB3, RANGE = (32,64,128), ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 2)
PARAMETER C_SDMA_CTRL3_BASEADDR = 0xFFFFFFFF, BUS = SDMA_CTRL3, ADDRESS = BASE, PAIR = C_SDMA_CTRL3_HIGHADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = REGISTER, ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 3 && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_SDMA_CTRL3_HIGHADDR = 0x00000000, BUS = SDMA_CTRL3, ADDRESS = HIGH, PAIR = C_SDMA_CTRL3_BASEADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = REGISTER, ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 3 && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_SDMA_CTRL3_AWIDTH = 32, DT = INTEGER, BUS = SDMA_CTRL3, ASSIGNMENT = CONSTANT, ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 3)
PARAMETER C_SDMA_CTRL3_DWIDTH = 64, DT = INTEGER, BUS = SDMA_CTRL3, RANGE = (32,64,128), ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 3)
PARAMETER C_SDMA_CTRL3_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SDMA_CTRL3, RANGE = (32,64), ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 3)
PARAMETER C_SDMA_CTRL3_NUM_MASTERS = 1, DT = INTEGER, BUS = SDMA_CTRL3, RANGE = (0:16), ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 3)
PARAMETER C_SDMA_CTRL3_MID_WIDTH = 1, DT = INTEGER, BUS = SDMA_CTRL3, RANGE = (0:4), ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 3)
PARAMETER C_SDMA_CTRL3_P2P = 1, DT = INTEGER, BUS = SDMA_CTRL3, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 3)
PARAMETER C_SDMA_CTRL3_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SDMA_CTRL3, RANGE = (0,1), ASSIGNMENT = CONSTANT, ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 3)
PARAMETER C_SDMA_CTRL3_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SDMA_CTRL3, RANGE = (32,64,128), ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 3)
PARAMETER C_SDMA3_COMPLETED_ERR_TX = 1, DT = INTEGER, BUS = SDMA_LL3, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 3)
PARAMETER C_SDMA3_COMPLETED_ERR_RX = 1, DT = INTEGER, BUS = SDMA_LL3, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 3)
PARAMETER C_SDMA3_PRESCALAR = 1023, DT = INTEGER, BUS = SDMA_LL3, RANGE = (0:1023), ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 3)
PARAMETER C_SDMA3_PI2LL_CLK_RATIO = 1, DT = INTEGER, BUS = SDMA_LL3, RANGE = (1:2), ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 3), ASSIGNMENT = REQUIRE
PARAMETER C_PPC440MC3_BURST_LENGTH = 4, DT = INTEGER, BUS = PPC440MC3, RANGE = (2,4,8), ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 5)
PARAMETER C_PPC440MC3_PIPE_STAGES = 1, DT = INTEGER, BUS = PPC440MC3, RANGE = (0:2), ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 5)
PARAMETER C_VFBC3_CMD_FIFO_DEPTH = 32, DT = INTEGER, BUS = VFBC3, RANGE = (32,64,128,256,512,1024,2048,4096,8192), ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 6)
PARAMETER C_VFBC3_CMD_AFULL_COUNT = 3, DT = INTEGER, BUS = VFBC3, ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 6)
PARAMETER C_VFBC3_RDWD_DATA_WIDTH = 32, DT = INTEGER, BUS = VFBC3, RANGE = (8,16,32,64), ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 6)
PARAMETER C_VFBC3_RDWD_FIFO_DEPTH = 1024, DT = INTEGER, BUS = VFBC3, RANGE = (512,1024,2048,4096,8192), ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 6)
PARAMETER C_VFBC3_RD_AEMPTY_WD_AFULL_COUNT = 3, DT = INTEGER, BUS = VFBC3, ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 6)
PARAMETER C_PI3_RD_FIFO_TYPE = BRAM, DT = STRING, VALUES = ( BRAM = BRAM ,  SRL = SRL ,  DISABLED = Wr-Only ), ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE != 0 && !C_USE_MCB_S6_PHY || C_PIM3_BASETYPE == 6)
PARAMETER C_PI3_WR_FIFO_TYPE = BRAM, DT = STRING, VALUES = ( BRAM = BRAM ,  SRL = SRL ,  DISABLED = Rd-Only ), ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE != 0 && !C_USE_MCB_S6_PHY || C_PIM3_BASETYPE == 6), IPLEVEL_DRC_PROC = iplevel_drc_wr_fifo
PARAMETER C_PI3_ADDRACK_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE != 0 && !C_USE_MCB_S6_PHY)
PARAMETER C_PI3_RD_FIFO_APP_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE != 0 && ![xstrncmp C_PI3_RD_FIFO_TYPE DISABLED] && !C_USE_MCB_S6_PHY)
PARAMETER C_PI3_RD_FIFO_MEM_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE != 0 && ![xstrncmp C_PI3_RD_FIFO_TYPE DISABLED] && !C_USE_MCB_S6_PHY)
PARAMETER C_PI3_WR_FIFO_APP_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE != 0 && ![xstrncmp C_PI3_WR_FIFO_TYPE DISABLED] && !C_USE_MCB_S6_PHY)
PARAMETER C_PI3_WR_FIFO_MEM_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE != 0 && ![xstrncmp C_PI3_WR_FIFO_TYPE DISABLED] && !C_USE_MCB_S6_PHY)
PARAMETER C_PI3_PM_USED = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE != 0 && C_PM_ENABLE)
PARAMETER C_PI3_PM_DC_CNTR = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE != 0 && C_PM_ENABLE)
PARAMETER C_PIM4_BASEADDR = 0xFFFFFFFF, BUS = XCL4:XCL4_B:SPLB4:SDMA_LL4:PPC440MC4:VFBC4, ADDRESS = BASE, PAIR = C_PIM4_HIGHADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = (C_NUM_PORTS > 4 && (C_PIM4_BASETYPE != 0 && C_PIM4_BASETYPE != 4) && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_PIM4_HIGHADDR = 0x00000000, BUS = XCL4:XCL4_B:SPLB4:SDMA_LL4:PPC440MC4:VFBC4, ADDRESS = HIGH, PAIR = C_PIM4_BASEADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = (C_NUM_PORTS > 4 && (C_PIM4_BASETYPE != 0 && C_PIM4_BASETYPE != 4) && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_PIM4_OFFSET = 0x00000000, BUS = XCL4:XCL4_B:SPLB4:SDMA_LL4:PPC440MC4, DT = STD_LOGIC_VECTOR, ISVALID = (C_NUM_PORTS > 4 && (C_PIM4_BASETYPE == 1 || C_PIM4_BASETYPE == 2 || C_PIM4_BASETYPE == 5) && C_ALL_PIMS_SHARE_ADDRESSES == 0)
PARAMETER C_PIM4_DATA_WIDTH = 64, DT = INTEGER, BUS = MPMC_PIM4:VFBC4:MCB4, RANGE = (32,64), ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 4 || C_PIM4_BASETYPE == 6 || ((C_PIM4_BASETYPE == 7 || C_PIM4_BASETYPE == 8 || C_PIM4_BASETYPE == 9) && C_USE_MCB_S6_PHY)), IPLEVEL_DRC_PROC = iplevel_drc_pim_data_width, ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_pim_data_width
PARAMETER C_PIM4_BASETYPE = 0, DT = INTEGER, BUS = XCL4:SPLB4:SDMA_LL4:MPMC_PIM4:PPC440MC4:VFBC4:MCB4, RANGE = (0:9), VALUES = (0=INACTIVE, 1=XCL, 2=PLBV46, 3=SDMA, 4=NPI, 5=PPC440MC, 6=VFBC, 7=MCB, 8=MCB-Read, 9=MCB-Write), IPLEVEL_DRC_PROC = iplevel_drc_pim_basetype
PARAMETER C_PIM4_SUBTYPE = INACTIVE, DT = STRING, BUS = XCL4:SPLB4:SDMA_LL4:MPMC_PIM4:PPC440MC4:VFBC4:MCB4, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE != 0), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_pim_subtype, SYSLEVEL_DRC_PROC = syslevel_drc_splb_subtype
PARAMETER C_XCL4_LINESIZE = 4, DT = INTEGER, BUS = XCL4, RANGE = (1,4,8,16), ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_xcl_linesize
PARAMETER C_XCL4_WRITEXFER = 1, DT = INTEGER, BUS = XCL4, RANGE = (0:2), ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 1)
PARAMETER C_XCL4_PIPE_STAGES = 2, DT = INTEGER, BUS = XCL4, RANGE = (0:3), ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 1)
PARAMETER C_XCL4_B_IN_USE = 0, DT = INTEGER, BUS = XCL4, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 1)
PARAMETER C_PIM4_B_SUBTYPE = INACTIVE, DT = STRING, BUS = XCL4_B, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_NUM_PORTS > 4 && C_XCL4_B_IN_USE), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_pim_subtype
PARAMETER C_XCL4_B_LINESIZE = 4, DT = INTEGER, BUS = XCL4_B, RANGE = (1,4,8,16), ISVALID = (C_NUM_PORTS > 4 && C_XCL4_B_IN_USE), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_xcl_linesize
PARAMETER C_XCL4_B_WRITEXFER = 1, DT = INTEGER, BUS = XCL4_B, RANGE = (0:2), ISVALID = (C_NUM_PORTS > 4 && C_XCL4_B_IN_USE)
PARAMETER C_SPLB4_AWIDTH = 32, DT = INTEGER, BUS = SPLB4, ASSIGNMENT = CONSTANT, ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 2)
PARAMETER C_SPLB4_DWIDTH = 64, DT = INTEGER, BUS = SPLB4, RANGE = (32,64,128), ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 2)
PARAMETER C_SPLB4_NATIVE_DWIDTH = 64, DT = INTEGER, BUS = SPLB4, RANGE = (32,64), ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 2), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_splb_native_dwidth, ASSIGNMENT = OPTIONAL_UPDATE, SYSLEVEL_DRC_PROC = syslevel_drc_splb_native_dwidth, IO_IS = C_SPLB4_NATIVE_DWIDTH
PARAMETER C_SPLB4_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB4, RANGE = (0:16), ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 2)
PARAMETER C_SPLB4_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB4, RANGE = (0:4), ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 2)
PARAMETER C_SPLB4_P2P = 1, DT = INTEGER, BUS = SPLB4, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 2)
PARAMETER C_SPLB4_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB4, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 2)
PARAMETER C_SPLB4_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SPLB4, RANGE = (32,64,128), ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 2)
PARAMETER C_SDMA_CTRL4_BASEADDR = 0xFFFFFFFF, BUS = SDMA_CTRL4, ADDRESS = BASE, PAIR = C_SDMA_CTRL4_HIGHADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = REGISTER, ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 3 && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_SDMA_CTRL4_HIGHADDR = 0x00000000, BUS = SDMA_CTRL4, ADDRESS = HIGH, PAIR = C_SDMA_CTRL4_BASEADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = REGISTER, ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 3 && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_SDMA_CTRL4_AWIDTH = 32, DT = INTEGER, BUS = SDMA_CTRL4, ASSIGNMENT = CONSTANT, ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 3)
PARAMETER C_SDMA_CTRL4_DWIDTH = 64, DT = INTEGER, BUS = SDMA_CTRL4, RANGE = (32,64,128), ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 3)
PARAMETER C_SDMA_CTRL4_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SDMA_CTRL4, RANGE = (32,64), ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 3)
PARAMETER C_SDMA_CTRL4_NUM_MASTERS = 1, DT = INTEGER, BUS = SDMA_CTRL4, RANGE = (0:16), ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 3)
PARAMETER C_SDMA_CTRL4_MID_WIDTH = 1, DT = INTEGER, BUS = SDMA_CTRL4, RANGE = (0:4), ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 3)
PARAMETER C_SDMA_CTRL4_P2P = 1, DT = INTEGER, BUS = SDMA_CTRL4, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 3)
PARAMETER C_SDMA_CTRL4_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SDMA_CTRL4, RANGE = (0,1), ASSIGNMENT = CONSTANT, ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 3)
PARAMETER C_SDMA_CTRL4_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SDMA_CTRL4, RANGE = (32,64,128), ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 3)
PARAMETER C_SDMA4_COMPLETED_ERR_TX = 1, DT = INTEGER, BUS = SDMA_LL4, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 3)
PARAMETER C_SDMA4_COMPLETED_ERR_RX = 1, DT = INTEGER, BUS = SDMA_LL4, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 3)
PARAMETER C_SDMA4_PRESCALAR = 1023, DT = INTEGER, BUS = SDMA_LL4, RANGE = (0:1023), ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 3)
PARAMETER C_SDMA4_PI2LL_CLK_RATIO = 1, DT = INTEGER, BUS = SDMA_LL4, RANGE = (1:2), ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 3), ASSIGNMENT = REQUIRE
PARAMETER C_PPC440MC4_BURST_LENGTH = 4, DT = INTEGER, BUS = PPC440MC4, RANGE = (2,4,8), ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 5)
PARAMETER C_PPC440MC4_PIPE_STAGES = 1, DT = INTEGER, BUS = PPC440MC4, RANGE = (0:2), ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 5)
PARAMETER C_VFBC4_CMD_FIFO_DEPTH = 32, DT = INTEGER, BUS = VFBC4, RANGE = (32,64,128,256,512,1024,2048,4096,8192), ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 6)
PARAMETER C_VFBC4_CMD_AFULL_COUNT = 3, DT = INTEGER, BUS = VFBC4, ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 6)
PARAMETER C_VFBC4_RDWD_DATA_WIDTH = 32, DT = INTEGER, BUS = VFBC4, RANGE = (8,16,32,64), ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 6)
PARAMETER C_VFBC4_RDWD_FIFO_DEPTH = 1024, DT = INTEGER, BUS = VFBC4, RANGE = (512,1024,2048,4096,8192), ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 6)
PARAMETER C_VFBC4_RD_AEMPTY_WD_AFULL_COUNT = 3, DT = INTEGER, BUS = VFBC4, ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 6)
PARAMETER C_PI4_RD_FIFO_TYPE = BRAM, DT = STRING, VALUES = ( BRAM = BRAM ,  SRL = SRL ,  DISABLED = Wr-Only ), ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE != 0 && !C_USE_MCB_S6_PHY || C_PIM4_BASETYPE == 6)
PARAMETER C_PI4_WR_FIFO_TYPE = BRAM, DT = STRING, VALUES = ( BRAM = BRAM ,  SRL = SRL ,  DISABLED = Rd-Only ), ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE != 0 && !C_USE_MCB_S6_PHY || C_PIM4_BASETYPE == 6), IPLEVEL_DRC_PROC = iplevel_drc_wr_fifo
PARAMETER C_PI4_ADDRACK_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE != 0 && !C_USE_MCB_S6_PHY)
PARAMETER C_PI4_RD_FIFO_APP_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE != 0 && ![xstrncmp C_PI4_RD_FIFO_TYPE DISABLED] && !C_USE_MCB_S6_PHY)
PARAMETER C_PI4_RD_FIFO_MEM_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE != 0 && ![xstrncmp C_PI4_RD_FIFO_TYPE DISABLED] && !C_USE_MCB_S6_PHY)
PARAMETER C_PI4_WR_FIFO_APP_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE != 0 && ![xstrncmp C_PI4_WR_FIFO_TYPE DISABLED] && !C_USE_MCB_S6_PHY)
PARAMETER C_PI4_WR_FIFO_MEM_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE != 0 && ![xstrncmp C_PI4_WR_FIFO_TYPE DISABLED] && !C_USE_MCB_S6_PHY)
PARAMETER C_PI4_PM_USED = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE != 0 && C_PM_ENABLE)
PARAMETER C_PI4_PM_DC_CNTR = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE != 0 && C_PM_ENABLE)
PARAMETER C_PIM5_BASEADDR = 0xFFFFFFFF, BUS = XCL5:XCL5_B:SPLB5:SDMA_LL5:PPC440MC5:VFBC5, ADDRESS = BASE, PAIR = C_PIM5_HIGHADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = (C_NUM_PORTS > 5 && (C_PIM5_BASETYPE != 0 && C_PIM5_BASETYPE != 4) && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_PIM5_HIGHADDR = 0x00000000, BUS = XCL5:XCL5_B:SPLB5:SDMA_LL5:PPC440MC5:VFBC5, ADDRESS = HIGH, PAIR = C_PIM5_BASEADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = (C_NUM_PORTS > 5 && (C_PIM5_BASETYPE != 0 && C_PIM5_BASETYPE != 4) && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_PIM5_OFFSET = 0x00000000, BUS = XCL5:XCL5_B:SPLB5:SDMA_LL5:PPC440MC5, DT = STD_LOGIC_VECTOR, ISVALID = (C_NUM_PORTS > 5 && (C_PIM5_BASETYPE == 1 || C_PIM5_BASETYPE == 2 || C_PIM5_BASETYPE == 5) && C_ALL_PIMS_SHARE_ADDRESSES == 0)
PARAMETER C_PIM5_DATA_WIDTH = 64, DT = INTEGER, BUS = MPMC_PIM5:VFBC5:MCB5, RANGE = (32,64), ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 4 || C_PIM5_BASETYPE == 6 || ((C_PIM5_BASETYPE == 7 || C_PIM5_BASETYPE == 8 || C_PIM5_BASETYPE == 9) && C_USE_MCB_S6_PHY)), IPLEVEL_DRC_PROC = iplevel_drc_pim_data_width, ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_pim_data_width
PARAMETER C_PIM5_BASETYPE = 0, DT = INTEGER, BUS = XCL5:SPLB5:SDMA_LL5:MPMC_PIM5:PPC440MC5:VFBC5:MCB5, RANGE = (0:9), VALUES = (0=INACTIVE, 1=XCL, 2=PLBV46, 3=SDMA, 4=NPI, 5=PPC440MC, 6=VFBC, 7=MCB, 8=MCB-Read, 9=MCB-Write), IPLEVEL_DRC_PROC = iplevel_drc_pim_basetype
PARAMETER C_PIM5_SUBTYPE = INACTIVE, DT = STRING, BUS = XCL5:SPLB5:SDMA_LL5:MPMC_PIM5:PPC440MC5:VFBC5:MCB5, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE != 0), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_pim_subtype, SYSLEVEL_DRC_PROC = syslevel_drc_splb_subtype
PARAMETER C_XCL5_LINESIZE = 4, DT = INTEGER, BUS = XCL5, RANGE = (1,4,8,16), ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_xcl_linesize
PARAMETER C_XCL5_WRITEXFER = 1, DT = INTEGER, BUS = XCL5, RANGE = (0:2), ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 1)
PARAMETER C_XCL5_PIPE_STAGES = 2, DT = INTEGER, BUS = XCL5, RANGE = (0:3), ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 1)
PARAMETER C_XCL5_B_IN_USE = 0, DT = INTEGER, BUS = XCL5, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 1)
PARAMETER C_PIM5_B_SUBTYPE = INACTIVE, DT = STRING, BUS = XCL5_B, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_NUM_PORTS > 5 && C_XCL5_B_IN_USE), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_pim_subtype
PARAMETER C_XCL5_B_LINESIZE = 4, DT = INTEGER, BUS = XCL5_B, RANGE = (1,4,8,16), ISVALID = (C_NUM_PORTS > 5 && C_XCL5_B_IN_USE), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_xcl_linesize
PARAMETER C_XCL5_B_WRITEXFER = 1, DT = INTEGER, BUS = XCL5_B, RANGE = (0:2), ISVALID = (C_NUM_PORTS > 5 && C_XCL5_B_IN_USE)
PARAMETER C_SPLB5_AWIDTH = 32, DT = INTEGER, BUS = SPLB5, ASSIGNMENT = CONSTANT, ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 2)
PARAMETER C_SPLB5_DWIDTH = 64, DT = INTEGER, BUS = SPLB5, RANGE = (32,64,128), ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 2)
PARAMETER C_SPLB5_NATIVE_DWIDTH = 64, DT = INTEGER, BUS = SPLB5, RANGE = (32,64), ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 2), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_splb_native_dwidth, ASSIGNMENT = OPTIONAL_UPDATE, SYSLEVEL_DRC_PROC = syslevel_drc_splb_native_dwidth, IO_IS = C_SPLB5_NATIVE_DWIDTH
PARAMETER C_SPLB5_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB5, RANGE = (0:16), ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 2)
PARAMETER C_SPLB5_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB5, RANGE = (0:4), ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 2)
PARAMETER C_SPLB5_P2P = 1, DT = INTEGER, BUS = SPLB5, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 2)
PARAMETER C_SPLB5_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB5, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 2)
PARAMETER C_SPLB5_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SPLB5, RANGE = (32,64,128), ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 2)
PARAMETER C_SDMA_CTRL5_BASEADDR = 0xFFFFFFFF, BUS = SDMA_CTRL5, ADDRESS = BASE, PAIR = C_SDMA_CTRL5_HIGHADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = REGISTER, ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 3 && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_SDMA_CTRL5_HIGHADDR = 0x00000000, BUS = SDMA_CTRL5, ADDRESS = HIGH, PAIR = C_SDMA_CTRL5_BASEADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = REGISTER, ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 3 && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_SDMA_CTRL5_AWIDTH = 32, DT = INTEGER, BUS = SDMA_CTRL5, ASSIGNMENT = CONSTANT, ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 3)
PARAMETER C_SDMA_CTRL5_DWIDTH = 64, DT = INTEGER, BUS = SDMA_CTRL5, RANGE = (32,64,128), ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 3)
PARAMETER C_SDMA_CTRL5_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SDMA_CTRL5, RANGE = (32,64), ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 3)
PARAMETER C_SDMA_CTRL5_NUM_MASTERS = 1, DT = INTEGER, BUS = SDMA_CTRL5, RANGE = (0:16), ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 3)
PARAMETER C_SDMA_CTRL5_MID_WIDTH = 1, DT = INTEGER, BUS = SDMA_CTRL5, RANGE = (0:4), ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 3)
PARAMETER C_SDMA_CTRL5_P2P = 1, DT = INTEGER, BUS = SDMA_CTRL5, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 3)
PARAMETER C_SDMA_CTRL5_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SDMA_CTRL5, RANGE = (0,1), ASSIGNMENT = CONSTANT, ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 3)
PARAMETER C_SDMA_CTRL5_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SDMA_CTRL5, RANGE = (32,64,128), ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 3)
PARAMETER C_SDMA5_COMPLETED_ERR_TX = 1, DT = INTEGER, BUS = SDMA_LL5, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 3)
PARAMETER C_SDMA5_COMPLETED_ERR_RX = 1, DT = INTEGER, BUS = SDMA_LL5, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 3)
PARAMETER C_SDMA5_PRESCALAR = 1023, DT = INTEGER, BUS = SDMA_LL5, RANGE = (0:1023), ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 3)
PARAMETER C_SDMA5_PI2LL_CLK_RATIO = 1, DT = INTEGER, BUS = SDMA_LL5, RANGE = (1:2), ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 3), ASSIGNMENT = REQUIRE
PARAMETER C_PPC440MC5_BURST_LENGTH = 4, DT = INTEGER, BUS = PPC440MC5, RANGE = (2,4,8), ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 5)
PARAMETER C_PPC440MC5_PIPE_STAGES = 1, DT = INTEGER, BUS = PPC440MC5, RANGE = (0:2), ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 5)
PARAMETER C_VFBC5_CMD_FIFO_DEPTH = 32, DT = INTEGER, BUS = VFBC5, RANGE = (32,64,128,256,512,1024,2048,4096,8192), ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 6)
PARAMETER C_VFBC5_CMD_AFULL_COUNT = 3, DT = INTEGER, BUS = VFBC5, ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 6)
PARAMETER C_VFBC5_RDWD_DATA_WIDTH = 32, DT = INTEGER, BUS = VFBC5, RANGE = (8,16,32,64), ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 6)
PARAMETER C_VFBC5_RDWD_FIFO_DEPTH = 1024, DT = INTEGER, BUS = VFBC5, RANGE = (512,1024,2048,4096,8192), ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 6)
PARAMETER C_VFBC5_RD_AEMPTY_WD_AFULL_COUNT = 3, DT = INTEGER, BUS = VFBC5, ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 6)
PARAMETER C_PI5_RD_FIFO_TYPE = BRAM, DT = STRING, VALUES = ( BRAM = BRAM ,  SRL = SRL ,  DISABLED = Wr-Only ), ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE != 0 && !C_USE_MCB_S6_PHY || C_PIM5_BASETYPE == 6)
PARAMETER C_PI5_WR_FIFO_TYPE = BRAM, DT = STRING, VALUES = ( BRAM = BRAM ,  SRL = SRL ,  DISABLED = Rd-Only ), ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE != 0 && !C_USE_MCB_S6_PHY || C_PIM5_BASETYPE == 6), IPLEVEL_DRC_PROC = iplevel_drc_wr_fifo
PARAMETER C_PI5_ADDRACK_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE != 0 && !C_USE_MCB_S6_PHY)
PARAMETER C_PI5_RD_FIFO_APP_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE != 0 && ![xstrncmp C_PI5_RD_FIFO_TYPE DISABLED] && !C_USE_MCB_S6_PHY)
PARAMETER C_PI5_RD_FIFO_MEM_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE != 0 && ![xstrncmp C_PI5_RD_FIFO_TYPE DISABLED] && !C_USE_MCB_S6_PHY)
PARAMETER C_PI5_WR_FIFO_APP_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE != 0 && ![xstrncmp C_PI5_WR_FIFO_TYPE DISABLED] && !C_USE_MCB_S6_PHY)
PARAMETER C_PI5_WR_FIFO_MEM_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE != 0 && ![xstrncmp C_PI5_WR_FIFO_TYPE DISABLED] && !C_USE_MCB_S6_PHY)
PARAMETER C_PI5_PM_USED = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE != 0 && C_PM_ENABLE)
PARAMETER C_PI5_PM_DC_CNTR = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE != 0 && C_PM_ENABLE)
PARAMETER C_PIM6_BASEADDR = 0xFFFFFFFF, BUS = XCL6:XCL6_B:SPLB6:SDMA_LL6:PPC440MC6:VFBC6, ADDRESS = BASE, PAIR = C_PIM6_HIGHADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = (C_NUM_PORTS > 6 && (C_PIM6_BASETYPE != 0 && C_PIM6_BASETYPE != 4) && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_PIM6_HIGHADDR = 0x00000000, BUS = XCL6:XCL6_B:SPLB6:SDMA_LL6:PPC440MC6:VFBC6, ADDRESS = HIGH, PAIR = C_PIM6_BASEADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = (C_NUM_PORTS > 6 && (C_PIM6_BASETYPE != 0 && C_PIM6_BASETYPE != 4) && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_PIM6_OFFSET = 0x00000000, BUS = XCL6:XCL6_B:SPLB6:SDMA_LL6:PPC440MC6, DT = STD_LOGIC_VECTOR, ISVALID = (C_NUM_PORTS > 6 && (C_PIM6_BASETYPE == 1 || C_PIM6_BASETYPE == 2 || C_PIM6_BASETYPE == 5) && C_ALL_PIMS_SHARE_ADDRESSES == 0)
PARAMETER C_PIM6_DATA_WIDTH = 64, DT = INTEGER, BUS = MPMC_PIM6:VFBC6:MCB6, RANGE = (32,64), ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 4 || C_PIM6_BASETYPE == 6 || ((C_PIM6_BASETYPE == 7 || C_PIM6_BASETYPE == 8 || C_PIM6_BASETYPE == 9) && C_USE_MCB_S6_PHY)), IPLEVEL_DRC_PROC = iplevel_drc_pim_data_width, ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_pim_data_width
PARAMETER C_PIM6_BASETYPE = 0, DT = INTEGER, BUS = XCL6:SPLB6:SDMA_LL6:MPMC_PIM6:PPC440MC6:VFBC6:MCB6, RANGE = (0:9), VALUES = (0=INACTIVE, 1=XCL, 2=PLBV46, 3=SDMA, 4=NPI, 5=PPC440MC, 6=VFBC, 7=MCB, 8=MCB-Read, 9=MCB-Write), IPLEVEL_DRC_PROC = iplevel_drc_pim_basetype
PARAMETER C_PIM6_SUBTYPE = INACTIVE, DT = STRING, BUS = XCL6:SPLB6:SDMA_LL6:MPMC_PIM6:PPC440MC6:VFBC6:MCB6, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE != 0), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_pim_subtype, SYSLEVEL_DRC_PROC = syslevel_drc_splb_subtype
PARAMETER C_XCL6_LINESIZE = 4, DT = INTEGER, BUS = XCL6, RANGE = (1,4,8,16), ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_xcl_linesize
PARAMETER C_XCL6_WRITEXFER = 1, DT = INTEGER, BUS = XCL6, RANGE = (0:2), ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 1)
PARAMETER C_XCL6_PIPE_STAGES = 2, DT = INTEGER, BUS = XCL6, RANGE = (0:3), ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 1)
PARAMETER C_XCL6_B_IN_USE = 0, DT = INTEGER, BUS = XCL6, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 1)
PARAMETER C_PIM6_B_SUBTYPE = INACTIVE, DT = STRING, BUS = XCL6_B, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_NUM_PORTS > 6 && C_XCL6_B_IN_USE), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_pim_subtype
PARAMETER C_XCL6_B_LINESIZE = 4, DT = INTEGER, BUS = XCL6_B, RANGE = (1,4,8,16), ISVALID = (C_NUM_PORTS > 6 && C_XCL6_B_IN_USE), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_xcl_linesize
PARAMETER C_XCL6_B_WRITEXFER = 1, DT = INTEGER, BUS = XCL6_B, RANGE = (0:2), ISVALID = (C_NUM_PORTS > 6 && C_XCL6_B_IN_USE)
PARAMETER C_SPLB6_AWIDTH = 32, DT = INTEGER, BUS = SPLB6, ASSIGNMENT = CONSTANT, ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 2)
PARAMETER C_SPLB6_DWIDTH = 64, DT = INTEGER, BUS = SPLB6, RANGE = (32,64,128), ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 2)
PARAMETER C_SPLB6_NATIVE_DWIDTH = 64, DT = INTEGER, BUS = SPLB6, RANGE = (32,64), ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 2), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_splb_native_dwidth, ASSIGNMENT = OPTIONAL_UPDATE, SYSLEVEL_DRC_PROC = syslevel_drc_splb_native_dwidth, IO_IS = C_SPLB6_NATIVE_DWIDTH
PARAMETER C_SPLB6_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB6, RANGE = (0:16), ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 2)
PARAMETER C_SPLB6_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB6, RANGE = (0:4), ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 2)
PARAMETER C_SPLB6_P2P = 1, DT = INTEGER, BUS = SPLB6, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 2)
PARAMETER C_SPLB6_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB6, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 2)
PARAMETER C_SPLB6_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SPLB6, RANGE = (32,64,128), ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 2)
PARAMETER C_SDMA_CTRL6_BASEADDR = 0xFFFFFFFF, BUS = SDMA_CTRL6, ADDRESS = BASE, PAIR = C_SDMA_CTRL6_HIGHADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = REGISTER, ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 3 && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_SDMA_CTRL6_HIGHADDR = 0x00000000, BUS = SDMA_CTRL6, ADDRESS = HIGH, PAIR = C_SDMA_CTRL6_BASEADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = REGISTER, ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 3 && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_SDMA_CTRL6_AWIDTH = 32, DT = INTEGER, BUS = SDMA_CTRL6, ASSIGNMENT = CONSTANT, ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 3)
PARAMETER C_SDMA_CTRL6_DWIDTH = 64, DT = INTEGER, BUS = SDMA_CTRL6, RANGE = (32,64,128), ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 3)
PARAMETER C_SDMA_CTRL6_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SDMA_CTRL6, RANGE = (32,64), ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 3)
PARAMETER C_SDMA_CTRL6_NUM_MASTERS = 1, DT = INTEGER, BUS = SDMA_CTRL6, RANGE = (0:16), ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 3)
PARAMETER C_SDMA_CTRL6_MID_WIDTH = 1, DT = INTEGER, BUS = SDMA_CTRL6, RANGE = (0:4), ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 3)
PARAMETER C_SDMA_CTRL6_P2P = 1, DT = INTEGER, BUS = SDMA_CTRL6, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 3)
PARAMETER C_SDMA_CTRL6_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SDMA_CTRL6, RANGE = (0,1), ASSIGNMENT = CONSTANT, ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 3)
PARAMETER C_SDMA_CTRL6_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SDMA_CTRL6, RANGE = (32,64,128), ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 3)
PARAMETER C_SDMA6_COMPLETED_ERR_TX = 1, DT = INTEGER, BUS = SDMA_LL6, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 3)
PARAMETER C_SDMA6_COMPLETED_ERR_RX = 1, DT = INTEGER, BUS = SDMA_LL6, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 3)
PARAMETER C_SDMA6_PRESCALAR = 1023, DT = INTEGER, BUS = SDMA_LL6, RANGE = (0:1023), ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 3)
PARAMETER C_SDMA6_PI2LL_CLK_RATIO = 1, DT = INTEGER, BUS = SDMA_LL6, RANGE = (1:2), ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 3), ASSIGNMENT = REQUIRE
PARAMETER C_PPC440MC6_BURST_LENGTH = 4, DT = INTEGER, BUS = PPC440MC6, RANGE = (2,4,8), ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 5)
PARAMETER C_PPC440MC6_PIPE_STAGES = 1, DT = INTEGER, BUS = PPC440MC6, RANGE = (0:2), ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 5)
PARAMETER C_VFBC6_CMD_FIFO_DEPTH = 32, DT = INTEGER, BUS = VFBC6, RANGE = (32,64,128,256,512,1024,2048,4096,8192), ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 6)
PARAMETER C_VFBC6_CMD_AFULL_COUNT = 3, DT = INTEGER, BUS = VFBC6, ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 6)
PARAMETER C_VFBC6_RDWD_DATA_WIDTH = 32, DT = INTEGER, BUS = VFBC6, RANGE = (8,16,32,64), ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 6)
PARAMETER C_VFBC6_RDWD_FIFO_DEPTH = 1024, DT = INTEGER, BUS = VFBC6, RANGE = (512,1024,2048,4096,8192), ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 6)
PARAMETER C_VFBC6_RD_AEMPTY_WD_AFULL_COUNT = 3, DT = INTEGER, BUS = VFBC6, ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 6)
PARAMETER C_PI6_RD_FIFO_TYPE = BRAM, DT = STRING, VALUES = ( BRAM = BRAM ,  SRL = SRL ,  DISABLED = Wr-Only ), ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE != 0 && !C_USE_MCB_S6_PHY)
PARAMETER C_PI6_WR_FIFO_TYPE = BRAM, DT = STRING, VALUES = ( BRAM = BRAM ,  SRL = SRL ,  DISABLED = Rd-Only ), ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE != 0 && !C_USE_MCB_S6_PHY), IPLEVEL_DRC_PROC = iplevel_drc_wr_fifo
PARAMETER C_PI6_ADDRACK_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE != 0 && !C_USE_MCB_S6_PHY)
PARAMETER C_PI6_RD_FIFO_APP_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE != 0 && ![xstrncmp C_PI6_RD_FIFO_TYPE DISABLED] && !C_USE_MCB_S6_PHY)
PARAMETER C_PI6_RD_FIFO_MEM_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE != 0 && ![xstrncmp C_PI6_RD_FIFO_TYPE DISABLED] && !C_USE_MCB_S6_PHY)
PARAMETER C_PI6_WR_FIFO_APP_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE != 0 && ![xstrncmp C_PI6_WR_FIFO_TYPE DISABLED] && !C_USE_MCB_S6_PHY)
PARAMETER C_PI6_WR_FIFO_MEM_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE != 0 && ![xstrncmp C_PI6_WR_FIFO_TYPE DISABLED] && !C_USE_MCB_S6_PHY)
PARAMETER C_PI6_PM_USED = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE != 0 && C_PM_ENABLE)
PARAMETER C_PI6_PM_DC_CNTR = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE != 0 && C_PM_ENABLE)
PARAMETER C_PIM7_BASEADDR = 0xFFFFFFFF, BUS = XCL7:XCL7_B:SPLB7:SDMA_LL7:PPC440MC7:VFBC7, ADDRESS = BASE, PAIR = C_PIM7_HIGHADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = (C_NUM_PORTS > 7 && (C_PIM7_BASETYPE != 0 && C_PIM7_BASETYPE != 4) && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_PIM7_HIGHADDR = 0x00000000, BUS = XCL7:XCL7_B:SPLB7:SDMA_LL7:PPC440MC7:VFBC7, ADDRESS = HIGH, PAIR = C_PIM7_BASEADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = (C_NUM_PORTS > 7 && (C_PIM7_BASETYPE != 0 && C_PIM7_BASETYPE != 4) && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_PIM7_OFFSET = 0x00000000, BUS = XCL7:XCL7_B:SPLB7:SDMA_LL7:PPC440MC7, DT = STD_LOGIC_VECTOR, ISVALID = (C_NUM_PORTS > 7 && (C_PIM7_BASETYPE == 1 || C_PIM7_BASETYPE == 2 || C_PIM7_BASETYPE == 5) && C_ALL_PIMS_SHARE_ADDRESSES == 0)
PARAMETER C_PIM7_DATA_WIDTH = 64, DT = INTEGER, BUS = MPMC_PIM7:VFBC7:MCB7, RANGE = (32,64), ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 4 || C_PIM7_BASETYPE == 6 || ((C_PIM7_BASETYPE == 7 || C_PIM7_BASETYPE == 8 || C_PIM7_BASETYPE == 9) && C_USE_MCB_S6_PHY)), IPLEVEL_DRC_PROC = iplevel_drc_pim_data_width, ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_pim_data_width
PARAMETER C_PIM7_BASETYPE = 0, DT = INTEGER, BUS = XCL7:SPLB7:SDMA_LL7:MPMC_PIM7:PPC440MC7:VFBC7:MCB7, RANGE = (0:9), VALUES = (0=INACTIVE, 1=XCL, 2=PLBV46, 3=SDMA, 4=NPI, 5=PPC440MC, 6=VFBC, 7=MCB, 8=MCB-Read, 9=MCB-Write), IPLEVEL_DRC_PROC = iplevel_drc_pim_basetype
PARAMETER C_PIM7_SUBTYPE = INACTIVE, DT = STRING, BUS = XCL7:SPLB7:SDMA_LL7:MPMC_PIM7:PPC440MC7:VFBC7:MCB7, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE != 0), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_pim_subtype, SYSLEVEL_DRC_PROC = syslevel_drc_splb_subtype
PARAMETER C_XCL7_LINESIZE = 4, DT = INTEGER, BUS = XCL7, RANGE = (1,4,8,16), ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_xcl_linesize
PARAMETER C_XCL7_WRITEXFER = 1, DT = INTEGER, BUS = XCL7, RANGE = (0:2), ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 1)
PARAMETER C_XCL7_PIPE_STAGES = 2, DT = INTEGER, BUS = XCL7, RANGE = (0:3), ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 1)
PARAMETER C_XCL7_B_IN_USE = 0, DT = INTEGER, BUS = XCL7, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 1)
PARAMETER C_PIM7_B_SUBTYPE = INACTIVE, DT = STRING, BUS = XCL7_B, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_NUM_PORTS > 7 && C_XCL7_B_IN_USE), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_pim_subtype
PARAMETER C_XCL7_B_LINESIZE = 4, DT = INTEGER, BUS = XCL7_B, RANGE = (1,4,8,16), ISVALID = (C_NUM_PORTS > 7 && C_XCL7_B_IN_USE), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_xcl_linesize
PARAMETER C_XCL7_B_WRITEXFER = 1, DT = INTEGER, BUS = XCL7_B, RANGE = (0:2), ISVALID = (C_NUM_PORTS > 7 && C_XCL7_B_IN_USE)
PARAMETER C_SPLB7_AWIDTH = 32, DT = INTEGER, BUS = SPLB7, ASSIGNMENT = CONSTANT, ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 2)
PARAMETER C_SPLB7_DWIDTH = 64, DT = INTEGER, BUS = SPLB7, RANGE = (32,64,128), ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 2)
PARAMETER C_SPLB7_NATIVE_DWIDTH = 64, DT = INTEGER, BUS = SPLB7, RANGE = (32,64), ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 2), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_splb_native_dwidth, ASSIGNMENT = OPTIONAL_UPDATE, SYSLEVEL_DRC_PROC = syslevel_drc_splb_native_dwidth, IO_IS = C_SPLB7_NATIVE_DWIDTH
PARAMETER C_SPLB7_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB7, RANGE = (0:16), ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 2)
PARAMETER C_SPLB7_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB7, RANGE = (0:4), ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 2)
PARAMETER C_SPLB7_P2P = 1, DT = INTEGER, BUS = SPLB7, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 2)
PARAMETER C_SPLB7_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB7, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 2)
PARAMETER C_SPLB7_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SPLB7, RANGE = (32,64,128), ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 2)
PARAMETER C_SDMA_CTRL7_BASEADDR = 0xFFFFFFFF, BUS = SDMA_CTRL7, ADDRESS = BASE, PAIR = C_SDMA_CTRL7_HIGHADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = REGISTER, ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 3 && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_SDMA_CTRL7_HIGHADDR = 0x00000000, BUS = SDMA_CTRL7, ADDRESS = HIGH, PAIR = C_SDMA_CTRL7_BASEADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = REGISTER, ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 3 && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_SDMA_CTRL7_AWIDTH = 32, DT = INTEGER, BUS = SDMA_CTRL7, ASSIGNMENT = CONSTANT, ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 3)
PARAMETER C_SDMA_CTRL7_DWIDTH = 64, DT = INTEGER, BUS = SDMA_CTRL7, RANGE = (32,64,128), ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 3)
PARAMETER C_SDMA_CTRL7_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SDMA_CTRL7, RANGE = (32,64), ASSIGNMENT = CONSTANT, ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 3)
PARAMETER C_SDMA_CTRL7_NUM_MASTERS = 1, DT = INTEGER, BUS = SDMA_CTRL7, RANGE = (0:16), ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 3)
PARAMETER C_SDMA_CTRL7_MID_WIDTH = 1, DT = INTEGER, BUS = SDMA_CTRL7, RANGE = (0:4), ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 3)
PARAMETER C_SDMA_CTRL7_P2P = 1, DT = INTEGER, BUS = SDMA_CTRL7, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 3)
PARAMETER C_SDMA_CTRL7_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SDMA_CTRL7, RANGE = (0,1), ASSIGNMENT = CONSTANT, ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 3)
PARAMETER C_SDMA_CTRL7_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SDMA_CTRL7, RANGE = (32,64,128), ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 3)
PARAMETER C_SDMA7_COMPLETED_ERR_TX = 1, DT = INTEGER, BUS = SDMA_LL7, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 3)
PARAMETER C_SDMA7_COMPLETED_ERR_RX = 1, DT = INTEGER, BUS = SDMA_LL7, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 3)
PARAMETER C_SDMA7_PRESCALAR = 1023, DT = INTEGER, BUS = SDMA_LL7, RANGE = (0:1023), ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 3)
PARAMETER C_SDMA7_PI2LL_CLK_RATIO = 1, DT = INTEGER, BUS = SDMA_LL7, RANGE = (1:2), ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 3), ASSIGNMENT = REQUIRE
PARAMETER C_PPC440MC7_BURST_LENGTH = 4, DT = INTEGER, BUS = PPC440MC7, RANGE = (2,4,8), ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 5)
PARAMETER C_PPC440MC7_PIPE_STAGES = 1, DT = INTEGER, BUS = PPC440MC7, RANGE = (0:2), ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 5)
PARAMETER C_VFBC7_CMD_FIFO_DEPTH = 32, DT = INTEGER, BUS = VFBC7, RANGE = (32,64,128,256,512,1024,2048,4096,8192), ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 6)
PARAMETER C_VFBC7_CMD_AFULL_COUNT = 3, DT = INTEGER, BUS = VFBC7, ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 6)
PARAMETER C_VFBC7_RDWD_DATA_WIDTH = 32, DT = INTEGER, BUS = VFBC7, RANGE = (8,16,32,64), ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 6)
PARAMETER C_VFBC7_RDWD_FIFO_DEPTH = 1024, DT = INTEGER, BUS = VFBC7, RANGE = (512,1024,2048,4096,8192), ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 6)
PARAMETER C_VFBC7_RD_AEMPTY_WD_AFULL_COUNT = 3, DT = INTEGER, BUS = VFBC7, ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 6)
PARAMETER C_PI7_RD_FIFO_TYPE = BRAM, DT = STRING, VALUES = ( BRAM = BRAM ,  SRL = SRL ,  DISABLED = Wr-Only ), ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE != 0 && !C_USE_MCB_S6_PHY)
PARAMETER C_PI7_WR_FIFO_TYPE = BRAM, DT = STRING, VALUES = ( BRAM = BRAM ,  SRL = SRL ,  DISABLED = Rd-Only ), ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE != 0 && !C_USE_MCB_S6_PHY), IPLEVEL_DRC_PROC = iplevel_drc_wr_fifo
PARAMETER C_PI7_ADDRACK_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE != 0 && !C_USE_MCB_S6_PHY)
PARAMETER C_PI7_RD_FIFO_APP_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE != 0 && ![xstrncmp C_PI7_RD_FIFO_TYPE DISABLED] && !C_USE_MCB_S6_PHY)
PARAMETER C_PI7_RD_FIFO_MEM_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE != 0 && ![xstrncmp C_PI7_RD_FIFO_TYPE DISABLED] && !C_USE_MCB_S6_PHY)
PARAMETER C_PI7_WR_FIFO_APP_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE != 0 && ![xstrncmp C_PI7_WR_FIFO_TYPE DISABLED] && !C_USE_MCB_S6_PHY)
PARAMETER C_PI7_WR_FIFO_MEM_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE != 0 && ![xstrncmp C_PI7_WR_FIFO_TYPE DISABLED] && !C_USE_MCB_S6_PHY)
PARAMETER C_PI7_PM_USED = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE != 0 && C_PM_ENABLE)
PARAMETER C_PI7_PM_DC_CNTR = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE != 0 && C_PM_ENABLE)
PARAMETER C_WR_TRAINING_PORT = 0, DT = INTEGER, ISVALID = (C_USE_MIG_V4_PHY || C_USE_MIG_V5_PHY), RANGE = (0:7), ASSIGNMENT = OPTIONAL_UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_training_port, SYSLEVEL_DRC_PROC = syslevel_drc_training_port
PARAMETER C_ARB_BRAM_INIT_00 = 0b0000000011111111111111111111111100000000111111111111111111111111000000001111111111111111111111110000000011111111111111111111111100000000111111111111010001000011000000001111111111110010000110100000000011111111111100001101000100000000111111111111011010001000, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_bram_init
PARAMETER C_ARB_BRAM_INIT_01 = 0b0000000011111111111111111111111100000000111111111111111111111111000000001111111111111111111111110000000011111111111111111111111100000000111111111111111111111111000000001111111111111111111111110000000011111111111111111111111100000000111111111111111111111111, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_bram_init
PARAMETER C_ARB_BRAM_INIT_02 = 0b0000000011111111111111111111111100000000111111111111111111111111000000001111111111111111111111110000000011111111111111111111111100000000111111111111011010001000000000001111111111110110100010000000000011111111111101101000100000000000111111111111011010001000, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE
PARAMETER C_ARB_BRAM_INIT_03 = 0b0000000011111111111111111111111100000000111111111111111111111111000000001111111111111111111111110000000011111111111111111111111100000000111111111111111111111111000000001111111111111111111111110000000011111111111111111111111100000000111111111111111111111111, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE
PARAMETER C_ARB_BRAM_INIT_04 = 0b0000000011111111111111111111111100000000111111111111111111111111000000001111111111111111111111110000000011111111111111111111111100000000111111111111010001000011000000001111111111110010000110100000000011111111111100001101000100000000111111111111011010001000, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE
PARAMETER C_ARB_BRAM_INIT_05 = 0b0000000011111111111111111111111100000000111111111111111111111111000000001111111111111111111111110000000011111111111111111111111100000000111111111111111111111111000000001111111111111111111111110000000011111111111111111111111100000000111111111111111111111111, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE
PARAMETER C_ARB_BRAM_INIT_06 = 0b0000000011111111111111111111111100000000111111111111111111111111000000001111111111111111111111110000000011111111111111111111111100000000111111111111011010001000000000001111111111110110100010000000000011111111111101101000100000000000111111111111011010001000, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE
PARAMETER C_ARB_BRAM_INIT_07 = 0b0000000011111111111111111111111100000000111111111111111111111111000000001111111111111111111111110000000011111111111111111111111100000000111111111111111111111111000000001111111111111111111111110000000011111111111111111111111100000000111111111111111111111111, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE
PARAMETER C_NCK_PER_CLK = 1, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_TWR = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_COMPLETE_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_IS_WRITE_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_PHYIF_RAS_N_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_PHYIF_CAS_N_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_PHYIF_WE_N_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_RMW_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_SKIP_0_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_PHYIF_DQS_O_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_SKIP_1_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_DP_RDFIFO_PUSH_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_SKIP_2_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_AP_COL_CNT_LOAD_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_AP_COL_CNT_ENABLE_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_AP_PRECHARGE_ADDR10_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_AP_ROW_COL_SEL_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_PHYIF_FORCE_DM_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_REPEAT4_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_DFI_RAS_N_0_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_DFI_CAS_N_0_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_DFI_WE_N_0_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_DFI_RAS_N_1_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_DFI_CAS_N_1_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_DFI_WE_N_1_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_DP_WRFIFO_POP_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_DFI_WRDATA_EN_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_DFI_RDDATA_EN_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_AP_OTF_ADDR12_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_ARB_RDMODWR_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_AP_COL_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_AP_PI_ADDR_CE_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_AP_PORT_SELECT_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_AP_PIPELINE1_CE_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_DP_LOAD_RDWDADDR_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_DP_RDFIFO_WHICHPORT_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_DP_SIZE_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_DP_WRFIFO_WHICHPORT_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_PHYIF_DUMMYREADSTART_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q0_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q1_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q2_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q3_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q4_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q5_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q6_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q7_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q8_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q9_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q10_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q11_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q12_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q13_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q14_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q15_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q16_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q17_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q18_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q19_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q20_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q21_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q22_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q23_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q24_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q25_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q26_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q27_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q28_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q29_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q30_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q31_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q32_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q33_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q34_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q35_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_SKIP_1_VALUE = 15, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_SKIP_2_VALUE = 15, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_SKIP_3_VALUE = 15, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_SKIP_4_VALUE = 20, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_SKIP_5_VALUE = 36, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_SKIP_6_VALUE = 20, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_SKIP_7_VALUE = 36, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_B16_REPEAT_CNT = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_B32_REPEAT_CNT = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_B64_REPEAT_CNT = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_ZQCS_REPEAT_CNT = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_BASEADDR_CTRL0 = 0x000, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_HIGHADDR_CTRL0 = 0x00d, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_BASEADDR_CTRL1 = 0x00e, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_HIGHADDR_CTRL1 = 0x017, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_BASEADDR_CTRL2 = 0x018, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_HIGHADDR_CTRL2 = 0x025, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_BASEADDR_CTRL3 = 0x026, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_HIGHADDR_CTRL3 = 0x02f, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_BASEADDR_CTRL4 = 0x030, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_HIGHADDR_CTRL4 = 0x03d, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_BASEADDR_CTRL5 = 0x03e, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_HIGHADDR_CTRL5 = 0x047, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_BASEADDR_CTRL6 = 0x048, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_HIGHADDR_CTRL6 = 0x05b, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_BASEADDR_CTRL7 = 0x05c, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_HIGHADDR_CTRL7 = 0x06a, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_BASEADDR_CTRL8 = 0x06b, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_HIGHADDR_CTRL8 = 0x086, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_BASEADDR_CTRL9 = 0x087, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_HIGHADDR_CTRL9 = 0x09d, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_BASEADDR_CTRL10 = 0x09e, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_HIGHADDR_CTRL10 = 0x0a5, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_BASEADDR_CTRL11 = 0x0a6, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_HIGHADDR_CTRL11 = 0x0ad, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_BASEADDR_CTRL12 = 0x0ae, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_HIGHADDR_CTRL12 = 0x0b5, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_BASEADDR_CTRL13 = 0x0b6, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_HIGHADDR_CTRL13 = 0x0bd, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_BASEADDR_CTRL14 = 0x0be, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_HIGHADDR_CTRL14 = 0x0d0, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_BASEADDR_CTRL15 = 0x0d1, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_HIGHADDR_CTRL15 = 0x0d8, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_BASEADDR_CTRL16 = 0x0d9, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, ISVALID = (C_USE_MIG_V6_PHY && [xstrncmp C_MEM_TYPE  DDR3 ])
PARAMETER C_HIGHADDR_CTRL16 = 0x0da, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, ISVALID = (C_USE_MIG_V6_PHY && [xstrncmp C_MEM_TYPE  DDR3 ])
PARAMETER C_CTRL_BRAM_INIT_3F = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_3E = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_3D = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_3C = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_3B = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_3A = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_39 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_38 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_37 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_36 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_35 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_34 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_33 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_32 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_31 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_30 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_2F = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_2E = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_2D = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_2C = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_2B = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_2A = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_29 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_28 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_27 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_26 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_25 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_24 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_23 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_22 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_21 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_20 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_1F = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_1E = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_1D = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_1C = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_1B = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_1A = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_19 = 0x000002FC000002FC000002FC000002FC000002FD000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_18 = 0x000002FC000002FC000002FC000002FC000002FC000002F0000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_17 = 0x000002FC000042E8000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_16 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_15 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_14 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_13 = 0x000002FC000002FC000002FC000002FC000002FC000042E8000006FC000026F5, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_12 = 0x000006FC000026F4000006FC000026F4000006FC000026F4000006FC000026F4, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_11 = 0x000006FC000026F4000006FC000026F4000006FC000016F4000082FC000082FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_10 = 0x000082F8000002FC000002FC000002FC000042E8000002FC000002FD000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_0F = 0x000002FC000002FC0000093C000029240000093C000029240000093C00002924, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_0E = 0x0000093C000029240000093C000029240000093C000029240000093C00002924, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_0D = 0x0000093C000019240000803C000082FC000082F8000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_0C = 0x000042E8000006FC000026F5000006FC000026F4000006FC000026F4000006FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_0B = 0x000016F4000082FC000082FC000082F8000002FC000002FC000002FC000042E8, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_0A = 0x000002FC000002FD000002FC000002FC000002FC0000093C000029240000093C, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_09 = 0x000029240000093C000029240000093C000019240000803C000082FC000082F8, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_08 = 0x000002FC000002FC000002FC000042E8000002FC000006FD000016F4000082FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_07 = 0x000082FC000082F8000002FC000002FC000002FC000042E8000002FC000002FD, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_06 = 0x000002FC000002FC000002FC0000093C000019240000803C000082FC000082F8, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_05 = 0x000002FC000002FC000002FC000042E8000002FC000002FD000016F4000082FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_04 = 0x000082FC000082F8000002FC000002FC000002FC000042E8000002FC000002FD, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_03 = 0x000002FC000002FC000002FC0000013C000019240000803C000082FC000082F8, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_02 = 0x000002FC000002FC000002FC000042E8000002FC000002FD000016F4000082FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_01 = 0x000082FC000082F8000002FC000002FC000002FC000042E8000002FC000002FD, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_00 = 0x000002FC000002FC000002FC0000013C000019240000803C000082FC000082F8, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_SRVAL = 0x0000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INITP_07 = 0x0000000000000000000000000000000000000000000000000000000000000000, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INITP_06 = 0x0000000000000000000000000000000000000000000000000000000000000000, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INITP_05 = 0x0000000000000000000000000000000000000000000000000000000000000000, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INITP_04 = 0x0000000000000000000000000000000000000000000000000000000000000000, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INITP_03 = 0x0000000000000000000000000000000000000000000000001111111111111111, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INITP_02 = 0x1110000000000000000000000000000000011111111111111111111111111111, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INITP_01 = 0x1110000000000000000011111111111111111111111111000000000111111011, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INITP_00 = 0x1111111111110001111110111111111111111001111110111111111111111001, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter

## Ports
PORT FSL0_M_Clk = FSL_M_Clk, DIR = I, BUS = XCL0, SIGIS = CLK, INITIALVAL = VCC
PORT FSL0_M_Write = FSL_M_Write, DIR = I, BUS = XCL0
PORT FSL0_M_Data = FSL_M_Data, DIR = I, BUS = XCL0, VEC = [0:31]
PORT FSL0_M_Control = FSL_M_Control, DIR = I, BUS = XCL0
PORT FSL0_M_Full = FSL_M_Full, DIR = O, BUS = XCL0
PORT FSL0_S_Clk = FSL_S_Clk, DIR = I, BUS = XCL0
PORT FSL0_S_Read = FSL_S_Read, DIR = I, BUS = XCL0
PORT FSL0_S_Data = FSL_S_Data, DIR = O, BUS = XCL0, VEC = [0:31]
PORT FSL0_S_Control = FSL_S_Control, DIR = O, BUS = XCL0
PORT FSL0_S_Exists = FSL_S_Exists, DIR = O, BUS = XCL0
PORT FSL0_B_M_Clk = FSL_M_Clk, DIR = I, BUS = XCL0_B, SIGIS = CLK, INITIALVAL = VCC
PORT FSL0_B_M_Write = FSL_M_Write, DIR = I, BUS = XCL0_B
PORT FSL0_B_M_Data = FSL_M_Data, DIR = I, BUS = XCL0_B, VEC = [0:31]
PORT FSL0_B_M_Control = FSL_M_Control, DIR = I, BUS = XCL0_B
PORT FSL0_B_M_Full = FSL_M_Full, DIR = O, BUS = XCL0_B
PORT FSL0_B_S_Clk = FSL_S_Clk, DIR = I, BUS = XCL0_B
PORT FSL0_B_S_Read = FSL_S_Read, DIR = I, BUS = XCL0_B
PORT FSL0_B_S_Data = FSL_S_Data, DIR = O, BUS = XCL0_B, VEC = [0:31]
PORT FSL0_B_S_Control = FSL_S_Control, DIR = O, BUS = XCL0_B
PORT FSL0_B_S_Exists = FSL_S_Exists, DIR = O, BUS = XCL0_B
PORT SPLB0_Clk = "", DIR = I, BUS = SPLB0, SIGIS = CLK, INITIALVAL = VCC
PORT SPLB0_Rst = SPLB_Rst, DIR = I, BUS = SPLB0, SIGIS = RST
PORT SPLB0_PLB_ABus = PLB_ABus, DIR = I, BUS = SPLB0, VEC = [0:31]
PORT SPLB0_PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB0
PORT SPLB0_PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB0
PORT SPLB0_PLB_masterID = PLB_masterID, DIR = I, BUS = SPLB0, VEC = [0:(C_SPLB0_MID_WIDTH-1)]
PORT SPLB0_PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB0
PORT SPLB0_PLB_BE = PLB_BE, DIR = I, BUS = SPLB0, VEC = [0:((C_SPLB0_DWIDTH/8)-1)]
PORT SPLB0_PLB_UABus = PLB_UABus, DIR = I, BUS = SPLB0, VEC = [0:31]
PORT SPLB0_PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB0
PORT SPLB0_PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB0
PORT SPLB0_PLB_abort = PLB_abort, DIR = I, BUS = SPLB0
PORT SPLB0_PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB0
PORT SPLB0_PLB_MSize = PLB_MSize, DIR = I, BUS = SPLB0, VEC = [0:1]
PORT SPLB0_PLB_size = PLB_size, DIR = I, BUS = SPLB0, VEC = [0:3]
PORT SPLB0_PLB_type = PLB_type, DIR = I, BUS = SPLB0, VEC = [0:2]
PORT SPLB0_PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB0
PORT SPLB0_PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB0
PORT SPLB0_PLB_wrPendPri = PLB_wrPendPri, DIR = I, BUS = SPLB0, VEC = [0:1]
PORT SPLB0_PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB0
PORT SPLB0_PLB_rdPendPri = PLB_rdPendPri, DIR = I, BUS = SPLB0, VEC = [0:1]
PORT SPLB0_PLB_reqPri = PLB_reqPri, DIR = I, BUS = SPLB0, VEC = [0:1]
PORT SPLB0_PLB_TAttribute = PLB_TAttribute, DIR = I, BUS = SPLB0, VEC = [0:15]
PORT SPLB0_PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB0
PORT SPLB0_PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB0
PORT SPLB0_PLB_wrDBus = PLB_wrDBus, DIR = I, BUS = SPLB0, VEC = [0:(C_SPLB0_DWIDTH-1)]
PORT SPLB0_Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB0
PORT SPLB0_Sl_SSize = Sl_SSize, DIR = O, BUS = SPLB0, VEC = [0:1]
PORT SPLB0_Sl_wait = Sl_wait, DIR = O, BUS = SPLB0
PORT SPLB0_Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB0
PORT SPLB0_Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB0
PORT SPLB0_Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB0
PORT SPLB0_Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB0
PORT SPLB0_Sl_rdDBus = Sl_rdDBus, DIR = O, BUS = SPLB0, VEC = [0:(C_SPLB0_DWIDTH-1)]
PORT SPLB0_Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, BUS = SPLB0, VEC = [0:3]
PORT SPLB0_Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB0
PORT SPLB0_Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB0
PORT SPLB0_Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB0
PORT SPLB0_Sl_MBusy = Sl_MBusy, DIR = O, BUS = SPLB0, VEC = [0:(C_SPLB0_NUM_MASTERS-1)]
PORT SPLB0_Sl_MRdErr = Sl_MRdErr, DIR = O, BUS = SPLB0, VEC = [0:(C_SPLB0_NUM_MASTERS-1)]
PORT SPLB0_Sl_MWrErr = Sl_MWrErr, DIR = O, BUS = SPLB0, VEC = [0:(C_SPLB0_NUM_MASTERS-1)]
PORT SPLB0_Sl_MIRQ = Sl_MIRQ, DIR = O, BUS = SPLB0, VEC = [0:(C_SPLB0_NUM_MASTERS-1)]
PORT SDMA0_Clk = "", DIR = I, SIGIS = CLK, ISVALID = (C_NUM_PORTS > 0 && C_PIM0_BASETYPE == 3), ASSIGNMENT = REQUIRE
PORT SDMA0_Rx_IntOut = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, ISVALID = (C_NUM_PORTS > 0 && C_PIM0_BASETYPE == 3)
PORT SDMA0_Tx_IntOut = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, ISVALID = (C_NUM_PORTS > 0 && C_PIM0_BASETYPE == 3)
PORT SDMA0_RstOut = LL_RST_ACK, DIR = O, BUS = SDMA_LL0
PORT SDMA0_TX_D = LL_Tx_Data, DIR = O, BUS = SDMA_LL0, VEC = [0:31]
PORT SDMA0_TX_Rem = LL_Tx_Rem, DIR = O, BUS = SDMA_LL0, VEC = [0:3]
PORT SDMA0_TX_SOF = LL_Tx_SOF_n, DIR = O, BUS = SDMA_LL0
PORT SDMA0_TX_EOF = LL_Tx_EOF_n, DIR = O, BUS = SDMA_LL0
PORT SDMA0_TX_SOP = LL_Tx_SOP_n, DIR = O, BUS = SDMA_LL0
PORT SDMA0_TX_EOP = LL_Tx_EOP_n, DIR = O, BUS = SDMA_LL0
PORT SDMA0_TX_Src_Rdy = LL_Tx_SrcRdy_n, DIR = O, BUS = SDMA_LL0
PORT SDMA0_TX_Dst_Rdy = LL_Tx_DstRdy_n, DIR = I, BUS = SDMA_LL0, INITIALVAL = VCC
PORT SDMA0_RX_D = LL_Rx_Data, DIR = I, BUS = SDMA_LL0, INITIALVAL = GND, VEC = [0:31]
PORT SDMA0_RX_Rem = LL_Rx_Rem, DIR = I, BUS = SDMA_LL0, INITIALVAL = VCC, VEC = [0:3]
PORT SDMA0_RX_SOF = LL_Rx_SOF_n, DIR = I, BUS = SDMA_LL0, INITIALVAL = VCC
PORT SDMA0_RX_EOF = LL_Rx_EOF_n, DIR = I, BUS = SDMA_LL0, INITIALVAL = VCC
PORT SDMA0_RX_SOP = LL_Rx_SOP_n, DIR = I, BUS = SDMA_LL0, INITIALVAL = VCC
PORT SDMA0_RX_EOP = LL_Rx_EOP_n, DIR = I, BUS = SDMA_LL0, INITIALVAL = VCC
PORT SDMA0_RX_Src_Rdy = LL_Rx_SrcRdy_n, DIR = I, BUS = SDMA_LL0, INITIALVAL = VCC
PORT SDMA0_RX_Dst_Rdy = LL_Rx_DstRdy_n, DIR = O, BUS = SDMA_LL0
PORT SDMA_CTRL0_Clk = "", DIR = I, BUS = SDMA_CTRL0, SIGIS = CLK, INITIALVAL = VCC
PORT SDMA_CTRL0_Rst = SPLB_Rst, DIR = I, BUS = SDMA_CTRL0, SIGIS = RST
PORT SDMA_CTRL0_PLB_ABus = PLB_ABus, DIR = I, BUS = SDMA_CTRL0, VEC = [0:31]
PORT SDMA_CTRL0_PLB_PAValid = PLB_PAValid, DIR = I, BUS = SDMA_CTRL0
PORT SDMA_CTRL0_PLB_SAValid = PLB_SAValid, DIR = I, BUS = SDMA_CTRL0
PORT SDMA_CTRL0_PLB_masterID = PLB_masterID, DIR = I, BUS = SDMA_CTRL0, VEC = [0:(C_SDMA_CTRL0_MID_WIDTH-1)]
PORT SDMA_CTRL0_PLB_RNW = PLB_RNW, DIR = I, BUS = SDMA_CTRL0
PORT SDMA_CTRL0_PLB_BE = PLB_BE, DIR = I, BUS = SDMA_CTRL0, VEC = [0:((C_SDMA_CTRL0_DWIDTH/8)-1)]
PORT SDMA_CTRL0_PLB_UABus = PLB_UABus, DIR = I, BUS = SDMA_CTRL0, VEC = [0:31]
PORT SDMA_CTRL0_PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SDMA_CTRL0
PORT SDMA_CTRL0_PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SDMA_CTRL0
PORT SDMA_CTRL0_PLB_abort = PLB_abort, DIR = I, BUS = SDMA_CTRL0
PORT SDMA_CTRL0_PLB_busLock = PLB_busLock, DIR = I, BUS = SDMA_CTRL0
PORT SDMA_CTRL0_PLB_MSize = PLB_MSize, DIR = I, BUS = SDMA_CTRL0, VEC = [0:1]
PORT SDMA_CTRL0_PLB_size = PLB_size, DIR = I, BUS = SDMA_CTRL0, VEC = [0:3]
PORT SDMA_CTRL0_PLB_type = PLB_type, DIR = I, BUS = SDMA_CTRL0, VEC = [0:2]
PORT SDMA_CTRL0_PLB_lockErr = PLB_lockErr, DIR = I, BUS = SDMA_CTRL0
PORT SDMA_CTRL0_PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SDMA_CTRL0
PORT SDMA_CTRL0_PLB_wrPendPri = PLB_wrPendPri, DIR = I, BUS = SDMA_CTRL0, VEC = [0:1]
PORT SDMA_CTRL0_PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SDMA_CTRL0
PORT SDMA_CTRL0_PLB_rdPendPri = PLB_rdPendPri, DIR = I, BUS = SDMA_CTRL0, VEC = [0:1]
PORT SDMA_CTRL0_PLB_reqPri = PLB_reqPri, DIR = I, BUS = SDMA_CTRL0, VEC = [0:1]
PORT SDMA_CTRL0_PLB_TAttribute = PLB_TAttribute, DIR = I, BUS = SDMA_CTRL0, VEC = [0:15]
PORT SDMA_CTRL0_PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SDMA_CTRL0
PORT SDMA_CTRL0_PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SDMA_CTRL0
PORT SDMA_CTRL0_PLB_wrDBus = PLB_wrDBus, DIR = I, BUS = SDMA_CTRL0, VEC = [0:(C_SDMA_CTRL0_DWIDTH-1)]
PORT SDMA_CTRL0_Sl_addrAck = Sl_addrAck, DIR = O, BUS = SDMA_CTRL0
PORT SDMA_CTRL0_Sl_SSize = Sl_SSize, DIR = O, BUS = SDMA_CTRL0, VEC = [0:1]
PORT SDMA_CTRL0_Sl_wait = Sl_wait, DIR = O, BUS = SDMA_CTRL0
PORT SDMA_CTRL0_Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SDMA_CTRL0
PORT SDMA_CTRL0_Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SDMA_CTRL0
PORT SDMA_CTRL0_Sl_wrComp = Sl_wrComp, DIR = O, BUS = SDMA_CTRL0
PORT SDMA_CTRL0_Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SDMA_CTRL0
PORT SDMA_CTRL0_Sl_rdDBus = Sl_rdDBus, DIR = O, BUS = SDMA_CTRL0, VEC = [0:(C_SDMA_CTRL0_DWIDTH-1)]
PORT SDMA_CTRL0_Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, BUS = SDMA_CTRL0, VEC = [0:3]
PORT SDMA_CTRL0_Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SDMA_CTRL0
PORT SDMA_CTRL0_Sl_rdComp = Sl_rdComp, DIR = O, BUS = SDMA_CTRL0
PORT SDMA_CTRL0_Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SDMA_CTRL0
PORT SDMA_CTRL0_Sl_MBusy = Sl_MBusy, DIR = O, BUS = SDMA_CTRL0, VEC = [0:(C_SDMA_CTRL0_NUM_MASTERS-1)]
PORT SDMA_CTRL0_Sl_MRdErr = Sl_MRdErr, DIR = O, BUS = SDMA_CTRL0, VEC = [0:(C_SDMA_CTRL0_NUM_MASTERS-1)]
PORT SDMA_CTRL0_Sl_MWrErr = Sl_MWrErr, DIR = O, BUS = SDMA_CTRL0, VEC = [0:(C_SDMA_CTRL0_NUM_MASTERS-1)]
PORT SDMA_CTRL0_Sl_MIRQ = Sl_MIRQ, DIR = O, BUS = SDMA_CTRL0, VEC = [0:(C_SDMA_CTRL0_NUM_MASTERS-1)]
PORT PIM0_Addr = Addr, DIR = I, BUS = MPMC_PIM0, VEC = [31:0]
PORT PIM0_AddrReq = AddrReq, DIR = I, BUS = MPMC_PIM0
PORT PIM0_AddrAck = AddrAck, DIR = O, BUS = MPMC_PIM0
PORT PIM0_RNW = RNW, DIR = I, BUS = MPMC_PIM0
PORT PIM0_Size = Size, DIR = I, BUS = MPMC_PIM0, VEC = [3:0]
PORT PIM0_RdModWr = RdModWr, DIR = I, BUS = MPMC_PIM0
PORT PIM0_WrFIFO_Data = WrFIFO_Data, DIR = I, BUS = MPMC_PIM0, VEC = [(C_PIM0_DATA_WIDTH-1):0]
PORT PIM0_WrFIFO_BE = WrFIFO_BE, DIR = I, BUS = MPMC_PIM0, VEC = [(C_PIM0_DATA_WIDTH/8-1):0]
PORT PIM0_WrFIFO_Push = WrFIFO_Push, DIR = I, BUS = MPMC_PIM0
PORT PIM0_RdFIFO_Data = RdFIFO_Data, DIR = O, BUS = MPMC_PIM0, VEC = [(C_PIM0_DATA_WIDTH-1):0]
PORT PIM0_RdFIFO_Pop = RdFIFO_Pop, DIR = I, BUS = MPMC_PIM0
PORT PIM0_RdFIFO_RdWdAddr = RdFIFO_RdWdAddr, DIR = O, BUS = MPMC_PIM0, VEC = [3:0]
PORT PIM0_WrFIFO_Empty = WrFIFO_Empty, DIR = O, BUS = MPMC_PIM0
PORT PIM0_WrFIFO_AlmostFull = WrFIFO_AlmostFull, DIR = O, BUS = MPMC_PIM0
PORT PIM0_WrFIFO_Flush = WrFIFO_Flush, DIR = I, BUS = MPMC_PIM0
PORT PIM0_RdFIFO_Empty = RdFIFO_Empty, DIR = O, BUS = MPMC_PIM0
PORT PIM0_RdFIFO_Flush = RdFIFO_Flush, DIR = I, BUS = MPMC_PIM0
PORT PIM0_RdFIFO_Latency = RDFIFO_Latency, DIR = O, BUS = MPMC_PIM0, VEC = [1:0]
PORT PIM0_InitDone = InitDone, DIR = O, BUS = MPMC_PIM0
PORT PPC440MC0_MIMCReadNotWrite = MIMCREADNOTWRITE, DIR = I, BUS = PPC440MC0
PORT PPC440MC0_MIMCAddress = MIMCADDRESS, DIR = I, BUS = PPC440MC0, VEC = [0:35]
PORT PPC440MC0_MIMCAddressValid = MIMCADDRESSVALID, DIR = I, BUS = PPC440MC0
PORT PPC440MC0_MIMCWriteData = MIMCWRITEDATA, DIR = I, BUS = PPC440MC0, VEC = [0:127]
PORT PPC440MC0_MIMCWriteDataValid = MIMCWRITEDATAVALID, DIR = I, BUS = PPC440MC0
PORT PPC440MC0_MIMCByteEnable = MIMCBYTEENABLE, DIR = I, BUS = PPC440MC0, VEC = [0:15]
PORT PPC440MC0_MIMCBankConflict = MIMCBANKCONFLICT, DIR = I, BUS = PPC440MC0
PORT PPC440MC0_MIMCRowConflict = MIMCROWCONFLICT, DIR = I, BUS = PPC440MC0
PORT PPC440MC0_MCMIReadData = MCMIREADDATA, DIR = O, BUS = PPC440MC0, VEC = [0:127]
PORT PPC440MC0_MCMIReadDataValid = MCMIREADDATAVALID, DIR = O, BUS = PPC440MC0
PORT PPC440MC0_MCMIReadDataErr = MCMIREADDATAERR, DIR = O, BUS = PPC440MC0
PORT PPC440MC0_MCMIAddrReadyToAccept = MCMIADDRREADYTOACCEPT, DIR = O, BUS = PPC440MC0
PORT VFBC0_Cmd_Clk = cmd_clk, DIR = I, BUS = VFBC0
PORT VFBC0_Cmd_Reset = cmd_reset, DIR = I, BUS = VFBC0
PORT VFBC0_Cmd_Data = cmd_data, DIR = I, BUS = VFBC0, VEC = [31:0]
PORT VFBC0_Cmd_Write = cmd_write, DIR = I, BUS = VFBC0
PORT VFBC0_Cmd_End = cmd_end, DIR = I, BUS = VFBC0
PORT VFBC0_Cmd_Full = cmd_full, DIR = O, BUS = VFBC0
PORT VFBC0_Cmd_Almost_Full = cmd_almost_full, DIR = O, BUS = VFBC0
PORT VFBC0_Cmd_Idle = cmd_idle, DIR = O, BUS = VFBC0
PORT VFBC0_Wd_Clk = wd_clk, DIR = I, BUS = VFBC0
PORT VFBC0_Wd_Reset = wd_reset, DIR = I, BUS = VFBC0
PORT VFBC0_Wd_Write = wd_write, DIR = I, BUS = VFBC0
PORT VFBC0_Wd_End_Burst = wd_end_burst, DIR = I, BUS = VFBC0
PORT VFBC0_Wd_Flush = wd_flush, DIR = I, BUS = VFBC0
PORT VFBC0_Wd_Data = wd_data, DIR = I, BUS = VFBC0, VEC = [C_VFBC0_RDWD_DATA_WIDTH-1:0]
PORT VFBC0_Wd_Data_BE = wd_data_be, DIR = I, BUS = VFBC0, VEC = [C_VFBC0_RDWD_DATA_WIDTH/8-1:0]
PORT VFBC0_Wd_Full = wd_full, DIR = O, BUS = VFBC0
PORT VFBC0_Wd_Almost_Full = wd_almost_full, DIR = O, BUS = VFBC0
PORT VFBC0_Rd_Clk = rd_clk, DIR = I, BUS = VFBC0
PORT VFBC0_Rd_Reset = rd_reset, DIR = I, BUS = VFBC0
PORT VFBC0_Rd_Read = rd_read, DIR = I, BUS = VFBC0
PORT VFBC0_Rd_End_Burst = rd_end_burst, DIR = I, BUS = VFBC0
PORT VFBC0_Rd_Flush = rd_flush, DIR = I, BUS = VFBC0
PORT VFBC0_Rd_Data = rd_data, DIR = O, BUS = VFBC0, VEC = [C_VFBC0_RDWD_DATA_WIDTH-1:0]
PORT VFBC0_Rd_Empty = rd_empty, DIR = O, BUS = VFBC0
PORT VFBC0_Rd_Almost_Empty = rd_almost_empty, DIR = O, BUS = VFBC0
PORT MCB0_cmd_clk = cmd_clk, DIR = I, BUS = MCB0
PORT MCB0_cmd_en = cmd_en, DIR = I, BUS = MCB0
PORT MCB0_cmd_instr = cmd_instr, DIR = I, BUS = MCB0, VEC = [2:0]
PORT MCB0_cmd_bl = cmd_bl, DIR = I, BUS = MCB0, VEC = [5:0]
PORT MCB0_cmd_byte_addr = cmd_byte_addr, DIR = I, BUS = MCB0, VEC = [29:0]
PORT MCB0_cmd_empty = cmd_empty, DIR = O, BUS = MCB0
PORT MCB0_cmd_full = cmd_full, DIR = O, BUS = MCB0
PORT MCB0_wr_clk = wr_clk, DIR = I, BUS = MCB0
PORT MCB0_wr_en = wr_en, DIR = I, BUS = MCB0
PORT MCB0_wr_mask = wr_mask, DIR = I, BUS = MCB0, VEC = [C_PIM0_DATA_WIDTH/8-1:0]
PORT MCB0_wr_data = wr_data, DIR = I, BUS = MCB0, VEC = [C_PIM0_DATA_WIDTH-1:0]
PORT MCB0_wr_full = wr_full, DIR = O, BUS = MCB0
PORT MCB0_wr_empty = wr_empty, DIR = O, BUS = MCB0
PORT MCB0_wr_count = wr_count, DIR = O, BUS = MCB0, VEC = [6:0]
PORT MCB0_wr_underrun = wr_underrun, DIR = O, BUS = MCB0
PORT MCB0_wr_error = wr_error, DIR = O, BUS = MCB0
PORT MCB0_rd_clk = rd_clk, DIR = I, BUS = MCB0
PORT MCB0_rd_en = rd_en, DIR = I, BUS = MCB0
PORT MCB0_rd_data = rd_data, DIR = O, BUS = MCB0, VEC = [C_PIM0_DATA_WIDTH-1:0]
PORT MCB0_rd_full = rd_full, DIR = O, BUS = MCB0
PORT MCB0_rd_empty = rd_empty, DIR = O, BUS = MCB0
PORT MCB0_rd_count = rd_count, DIR = O, BUS = MCB0, VEC = [6:0]
PORT MCB0_rd_overflow = rd_overflow, DIR = O, BUS = MCB0
PORT MCB0_rd_error = rd_error, DIR = O, BUS = MCB0
PORT FSL1_M_Clk = FSL_M_Clk, DIR = I, BUS = XCL1, SIGIS = CLK, INITIALVAL = VCC
PORT FSL1_M_Write = FSL_M_Write, DIR = I, BUS = XCL1
PORT FSL1_M_Data = FSL_M_Data, DIR = I, BUS = XCL1, VEC = [0:31]
PORT FSL1_M_Control = FSL_M_Control, DIR = I, BUS = XCL1
PORT FSL1_M_Full = FSL_M_Full, DIR = O, BUS = XCL1
PORT FSL1_S_Clk = FSL_S_Clk, DIR = I, BUS = XCL1
PORT FSL1_S_Read = FSL_S_Read, DIR = I, BUS = XCL1
PORT FSL1_S_Data = FSL_S_Data, DIR = O, BUS = XCL1, VEC = [0:31]
PORT FSL1_S_Control = FSL_S_Control, DIR = O, BUS = XCL1
PORT FSL1_S_Exists = FSL_S_Exists, DIR = O, BUS = XCL1
PORT FSL1_B_M_Clk = FSL_M_Clk, DIR = I, BUS = XCL1_B, SIGIS = CLK, INITIALVAL = VCC
PORT FSL1_B_M_Write = FSL_M_Write, DIR = I, BUS = XCL1_B
PORT FSL1_B_M_Data = FSL_M_Data, DIR = I, BUS = XCL1_B, VEC = [0:31]
PORT FSL1_B_M_Control = FSL_M_Control, DIR = I, BUS = XCL1_B
PORT FSL1_B_M_Full = FSL_M_Full, DIR = O, BUS = XCL1_B
PORT FSL1_B_S_Clk = FSL_S_Clk, DIR = I, BUS = XCL1_B
PORT FSL1_B_S_Read = FSL_S_Read, DIR = I, BUS = XCL1_B
PORT FSL1_B_S_Data = FSL_S_Data, DIR = O, BUS = XCL1_B, VEC = [0:31]
PORT FSL1_B_S_Control = FSL_S_Control, DIR = O, BUS = XCL1_B
PORT FSL1_B_S_Exists = FSL_S_Exists, DIR = O, BUS = XCL1_B
PORT SPLB1_Clk = "", DIR = I, BUS = SPLB1, SIGIS = CLK, INITIALVAL = VCC
PORT SPLB1_Rst = SPLB_Rst, DIR = I, BUS = SPLB1, SIGIS = RST
PORT SPLB1_PLB_ABus = PLB_ABus, DIR = I, BUS = SPLB1, VEC = [0:31]
PORT SPLB1_PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB1
PORT SPLB1_PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB1
PORT SPLB1_PLB_masterID = PLB_masterID, DIR = I, BUS = SPLB1, VEC = [0:(C_SPLB1_MID_WIDTH-1)]
PORT SPLB1_PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB1
PORT SPLB1_PLB_BE = PLB_BE, DIR = I, BUS = SPLB1, VEC = [0:((C_SPLB1_DWIDTH/8)-1)]
PORT SPLB1_PLB_UABus = PLB_UABus, DIR = I, BUS = SPLB1, VEC = [0:31]
PORT SPLB1_PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB1
PORT SPLB1_PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB1
PORT SPLB1_PLB_abort = PLB_abort, DIR = I, BUS = SPLB1
PORT SPLB1_PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB1
PORT SPLB1_PLB_MSize = PLB_MSize, DIR = I, BUS = SPLB1, VEC = [0:1]
PORT SPLB1_PLB_size = PLB_size, DIR = I, BUS = SPLB1, VEC = [0:3]
PORT SPLB1_PLB_type = PLB_type, DIR = I, BUS = SPLB1, VEC = [0:2]
PORT SPLB1_PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB1
PORT SPLB1_PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB1
PORT SPLB1_PLB_wrPendPri = PLB_wrPendPri, DIR = I, BUS = SPLB1, VEC = [0:1]
PORT SPLB1_PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB1
PORT SPLB1_PLB_rdPendPri = PLB_rdPendPri, DIR = I, BUS = SPLB1, VEC = [0:1]
PORT SPLB1_PLB_reqPri = PLB_reqPri, DIR = I, BUS = SPLB1, VEC = [0:1]
PORT SPLB1_PLB_TAttribute = PLB_TAttribute, DIR = I, BUS = SPLB1, VEC = [0:15]
PORT SPLB1_PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB1
PORT SPLB1_PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB1
PORT SPLB1_PLB_wrDBus = PLB_wrDBus, DIR = I, BUS = SPLB1, VEC = [0:(C_SPLB1_DWIDTH-1)]
PORT SPLB1_Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB1
PORT SPLB1_Sl_SSize = Sl_SSize, DIR = O, BUS = SPLB1, VEC = [0:1]
PORT SPLB1_Sl_wait = Sl_wait, DIR = O, BUS = SPLB1
PORT SPLB1_Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB1
PORT SPLB1_Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB1
PORT SPLB1_Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB1
PORT SPLB1_Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB1
PORT SPLB1_Sl_rdDBus = Sl_rdDBus, DIR = O, BUS = SPLB1, VEC = [0:(C_SPLB1_DWIDTH-1)]
PORT SPLB1_Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, BUS = SPLB1, VEC = [0:3]
PORT SPLB1_Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB1
PORT SPLB1_Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB1
PORT SPLB1_Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB1
PORT SPLB1_Sl_MBusy = Sl_MBusy, DIR = O, BUS = SPLB1, VEC = [0:(C_SPLB1_NUM_MASTERS-1)]
PORT SPLB1_Sl_MRdErr = Sl_MRdErr, DIR = O, BUS = SPLB1, VEC = [0:(C_SPLB1_NUM_MASTERS-1)]
PORT SPLB1_Sl_MWrErr = Sl_MWrErr, DIR = O, BUS = SPLB1, VEC = [0:(C_SPLB1_NUM_MASTERS-1)]
PORT SPLB1_Sl_MIRQ = Sl_MIRQ, DIR = O, BUS = SPLB1, VEC = [0:(C_SPLB1_NUM_MASTERS-1)]
PORT SDMA1_Clk = "", DIR = I, SIGIS = CLK, ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 3), ASSIGNMENT = REQUIRE
PORT SDMA1_Rx_IntOut = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 3)
PORT SDMA1_Tx_IntOut = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 3)
PORT SDMA1_RstOut = LL_RST_ACK, DIR = O, BUS = SDMA_LL1
PORT SDMA1_TX_D = LL_Tx_Data, DIR = O, BUS = SDMA_LL1, VEC = [0:31]
PORT SDMA1_TX_Rem = LL_Tx_Rem, DIR = O, BUS = SDMA_LL1, VEC = [0:3]
PORT SDMA1_TX_SOF = LL_Tx_SOF_n, DIR = O, BUS = SDMA_LL1
PORT SDMA1_TX_EOF = LL_Tx_EOF_n, DIR = O, BUS = SDMA_LL1
PORT SDMA1_TX_SOP = LL_Tx_SOP_n, DIR = O, BUS = SDMA_LL1
PORT SDMA1_TX_EOP = LL_Tx_EOP_n, DIR = O, BUS = SDMA_LL1
PORT SDMA1_TX_Src_Rdy = LL_Tx_SrcRdy_n, DIR = O, BUS = SDMA_LL1
PORT SDMA1_TX_Dst_Rdy = LL_Tx_DstRdy_n, DIR = I, BUS = SDMA_LL1, INITIALVAL = VCC
PORT SDMA1_RX_D = LL_Rx_Data, DIR = I, BUS = SDMA_LL1, INITIALVAL = GND, VEC = [0:31]
PORT SDMA1_RX_Rem = LL_Rx_Rem, DIR = I, BUS = SDMA_LL1, INITIALVAL = VCC, VEC = [0:3]
PORT SDMA1_RX_SOF = LL_Rx_SOF_n, DIR = I, BUS = SDMA_LL1, INITIALVAL = VCC
PORT SDMA1_RX_EOF = LL_Rx_EOF_n, DIR = I, BUS = SDMA_LL1, INITIALVAL = VCC
PORT SDMA1_RX_SOP = LL_Rx_SOP_n, DIR = I, BUS = SDMA_LL1, INITIALVAL = VCC
PORT SDMA1_RX_EOP = LL_Rx_EOP_n, DIR = I, BUS = SDMA_LL1, INITIALVAL = VCC
PORT SDMA1_RX_Src_Rdy = LL_Rx_SrcRdy_n, DIR = I, BUS = SDMA_LL1, INITIALVAL = VCC
PORT SDMA1_RX_Dst_Rdy = LL_Rx_DstRdy_n, DIR = O, BUS = SDMA_LL1
PORT SDMA_CTRL1_Clk = "", DIR = I, BUS = SDMA_CTRL1, SIGIS = CLK, INITIALVAL = VCC
PORT SDMA_CTRL1_Rst = SPLB_Rst, DIR = I, BUS = SDMA_CTRL1, SIGIS = RST
PORT SDMA_CTRL1_PLB_ABus = PLB_ABus, DIR = I, BUS = SDMA_CTRL1, VEC = [0:31]
PORT SDMA_CTRL1_PLB_PAValid = PLB_PAValid, DIR = I, BUS = SDMA_CTRL1
PORT SDMA_CTRL1_PLB_SAValid = PLB_SAValid, DIR = I, BUS = SDMA_CTRL1
PORT SDMA_CTRL1_PLB_masterID = PLB_masterID, DIR = I, BUS = SDMA_CTRL1, VEC = [0:(C_SDMA_CTRL1_MID_WIDTH-1)]
PORT SDMA_CTRL1_PLB_RNW = PLB_RNW, DIR = I, BUS = SDMA_CTRL1
PORT SDMA_CTRL1_PLB_BE = PLB_BE, DIR = I, BUS = SDMA_CTRL1, VEC = [0:((C_SDMA_CTRL1_DWIDTH/8)-1)]
PORT SDMA_CTRL1_PLB_UABus = PLB_UABus, DIR = I, BUS = SDMA_CTRL1, VEC = [0:31]
PORT SDMA_CTRL1_PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SDMA_CTRL1
PORT SDMA_CTRL1_PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SDMA_CTRL1
PORT SDMA_CTRL1_PLB_abort = PLB_abort, DIR = I, BUS = SDMA_CTRL1
PORT SDMA_CTRL1_PLB_busLock = PLB_busLock, DIR = I, BUS = SDMA_CTRL1
PORT SDMA_CTRL1_PLB_MSize = PLB_MSize, DIR = I, BUS = SDMA_CTRL1, VEC = [0:1]
PORT SDMA_CTRL1_PLB_size = PLB_size, DIR = I, BUS = SDMA_CTRL1, VEC = [0:3]
PORT SDMA_CTRL1_PLB_type = PLB_type, DIR = I, BUS = SDMA_CTRL1, VEC = [0:2]
PORT SDMA_CTRL1_PLB_lockErr = PLB_lockErr, DIR = I, BUS = SDMA_CTRL1
PORT SDMA_CTRL1_PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SDMA_CTRL1
PORT SDMA_CTRL1_PLB_wrPendPri = PLB_wrPendPri, DIR = I, BUS = SDMA_CTRL1, VEC = [0:1]
PORT SDMA_CTRL1_PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SDMA_CTRL1
PORT SDMA_CTRL1_PLB_rdPendPri = PLB_rdPendPri, DIR = I, BUS = SDMA_CTRL1, VEC = [0:1]
PORT SDMA_CTRL1_PLB_reqPri = PLB_reqPri, DIR = I, BUS = SDMA_CTRL1, VEC = [0:1]
PORT SDMA_CTRL1_PLB_TAttribute = PLB_TAttribute, DIR = I, BUS = SDMA_CTRL1, VEC = [0:15]
PORT SDMA_CTRL1_PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SDMA_CTRL1
PORT SDMA_CTRL1_PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SDMA_CTRL1
PORT SDMA_CTRL1_PLB_wrDBus = PLB_wrDBus, DIR = I, BUS = SDMA_CTRL1, VEC = [0:(C_SDMA_CTRL1_DWIDTH-1)]
PORT SDMA_CTRL1_Sl_addrAck = Sl_addrAck, DIR = O, BUS = SDMA_CTRL1
PORT SDMA_CTRL1_Sl_SSize = Sl_SSize, DIR = O, BUS = SDMA_CTRL1, VEC = [0:1]
PORT SDMA_CTRL1_Sl_wait = Sl_wait, DIR = O, BUS = SDMA_CTRL1
PORT SDMA_CTRL1_Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SDMA_CTRL1
PORT SDMA_CTRL1_Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SDMA_CTRL1
PORT SDMA_CTRL1_Sl_wrComp = Sl_wrComp, DIR = O, BUS = SDMA_CTRL1
PORT SDMA_CTRL1_Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SDMA_CTRL1
PORT SDMA_CTRL1_Sl_rdDBus = Sl_rdDBus, DIR = O, BUS = SDMA_CTRL1, VEC = [0:(C_SDMA_CTRL1_DWIDTH-1)]
PORT SDMA_CTRL1_Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, BUS = SDMA_CTRL1, VEC = [0:3]
PORT SDMA_CTRL1_Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SDMA_CTRL1
PORT SDMA_CTRL1_Sl_rdComp = Sl_rdComp, DIR = O, BUS = SDMA_CTRL1
PORT SDMA_CTRL1_Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SDMA_CTRL1
PORT SDMA_CTRL1_Sl_MBusy = Sl_MBusy, DIR = O, BUS = SDMA_CTRL1, VEC = [0:(C_SDMA_CTRL1_NUM_MASTERS-1)]
PORT SDMA_CTRL1_Sl_MRdErr = Sl_MRdErr, DIR = O, BUS = SDMA_CTRL1, VEC = [0:(C_SDMA_CTRL1_NUM_MASTERS-1)]
PORT SDMA_CTRL1_Sl_MWrErr = Sl_MWrErr, DIR = O, BUS = SDMA_CTRL1, VEC = [0:(C_SDMA_CTRL1_NUM_MASTERS-1)]
PORT SDMA_CTRL1_Sl_MIRQ = Sl_MIRQ, DIR = O, BUS = SDMA_CTRL1, VEC = [0:(C_SDMA_CTRL1_NUM_MASTERS-1)]
PORT PIM1_Addr = Addr, DIR = I, BUS = MPMC_PIM1, VEC = [31:0]
PORT PIM1_AddrReq = AddrReq, DIR = I, BUS = MPMC_PIM1
PORT PIM1_AddrAck = AddrAck, DIR = O, BUS = MPMC_PIM1
PORT PIM1_RNW = RNW, DIR = I, BUS = MPMC_PIM1
PORT PIM1_Size = Size, DIR = I, BUS = MPMC_PIM1, VEC = [3:0]
PORT PIM1_RdModWr = RdModWr, DIR = I, BUS = MPMC_PIM1
PORT PIM1_WrFIFO_Data = WrFIFO_Data, DIR = I, BUS = MPMC_PIM1, VEC = [(C_PIM1_DATA_WIDTH-1):0]
PORT PIM1_WrFIFO_BE = WrFIFO_BE, DIR = I, BUS = MPMC_PIM1, VEC = [(C_PIM1_DATA_WIDTH/8-1):0]
PORT PIM1_WrFIFO_Push = WrFIFO_Push, DIR = I, BUS = MPMC_PIM1
PORT PIM1_RdFIFO_Data = RdFIFO_Data, DIR = O, BUS = MPMC_PIM1, VEC = [(C_PIM1_DATA_WIDTH-1):0]
PORT PIM1_RdFIFO_Pop = RdFIFO_Pop, DIR = I, BUS = MPMC_PIM1
PORT PIM1_RdFIFO_RdWdAddr = RdFIFO_RdWdAddr, DIR = O, BUS = MPMC_PIM1, VEC = [3:0]
PORT PIM1_WrFIFO_Empty = WrFIFO_Empty, DIR = O, BUS = MPMC_PIM1
PORT PIM1_WrFIFO_AlmostFull = WrFIFO_AlmostFull, DIR = O, BUS = MPMC_PIM1
PORT PIM1_WrFIFO_Flush = WrFIFO_Flush, DIR = I, BUS = MPMC_PIM1
PORT PIM1_RdFIFO_Empty = RdFIFO_Empty, DIR = O, BUS = MPMC_PIM1
PORT PIM1_RdFIFO_Flush = RdFIFO_Flush, DIR = I, BUS = MPMC_PIM1
PORT PIM1_RdFIFO_Latency = RDFIFO_Latency, DIR = O, BUS = MPMC_PIM1, VEC = [1:0]
PORT PIM1_InitDone = InitDone, DIR = O, BUS = MPMC_PIM1
PORT PPC440MC1_MIMCReadNotWrite = MIMCREADNOTWRITE, DIR = I, BUS = PPC440MC1
PORT PPC440MC1_MIMCAddress = MIMCADDRESS, DIR = I, BUS = PPC440MC1, VEC = [0:35]
PORT PPC440MC1_MIMCAddressValid = MIMCADDRESSVALID, DIR = I, BUS = PPC440MC1
PORT PPC440MC1_MIMCWriteData = MIMCWRITEDATA, DIR = I, BUS = PPC440MC1, VEC = [0:127]
PORT PPC440MC1_MIMCWriteDataValid = MIMCWRITEDATAVALID, DIR = I, BUS = PPC440MC1
PORT PPC440MC1_MIMCByteEnable = MIMCBYTEENABLE, DIR = I, BUS = PPC440MC1, VEC = [0:15]
PORT PPC440MC1_MIMCBankConflict = MIMCBANKCONFLICT, DIR = I, BUS = PPC440MC1
PORT PPC440MC1_MIMCRowConflict = MIMCROWCONFLICT, DIR = I, BUS = PPC440MC1
PORT PPC440MC1_MCMIReadData = MCMIREADDATA, DIR = O, BUS = PPC440MC1, VEC = [0:127]
PORT PPC440MC1_MCMIReadDataValid = MCMIREADDATAVALID, DIR = O, BUS = PPC440MC1
PORT PPC440MC1_MCMIReadDataErr = MCMIREADDATAERR, DIR = O, BUS = PPC440MC1
PORT PPC440MC1_MCMIAddrReadyToAccept = MCMIADDRREADYTOACCEPT, DIR = O, BUS = PPC440MC1
PORT VFBC1_Cmd_Clk = cmd_clk, DIR = I, BUS = VFBC1
PORT VFBC1_Cmd_Reset = cmd_reset, DIR = I, BUS = VFBC1
PORT VFBC1_Cmd_Data = cmd_data, DIR = I, BUS = VFBC1, VEC = [31:0]
PORT VFBC1_Cmd_Write = cmd_write, DIR = I, BUS = VFBC1
PORT VFBC1_Cmd_End = cmd_end, DIR = I, BUS = VFBC1
PORT VFBC1_Cmd_Full = cmd_full, DIR = O, BUS = VFBC1
PORT VFBC1_Cmd_Almost_Full = cmd_almost_full, DIR = O, BUS = VFBC1
PORT VFBC1_Cmd_Idle = cmd_idle, DIR = O, BUS = VFBC1
PORT VFBC1_Wd_Clk = wd_clk, DIR = I, BUS = VFBC1
PORT VFBC1_Wd_Reset = wd_reset, DIR = I, BUS = VFBC1
PORT VFBC1_Wd_Write = wd_write, DIR = I, BUS = VFBC1
PORT VFBC1_Wd_End_Burst = wd_end_burst, DIR = I, BUS = VFBC1
PORT VFBC1_Wd_Flush = wd_flush, DIR = I, BUS = VFBC1
PORT VFBC1_Wd_Data = wd_data, DIR = I, BUS = VFBC1, VEC = [C_VFBC1_RDWD_DATA_WIDTH-1:0]
PORT VFBC1_Wd_Data_BE = wd_data_be, DIR = I, BUS = VFBC1, VEC = [C_VFBC1_RDWD_DATA_WIDTH/8-1:0]
PORT VFBC1_Wd_Full = wd_full, DIR = O, BUS = VFBC1
PORT VFBC1_Wd_Almost_Full = wd_almost_full, DIR = O, BUS = VFBC1
PORT VFBC1_Rd_Clk = rd_clk, DIR = I, BUS = VFBC1
PORT VFBC1_Rd_Reset = rd_reset, DIR = I, BUS = VFBC1
PORT VFBC1_Rd_Read = rd_read, DIR = I, BUS = VFBC1
PORT VFBC1_Rd_End_Burst = rd_end_burst, DIR = I, BUS = VFBC1
PORT VFBC1_Rd_Flush = rd_flush, DIR = I, BUS = VFBC1
PORT VFBC1_Rd_Data = rd_data, DIR = O, BUS = VFBC1, VEC = [C_VFBC1_RDWD_DATA_WIDTH-1:0]
PORT VFBC1_Rd_Empty = rd_empty, DIR = O, BUS = VFBC1
PORT VFBC1_Rd_Almost_Empty = rd_almost_empty, DIR = O, BUS = VFBC1
PORT MCB1_cmd_clk = cmd_clk, DIR = I, BUS = MCB1
PORT MCB1_cmd_en = cmd_en, DIR = I, BUS = MCB1
PORT MCB1_cmd_instr = cmd_instr, DIR = I, BUS = MCB1, VEC = [2:0]
PORT MCB1_cmd_bl = cmd_bl, DIR = I, BUS = MCB1, VEC = [5:0]
PORT MCB1_cmd_byte_addr = cmd_byte_addr, DIR = I, BUS = MCB1, VEC = [29:0]
PORT MCB1_cmd_empty = cmd_empty, DIR = O, BUS = MCB1
PORT MCB1_cmd_full = cmd_full, DIR = O, BUS = MCB1
PORT MCB1_wr_clk = wr_clk, DIR = I, BUS = MCB1
PORT MCB1_wr_en = wr_en, DIR = I, BUS = MCB1
PORT MCB1_wr_mask = wr_mask, DIR = I, BUS = MCB1, VEC = [C_PIM1_DATA_WIDTH/8-1:0]
PORT MCB1_wr_data = wr_data, DIR = I, BUS = MCB1, VEC = [C_PIM1_DATA_WIDTH-1:0]
PORT MCB1_wr_full = wr_full, DIR = O, BUS = MCB1
PORT MCB1_wr_empty = wr_empty, DIR = O, BUS = MCB1
PORT MCB1_wr_count = wr_count, DIR = O, BUS = MCB1, VEC = [6:0]
PORT MCB1_wr_underrun = wr_underrun, DIR = O, BUS = MCB1
PORT MCB1_wr_error = wr_error, DIR = O, BUS = MCB1
PORT MCB1_rd_clk = rd_clk, DIR = I, BUS = MCB1
PORT MCB1_rd_en = rd_en, DIR = I, BUS = MCB1
PORT MCB1_rd_data = rd_data, DIR = O, BUS = MCB1, VEC = [C_PIM1_DATA_WIDTH-1:0]
PORT MCB1_rd_full = rd_full, DIR = O, BUS = MCB1
PORT MCB1_rd_empty = rd_empty, DIR = O, BUS = MCB1
PORT MCB1_rd_count = rd_count, DIR = O, BUS = MCB1, VEC = [6:0]
PORT MCB1_rd_overflow = rd_overflow, DIR = O, BUS = MCB1
PORT MCB1_rd_error = rd_error, DIR = O, BUS = MCB1
PORT FSL2_M_Clk = FSL_M_Clk, DIR = I, BUS = XCL2, SIGIS = CLK, INITIALVAL = VCC
PORT FSL2_M_Write = FSL_M_Write, DIR = I, BUS = XCL2
PORT FSL2_M_Data = FSL_M_Data, DIR = I, BUS = XCL2, VEC = [0:31]
PORT FSL2_M_Control = FSL_M_Control, DIR = I, BUS = XCL2
PORT FSL2_M_Full = FSL_M_Full, DIR = O, BUS = XCL2
PORT FSL2_S_Clk = FSL_S_Clk, DIR = I, BUS = XCL2
PORT FSL2_S_Read = FSL_S_Read, DIR = I, BUS = XCL2
PORT FSL2_S_Data = FSL_S_Data, DIR = O, BUS = XCL2, VEC = [0:31]
PORT FSL2_S_Control = FSL_S_Control, DIR = O, BUS = XCL2
PORT FSL2_S_Exists = FSL_S_Exists, DIR = O, BUS = XCL2
PORT FSL2_B_M_Clk = FSL_M_Clk, DIR = I, BUS = XCL2_B, SIGIS = CLK, INITIALVAL = VCC
PORT FSL2_B_M_Write = FSL_M_Write, DIR = I, BUS = XCL2_B
PORT FSL2_B_M_Data = FSL_M_Data, DIR = I, BUS = XCL2_B, VEC = [0:31]
PORT FSL2_B_M_Control = FSL_M_Control, DIR = I, BUS = XCL2_B
PORT FSL2_B_M_Full = FSL_M_Full, DIR = O, BUS = XCL2_B
PORT FSL2_B_S_Clk = FSL_S_Clk, DIR = I, BUS = XCL2_B
PORT FSL2_B_S_Read = FSL_S_Read, DIR = I, BUS = XCL2_B
PORT FSL2_B_S_Data = FSL_S_Data, DIR = O, BUS = XCL2_B, VEC = [0:31]
PORT FSL2_B_S_Control = FSL_S_Control, DIR = O, BUS = XCL2_B
PORT FSL2_B_S_Exists = FSL_S_Exists, DIR = O, BUS = XCL2_B
PORT SPLB2_Clk = "", DIR = I, BUS = SPLB2, SIGIS = CLK, INITIALVAL = VCC
PORT SPLB2_Rst = SPLB_Rst, DIR = I, BUS = SPLB2, SIGIS = RST
PORT SPLB2_PLB_ABus = PLB_ABus, DIR = I, BUS = SPLB2, VEC = [0:31]
PORT SPLB2_PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB2
PORT SPLB2_PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB2
PORT SPLB2_PLB_masterID = PLB_masterID, DIR = I, BUS = SPLB2, VEC = [0:(C_SPLB2_MID_WIDTH-1)]
PORT SPLB2_PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB2
PORT SPLB2_PLB_BE = PLB_BE, DIR = I, BUS = SPLB2, VEC = [0:((C_SPLB2_DWIDTH/8)-1)]
PORT SPLB2_PLB_UABus = PLB_UABus, DIR = I, BUS = SPLB2, VEC = [0:31]
PORT SPLB2_PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB2
PORT SPLB2_PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB2
PORT SPLB2_PLB_abort = PLB_abort, DIR = I, BUS = SPLB2
PORT SPLB2_PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB2
PORT SPLB2_PLB_MSize = PLB_MSize, DIR = I, BUS = SPLB2, VEC = [0:1]
PORT SPLB2_PLB_size = PLB_size, DIR = I, BUS = SPLB2, VEC = [0:3]
PORT SPLB2_PLB_type = PLB_type, DIR = I, BUS = SPLB2, VEC = [0:2]
PORT SPLB2_PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB2
PORT SPLB2_PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB2
PORT SPLB2_PLB_wrPendPri = PLB_wrPendPri, DIR = I, BUS = SPLB2, VEC = [0:1]
PORT SPLB2_PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB2
PORT SPLB2_PLB_rdPendPri = PLB_rdPendPri, DIR = I, BUS = SPLB2, VEC = [0:1]
PORT SPLB2_PLB_reqPri = PLB_reqPri, DIR = I, BUS = SPLB2, VEC = [0:1]
PORT SPLB2_PLB_TAttribute = PLB_TAttribute, DIR = I, BUS = SPLB2, VEC = [0:15]
PORT SPLB2_PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB2
PORT SPLB2_PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB2
PORT SPLB2_PLB_wrDBus = PLB_wrDBus, DIR = I, BUS = SPLB2, VEC = [0:(C_SPLB2_DWIDTH-1)]
PORT SPLB2_Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB2
PORT SPLB2_Sl_SSize = Sl_SSize, DIR = O, BUS = SPLB2, VEC = [0:1]
PORT SPLB2_Sl_wait = Sl_wait, DIR = O, BUS = SPLB2
PORT SPLB2_Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB2
PORT SPLB2_Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB2
PORT SPLB2_Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB2
PORT SPLB2_Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB2
PORT SPLB2_Sl_rdDBus = Sl_rdDBus, DIR = O, BUS = SPLB2, VEC = [0:(C_SPLB2_DWIDTH-1)]
PORT SPLB2_Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, BUS = SPLB2, VEC = [0:3]
PORT SPLB2_Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB2
PORT SPLB2_Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB2
PORT SPLB2_Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB2
PORT SPLB2_Sl_MBusy = Sl_MBusy, DIR = O, BUS = SPLB2, VEC = [0:(C_SPLB2_NUM_MASTERS-1)]
PORT SPLB2_Sl_MRdErr = Sl_MRdErr, DIR = O, BUS = SPLB2, VEC = [0:(C_SPLB2_NUM_MASTERS-1)]
PORT SPLB2_Sl_MWrErr = Sl_MWrErr, DIR = O, BUS = SPLB2, VEC = [0:(C_SPLB2_NUM_MASTERS-1)]
PORT SPLB2_Sl_MIRQ = Sl_MIRQ, DIR = O, BUS = SPLB2, VEC = [0:(C_SPLB2_NUM_MASTERS-1)]
PORT SDMA2_Clk = "", DIR = I, SIGIS = CLK, ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 3), ASSIGNMENT = REQUIRE
PORT SDMA2_Rx_IntOut = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 3)
PORT SDMA2_Tx_IntOut = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 3)
PORT SDMA2_RstOut = LL_RST_ACK, DIR = O, BUS = SDMA_LL2
PORT SDMA2_TX_D = LL_Tx_Data, DIR = O, BUS = SDMA_LL2, VEC = [0:31]
PORT SDMA2_TX_Rem = LL_Tx_Rem, DIR = O, BUS = SDMA_LL2, VEC = [0:3]
PORT SDMA2_TX_SOF = LL_Tx_SOF_n, DIR = O, BUS = SDMA_LL2
PORT SDMA2_TX_EOF = LL_Tx_EOF_n, DIR = O, BUS = SDMA_LL2
PORT SDMA2_TX_SOP = LL_Tx_SOP_n, DIR = O, BUS = SDMA_LL2
PORT SDMA2_TX_EOP = LL_Tx_EOP_n, DIR = O, BUS = SDMA_LL2
PORT SDMA2_TX_Src_Rdy = LL_Tx_SrcRdy_n, DIR = O, BUS = SDMA_LL2
PORT SDMA2_TX_Dst_Rdy = LL_Tx_DstRdy_n, DIR = I, BUS = SDMA_LL2, INITIALVAL = VCC
PORT SDMA2_RX_D = LL_Rx_Data, DIR = I, BUS = SDMA_LL2, INITIALVAL = GND, VEC = [0:31]
PORT SDMA2_RX_Rem = LL_Rx_Rem, DIR = I, BUS = SDMA_LL2, INITIALVAL = VCC, VEC = [0:3]
PORT SDMA2_RX_SOF = LL_Rx_SOF_n, DIR = I, BUS = SDMA_LL2, INITIALVAL = VCC
PORT SDMA2_RX_EOF = LL_Rx_EOF_n, DIR = I, BUS = SDMA_LL2, INITIALVAL = VCC
PORT SDMA2_RX_SOP = LL_Rx_SOP_n, DIR = I, BUS = SDMA_LL2, INITIALVAL = VCC
PORT SDMA2_RX_EOP = LL_Rx_EOP_n, DIR = I, BUS = SDMA_LL2, INITIALVAL = VCC
PORT SDMA2_RX_Src_Rdy = LL_Rx_SrcRdy_n, DIR = I, BUS = SDMA_LL2, INITIALVAL = VCC
PORT SDMA2_RX_Dst_Rdy = LL_Rx_DstRdy_n, DIR = O, BUS = SDMA_LL2
PORT SDMA_CTRL2_Clk = "", DIR = I, BUS = SDMA_CTRL2, SIGIS = CLK, INITIALVAL = VCC
PORT SDMA_CTRL2_Rst = SPLB_Rst, DIR = I, BUS = SDMA_CTRL2, SIGIS = RST
PORT SDMA_CTRL2_PLB_ABus = PLB_ABus, DIR = I, BUS = SDMA_CTRL2, VEC = [0:31]
PORT SDMA_CTRL2_PLB_PAValid = PLB_PAValid, DIR = I, BUS = SDMA_CTRL2
PORT SDMA_CTRL2_PLB_SAValid = PLB_SAValid, DIR = I, BUS = SDMA_CTRL2
PORT SDMA_CTRL2_PLB_masterID = PLB_masterID, DIR = I, BUS = SDMA_CTRL2, VEC = [0:(C_SDMA_CTRL2_MID_WIDTH-1)]
PORT SDMA_CTRL2_PLB_RNW = PLB_RNW, DIR = I, BUS = SDMA_CTRL2
PORT SDMA_CTRL2_PLB_BE = PLB_BE, DIR = I, BUS = SDMA_CTRL2, VEC = [0:((C_SDMA_CTRL2_DWIDTH/8)-1)]
PORT SDMA_CTRL2_PLB_UABus = PLB_UABus, DIR = I, BUS = SDMA_CTRL2, VEC = [0:31]
PORT SDMA_CTRL2_PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SDMA_CTRL2
PORT SDMA_CTRL2_PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SDMA_CTRL2
PORT SDMA_CTRL2_PLB_abort = PLB_abort, DIR = I, BUS = SDMA_CTRL2
PORT SDMA_CTRL2_PLB_busLock = PLB_busLock, DIR = I, BUS = SDMA_CTRL2
PORT SDMA_CTRL2_PLB_MSize = PLB_MSize, DIR = I, BUS = SDMA_CTRL2, VEC = [0:1]
PORT SDMA_CTRL2_PLB_size = PLB_size, DIR = I, BUS = SDMA_CTRL2, VEC = [0:3]
PORT SDMA_CTRL2_PLB_type = PLB_type, DIR = I, BUS = SDMA_CTRL2, VEC = [0:2]
PORT SDMA_CTRL2_PLB_lockErr = PLB_lockErr, DIR = I, BUS = SDMA_CTRL2
PORT SDMA_CTRL2_PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SDMA_CTRL2
PORT SDMA_CTRL2_PLB_wrPendPri = PLB_wrPendPri, DIR = I, BUS = SDMA_CTRL2, VEC = [0:1]
PORT SDMA_CTRL2_PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SDMA_CTRL2
PORT SDMA_CTRL2_PLB_rdPendPri = PLB_rdPendPri, DIR = I, BUS = SDMA_CTRL2, VEC = [0:1]
PORT SDMA_CTRL2_PLB_reqPri = PLB_reqPri, DIR = I, BUS = SDMA_CTRL2, VEC = [0:1]
PORT SDMA_CTRL2_PLB_TAttribute = PLB_TAttribute, DIR = I, BUS = SDMA_CTRL2, VEC = [0:15]
PORT SDMA_CTRL2_PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SDMA_CTRL2
PORT SDMA_CTRL2_PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SDMA_CTRL2
PORT SDMA_CTRL2_PLB_wrDBus = PLB_wrDBus, DIR = I, BUS = SDMA_CTRL2, VEC = [0:(C_SDMA_CTRL2_DWIDTH-1)]
PORT SDMA_CTRL2_Sl_addrAck = Sl_addrAck, DIR = O, BUS = SDMA_CTRL2
PORT SDMA_CTRL2_Sl_SSize = Sl_SSize, DIR = O, BUS = SDMA_CTRL2, VEC = [0:1]
PORT SDMA_CTRL2_Sl_wait = Sl_wait, DIR = O, BUS = SDMA_CTRL2
PORT SDMA_CTRL2_Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SDMA_CTRL2
PORT SDMA_CTRL2_Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SDMA_CTRL2
PORT SDMA_CTRL2_Sl_wrComp = Sl_wrComp, DIR = O, BUS = SDMA_CTRL2
PORT SDMA_CTRL2_Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SDMA_CTRL2
PORT SDMA_CTRL2_Sl_rdDBus = Sl_rdDBus, DIR = O, BUS = SDMA_CTRL2, VEC = [0:(C_SDMA_CTRL2_DWIDTH-1)]
PORT SDMA_CTRL2_Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, BUS = SDMA_CTRL2, VEC = [0:3]
PORT SDMA_CTRL2_Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SDMA_CTRL2
PORT SDMA_CTRL2_Sl_rdComp = Sl_rdComp, DIR = O, BUS = SDMA_CTRL2
PORT SDMA_CTRL2_Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SDMA_CTRL2
PORT SDMA_CTRL2_Sl_MBusy = Sl_MBusy, DIR = O, BUS = SDMA_CTRL2, VEC = [0:(C_SDMA_CTRL2_NUM_MASTERS-1)]
PORT SDMA_CTRL2_Sl_MRdErr = Sl_MRdErr, DIR = O, BUS = SDMA_CTRL2, VEC = [0:(C_SDMA_CTRL2_NUM_MASTERS-1)]
PORT SDMA_CTRL2_Sl_MWrErr = Sl_MWrErr, DIR = O, BUS = SDMA_CTRL2, VEC = [0:(C_SDMA_CTRL2_NUM_MASTERS-1)]
PORT SDMA_CTRL2_Sl_MIRQ = Sl_MIRQ, DIR = O, BUS = SDMA_CTRL2, VEC = [0:(C_SDMA_CTRL2_NUM_MASTERS-1)]
PORT PIM2_Addr = Addr, DIR = I, BUS = MPMC_PIM2, VEC = [31:0]
PORT PIM2_AddrReq = AddrReq, DIR = I, BUS = MPMC_PIM2
PORT PIM2_AddrAck = AddrAck, DIR = O, BUS = MPMC_PIM2
PORT PIM2_RNW = RNW, DIR = I, BUS = MPMC_PIM2
PORT PIM2_Size = Size, DIR = I, BUS = MPMC_PIM2, VEC = [3:0]
PORT PIM2_RdModWr = RdModWr, DIR = I, BUS = MPMC_PIM2
PORT PIM2_WrFIFO_Data = WrFIFO_Data, DIR = I, BUS = MPMC_PIM2, VEC = [(C_PIM2_DATA_WIDTH-1):0]
PORT PIM2_WrFIFO_BE = WrFIFO_BE, DIR = I, BUS = MPMC_PIM2, VEC = [(C_PIM2_DATA_WIDTH/8-1):0]
PORT PIM2_WrFIFO_Push = WrFIFO_Push, DIR = I, BUS = MPMC_PIM2
PORT PIM2_RdFIFO_Data = RdFIFO_Data, DIR = O, BUS = MPMC_PIM2, VEC = [(C_PIM2_DATA_WIDTH-1):0]
PORT PIM2_RdFIFO_Pop = RdFIFO_Pop, DIR = I, BUS = MPMC_PIM2
PORT PIM2_RdFIFO_RdWdAddr = RdFIFO_RdWdAddr, DIR = O, BUS = MPMC_PIM2, VEC = [3:0]
PORT PIM2_WrFIFO_Empty = WrFIFO_Empty, DIR = O, BUS = MPMC_PIM2
PORT PIM2_WrFIFO_AlmostFull = WrFIFO_AlmostFull, DIR = O, BUS = MPMC_PIM2
PORT PIM2_WrFIFO_Flush = WrFIFO_Flush, DIR = I, BUS = MPMC_PIM2
PORT PIM2_RdFIFO_Empty = RdFIFO_Empty, DIR = O, BUS = MPMC_PIM2
PORT PIM2_RdFIFO_Flush = RdFIFO_Flush, DIR = I, BUS = MPMC_PIM2
PORT PIM2_RdFIFO_Latency = RDFIFO_Latency, DIR = O, BUS = MPMC_PIM2, VEC = [1:0]
PORT PIM2_InitDone = InitDone, DIR = O, BUS = MPMC_PIM2
PORT PPC440MC2_MIMCReadNotWrite = MIMCREADNOTWRITE, DIR = I, BUS = PPC440MC2
PORT PPC440MC2_MIMCAddress = MIMCADDRESS, DIR = I, BUS = PPC440MC2, VEC = [0:35]
PORT PPC440MC2_MIMCAddressValid = MIMCADDRESSVALID, DIR = I, BUS = PPC440MC2
PORT PPC440MC2_MIMCWriteData = MIMCWRITEDATA, DIR = I, BUS = PPC440MC2, VEC = [0:127]
PORT PPC440MC2_MIMCWriteDataValid = MIMCWRITEDATAVALID, DIR = I, BUS = PPC440MC2
PORT PPC440MC2_MIMCByteEnable = MIMCBYTEENABLE, DIR = I, BUS = PPC440MC2, VEC = [0:15]
PORT PPC440MC2_MIMCBankConflict = MIMCBANKCONFLICT, DIR = I, BUS = PPC440MC2
PORT PPC440MC2_MIMCRowConflict = MIMCROWCONFLICT, DIR = I, BUS = PPC440MC2
PORT PPC440MC2_MCMIReadData = MCMIREADDATA, DIR = O, BUS = PPC440MC2, VEC = [0:127]
PORT PPC440MC2_MCMIReadDataValid = MCMIREADDATAVALID, DIR = O, BUS = PPC440MC2
PORT PPC440MC2_MCMIReadDataErr = MCMIREADDATAERR, DIR = O, BUS = PPC440MC2
PORT PPC440MC2_MCMIAddrReadyToAccept = MCMIADDRREADYTOACCEPT, DIR = O, BUS = PPC440MC2
PORT VFBC2_Cmd_Clk = cmd_clk, DIR = I, BUS = VFBC2
PORT VFBC2_Cmd_Reset = cmd_reset, DIR = I, BUS = VFBC2
PORT VFBC2_Cmd_Data = cmd_data, DIR = I, BUS = VFBC2, VEC = [31:0]
PORT VFBC2_Cmd_Write = cmd_write, DIR = I, BUS = VFBC2
PORT VFBC2_Cmd_End = cmd_end, DIR = I, BUS = VFBC2
PORT VFBC2_Cmd_Full = cmd_full, DIR = O, BUS = VFBC2
PORT VFBC2_Cmd_Almost_Full = cmd_almost_full, DIR = O, BUS = VFBC2
PORT VFBC2_Cmd_Idle = cmd_idle, DIR = O, BUS = VFBC2
PORT VFBC2_Wd_Clk = wd_clk, DIR = I, BUS = VFBC2
PORT VFBC2_Wd_Reset = wd_reset, DIR = I, BUS = VFBC2
PORT VFBC2_Wd_Write = wd_write, DIR = I, BUS = VFBC2
PORT VFBC2_Wd_End_Burst = wd_end_burst, DIR = I, BUS = VFBC2
PORT VFBC2_Wd_Flush = wd_flush, DIR = I, BUS = VFBC2
PORT VFBC2_Wd_Data = wd_data, DIR = I, BUS = VFBC2, VEC = [C_VFBC2_RDWD_DATA_WIDTH-1:0]
PORT VFBC2_Wd_Data_BE = wd_data_be, DIR = I, BUS = VFBC2, VEC = [C_VFBC2_RDWD_DATA_WIDTH/8-1:0]
PORT VFBC2_Wd_Full = wd_full, DIR = O, BUS = VFBC2
PORT VFBC2_Wd_Almost_Full = wd_almost_full, DIR = O, BUS = VFBC2
PORT VFBC2_Rd_Clk = rd_clk, DIR = I, BUS = VFBC2
PORT VFBC2_Rd_Reset = rd_reset, DIR = I, BUS = VFBC2
PORT VFBC2_Rd_Read = rd_read, DIR = I, BUS = VFBC2
PORT VFBC2_Rd_End_Burst = rd_end_burst, DIR = I, BUS = VFBC2
PORT VFBC2_Rd_Flush = rd_flush, DIR = I, BUS = VFBC2
PORT VFBC2_Rd_Data = rd_data, DIR = O, BUS = VFBC2, VEC = [C_VFBC2_RDWD_DATA_WIDTH-1:0]
PORT VFBC2_Rd_Empty = rd_empty, DIR = O, BUS = VFBC2
PORT VFBC2_Rd_Almost_Empty = rd_almost_empty, DIR = O, BUS = VFBC2
PORT MCB2_cmd_clk = cmd_clk, DIR = I, BUS = MCB2
PORT MCB2_cmd_en = cmd_en, DIR = I, BUS = MCB2
PORT MCB2_cmd_instr = cmd_instr, DIR = I, BUS = MCB2, VEC = [2:0]
PORT MCB2_cmd_bl = cmd_bl, DIR = I, BUS = MCB2, VEC = [5:0]
PORT MCB2_cmd_byte_addr = cmd_byte_addr, DIR = I, BUS = MCB2, VEC = [29:0]
PORT MCB2_cmd_empty = cmd_empty, DIR = O, BUS = MCB2
PORT MCB2_cmd_full = cmd_full, DIR = O, BUS = MCB2
PORT MCB2_wr_clk = wr_clk, DIR = I, BUS = MCB2
PORT MCB2_wr_en = wr_en, DIR = I, BUS = MCB2
PORT MCB2_wr_mask = wr_mask, DIR = I, BUS = MCB2, VEC = [C_PIM2_DATA_WIDTH/8-1:0]
PORT MCB2_wr_data = wr_data, DIR = I, BUS = MCB2, VEC = [C_PIM2_DATA_WIDTH-1:0]
PORT MCB2_wr_full = wr_full, DIR = O, BUS = MCB2
PORT MCB2_wr_empty = wr_empty, DIR = O, BUS = MCB2
PORT MCB2_wr_count = wr_count, DIR = O, BUS = MCB2, VEC = [6:0]
PORT MCB2_wr_underrun = wr_underrun, DIR = O, BUS = MCB2
PORT MCB2_wr_error = wr_error, DIR = O, BUS = MCB2
PORT MCB2_rd_clk = rd_clk, DIR = I, BUS = MCB2
PORT MCB2_rd_en = rd_en, DIR = I, BUS = MCB2
PORT MCB2_rd_data = rd_data, DIR = O, BUS = MCB2, VEC = [C_PIM2_DATA_WIDTH-1:0]
PORT MCB2_rd_full = rd_full, DIR = O, BUS = MCB2
PORT MCB2_rd_empty = rd_empty, DIR = O, BUS = MCB2
PORT MCB2_rd_count = rd_count, DIR = O, BUS = MCB2, VEC = [6:0]
PORT MCB2_rd_overflow = rd_overflow, DIR = O, BUS = MCB2
PORT MCB2_rd_error = rd_error, DIR = O, BUS = MCB2
PORT FSL3_M_Clk = FSL_M_Clk, DIR = I, BUS = XCL3, SIGIS = CLK, INITIALVAL = VCC
PORT FSL3_M_Write = FSL_M_Write, DIR = I, BUS = XCL3
PORT FSL3_M_Data = FSL_M_Data, DIR = I, BUS = XCL3, VEC = [0:31]
PORT FSL3_M_Control = FSL_M_Control, DIR = I, BUS = XCL3
PORT FSL3_M_Full = FSL_M_Full, DIR = O, BUS = XCL3
PORT FSL3_S_Clk = FSL_S_Clk, DIR = I, BUS = XCL3
PORT FSL3_S_Read = FSL_S_Read, DIR = I, BUS = XCL3
PORT FSL3_S_Data = FSL_S_Data, DIR = O, BUS = XCL3, VEC = [0:31]
PORT FSL3_S_Control = FSL_S_Control, DIR = O, BUS = XCL3
PORT FSL3_S_Exists = FSL_S_Exists, DIR = O, BUS = XCL3
PORT FSL3_B_M_Clk = FSL_M_Clk, DIR = I, BUS = XCL3_B, SIGIS = CLK, INITIALVAL = VCC
PORT FSL3_B_M_Write = FSL_M_Write, DIR = I, BUS = XCL3_B
PORT FSL3_B_M_Data = FSL_M_Data, DIR = I, BUS = XCL3_B, VEC = [0:31]
PORT FSL3_B_M_Control = FSL_M_Control, DIR = I, BUS = XCL3_B
PORT FSL3_B_M_Full = FSL_M_Full, DIR = O, BUS = XCL3_B
PORT FSL3_B_S_Clk = FSL_S_Clk, DIR = I, BUS = XCL3_B
PORT FSL3_B_S_Read = FSL_S_Read, DIR = I, BUS = XCL3_B
PORT FSL3_B_S_Data = FSL_S_Data, DIR = O, BUS = XCL3_B, VEC = [0:31]
PORT FSL3_B_S_Control = FSL_S_Control, DIR = O, BUS = XCL3_B
PORT FSL3_B_S_Exists = FSL_S_Exists, DIR = O, BUS = XCL3_B
PORT SPLB3_Clk = "", DIR = I, BUS = SPLB3, SIGIS = CLK, INITIALVAL = VCC
PORT SPLB3_Rst = SPLB_Rst, DIR = I, BUS = SPLB3, SIGIS = RST
PORT SPLB3_PLB_ABus = PLB_ABus, DIR = I, BUS = SPLB3, VEC = [0:31]
PORT SPLB3_PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB3
PORT SPLB3_PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB3
PORT SPLB3_PLB_masterID = PLB_masterID, DIR = I, BUS = SPLB3, VEC = [0:(C_SPLB3_MID_WIDTH-1)]
PORT SPLB3_PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB3
PORT SPLB3_PLB_BE = PLB_BE, DIR = I, BUS = SPLB3, VEC = [0:((C_SPLB3_DWIDTH/8)-1)]
PORT SPLB3_PLB_UABus = PLB_UABus, DIR = I, BUS = SPLB3, VEC = [0:31]
PORT SPLB3_PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB3
PORT SPLB3_PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB3
PORT SPLB3_PLB_abort = PLB_abort, DIR = I, BUS = SPLB3
PORT SPLB3_PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB3
PORT SPLB3_PLB_MSize = PLB_MSize, DIR = I, BUS = SPLB3, VEC = [0:1]
PORT SPLB3_PLB_size = PLB_size, DIR = I, BUS = SPLB3, VEC = [0:3]
PORT SPLB3_PLB_type = PLB_type, DIR = I, BUS = SPLB3, VEC = [0:2]
PORT SPLB3_PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB3
PORT SPLB3_PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB3
PORT SPLB3_PLB_wrPendPri = PLB_wrPendPri, DIR = I, BUS = SPLB3, VEC = [0:1]
PORT SPLB3_PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB3
PORT SPLB3_PLB_rdPendPri = PLB_rdPendPri, DIR = I, BUS = SPLB3, VEC = [0:1]
PORT SPLB3_PLB_reqPri = PLB_reqPri, DIR = I, BUS = SPLB3, VEC = [0:1]
PORT SPLB3_PLB_TAttribute = PLB_TAttribute, DIR = I, BUS = SPLB3, VEC = [0:15]
PORT SPLB3_PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB3
PORT SPLB3_PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB3
PORT SPLB3_PLB_wrDBus = PLB_wrDBus, DIR = I, BUS = SPLB3, VEC = [0:(C_SPLB3_DWIDTH-1)]
PORT SPLB3_Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB3
PORT SPLB3_Sl_SSize = Sl_SSize, DIR = O, BUS = SPLB3, VEC = [0:1]
PORT SPLB3_Sl_wait = Sl_wait, DIR = O, BUS = SPLB3
PORT SPLB3_Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB3
PORT SPLB3_Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB3
PORT SPLB3_Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB3
PORT SPLB3_Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB3
PORT SPLB3_Sl_rdDBus = Sl_rdDBus, DIR = O, BUS = SPLB3, VEC = [0:(C_SPLB3_DWIDTH-1)]
PORT SPLB3_Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, BUS = SPLB3, VEC = [0:3]
PORT SPLB3_Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB3
PORT SPLB3_Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB3
PORT SPLB3_Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB3
PORT SPLB3_Sl_MBusy = Sl_MBusy, DIR = O, BUS = SPLB3, VEC = [0:(C_SPLB3_NUM_MASTERS-1)]
PORT SPLB3_Sl_MRdErr = Sl_MRdErr, DIR = O, BUS = SPLB3, VEC = [0:(C_SPLB3_NUM_MASTERS-1)]
PORT SPLB3_Sl_MWrErr = Sl_MWrErr, DIR = O, BUS = SPLB3, VEC = [0:(C_SPLB3_NUM_MASTERS-1)]
PORT SPLB3_Sl_MIRQ = Sl_MIRQ, DIR = O, BUS = SPLB3, VEC = [0:(C_SPLB3_NUM_MASTERS-1)]
PORT SDMA3_Clk = "", DIR = I, SIGIS = CLK, ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 3), ASSIGNMENT = REQUIRE
PORT SDMA3_Rx_IntOut = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 3)
PORT SDMA3_Tx_IntOut = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 3)
PORT SDMA3_RstOut = LL_RST_ACK, DIR = O, BUS = SDMA_LL3
PORT SDMA3_TX_D = LL_Tx_Data, DIR = O, BUS = SDMA_LL3, VEC = [0:31]
PORT SDMA3_TX_Rem = LL_Tx_Rem, DIR = O, BUS = SDMA_LL3, VEC = [0:3]
PORT SDMA3_TX_SOF = LL_Tx_SOF_n, DIR = O, BUS = SDMA_LL3
PORT SDMA3_TX_EOF = LL_Tx_EOF_n, DIR = O, BUS = SDMA_LL3
PORT SDMA3_TX_SOP = LL_Tx_SOP_n, DIR = O, BUS = SDMA_LL3
PORT SDMA3_TX_EOP = LL_Tx_EOP_n, DIR = O, BUS = SDMA_LL3
PORT SDMA3_TX_Src_Rdy = LL_Tx_SrcRdy_n, DIR = O, BUS = SDMA_LL3
PORT SDMA3_TX_Dst_Rdy = LL_Tx_DstRdy_n, DIR = I, BUS = SDMA_LL3, INITIALVAL = VCC
PORT SDMA3_RX_D = LL_Rx_Data, DIR = I, BUS = SDMA_LL3, INITIALVAL = GND, VEC = [0:31]
PORT SDMA3_RX_Rem = LL_Rx_Rem, DIR = I, BUS = SDMA_LL3, INITIALVAL = VCC, VEC = [0:3]
PORT SDMA3_RX_SOF = LL_Rx_SOF_n, DIR = I, BUS = SDMA_LL3, INITIALVAL = VCC
PORT SDMA3_RX_EOF = LL_Rx_EOF_n, DIR = I, BUS = SDMA_LL3, INITIALVAL = VCC
PORT SDMA3_RX_SOP = LL_Rx_SOP_n, DIR = I, BUS = SDMA_LL3, INITIALVAL = VCC
PORT SDMA3_RX_EOP = LL_Rx_EOP_n, DIR = I, BUS = SDMA_LL3, INITIALVAL = VCC
PORT SDMA3_RX_Src_Rdy = LL_Rx_SrcRdy_n, DIR = I, BUS = SDMA_LL3, INITIALVAL = VCC
PORT SDMA3_RX_Dst_Rdy = LL_Rx_DstRdy_n, DIR = O, BUS = SDMA_LL3
PORT SDMA_CTRL3_Clk = "", DIR = I, BUS = SDMA_CTRL3, SIGIS = CLK, INITIALVAL = VCC
PORT SDMA_CTRL3_Rst = SPLB_Rst, DIR = I, BUS = SDMA_CTRL3, SIGIS = RST
PORT SDMA_CTRL3_PLB_ABus = PLB_ABus, DIR = I, BUS = SDMA_CTRL3, VEC = [0:31]
PORT SDMA_CTRL3_PLB_PAValid = PLB_PAValid, DIR = I, BUS = SDMA_CTRL3
PORT SDMA_CTRL3_PLB_SAValid = PLB_SAValid, DIR = I, BUS = SDMA_CTRL3
PORT SDMA_CTRL3_PLB_masterID = PLB_masterID, DIR = I, BUS = SDMA_CTRL3, VEC = [0:(C_SDMA_CTRL3_MID_WIDTH-1)]
PORT SDMA_CTRL3_PLB_RNW = PLB_RNW, DIR = I, BUS = SDMA_CTRL3
PORT SDMA_CTRL3_PLB_BE = PLB_BE, DIR = I, BUS = SDMA_CTRL3, VEC = [0:((C_SDMA_CTRL3_DWIDTH/8)-1)]
PORT SDMA_CTRL3_PLB_UABus = PLB_UABus, DIR = I, BUS = SDMA_CTRL3, VEC = [0:31]
PORT SDMA_CTRL3_PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SDMA_CTRL3
PORT SDMA_CTRL3_PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SDMA_CTRL3
PORT SDMA_CTRL3_PLB_abort = PLB_abort, DIR = I, BUS = SDMA_CTRL3
PORT SDMA_CTRL3_PLB_busLock = PLB_busLock, DIR = I, BUS = SDMA_CTRL3
PORT SDMA_CTRL3_PLB_MSize = PLB_MSize, DIR = I, BUS = SDMA_CTRL3, VEC = [0:1]
PORT SDMA_CTRL3_PLB_size = PLB_size, DIR = I, BUS = SDMA_CTRL3, VEC = [0:3]
PORT SDMA_CTRL3_PLB_type = PLB_type, DIR = I, BUS = SDMA_CTRL3, VEC = [0:2]
PORT SDMA_CTRL3_PLB_lockErr = PLB_lockErr, DIR = I, BUS = SDMA_CTRL3
PORT SDMA_CTRL3_PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SDMA_CTRL3
PORT SDMA_CTRL3_PLB_wrPendPri = PLB_wrPendPri, DIR = I, BUS = SDMA_CTRL3, VEC = [0:1]
PORT SDMA_CTRL3_PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SDMA_CTRL3
PORT SDMA_CTRL3_PLB_rdPendPri = PLB_rdPendPri, DIR = I, BUS = SDMA_CTRL3, VEC = [0:1]
PORT SDMA_CTRL3_PLB_reqPri = PLB_reqPri, DIR = I, BUS = SDMA_CTRL3, VEC = [0:1]
PORT SDMA_CTRL3_PLB_TAttribute = PLB_TAttribute, DIR = I, BUS = SDMA_CTRL3, VEC = [0:15]
PORT SDMA_CTRL3_PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SDMA_CTRL3
PORT SDMA_CTRL3_PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SDMA_CTRL3
PORT SDMA_CTRL3_PLB_wrDBus = PLB_wrDBus, DIR = I, BUS = SDMA_CTRL3, VEC = [0:(C_SDMA_CTRL3_DWIDTH-1)]
PORT SDMA_CTRL3_Sl_addrAck = Sl_addrAck, DIR = O, BUS = SDMA_CTRL3
PORT SDMA_CTRL3_Sl_SSize = Sl_SSize, DIR = O, BUS = SDMA_CTRL3, VEC = [0:1]
PORT SDMA_CTRL3_Sl_wait = Sl_wait, DIR = O, BUS = SDMA_CTRL3
PORT SDMA_CTRL3_Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SDMA_CTRL3
PORT SDMA_CTRL3_Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SDMA_CTRL3
PORT SDMA_CTRL3_Sl_wrComp = Sl_wrComp, DIR = O, BUS = SDMA_CTRL3
PORT SDMA_CTRL3_Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SDMA_CTRL3
PORT SDMA_CTRL3_Sl_rdDBus = Sl_rdDBus, DIR = O, BUS = SDMA_CTRL3, VEC = [0:(C_SDMA_CTRL3_DWIDTH-1)]
PORT SDMA_CTRL3_Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, BUS = SDMA_CTRL3, VEC = [0:3]
PORT SDMA_CTRL3_Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SDMA_CTRL3
PORT SDMA_CTRL3_Sl_rdComp = Sl_rdComp, DIR = O, BUS = SDMA_CTRL3
PORT SDMA_CTRL3_Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SDMA_CTRL3
PORT SDMA_CTRL3_Sl_MBusy = Sl_MBusy, DIR = O, BUS = SDMA_CTRL3, VEC = [0:(C_SDMA_CTRL3_NUM_MASTERS-1)]
PORT SDMA_CTRL3_Sl_MRdErr = Sl_MRdErr, DIR = O, BUS = SDMA_CTRL3, VEC = [0:(C_SDMA_CTRL3_NUM_MASTERS-1)]
PORT SDMA_CTRL3_Sl_MWrErr = Sl_MWrErr, DIR = O, BUS = SDMA_CTRL3, VEC = [0:(C_SDMA_CTRL3_NUM_MASTERS-1)]
PORT SDMA_CTRL3_Sl_MIRQ = Sl_MIRQ, DIR = O, BUS = SDMA_CTRL3, VEC = [0:(C_SDMA_CTRL3_NUM_MASTERS-1)]
PORT PIM3_Addr = Addr, DIR = I, BUS = MPMC_PIM3, VEC = [31:0]
PORT PIM3_AddrReq = AddrReq, DIR = I, BUS = MPMC_PIM3
PORT PIM3_AddrAck = AddrAck, DIR = O, BUS = MPMC_PIM3
PORT PIM3_RNW = RNW, DIR = I, BUS = MPMC_PIM3
PORT PIM3_Size = Size, DIR = I, BUS = MPMC_PIM3, VEC = [3:0]
PORT PIM3_RdModWr = RdModWr, DIR = I, BUS = MPMC_PIM3
PORT PIM3_WrFIFO_Data = WrFIFO_Data, DIR = I, BUS = MPMC_PIM3, VEC = [(C_PIM3_DATA_WIDTH-1):0]
PORT PIM3_WrFIFO_BE = WrFIFO_BE, DIR = I, BUS = MPMC_PIM3, VEC = [(C_PIM3_DATA_WIDTH/8-1):0]
PORT PIM3_WrFIFO_Push = WrFIFO_Push, DIR = I, BUS = MPMC_PIM3
PORT PIM3_RdFIFO_Data = RdFIFO_Data, DIR = O, BUS = MPMC_PIM3, VEC = [(C_PIM3_DATA_WIDTH-1):0]
PORT PIM3_RdFIFO_Pop = RdFIFO_Pop, DIR = I, BUS = MPMC_PIM3
PORT PIM3_RdFIFO_RdWdAddr = RdFIFO_RdWdAddr, DIR = O, BUS = MPMC_PIM3, VEC = [3:0]
PORT PIM3_WrFIFO_Empty = WrFIFO_Empty, DIR = O, BUS = MPMC_PIM3
PORT PIM3_WrFIFO_AlmostFull = WrFIFO_AlmostFull, DIR = O, BUS = MPMC_PIM3
PORT PIM3_WrFIFO_Flush = WrFIFO_Flush, DIR = I, BUS = MPMC_PIM3
PORT PIM3_RdFIFO_Empty = RdFIFO_Empty, DIR = O, BUS = MPMC_PIM3
PORT PIM3_RdFIFO_Flush = RdFIFO_Flush, DIR = I, BUS = MPMC_PIM3
PORT PIM3_RdFIFO_Latency = RDFIFO_Latency, DIR = O, BUS = MPMC_PIM3, VEC = [1:0]
PORT PIM3_InitDone = InitDone, DIR = O, BUS = MPMC_PIM3
PORT PPC440MC3_MIMCReadNotWrite = MIMCREADNOTWRITE, DIR = I, BUS = PPC440MC3
PORT PPC440MC3_MIMCAddress = MIMCADDRESS, DIR = I, BUS = PPC440MC3, VEC = [0:35]
PORT PPC440MC3_MIMCAddressValid = MIMCADDRESSVALID, DIR = I, BUS = PPC440MC3
PORT PPC440MC3_MIMCWriteData = MIMCWRITEDATA, DIR = I, BUS = PPC440MC3, VEC = [0:127]
PORT PPC440MC3_MIMCWriteDataValid = MIMCWRITEDATAVALID, DIR = I, BUS = PPC440MC3
PORT PPC440MC3_MIMCByteEnable = MIMCBYTEENABLE, DIR = I, BUS = PPC440MC3, VEC = [0:15]
PORT PPC440MC3_MIMCBankConflict = MIMCBANKCONFLICT, DIR = I, BUS = PPC440MC3
PORT PPC440MC3_MIMCRowConflict = MIMCROWCONFLICT, DIR = I, BUS = PPC440MC3
PORT PPC440MC3_MCMIReadData = MCMIREADDATA, DIR = O, BUS = PPC440MC3, VEC = [0:127]
PORT PPC440MC3_MCMIReadDataValid = MCMIREADDATAVALID, DIR = O, BUS = PPC440MC3
PORT PPC440MC3_MCMIReadDataErr = MCMIREADDATAERR, DIR = O, BUS = PPC440MC3
PORT PPC440MC3_MCMIAddrReadyToAccept = MCMIADDRREADYTOACCEPT, DIR = O, BUS = PPC440MC3
PORT VFBC3_Cmd_Clk = cmd_clk, DIR = I, BUS = VFBC3
PORT VFBC3_Cmd_Reset = cmd_reset, DIR = I, BUS = VFBC3
PORT VFBC3_Cmd_Data = cmd_data, DIR = I, BUS = VFBC3, VEC = [31:0]
PORT VFBC3_Cmd_Write = cmd_write, DIR = I, BUS = VFBC3
PORT VFBC3_Cmd_End = cmd_end, DIR = I, BUS = VFBC3
PORT VFBC3_Cmd_Full = cmd_full, DIR = O, BUS = VFBC3
PORT VFBC3_Cmd_Almost_Full = cmd_almost_full, DIR = O, BUS = VFBC3
PORT VFBC3_Cmd_Idle = cmd_idle, DIR = O, BUS = VFBC3
PORT VFBC3_Wd_Clk = wd_clk, DIR = I, BUS = VFBC3
PORT VFBC3_Wd_Reset = wd_reset, DIR = I, BUS = VFBC3
PORT VFBC3_Wd_Write = wd_write, DIR = I, BUS = VFBC3
PORT VFBC3_Wd_End_Burst = wd_end_burst, DIR = I, BUS = VFBC3
PORT VFBC3_Wd_Flush = wd_flush, DIR = I, BUS = VFBC3
PORT VFBC3_Wd_Data = wd_data, DIR = I, BUS = VFBC3, VEC = [C_VFBC3_RDWD_DATA_WIDTH-1:0]
PORT VFBC3_Wd_Data_BE = wd_data_be, DIR = I, BUS = VFBC3, VEC = [C_VFBC3_RDWD_DATA_WIDTH/8-1:0]
PORT VFBC3_Wd_Full = wd_full, DIR = O, BUS = VFBC3
PORT VFBC3_Wd_Almost_Full = wd_almost_full, DIR = O, BUS = VFBC3
PORT VFBC3_Rd_Clk = rd_clk, DIR = I, BUS = VFBC3
PORT VFBC3_Rd_Reset = rd_reset, DIR = I, BUS = VFBC3
PORT VFBC3_Rd_Read = rd_read, DIR = I, BUS = VFBC3
PORT VFBC3_Rd_End_Burst = rd_end_burst, DIR = I, BUS = VFBC3
PORT VFBC3_Rd_Flush = rd_flush, DIR = I, BUS = VFBC3
PORT VFBC3_Rd_Data = rd_data, DIR = O, BUS = VFBC3, VEC = [C_VFBC3_RDWD_DATA_WIDTH-1:0]
PORT VFBC3_Rd_Empty = rd_empty, DIR = O, BUS = VFBC3
PORT VFBC3_Rd_Almost_Empty = rd_almost_empty, DIR = O, BUS = VFBC3
PORT MCB3_cmd_clk = cmd_clk, DIR = I, BUS = MCB3
PORT MCB3_cmd_en = cmd_en, DIR = I, BUS = MCB3
PORT MCB3_cmd_instr = cmd_instr, DIR = I, BUS = MCB3, VEC = [2:0]
PORT MCB3_cmd_bl = cmd_bl, DIR = I, BUS = MCB3, VEC = [5:0]
PORT MCB3_cmd_byte_addr = cmd_byte_addr, DIR = I, BUS = MCB3, VEC = [29:0]
PORT MCB3_cmd_empty = cmd_empty, DIR = O, BUS = MCB3
PORT MCB3_cmd_full = cmd_full, DIR = O, BUS = MCB3
PORT MCB3_wr_clk = wr_clk, DIR = I, BUS = MCB3
PORT MCB3_wr_en = wr_en, DIR = I, BUS = MCB3
PORT MCB3_wr_mask = wr_mask, DIR = I, BUS = MCB3, VEC = [C_PIM3_DATA_WIDTH/8-1:0]
PORT MCB3_wr_data = wr_data, DIR = I, BUS = MCB3, VEC = [C_PIM3_DATA_WIDTH-1:0]
PORT MCB3_wr_full = wr_full, DIR = O, BUS = MCB3
PORT MCB3_wr_empty = wr_empty, DIR = O, BUS = MCB3
PORT MCB3_wr_count = wr_count, DIR = O, BUS = MCB3, VEC = [6:0]
PORT MCB3_wr_underrun = wr_underrun, DIR = O, BUS = MCB3
PORT MCB3_wr_error = wr_error, DIR = O, BUS = MCB3
PORT MCB3_rd_clk = rd_clk, DIR = I, BUS = MCB3
PORT MCB3_rd_en = rd_en, DIR = I, BUS = MCB3
PORT MCB3_rd_data = rd_data, DIR = O, BUS = MCB3, VEC = [C_PIM3_DATA_WIDTH-1:0]
PORT MCB3_rd_full = rd_full, DIR = O, BUS = MCB3
PORT MCB3_rd_empty = rd_empty, DIR = O, BUS = MCB3
PORT MCB3_rd_count = rd_count, DIR = O, BUS = MCB3, VEC = [6:0]
PORT MCB3_rd_overflow = rd_overflow, DIR = O, BUS = MCB3
PORT MCB3_rd_error = rd_error, DIR = O, BUS = MCB3
PORT FSL4_M_Clk = FSL_M_Clk, DIR = I, BUS = XCL4, SIGIS = CLK, INITIALVAL = VCC
PORT FSL4_M_Write = FSL_M_Write, DIR = I, BUS = XCL4
PORT FSL4_M_Data = FSL_M_Data, DIR = I, BUS = XCL4, VEC = [0:31]
PORT FSL4_M_Control = FSL_M_Control, DIR = I, BUS = XCL4
PORT FSL4_M_Full = FSL_M_Full, DIR = O, BUS = XCL4
PORT FSL4_S_Clk = FSL_S_Clk, DIR = I, BUS = XCL4
PORT FSL4_S_Read = FSL_S_Read, DIR = I, BUS = XCL4
PORT FSL4_S_Data = FSL_S_Data, DIR = O, BUS = XCL4, VEC = [0:31]
PORT FSL4_S_Control = FSL_S_Control, DIR = O, BUS = XCL4
PORT FSL4_S_Exists = FSL_S_Exists, DIR = O, BUS = XCL4
PORT FSL4_B_M_Clk = FSL_M_Clk, DIR = I, BUS = XCL4_B, SIGIS = CLK, INITIALVAL = VCC
PORT FSL4_B_M_Write = FSL_M_Write, DIR = I, BUS = XCL4_B
PORT FSL4_B_M_Data = FSL_M_Data, DIR = I, BUS = XCL4_B, VEC = [0:31]
PORT FSL4_B_M_Control = FSL_M_Control, DIR = I, BUS = XCL4_B
PORT FSL4_B_M_Full = FSL_M_Full, DIR = O, BUS = XCL4_B
PORT FSL4_B_S_Clk = FSL_S_Clk, DIR = I, BUS = XCL4_B
PORT FSL4_B_S_Read = FSL_S_Read, DIR = I, BUS = XCL4_B
PORT FSL4_B_S_Data = FSL_S_Data, DIR = O, BUS = XCL4_B, VEC = [0:31]
PORT FSL4_B_S_Control = FSL_S_Control, DIR = O, BUS = XCL4_B
PORT FSL4_B_S_Exists = FSL_S_Exists, DIR = O, BUS = XCL4_B
PORT SPLB4_Clk = "", DIR = I, BUS = SPLB4, SIGIS = CLK, INITIALVAL = VCC
PORT SPLB4_Rst = SPLB_Rst, DIR = I, BUS = SPLB4, SIGIS = RST
PORT SPLB4_PLB_ABus = PLB_ABus, DIR = I, BUS = SPLB4, VEC = [0:31]
PORT SPLB4_PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB4
PORT SPLB4_PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB4
PORT SPLB4_PLB_masterID = PLB_masterID, DIR = I, BUS = SPLB4, VEC = [0:(C_SPLB4_MID_WIDTH-1)]
PORT SPLB4_PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB4
PORT SPLB4_PLB_BE = PLB_BE, DIR = I, BUS = SPLB4, VEC = [0:((C_SPLB4_DWIDTH/8)-1)]
PORT SPLB4_PLB_UABus = PLB_UABus, DIR = I, BUS = SPLB4, VEC = [0:31]
PORT SPLB4_PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB4
PORT SPLB4_PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB4
PORT SPLB4_PLB_abort = PLB_abort, DIR = I, BUS = SPLB4
PORT SPLB4_PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB4
PORT SPLB4_PLB_MSize = PLB_MSize, DIR = I, BUS = SPLB4, VEC = [0:1]
PORT SPLB4_PLB_size = PLB_size, DIR = I, BUS = SPLB4, VEC = [0:3]
PORT SPLB4_PLB_type = PLB_type, DIR = I, BUS = SPLB4, VEC = [0:2]
PORT SPLB4_PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB4
PORT SPLB4_PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB4
PORT SPLB4_PLB_wrPendPri = PLB_wrPendPri, DIR = I, BUS = SPLB4, VEC = [0:1]
PORT SPLB4_PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB4
PORT SPLB4_PLB_rdPendPri = PLB_rdPendPri, DIR = I, BUS = SPLB4, VEC = [0:1]
PORT SPLB4_PLB_reqPri = PLB_reqPri, DIR = I, BUS = SPLB4, VEC = [0:1]
PORT SPLB4_PLB_TAttribute = PLB_TAttribute, DIR = I, BUS = SPLB4, VEC = [0:15]
PORT SPLB4_PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB4
PORT SPLB4_PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB4
PORT SPLB4_PLB_wrDBus = PLB_wrDBus, DIR = I, BUS = SPLB4, VEC = [0:(C_SPLB4_DWIDTH-1)]
PORT SPLB4_Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB4
PORT SPLB4_Sl_SSize = Sl_SSize, DIR = O, BUS = SPLB4, VEC = [0:1]
PORT SPLB4_Sl_wait = Sl_wait, DIR = O, BUS = SPLB4
PORT SPLB4_Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB4
PORT SPLB4_Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB4
PORT SPLB4_Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB4
PORT SPLB4_Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB4
PORT SPLB4_Sl_rdDBus = Sl_rdDBus, DIR = O, BUS = SPLB4, VEC = [0:(C_SPLB4_DWIDTH-1)]
PORT SPLB4_Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, BUS = SPLB4, VEC = [0:3]
PORT SPLB4_Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB4
PORT SPLB4_Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB4
PORT SPLB4_Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB4
PORT SPLB4_Sl_MBusy = Sl_MBusy, DIR = O, BUS = SPLB4, VEC = [0:(C_SPLB4_NUM_MASTERS-1)]
PORT SPLB4_Sl_MRdErr = Sl_MRdErr, DIR = O, BUS = SPLB4, VEC = [0:(C_SPLB4_NUM_MASTERS-1)]
PORT SPLB4_Sl_MWrErr = Sl_MWrErr, DIR = O, BUS = SPLB4, VEC = [0:(C_SPLB4_NUM_MASTERS-1)]
PORT SPLB4_Sl_MIRQ = Sl_MIRQ, DIR = O, BUS = SPLB4, VEC = [0:(C_SPLB4_NUM_MASTERS-1)]
PORT SDMA4_Clk = "", DIR = I, SIGIS = CLK, ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 3), ASSIGNMENT = REQUIRE
PORT SDMA4_Rx_IntOut = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 3)
PORT SDMA4_Tx_IntOut = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 3)
PORT SDMA4_RstOut = LL_RST_ACK, DIR = O, BUS = SDMA_LL4
PORT SDMA4_TX_D = LL_Tx_Data, DIR = O, BUS = SDMA_LL4, VEC = [0:31]
PORT SDMA4_TX_Rem = LL_Tx_Rem, DIR = O, BUS = SDMA_LL4, VEC = [0:3]
PORT SDMA4_TX_SOF = LL_Tx_SOF_n, DIR = O, BUS = SDMA_LL4
PORT SDMA4_TX_EOF = LL_Tx_EOF_n, DIR = O, BUS = SDMA_LL4
PORT SDMA4_TX_SOP = LL_Tx_SOP_n, DIR = O, BUS = SDMA_LL4
PORT SDMA4_TX_EOP = LL_Tx_EOP_n, DIR = O, BUS = SDMA_LL4
PORT SDMA4_TX_Src_Rdy = LL_Tx_SrcRdy_n, DIR = O, BUS = SDMA_LL4
PORT SDMA4_TX_Dst_Rdy = LL_Tx_DstRdy_n, DIR = I, BUS = SDMA_LL4, INITIALVAL = VCC
PORT SDMA4_RX_D = LL_Rx_Data, DIR = I, BUS = SDMA_LL4, INITIALVAL = GND, VEC = [0:31]
PORT SDMA4_RX_Rem = LL_Rx_Rem, DIR = I, BUS = SDMA_LL4, INITIALVAL = VCC, VEC = [0:3]
PORT SDMA4_RX_SOF = LL_Rx_SOF_n, DIR = I, BUS = SDMA_LL4, INITIALVAL = VCC
PORT SDMA4_RX_EOF = LL_Rx_EOF_n, DIR = I, BUS = SDMA_LL4, INITIALVAL = VCC
PORT SDMA4_RX_SOP = LL_Rx_SOP_n, DIR = I, BUS = SDMA_LL4, INITIALVAL = VCC
PORT SDMA4_RX_EOP = LL_Rx_EOP_n, DIR = I, BUS = SDMA_LL4, INITIALVAL = VCC
PORT SDMA4_RX_Src_Rdy = LL_Rx_SrcRdy_n, DIR = I, BUS = SDMA_LL4, INITIALVAL = VCC
PORT SDMA4_RX_Dst_Rdy = LL_Rx_DstRdy_n, DIR = O, BUS = SDMA_LL4
PORT SDMA_CTRL4_Clk = "", DIR = I, BUS = SDMA_CTRL4, SIGIS = CLK, INITIALVAL = VCC
PORT SDMA_CTRL4_Rst = SPLB_Rst, DIR = I, BUS = SDMA_CTRL4, SIGIS = RST
PORT SDMA_CTRL4_PLB_ABus = PLB_ABus, DIR = I, BUS = SDMA_CTRL4, VEC = [0:31]
PORT SDMA_CTRL4_PLB_PAValid = PLB_PAValid, DIR = I, BUS = SDMA_CTRL4
PORT SDMA_CTRL4_PLB_SAValid = PLB_SAValid, DIR = I, BUS = SDMA_CTRL4
PORT SDMA_CTRL4_PLB_masterID = PLB_masterID, DIR = I, BUS = SDMA_CTRL4, VEC = [0:(C_SDMA_CTRL4_MID_WIDTH-1)]
PORT SDMA_CTRL4_PLB_RNW = PLB_RNW, DIR = I, BUS = SDMA_CTRL4
PORT SDMA_CTRL4_PLB_BE = PLB_BE, DIR = I, BUS = SDMA_CTRL4, VEC = [0:((C_SDMA_CTRL4_DWIDTH/8)-1)]
PORT SDMA_CTRL4_PLB_UABus = PLB_UABus, DIR = I, BUS = SDMA_CTRL4, VEC = [0:31]
PORT SDMA_CTRL4_PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SDMA_CTRL4
PORT SDMA_CTRL4_PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SDMA_CTRL4
PORT SDMA_CTRL4_PLB_abort = PLB_abort, DIR = I, BUS = SDMA_CTRL4
PORT SDMA_CTRL4_PLB_busLock = PLB_busLock, DIR = I, BUS = SDMA_CTRL4
PORT SDMA_CTRL4_PLB_MSize = PLB_MSize, DIR = I, BUS = SDMA_CTRL4, VEC = [0:1]
PORT SDMA_CTRL4_PLB_size = PLB_size, DIR = I, BUS = SDMA_CTRL4, VEC = [0:3]
PORT SDMA_CTRL4_PLB_type = PLB_type, DIR = I, BUS = SDMA_CTRL4, VEC = [0:2]
PORT SDMA_CTRL4_PLB_lockErr = PLB_lockErr, DIR = I, BUS = SDMA_CTRL4
PORT SDMA_CTRL4_PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SDMA_CTRL4
PORT SDMA_CTRL4_PLB_wrPendPri = PLB_wrPendPri, DIR = I, BUS = SDMA_CTRL4, VEC = [0:1]
PORT SDMA_CTRL4_PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SDMA_CTRL4
PORT SDMA_CTRL4_PLB_rdPendPri = PLB_rdPendPri, DIR = I, BUS = SDMA_CTRL4, VEC = [0:1]
PORT SDMA_CTRL4_PLB_reqPri = PLB_reqPri, DIR = I, BUS = SDMA_CTRL4, VEC = [0:1]
PORT SDMA_CTRL4_PLB_TAttribute = PLB_TAttribute, DIR = I, BUS = SDMA_CTRL4, VEC = [0:15]
PORT SDMA_CTRL4_PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SDMA_CTRL4
PORT SDMA_CTRL4_PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SDMA_CTRL4
PORT SDMA_CTRL4_PLB_wrDBus = PLB_wrDBus, DIR = I, BUS = SDMA_CTRL4, VEC = [0:(C_SDMA_CTRL4_DWIDTH-1)]
PORT SDMA_CTRL4_Sl_addrAck = Sl_addrAck, DIR = O, BUS = SDMA_CTRL4
PORT SDMA_CTRL4_Sl_SSize = Sl_SSize, DIR = O, BUS = SDMA_CTRL4, VEC = [0:1]
PORT SDMA_CTRL4_Sl_wait = Sl_wait, DIR = O, BUS = SDMA_CTRL4
PORT SDMA_CTRL4_Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SDMA_CTRL4
PORT SDMA_CTRL4_Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SDMA_CTRL4
PORT SDMA_CTRL4_Sl_wrComp = Sl_wrComp, DIR = O, BUS = SDMA_CTRL4
PORT SDMA_CTRL4_Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SDMA_CTRL4
PORT SDMA_CTRL4_Sl_rdDBus = Sl_rdDBus, DIR = O, BUS = SDMA_CTRL4, VEC = [0:(C_SDMA_CTRL4_DWIDTH-1)]
PORT SDMA_CTRL4_Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, BUS = SDMA_CTRL4, VEC = [0:3]
PORT SDMA_CTRL4_Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SDMA_CTRL4
PORT SDMA_CTRL4_Sl_rdComp = Sl_rdComp, DIR = O, BUS = SDMA_CTRL4
PORT SDMA_CTRL4_Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SDMA_CTRL4
PORT SDMA_CTRL4_Sl_MBusy = Sl_MBusy, DIR = O, BUS = SDMA_CTRL4, VEC = [0:(C_SDMA_CTRL4_NUM_MASTERS-1)]
PORT SDMA_CTRL4_Sl_MRdErr = Sl_MRdErr, DIR = O, BUS = SDMA_CTRL4, VEC = [0:(C_SDMA_CTRL4_NUM_MASTERS-1)]
PORT SDMA_CTRL4_Sl_MWrErr = Sl_MWrErr, DIR = O, BUS = SDMA_CTRL4, VEC = [0:(C_SDMA_CTRL4_NUM_MASTERS-1)]
PORT SDMA_CTRL4_Sl_MIRQ = Sl_MIRQ, DIR = O, BUS = SDMA_CTRL4, VEC = [0:(C_SDMA_CTRL4_NUM_MASTERS-1)]
PORT PIM4_Addr = Addr, DIR = I, BUS = MPMC_PIM4, VEC = [31:0]
PORT PIM4_AddrReq = AddrReq, DIR = I, BUS = MPMC_PIM4
PORT PIM4_AddrAck = AddrAck, DIR = O, BUS = MPMC_PIM4
PORT PIM4_RNW = RNW, DIR = I, BUS = MPMC_PIM4
PORT PIM4_Size = Size, DIR = I, BUS = MPMC_PIM4, VEC = [3:0]
PORT PIM4_RdModWr = RdModWr, DIR = I, BUS = MPMC_PIM4
PORT PIM4_WrFIFO_Data = WrFIFO_Data, DIR = I, BUS = MPMC_PIM4, VEC = [(C_PIM4_DATA_WIDTH-1):0]
PORT PIM4_WrFIFO_BE = WrFIFO_BE, DIR = I, BUS = MPMC_PIM4, VEC = [(C_PIM4_DATA_WIDTH/8-1):0]
PORT PIM4_WrFIFO_Push = WrFIFO_Push, DIR = I, BUS = MPMC_PIM4
PORT PIM4_RdFIFO_Data = RdFIFO_Data, DIR = O, BUS = MPMC_PIM4, VEC = [(C_PIM4_DATA_WIDTH-1):0]
PORT PIM4_RdFIFO_Pop = RdFIFO_Pop, DIR = I, BUS = MPMC_PIM4
PORT PIM4_RdFIFO_RdWdAddr = RdFIFO_RdWdAddr, DIR = O, BUS = MPMC_PIM4, VEC = [3:0]
PORT PIM4_WrFIFO_Empty = WrFIFO_Empty, DIR = O, BUS = MPMC_PIM4
PORT PIM4_WrFIFO_AlmostFull = WrFIFO_AlmostFull, DIR = O, BUS = MPMC_PIM4
PORT PIM4_WrFIFO_Flush = WrFIFO_Flush, DIR = I, BUS = MPMC_PIM4
PORT PIM4_RdFIFO_Empty = RdFIFO_Empty, DIR = O, BUS = MPMC_PIM4
PORT PIM4_RdFIFO_Flush = RdFIFO_Flush, DIR = I, BUS = MPMC_PIM4
PORT PIM4_RdFIFO_Latency = RDFIFO_Latency, DIR = O, BUS = MPMC_PIM4, VEC = [1:0]
PORT PIM4_InitDone = InitDone, DIR = O, BUS = MPMC_PIM4
PORT PPC440MC4_MIMCReadNotWrite = MIMCREADNOTWRITE, DIR = I, BUS = PPC440MC4
PORT PPC440MC4_MIMCAddress = MIMCADDRESS, DIR = I, BUS = PPC440MC4, VEC = [0:35]
PORT PPC440MC4_MIMCAddressValid = MIMCADDRESSVALID, DIR = I, BUS = PPC440MC4
PORT PPC440MC4_MIMCWriteData = MIMCWRITEDATA, DIR = I, BUS = PPC440MC4, VEC = [0:127]
PORT PPC440MC4_MIMCWriteDataValid = MIMCWRITEDATAVALID, DIR = I, BUS = PPC440MC4
PORT PPC440MC4_MIMCByteEnable = MIMCBYTEENABLE, DIR = I, BUS = PPC440MC4, VEC = [0:15]
PORT PPC440MC4_MIMCBankConflict = MIMCBANKCONFLICT, DIR = I, BUS = PPC440MC4
PORT PPC440MC4_MIMCRowConflict = MIMCROWCONFLICT, DIR = I, BUS = PPC440MC4
PORT PPC440MC4_MCMIReadData = MCMIREADDATA, DIR = O, BUS = PPC440MC4, VEC = [0:127]
PORT PPC440MC4_MCMIReadDataValid = MCMIREADDATAVALID, DIR = O, BUS = PPC440MC4
PORT PPC440MC4_MCMIReadDataErr = MCMIREADDATAERR, DIR = O, BUS = PPC440MC4
PORT PPC440MC4_MCMIAddrReadyToAccept = MCMIADDRREADYTOACCEPT, DIR = O, BUS = PPC440MC4
PORT VFBC4_Cmd_Clk = cmd_clk, DIR = I, BUS = VFBC4
PORT VFBC4_Cmd_Reset = cmd_reset, DIR = I, BUS = VFBC4
PORT VFBC4_Cmd_Data = cmd_data, DIR = I, BUS = VFBC4, VEC = [31:0]
PORT VFBC4_Cmd_Write = cmd_write, DIR = I, BUS = VFBC4
PORT VFBC4_Cmd_End = cmd_end, DIR = I, BUS = VFBC4
PORT VFBC4_Cmd_Full = cmd_full, DIR = O, BUS = VFBC4
PORT VFBC4_Cmd_Almost_Full = cmd_almost_full, DIR = O, BUS = VFBC4
PORT VFBC4_Cmd_Idle = cmd_idle, DIR = O, BUS = VFBC4
PORT VFBC4_Wd_Clk = wd_clk, DIR = I, BUS = VFBC4
PORT VFBC4_Wd_Reset = wd_reset, DIR = I, BUS = VFBC4
PORT VFBC4_Wd_Write = wd_write, DIR = I, BUS = VFBC4
PORT VFBC4_Wd_End_Burst = wd_end_burst, DIR = I, BUS = VFBC4
PORT VFBC4_Wd_Flush = wd_flush, DIR = I, BUS = VFBC4
PORT VFBC4_Wd_Data = wd_data, DIR = I, BUS = VFBC4, VEC = [C_VFBC4_RDWD_DATA_WIDTH-1:0]
PORT VFBC4_Wd_Data_BE = wd_data_be, DIR = I, BUS = VFBC4, VEC = [C_VFBC4_RDWD_DATA_WIDTH/8-1:0]
PORT VFBC4_Wd_Full = wd_full, DIR = O, BUS = VFBC4
PORT VFBC4_Wd_Almost_Full = wd_almost_full, DIR = O, BUS = VFBC4
PORT VFBC4_Rd_Clk = rd_clk, DIR = I, BUS = VFBC4
PORT VFBC4_Rd_Reset = rd_reset, DIR = I, BUS = VFBC4
PORT VFBC4_Rd_Read = rd_read, DIR = I, BUS = VFBC4
PORT VFBC4_Rd_End_Burst = rd_end_burst, DIR = I, BUS = VFBC4
PORT VFBC4_Rd_Flush = rd_flush, DIR = I, BUS = VFBC4
PORT VFBC4_Rd_Data = rd_data, DIR = O, BUS = VFBC4, VEC = [C_VFBC4_RDWD_DATA_WIDTH-1:0]
PORT VFBC4_Rd_Empty = rd_empty, DIR = O, BUS = VFBC4
PORT VFBC4_Rd_Almost_Empty = rd_almost_empty, DIR = O, BUS = VFBC4
PORT MCB4_cmd_clk = cmd_clk, DIR = I, BUS = MCB4
PORT MCB4_cmd_en = cmd_en, DIR = I, BUS = MCB4
PORT MCB4_cmd_instr = cmd_instr, DIR = I, BUS = MCB4, VEC = [2:0]
PORT MCB4_cmd_bl = cmd_bl, DIR = I, BUS = MCB4, VEC = [5:0]
PORT MCB4_cmd_byte_addr = cmd_byte_addr, DIR = I, BUS = MCB4, VEC = [29:0]
PORT MCB4_cmd_empty = cmd_empty, DIR = O, BUS = MCB4
PORT MCB4_cmd_full = cmd_full, DIR = O, BUS = MCB4
PORT MCB4_wr_clk = wr_clk, DIR = I, BUS = MCB4
PORT MCB4_wr_en = wr_en, DIR = I, BUS = MCB4
PORT MCB4_wr_mask = wr_mask, DIR = I, BUS = MCB4, VEC = [C_PIM4_DATA_WIDTH/8-1:0]
PORT MCB4_wr_data = wr_data, DIR = I, BUS = MCB4, VEC = [C_PIM4_DATA_WIDTH-1:0]
PORT MCB4_wr_full = wr_full, DIR = O, BUS = MCB4
PORT MCB4_wr_empty = wr_empty, DIR = O, BUS = MCB4
PORT MCB4_wr_count = wr_count, DIR = O, BUS = MCB4, VEC = [6:0]
PORT MCB4_wr_underrun = wr_underrun, DIR = O, BUS = MCB4
PORT MCB4_wr_error = wr_error, DIR = O, BUS = MCB4
PORT MCB4_rd_clk = rd_clk, DIR = I, BUS = MCB4
PORT MCB4_rd_en = rd_en, DIR = I, BUS = MCB4
PORT MCB4_rd_data = rd_data, DIR = O, BUS = MCB4, VEC = [C_PIM4_DATA_WIDTH-1:0]
PORT MCB4_rd_full = rd_full, DIR = O, BUS = MCB4
PORT MCB4_rd_empty = rd_empty, DIR = O, BUS = MCB4
PORT MCB4_rd_count = rd_count, DIR = O, BUS = MCB4, VEC = [6:0]
PORT MCB4_rd_overflow = rd_overflow, DIR = O, BUS = MCB4
PORT MCB4_rd_error = rd_error, DIR = O, BUS = MCB4
PORT FSL5_M_Clk = FSL_M_Clk, DIR = I, BUS = XCL5, SIGIS = CLK, INITIALVAL = VCC
PORT FSL5_M_Write = FSL_M_Write, DIR = I, BUS = XCL5
PORT FSL5_M_Data = FSL_M_Data, DIR = I, BUS = XCL5, VEC = [0:31]
PORT FSL5_M_Control = FSL_M_Control, DIR = I, BUS = XCL5
PORT FSL5_M_Full = FSL_M_Full, DIR = O, BUS = XCL5
PORT FSL5_S_Clk = FSL_S_Clk, DIR = I, BUS = XCL5
PORT FSL5_S_Read = FSL_S_Read, DIR = I, BUS = XCL5
PORT FSL5_S_Data = FSL_S_Data, DIR = O, BUS = XCL5, VEC = [0:31]
PORT FSL5_S_Control = FSL_S_Control, DIR = O, BUS = XCL5
PORT FSL5_S_Exists = FSL_S_Exists, DIR = O, BUS = XCL5
PORT FSL5_B_M_Clk = FSL_M_Clk, DIR = I, BUS = XCL5_B, SIGIS = CLK, INITIALVAL = VCC
PORT FSL5_B_M_Write = FSL_M_Write, DIR = I, BUS = XCL5_B
PORT FSL5_B_M_Data = FSL_M_Data, DIR = I, BUS = XCL5_B, VEC = [0:31]
PORT FSL5_B_M_Control = FSL_M_Control, DIR = I, BUS = XCL5_B
PORT FSL5_B_M_Full = FSL_M_Full, DIR = O, BUS = XCL5_B
PORT FSL5_B_S_Clk = FSL_S_Clk, DIR = I, BUS = XCL5_B
PORT FSL5_B_S_Read = FSL_S_Read, DIR = I, BUS = XCL5_B
PORT FSL5_B_S_Data = FSL_S_Data, DIR = O, BUS = XCL5_B, VEC = [0:31]
PORT FSL5_B_S_Control = FSL_S_Control, DIR = O, BUS = XCL5_B
PORT FSL5_B_S_Exists = FSL_S_Exists, DIR = O, BUS = XCL5_B
PORT SPLB5_Clk = "", DIR = I, BUS = SPLB5, SIGIS = CLK, INITIALVAL = VCC
PORT SPLB5_Rst = SPLB_Rst, DIR = I, BUS = SPLB5, SIGIS = RST
PORT SPLB5_PLB_ABus = PLB_ABus, DIR = I, BUS = SPLB5, VEC = [0:31]
PORT SPLB5_PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB5
PORT SPLB5_PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB5
PORT SPLB5_PLB_masterID = PLB_masterID, DIR = I, BUS = SPLB5, VEC = [0:(C_SPLB5_MID_WIDTH-1)]
PORT SPLB5_PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB5
PORT SPLB5_PLB_BE = PLB_BE, DIR = I, BUS = SPLB5, VEC = [0:((C_SPLB5_DWIDTH/8)-1)]
PORT SPLB5_PLB_UABus = PLB_UABus, DIR = I, BUS = SPLB5, VEC = [0:31]
PORT SPLB5_PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB5
PORT SPLB5_PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB5
PORT SPLB5_PLB_abort = PLB_abort, DIR = I, BUS = SPLB5
PORT SPLB5_PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB5
PORT SPLB5_PLB_MSize = PLB_MSize, DIR = I, BUS = SPLB5, VEC = [0:1]
PORT SPLB5_PLB_size = PLB_size, DIR = I, BUS = SPLB5, VEC = [0:3]
PORT SPLB5_PLB_type = PLB_type, DIR = I, BUS = SPLB5, VEC = [0:2]
PORT SPLB5_PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB5
PORT SPLB5_PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB5
PORT SPLB5_PLB_wrPendPri = PLB_wrPendPri, DIR = I, BUS = SPLB5, VEC = [0:1]
PORT SPLB5_PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB5
PORT SPLB5_PLB_rdPendPri = PLB_rdPendPri, DIR = I, BUS = SPLB5, VEC = [0:1]
PORT SPLB5_PLB_reqPri = PLB_reqPri, DIR = I, BUS = SPLB5, VEC = [0:1]
PORT SPLB5_PLB_TAttribute = PLB_TAttribute, DIR = I, BUS = SPLB5, VEC = [0:15]
PORT SPLB5_PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB5
PORT SPLB5_PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB5
PORT SPLB5_PLB_wrDBus = PLB_wrDBus, DIR = I, BUS = SPLB5, VEC = [0:(C_SPLB5_DWIDTH-1)]
PORT SPLB5_Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB5
PORT SPLB5_Sl_SSize = Sl_SSize, DIR = O, BUS = SPLB5, VEC = [0:1]
PORT SPLB5_Sl_wait = Sl_wait, DIR = O, BUS = SPLB5
PORT SPLB5_Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB5
PORT SPLB5_Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB5
PORT SPLB5_Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB5
PORT SPLB5_Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB5
PORT SPLB5_Sl_rdDBus = Sl_rdDBus, DIR = O, BUS = SPLB5, VEC = [0:(C_SPLB5_DWIDTH-1)]
PORT SPLB5_Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, BUS = SPLB5, VEC = [0:3]
PORT SPLB5_Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB5
PORT SPLB5_Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB5
PORT SPLB5_Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB5
PORT SPLB5_Sl_MBusy = Sl_MBusy, DIR = O, BUS = SPLB5, VEC = [0:(C_SPLB5_NUM_MASTERS-1)]
PORT SPLB5_Sl_MRdErr = Sl_MRdErr, DIR = O, BUS = SPLB5, VEC = [0:(C_SPLB5_NUM_MASTERS-1)]
PORT SPLB5_Sl_MWrErr = Sl_MWrErr, DIR = O, BUS = SPLB5, VEC = [0:(C_SPLB5_NUM_MASTERS-1)]
PORT SPLB5_Sl_MIRQ = Sl_MIRQ, DIR = O, BUS = SPLB5, VEC = [0:(C_SPLB5_NUM_MASTERS-1)]
PORT SDMA5_Clk = "", DIR = I, SIGIS = CLK, ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 3), ASSIGNMENT = REQUIRE
PORT SDMA5_Rx_IntOut = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 3)
PORT SDMA5_Tx_IntOut = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 3)
PORT SDMA5_RstOut = LL_RST_ACK, DIR = O, BUS = SDMA_LL5
PORT SDMA5_TX_D = LL_Tx_Data, DIR = O, BUS = SDMA_LL5, VEC = [0:31]
PORT SDMA5_TX_Rem = LL_Tx_Rem, DIR = O, BUS = SDMA_LL5, VEC = [0:3]
PORT SDMA5_TX_SOF = LL_Tx_SOF_n, DIR = O, BUS = SDMA_LL5
PORT SDMA5_TX_EOF = LL_Tx_EOF_n, DIR = O, BUS = SDMA_LL5
PORT SDMA5_TX_SOP = LL_Tx_SOP_n, DIR = O, BUS = SDMA_LL5
PORT SDMA5_TX_EOP = LL_Tx_EOP_n, DIR = O, BUS = SDMA_LL5
PORT SDMA5_TX_Src_Rdy = LL_Tx_SrcRdy_n, DIR = O, BUS = SDMA_LL5
PORT SDMA5_TX_Dst_Rdy = LL_Tx_DstRdy_n, DIR = I, BUS = SDMA_LL5, INITIALVAL = VCC
PORT SDMA5_RX_D = LL_Rx_Data, DIR = I, BUS = SDMA_LL5, INITIALVAL = GND, VEC = [0:31]
PORT SDMA5_RX_Rem = LL_Rx_Rem, DIR = I, BUS = SDMA_LL5, INITIALVAL = VCC, VEC = [0:3]
PORT SDMA5_RX_SOF = LL_Rx_SOF_n, DIR = I, BUS = SDMA_LL5, INITIALVAL = VCC
PORT SDMA5_RX_EOF = LL_Rx_EOF_n, DIR = I, BUS = SDMA_LL5, INITIALVAL = VCC
PORT SDMA5_RX_SOP = LL_Rx_SOP_n, DIR = I, BUS = SDMA_LL5, INITIALVAL = VCC
PORT SDMA5_RX_EOP = LL_Rx_EOP_n, DIR = I, BUS = SDMA_LL5, INITIALVAL = VCC
PORT SDMA5_RX_Src_Rdy = LL_Rx_SrcRdy_n, DIR = I, BUS = SDMA_LL5, INITIALVAL = VCC
PORT SDMA5_RX_Dst_Rdy = LL_Rx_DstRdy_n, DIR = O, BUS = SDMA_LL5
PORT SDMA_CTRL5_Clk = "", DIR = I, BUS = SDMA_CTRL5, SIGIS = CLK, INITIALVAL = VCC
PORT SDMA_CTRL5_Rst = SPLB_Rst, DIR = I, BUS = SDMA_CTRL5, SIGIS = RST
PORT SDMA_CTRL5_PLB_ABus = PLB_ABus, DIR = I, BUS = SDMA_CTRL5, VEC = [0:31]
PORT SDMA_CTRL5_PLB_PAValid = PLB_PAValid, DIR = I, BUS = SDMA_CTRL5
PORT SDMA_CTRL5_PLB_SAValid = PLB_SAValid, DIR = I, BUS = SDMA_CTRL5
PORT SDMA_CTRL5_PLB_masterID = PLB_masterID, DIR = I, BUS = SDMA_CTRL5, VEC = [0:(C_SDMA_CTRL5_MID_WIDTH-1)]
PORT SDMA_CTRL5_PLB_RNW = PLB_RNW, DIR = I, BUS = SDMA_CTRL5
PORT SDMA_CTRL5_PLB_BE = PLB_BE, DIR = I, BUS = SDMA_CTRL5, VEC = [0:((C_SDMA_CTRL5_DWIDTH/8)-1)]
PORT SDMA_CTRL5_PLB_UABus = PLB_UABus, DIR = I, BUS = SDMA_CTRL5, VEC = [0:31]
PORT SDMA_CTRL5_PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SDMA_CTRL5
PORT SDMA_CTRL5_PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SDMA_CTRL5
PORT SDMA_CTRL5_PLB_abort = PLB_abort, DIR = I, BUS = SDMA_CTRL5
PORT SDMA_CTRL5_PLB_busLock = PLB_busLock, DIR = I, BUS = SDMA_CTRL5
PORT SDMA_CTRL5_PLB_MSize = PLB_MSize, DIR = I, BUS = SDMA_CTRL5, VEC = [0:1]
PORT SDMA_CTRL5_PLB_size = PLB_size, DIR = I, BUS = SDMA_CTRL5, VEC = [0:3]
PORT SDMA_CTRL5_PLB_type = PLB_type, DIR = I, BUS = SDMA_CTRL5, VEC = [0:2]
PORT SDMA_CTRL5_PLB_lockErr = PLB_lockErr, DIR = I, BUS = SDMA_CTRL5
PORT SDMA_CTRL5_PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SDMA_CTRL5
PORT SDMA_CTRL5_PLB_wrPendPri = PLB_wrPendPri, DIR = I, BUS = SDMA_CTRL5, VEC = [0:1]
PORT SDMA_CTRL5_PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SDMA_CTRL5
PORT SDMA_CTRL5_PLB_rdPendPri = PLB_rdPendPri, DIR = I, BUS = SDMA_CTRL5, VEC = [0:1]
PORT SDMA_CTRL5_PLB_reqPri = PLB_reqPri, DIR = I, BUS = SDMA_CTRL5, VEC = [0:1]
PORT SDMA_CTRL5_PLB_TAttribute = PLB_TAttribute, DIR = I, BUS = SDMA_CTRL5, VEC = [0:15]
PORT SDMA_CTRL5_PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SDMA_CTRL5
PORT SDMA_CTRL5_PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SDMA_CTRL5
PORT SDMA_CTRL5_PLB_wrDBus = PLB_wrDBus, DIR = I, BUS = SDMA_CTRL5, VEC = [0:(C_SDMA_CTRL5_DWIDTH-1)]
PORT SDMA_CTRL5_Sl_addrAck = Sl_addrAck, DIR = O, BUS = SDMA_CTRL5
PORT SDMA_CTRL5_Sl_SSize = Sl_SSize, DIR = O, BUS = SDMA_CTRL5, VEC = [0:1]
PORT SDMA_CTRL5_Sl_wait = Sl_wait, DIR = O, BUS = SDMA_CTRL5
PORT SDMA_CTRL5_Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SDMA_CTRL5
PORT SDMA_CTRL5_Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SDMA_CTRL5
PORT SDMA_CTRL5_Sl_wrComp = Sl_wrComp, DIR = O, BUS = SDMA_CTRL5
PORT SDMA_CTRL5_Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SDMA_CTRL5
PORT SDMA_CTRL5_Sl_rdDBus = Sl_rdDBus, DIR = O, BUS = SDMA_CTRL5, VEC = [0:(C_SDMA_CTRL5_DWIDTH-1)]
PORT SDMA_CTRL5_Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, BUS = SDMA_CTRL5, VEC = [0:3]
PORT SDMA_CTRL5_Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SDMA_CTRL5
PORT SDMA_CTRL5_Sl_rdComp = Sl_rdComp, DIR = O, BUS = SDMA_CTRL5
PORT SDMA_CTRL5_Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SDMA_CTRL5
PORT SDMA_CTRL5_Sl_MBusy = Sl_MBusy, DIR = O, BUS = SDMA_CTRL5, VEC = [0:(C_SDMA_CTRL5_NUM_MASTERS-1)]
PORT SDMA_CTRL5_Sl_MRdErr = Sl_MRdErr, DIR = O, BUS = SDMA_CTRL5, VEC = [0:(C_SDMA_CTRL5_NUM_MASTERS-1)]
PORT SDMA_CTRL5_Sl_MWrErr = Sl_MWrErr, DIR = O, BUS = SDMA_CTRL5, VEC = [0:(C_SDMA_CTRL5_NUM_MASTERS-1)]
PORT SDMA_CTRL5_Sl_MIRQ = Sl_MIRQ, DIR = O, BUS = SDMA_CTRL5, VEC = [0:(C_SDMA_CTRL5_NUM_MASTERS-1)]
PORT PIM5_Addr = Addr, DIR = I, BUS = MPMC_PIM5, VEC = [31:0]
PORT PIM5_AddrReq = AddrReq, DIR = I, BUS = MPMC_PIM5
PORT PIM5_AddrAck = AddrAck, DIR = O, BUS = MPMC_PIM5
PORT PIM5_RNW = RNW, DIR = I, BUS = MPMC_PIM5
PORT PIM5_Size = Size, DIR = I, BUS = MPMC_PIM5, VEC = [3:0]
PORT PIM5_RdModWr = RdModWr, DIR = I, BUS = MPMC_PIM5
PORT PIM5_WrFIFO_Data = WrFIFO_Data, DIR = I, BUS = MPMC_PIM5, VEC = [(C_PIM5_DATA_WIDTH-1):0]
PORT PIM5_WrFIFO_BE = WrFIFO_BE, DIR = I, BUS = MPMC_PIM5, VEC = [(C_PIM5_DATA_WIDTH/8-1):0]
PORT PIM5_WrFIFO_Push = WrFIFO_Push, DIR = I, BUS = MPMC_PIM5
PORT PIM5_RdFIFO_Data = RdFIFO_Data, DIR = O, BUS = MPMC_PIM5, VEC = [(C_PIM5_DATA_WIDTH-1):0]
PORT PIM5_RdFIFO_Pop = RdFIFO_Pop, DIR = I, BUS = MPMC_PIM5
PORT PIM5_RdFIFO_RdWdAddr = RdFIFO_RdWdAddr, DIR = O, BUS = MPMC_PIM5, VEC = [3:0]
PORT PIM5_WrFIFO_Empty = WrFIFO_Empty, DIR = O, BUS = MPMC_PIM5
PORT PIM5_WrFIFO_AlmostFull = WrFIFO_AlmostFull, DIR = O, BUS = MPMC_PIM5
PORT PIM5_WrFIFO_Flush = WrFIFO_Flush, DIR = I, BUS = MPMC_PIM5
PORT PIM5_RdFIFO_Empty = RdFIFO_Empty, DIR = O, BUS = MPMC_PIM5
PORT PIM5_RdFIFO_Flush = RdFIFO_Flush, DIR = I, BUS = MPMC_PIM5
PORT PIM5_RdFIFO_Latency = RDFIFO_Latency, DIR = O, BUS = MPMC_PIM5, VEC = [1:0]
PORT PIM5_InitDone = InitDone, DIR = O, BUS = MPMC_PIM5
PORT PPC440MC5_MIMCReadNotWrite = MIMCREADNOTWRITE, DIR = I, BUS = PPC440MC5
PORT PPC440MC5_MIMCAddress = MIMCADDRESS, DIR = I, BUS = PPC440MC5, VEC = [0:35]
PORT PPC440MC5_MIMCAddressValid = MIMCADDRESSVALID, DIR = I, BUS = PPC440MC5
PORT PPC440MC5_MIMCWriteData = MIMCWRITEDATA, DIR = I, BUS = PPC440MC5, VEC = [0:127]
PORT PPC440MC5_MIMCWriteDataValid = MIMCWRITEDATAVALID, DIR = I, BUS = PPC440MC5
PORT PPC440MC5_MIMCByteEnable = MIMCBYTEENABLE, DIR = I, BUS = PPC440MC5, VEC = [0:15]
PORT PPC440MC5_MIMCBankConflict = MIMCBANKCONFLICT, DIR = I, BUS = PPC440MC5
PORT PPC440MC5_MIMCRowConflict = MIMCROWCONFLICT, DIR = I, BUS = PPC440MC5
PORT PPC440MC5_MCMIReadData = MCMIREADDATA, DIR = O, BUS = PPC440MC5, VEC = [0:127]
PORT PPC440MC5_MCMIReadDataValid = MCMIREADDATAVALID, DIR = O, BUS = PPC440MC5
PORT PPC440MC5_MCMIReadDataErr = MCMIREADDATAERR, DIR = O, BUS = PPC440MC5
PORT PPC440MC5_MCMIAddrReadyToAccept = MCMIADDRREADYTOACCEPT, DIR = O, BUS = PPC440MC5
PORT VFBC5_Cmd_Clk = cmd_clk, DIR = I, BUS = VFBC5
PORT VFBC5_Cmd_Reset = cmd_reset, DIR = I, BUS = VFBC5
PORT VFBC5_Cmd_Data = cmd_data, DIR = I, BUS = VFBC5, VEC = [31:0]
PORT VFBC5_Cmd_Write = cmd_write, DIR = I, BUS = VFBC5
PORT VFBC5_Cmd_End = cmd_end, DIR = I, BUS = VFBC5
PORT VFBC5_Cmd_Full = cmd_full, DIR = O, BUS = VFBC5
PORT VFBC5_Cmd_Almost_Full = cmd_almost_full, DIR = O, BUS = VFBC5
PORT VFBC5_Cmd_Idle = cmd_idle, DIR = O, BUS = VFBC5
PORT VFBC5_Wd_Clk = wd_clk, DIR = I, BUS = VFBC5
PORT VFBC5_Wd_Reset = wd_reset, DIR = I, BUS = VFBC5
PORT VFBC5_Wd_Write = wd_write, DIR = I, BUS = VFBC5
PORT VFBC5_Wd_End_Burst = wd_end_burst, DIR = I, BUS = VFBC5
PORT VFBC5_Wd_Flush = wd_flush, DIR = I, BUS = VFBC5
PORT VFBC5_Wd_Data = wd_data, DIR = I, BUS = VFBC5, VEC = [C_VFBC5_RDWD_DATA_WIDTH-1:0]
PORT VFBC5_Wd_Data_BE = wd_data_be, DIR = I, BUS = VFBC5, VEC = [C_VFBC5_RDWD_DATA_WIDTH/8-1:0]
PORT VFBC5_Wd_Full = wd_full, DIR = O, BUS = VFBC5
PORT VFBC5_Wd_Almost_Full = wd_almost_full, DIR = O, BUS = VFBC5
PORT VFBC5_Rd_Clk = rd_clk, DIR = I, BUS = VFBC5
PORT VFBC5_Rd_Reset = rd_reset, DIR = I, BUS = VFBC5
PORT VFBC5_Rd_Read = rd_read, DIR = I, BUS = VFBC5
PORT VFBC5_Rd_End_Burst = rd_end_burst, DIR = I, BUS = VFBC5
PORT VFBC5_Rd_Flush = rd_flush, DIR = I, BUS = VFBC5
PORT VFBC5_Rd_Data = rd_data, DIR = O, BUS = VFBC5, VEC = [C_VFBC5_RDWD_DATA_WIDTH-1:0]
PORT VFBC5_Rd_Empty = rd_empty, DIR = O, BUS = VFBC5
PORT VFBC5_Rd_Almost_Empty = rd_almost_empty, DIR = O, BUS = VFBC5
PORT MCB5_cmd_clk = cmd_clk, DIR = I, BUS = MCB5
PORT MCB5_cmd_en = cmd_en, DIR = I, BUS = MCB5
PORT MCB5_cmd_instr = cmd_instr, DIR = I, BUS = MCB5, VEC = [2:0]
PORT MCB5_cmd_bl = cmd_bl, DIR = I, BUS = MCB5, VEC = [5:0]
PORT MCB5_cmd_byte_addr = cmd_byte_addr, DIR = I, BUS = MCB5, VEC = [29:0]
PORT MCB5_cmd_empty = cmd_empty, DIR = O, BUS = MCB5
PORT MCB5_cmd_full = cmd_full, DIR = O, BUS = MCB5
PORT MCB5_wr_clk = wr_clk, DIR = I, BUS = MCB5
PORT MCB5_wr_en = wr_en, DIR = I, BUS = MCB5
PORT MCB5_wr_mask = wr_mask, DIR = I, BUS = MCB5, VEC = [C_PIM5_DATA_WIDTH/8-1:0]
PORT MCB5_wr_data = wr_data, DIR = I, BUS = MCB5, VEC = [C_PIM5_DATA_WIDTH-1:0]
PORT MCB5_wr_full = wr_full, DIR = O, BUS = MCB5
PORT MCB5_wr_empty = wr_empty, DIR = O, BUS = MCB5
PORT MCB5_wr_count = wr_count, DIR = O, BUS = MCB5, VEC = [6:0]
PORT MCB5_wr_underrun = wr_underrun, DIR = O, BUS = MCB5
PORT MCB5_wr_error = wr_error, DIR = O, BUS = MCB5
PORT MCB5_rd_clk = rd_clk, DIR = I, BUS = MCB5
PORT MCB5_rd_en = rd_en, DIR = I, BUS = MCB5
PORT MCB5_rd_data = rd_data, DIR = O, BUS = MCB5, VEC = [C_PIM5_DATA_WIDTH-1:0]
PORT MCB5_rd_full = rd_full, DIR = O, BUS = MCB5
PORT MCB5_rd_empty = rd_empty, DIR = O, BUS = MCB5
PORT MCB5_rd_count = rd_count, DIR = O, BUS = MCB5, VEC = [6:0]
PORT MCB5_rd_overflow = rd_overflow, DIR = O, BUS = MCB5
PORT MCB5_rd_error = rd_error, DIR = O, BUS = MCB5
PORT FSL6_M_Clk = FSL_M_Clk, DIR = I, BUS = XCL6, SIGIS = CLK, INITIALVAL = VCC
PORT FSL6_M_Write = FSL_M_Write, DIR = I, BUS = XCL6
PORT FSL6_M_Data = FSL_M_Data, DIR = I, BUS = XCL6, VEC = [0:31]
PORT FSL6_M_Control = FSL_M_Control, DIR = I, BUS = XCL6
PORT FSL6_M_Full = FSL_M_Full, DIR = O, BUS = XCL6
PORT FSL6_S_Clk = FSL_S_Clk, DIR = I, BUS = XCL6
PORT FSL6_S_Read = FSL_S_Read, DIR = I, BUS = XCL6
PORT FSL6_S_Data = FSL_S_Data, DIR = O, BUS = XCL6, VEC = [0:31]
PORT FSL6_S_Control = FSL_S_Control, DIR = O, BUS = XCL6
PORT FSL6_S_Exists = FSL_S_Exists, DIR = O, BUS = XCL6
PORT FSL6_B_M_Clk = FSL_M_Clk, DIR = I, BUS = XCL6_B, SIGIS = CLK, INITIALVAL = VCC
PORT FSL6_B_M_Write = FSL_M_Write, DIR = I, BUS = XCL6_B
PORT FSL6_B_M_Data = FSL_M_Data, DIR = I, BUS = XCL6_B, VEC = [0:31]
PORT FSL6_B_M_Control = FSL_M_Control, DIR = I, BUS = XCL6_B
PORT FSL6_B_M_Full = FSL_M_Full, DIR = O, BUS = XCL6_B
PORT FSL6_B_S_Clk = FSL_S_Clk, DIR = I, BUS = XCL6_B
PORT FSL6_B_S_Read = FSL_S_Read, DIR = I, BUS = XCL6_B
PORT FSL6_B_S_Data = FSL_S_Data, DIR = O, BUS = XCL6_B, VEC = [0:31]
PORT FSL6_B_S_Control = FSL_S_Control, DIR = O, BUS = XCL6_B
PORT FSL6_B_S_Exists = FSL_S_Exists, DIR = O, BUS = XCL6_B
PORT SPLB6_Clk = "", DIR = I, BUS = SPLB6, SIGIS = CLK, INITIALVAL = VCC
PORT SPLB6_Rst = SPLB_Rst, DIR = I, BUS = SPLB6, SIGIS = RST
PORT SPLB6_PLB_ABus = PLB_ABus, DIR = I, BUS = SPLB6, VEC = [0:31]
PORT SPLB6_PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB6
PORT SPLB6_PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB6
PORT SPLB6_PLB_masterID = PLB_masterID, DIR = I, BUS = SPLB6, VEC = [0:(C_SPLB6_MID_WIDTH-1)]
PORT SPLB6_PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB6
PORT SPLB6_PLB_BE = PLB_BE, DIR = I, BUS = SPLB6, VEC = [0:((C_SPLB6_DWIDTH/8)-1)]
PORT SPLB6_PLB_UABus = PLB_UABus, DIR = I, BUS = SPLB6, VEC = [0:31]
PORT SPLB6_PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB6
PORT SPLB6_PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB6
PORT SPLB6_PLB_abort = PLB_abort, DIR = I, BUS = SPLB6
PORT SPLB6_PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB6
PORT SPLB6_PLB_MSize = PLB_MSize, DIR = I, BUS = SPLB6, VEC = [0:1]
PORT SPLB6_PLB_size = PLB_size, DIR = I, BUS = SPLB6, VEC = [0:3]
PORT SPLB6_PLB_type = PLB_type, DIR = I, BUS = SPLB6, VEC = [0:2]
PORT SPLB6_PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB6
PORT SPLB6_PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB6
PORT SPLB6_PLB_wrPendPri = PLB_wrPendPri, DIR = I, BUS = SPLB6, VEC = [0:1]
PORT SPLB6_PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB6
PORT SPLB6_PLB_rdPendPri = PLB_rdPendPri, DIR = I, BUS = SPLB6, VEC = [0:1]
PORT SPLB6_PLB_reqPri = PLB_reqPri, DIR = I, BUS = SPLB6, VEC = [0:1]
PORT SPLB6_PLB_TAttribute = PLB_TAttribute, DIR = I, BUS = SPLB6, VEC = [0:15]
PORT SPLB6_PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB6
PORT SPLB6_PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB6
PORT SPLB6_PLB_wrDBus = PLB_wrDBus, DIR = I, BUS = SPLB6, VEC = [0:(C_SPLB6_DWIDTH-1)]
PORT SPLB6_Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB6
PORT SPLB6_Sl_SSize = Sl_SSize, DIR = O, BUS = SPLB6, VEC = [0:1]
PORT SPLB6_Sl_wait = Sl_wait, DIR = O, BUS = SPLB6
PORT SPLB6_Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB6
PORT SPLB6_Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB6
PORT SPLB6_Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB6
PORT SPLB6_Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB6
PORT SPLB6_Sl_rdDBus = Sl_rdDBus, DIR = O, BUS = SPLB6, VEC = [0:(C_SPLB6_DWIDTH-1)]
PORT SPLB6_Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, BUS = SPLB6, VEC = [0:3]
PORT SPLB6_Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB6
PORT SPLB6_Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB6
PORT SPLB6_Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB6
PORT SPLB6_Sl_MBusy = Sl_MBusy, DIR = O, BUS = SPLB6, VEC = [0:(C_SPLB6_NUM_MASTERS-1)]
PORT SPLB6_Sl_MRdErr = Sl_MRdErr, DIR = O, BUS = SPLB6, VEC = [0:(C_SPLB6_NUM_MASTERS-1)]
PORT SPLB6_Sl_MWrErr = Sl_MWrErr, DIR = O, BUS = SPLB6, VEC = [0:(C_SPLB6_NUM_MASTERS-1)]
PORT SPLB6_Sl_MIRQ = Sl_MIRQ, DIR = O, BUS = SPLB6, VEC = [0:(C_SPLB6_NUM_MASTERS-1)]
PORT SDMA6_Clk = "", DIR = I, SIGIS = CLK, ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 3), ASSIGNMENT = REQUIRE
PORT SDMA6_Rx_IntOut = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 3)
PORT SDMA6_Tx_IntOut = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 3)
PORT SDMA6_RstOut = LL_RST_ACK, DIR = O, BUS = SDMA_LL6
PORT SDMA6_TX_D = LL_Tx_Data, DIR = O, BUS = SDMA_LL6, VEC = [0:31]
PORT SDMA6_TX_Rem = LL_Tx_Rem, DIR = O, BUS = SDMA_LL6, VEC = [0:3]
PORT SDMA6_TX_SOF = LL_Tx_SOF_n, DIR = O, BUS = SDMA_LL6
PORT SDMA6_TX_EOF = LL_Tx_EOF_n, DIR = O, BUS = SDMA_LL6
PORT SDMA6_TX_SOP = LL_Tx_SOP_n, DIR = O, BUS = SDMA_LL6
PORT SDMA6_TX_EOP = LL_Tx_EOP_n, DIR = O, BUS = SDMA_LL6
PORT SDMA6_TX_Src_Rdy = LL_Tx_SrcRdy_n, DIR = O, BUS = SDMA_LL6
PORT SDMA6_TX_Dst_Rdy = LL_Tx_DstRdy_n, DIR = I, BUS = SDMA_LL6, INITIALVAL = VCC
PORT SDMA6_RX_D = LL_Rx_Data, DIR = I, BUS = SDMA_LL6, INITIALVAL = GND, VEC = [0:31]
PORT SDMA6_RX_Rem = LL_Rx_Rem, DIR = I, BUS = SDMA_LL6, INITIALVAL = VCC, VEC = [0:3]
PORT SDMA6_RX_SOF = LL_Rx_SOF_n, DIR = I, BUS = SDMA_LL6, INITIALVAL = VCC
PORT SDMA6_RX_EOF = LL_Rx_EOF_n, DIR = I, BUS = SDMA_LL6, INITIALVAL = VCC
PORT SDMA6_RX_SOP = LL_Rx_SOP_n, DIR = I, BUS = SDMA_LL6, INITIALVAL = VCC
PORT SDMA6_RX_EOP = LL_Rx_EOP_n, DIR = I, BUS = SDMA_LL6, INITIALVAL = VCC
PORT SDMA6_RX_Src_Rdy = LL_Rx_SrcRdy_n, DIR = I, BUS = SDMA_LL6, INITIALVAL = VCC
PORT SDMA6_RX_Dst_Rdy = LL_Rx_DstRdy_n, DIR = O, BUS = SDMA_LL6
PORT SDMA_CTRL6_Clk = "", DIR = I, BUS = SDMA_CTRL6, SIGIS = CLK, INITIALVAL = VCC
PORT SDMA_CTRL6_Rst = SPLB_Rst, DIR = I, BUS = SDMA_CTRL6, SIGIS = RST
PORT SDMA_CTRL6_PLB_ABus = PLB_ABus, DIR = I, BUS = SDMA_CTRL6, VEC = [0:31]
PORT SDMA_CTRL6_PLB_PAValid = PLB_PAValid, DIR = I, BUS = SDMA_CTRL6
PORT SDMA_CTRL6_PLB_SAValid = PLB_SAValid, DIR = I, BUS = SDMA_CTRL6
PORT SDMA_CTRL6_PLB_masterID = PLB_masterID, DIR = I, BUS = SDMA_CTRL6, VEC = [0:(C_SDMA_CTRL6_MID_WIDTH-1)]
PORT SDMA_CTRL6_PLB_RNW = PLB_RNW, DIR = I, BUS = SDMA_CTRL6
PORT SDMA_CTRL6_PLB_BE = PLB_BE, DIR = I, BUS = SDMA_CTRL6, VEC = [0:((C_SDMA_CTRL6_DWIDTH/8)-1)]
PORT SDMA_CTRL6_PLB_UABus = PLB_UABus, DIR = I, BUS = SDMA_CTRL6, VEC = [0:31]
PORT SDMA_CTRL6_PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SDMA_CTRL6
PORT SDMA_CTRL6_PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SDMA_CTRL6
PORT SDMA_CTRL6_PLB_abort = PLB_abort, DIR = I, BUS = SDMA_CTRL6
PORT SDMA_CTRL6_PLB_busLock = PLB_busLock, DIR = I, BUS = SDMA_CTRL6
PORT SDMA_CTRL6_PLB_MSize = PLB_MSize, DIR = I, BUS = SDMA_CTRL6, VEC = [0:1]
PORT SDMA_CTRL6_PLB_size = PLB_size, DIR = I, BUS = SDMA_CTRL6, VEC = [0:3]
PORT SDMA_CTRL6_PLB_type = PLB_type, DIR = I, BUS = SDMA_CTRL6, VEC = [0:2]
PORT SDMA_CTRL6_PLB_lockErr = PLB_lockErr, DIR = I, BUS = SDMA_CTRL6
PORT SDMA_CTRL6_PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SDMA_CTRL6
PORT SDMA_CTRL6_PLB_wrPendPri = PLB_wrPendPri, DIR = I, BUS = SDMA_CTRL6, VEC = [0:1]
PORT SDMA_CTRL6_PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SDMA_CTRL6
PORT SDMA_CTRL6_PLB_rdPendPri = PLB_rdPendPri, DIR = I, BUS = SDMA_CTRL6, VEC = [0:1]
PORT SDMA_CTRL6_PLB_reqPri = PLB_reqPri, DIR = I, BUS = SDMA_CTRL6, VEC = [0:1]
PORT SDMA_CTRL6_PLB_TAttribute = PLB_TAttribute, DIR = I, BUS = SDMA_CTRL6, VEC = [0:15]
PORT SDMA_CTRL6_PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SDMA_CTRL6
PORT SDMA_CTRL6_PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SDMA_CTRL6
PORT SDMA_CTRL6_PLB_wrDBus = PLB_wrDBus, DIR = I, BUS = SDMA_CTRL6, VEC = [0:(C_SDMA_CTRL6_DWIDTH-1)]
PORT SDMA_CTRL6_Sl_addrAck = Sl_addrAck, DIR = O, BUS = SDMA_CTRL6
PORT SDMA_CTRL6_Sl_SSize = Sl_SSize, DIR = O, BUS = SDMA_CTRL6, VEC = [0:1]
PORT SDMA_CTRL6_Sl_wait = Sl_wait, DIR = O, BUS = SDMA_CTRL6
PORT SDMA_CTRL6_Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SDMA_CTRL6
PORT SDMA_CTRL6_Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SDMA_CTRL6
PORT SDMA_CTRL6_Sl_wrComp = Sl_wrComp, DIR = O, BUS = SDMA_CTRL6
PORT SDMA_CTRL6_Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SDMA_CTRL6
PORT SDMA_CTRL6_Sl_rdDBus = Sl_rdDBus, DIR = O, BUS = SDMA_CTRL6, VEC = [0:(C_SDMA_CTRL6_DWIDTH-1)]
PORT SDMA_CTRL6_Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, BUS = SDMA_CTRL6, VEC = [0:3]
PORT SDMA_CTRL6_Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SDMA_CTRL6
PORT SDMA_CTRL6_Sl_rdComp = Sl_rdComp, DIR = O, BUS = SDMA_CTRL6
PORT SDMA_CTRL6_Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SDMA_CTRL6
PORT SDMA_CTRL6_Sl_MBusy = Sl_MBusy, DIR = O, BUS = SDMA_CTRL6, VEC = [0:(C_SDMA_CTRL6_NUM_MASTERS-1)]
PORT SDMA_CTRL6_Sl_MRdErr = Sl_MRdErr, DIR = O, BUS = SDMA_CTRL6, VEC = [0:(C_SDMA_CTRL6_NUM_MASTERS-1)]
PORT SDMA_CTRL6_Sl_MWrErr = Sl_MWrErr, DIR = O, BUS = SDMA_CTRL6, VEC = [0:(C_SDMA_CTRL6_NUM_MASTERS-1)]
PORT SDMA_CTRL6_Sl_MIRQ = Sl_MIRQ, DIR = O, BUS = SDMA_CTRL6, VEC = [0:(C_SDMA_CTRL6_NUM_MASTERS-1)]
PORT PIM6_Addr = Addr, DIR = I, BUS = MPMC_PIM6, VEC = [31:0]
PORT PIM6_AddrReq = AddrReq, DIR = I, BUS = MPMC_PIM6
PORT PIM6_AddrAck = AddrAck, DIR = O, BUS = MPMC_PIM6
PORT PIM6_RNW = RNW, DIR = I, BUS = MPMC_PIM6
PORT PIM6_Size = Size, DIR = I, BUS = MPMC_PIM6, VEC = [3:0]
PORT PIM6_RdModWr = RdModWr, DIR = I, BUS = MPMC_PIM6
PORT PIM6_WrFIFO_Data = WrFIFO_Data, DIR = I, BUS = MPMC_PIM6, VEC = [(C_PIM6_DATA_WIDTH-1):0]
PORT PIM6_WrFIFO_BE = WrFIFO_BE, DIR = I, BUS = MPMC_PIM6, VEC = [(C_PIM6_DATA_WIDTH/8-1):0]
PORT PIM6_WrFIFO_Push = WrFIFO_Push, DIR = I, BUS = MPMC_PIM6
PORT PIM6_RdFIFO_Data = RdFIFO_Data, DIR = O, BUS = MPMC_PIM6, VEC = [(C_PIM6_DATA_WIDTH-1):0]
PORT PIM6_RdFIFO_Pop = RdFIFO_Pop, DIR = I, BUS = MPMC_PIM6
PORT PIM6_RdFIFO_RdWdAddr = RdFIFO_RdWdAddr, DIR = O, BUS = MPMC_PIM6, VEC = [3:0]
PORT PIM6_WrFIFO_Empty = WrFIFO_Empty, DIR = O, BUS = MPMC_PIM6
PORT PIM6_WrFIFO_AlmostFull = WrFIFO_AlmostFull, DIR = O, BUS = MPMC_PIM6
PORT PIM6_WrFIFO_Flush = WrFIFO_Flush, DIR = I, BUS = MPMC_PIM6
PORT PIM6_RdFIFO_Empty = RdFIFO_Empty, DIR = O, BUS = MPMC_PIM6
PORT PIM6_RdFIFO_Flush = RdFIFO_Flush, DIR = I, BUS = MPMC_PIM6
PORT PIM6_RdFIFO_Latency = RDFIFO_Latency, DIR = O, BUS = MPMC_PIM6, VEC = [1:0]
PORT PIM6_InitDone = InitDone, DIR = O, BUS = MPMC_PIM6
PORT PPC440MC6_MIMCReadNotWrite = MIMCREADNOTWRITE, DIR = I, BUS = PPC440MC6
PORT PPC440MC6_MIMCAddress = MIMCADDRESS, DIR = I, BUS = PPC440MC6, VEC = [0:35]
PORT PPC440MC6_MIMCAddressValid = MIMCADDRESSVALID, DIR = I, BUS = PPC440MC6
PORT PPC440MC6_MIMCWriteData = MIMCWRITEDATA, DIR = I, BUS = PPC440MC6, VEC = [0:127]
PORT PPC440MC6_MIMCWriteDataValid = MIMCWRITEDATAVALID, DIR = I, BUS = PPC440MC6
PORT PPC440MC6_MIMCByteEnable = MIMCBYTEENABLE, DIR = I, BUS = PPC440MC6, VEC = [0:15]
PORT PPC440MC6_MIMCBankConflict = MIMCBANKCONFLICT, DIR = I, BUS = PPC440MC6
PORT PPC440MC6_MIMCRowConflict = MIMCROWCONFLICT, DIR = I, BUS = PPC440MC6
PORT PPC440MC6_MCMIReadData = MCMIREADDATA, DIR = O, BUS = PPC440MC6, VEC = [0:127]
PORT PPC440MC6_MCMIReadDataValid = MCMIREADDATAVALID, DIR = O, BUS = PPC440MC6
PORT PPC440MC6_MCMIReadDataErr = MCMIREADDATAERR, DIR = O, BUS = PPC440MC6
PORT PPC440MC6_MCMIAddrReadyToAccept = MCMIADDRREADYTOACCEPT, DIR = O, BUS = PPC440MC6
PORT VFBC6_Cmd_Clk = cmd_clk, DIR = I, BUS = VFBC6
PORT VFBC6_Cmd_Reset = cmd_reset, DIR = I, BUS = VFBC6
PORT VFBC6_Cmd_Data = cmd_data, DIR = I, BUS = VFBC6, VEC = [31:0]
PORT VFBC6_Cmd_Write = cmd_write, DIR = I, BUS = VFBC6
PORT VFBC6_Cmd_End = cmd_end, DIR = I, BUS = VFBC6
PORT VFBC6_Cmd_Full = cmd_full, DIR = O, BUS = VFBC6
PORT VFBC6_Cmd_Almost_Full = cmd_almost_full, DIR = O, BUS = VFBC6
PORT VFBC6_Cmd_Idle = cmd_idle, DIR = O, BUS = VFBC6
PORT VFBC6_Wd_Clk = wd_clk, DIR = I, BUS = VFBC6
PORT VFBC6_Wd_Reset = wd_reset, DIR = I, BUS = VFBC6
PORT VFBC6_Wd_Write = wd_write, DIR = I, BUS = VFBC6
PORT VFBC6_Wd_End_Burst = wd_end_burst, DIR = I, BUS = VFBC6
PORT VFBC6_Wd_Flush = wd_flush, DIR = I, BUS = VFBC6
PORT VFBC6_Wd_Data = wd_data, DIR = I, BUS = VFBC6, VEC = [C_VFBC6_RDWD_DATA_WIDTH-1:0]
PORT VFBC6_Wd_Data_BE = wd_data_be, DIR = I, BUS = VFBC6, VEC = [C_VFBC6_RDWD_DATA_WIDTH/8-1:0]
PORT VFBC6_Wd_Full = wd_full, DIR = O, BUS = VFBC6
PORT VFBC6_Wd_Almost_Full = wd_almost_full, DIR = O, BUS = VFBC6
PORT VFBC6_Rd_Clk = rd_clk, DIR = I, BUS = VFBC6
PORT VFBC6_Rd_Reset = rd_reset, DIR = I, BUS = VFBC6
PORT VFBC6_Rd_Read = rd_read, DIR = I, BUS = VFBC6
PORT VFBC6_Rd_End_Burst = rd_end_burst, DIR = I, BUS = VFBC6
PORT VFBC6_Rd_Flush = rd_flush, DIR = I, BUS = VFBC6
PORT VFBC6_Rd_Data = rd_data, DIR = O, BUS = VFBC6, VEC = [C_VFBC6_RDWD_DATA_WIDTH-1:0]
PORT VFBC6_Rd_Empty = rd_empty, DIR = O, BUS = VFBC6
PORT VFBC6_Rd_Almost_Empty = rd_almost_empty, DIR = O, BUS = VFBC6
PORT MCB6_cmd_clk = cmd_clk, DIR = I, BUS = MCB6
PORT MCB6_cmd_en = cmd_en, DIR = I, BUS = MCB6
PORT MCB6_cmd_instr = cmd_instr, DIR = I, BUS = MCB6, VEC = [2:0]
PORT MCB6_cmd_bl = cmd_bl, DIR = I, BUS = MCB6, VEC = [5:0]
PORT MCB6_cmd_byte_addr = cmd_byte_addr, DIR = I, BUS = MCB6, VEC = [29:0]
PORT MCB6_cmd_empty = cmd_empty, DIR = O, BUS = MCB6
PORT MCB6_cmd_full = cmd_full, DIR = O, BUS = MCB6
PORT MCB6_wr_clk = wr_clk, DIR = I, BUS = MCB6
PORT MCB6_wr_en = wr_en, DIR = I, BUS = MCB6
PORT MCB6_wr_mask = wr_mask, DIR = I, BUS = MCB6, VEC = [C_PIM6_DATA_WIDTH/8-1:0]
PORT MCB6_wr_data = wr_data, DIR = I, BUS = MCB6, VEC = [C_PIM6_DATA_WIDTH-1:0]
PORT MCB6_wr_full = wr_full, DIR = O, BUS = MCB6
PORT MCB6_wr_empty = wr_empty, DIR = O, BUS = MCB6
PORT MCB6_wr_count = wr_count, DIR = O, BUS = MCB6, VEC = [6:0]
PORT MCB6_wr_underrun = wr_underrun, DIR = O, BUS = MCB6
PORT MCB6_wr_error = wr_error, DIR = O, BUS = MCB6
PORT MCB6_rd_clk = rd_clk, DIR = I, BUS = MCB6
PORT MCB6_rd_en = rd_en, DIR = I, BUS = MCB6
PORT MCB6_rd_data = rd_data, DIR = O, BUS = MCB6, VEC = [C_PIM6_DATA_WIDTH-1:0]
PORT MCB6_rd_full = rd_full, DIR = O, BUS = MCB6
PORT MCB6_rd_empty = rd_empty, DIR = O, BUS = MCB6
PORT MCB6_rd_count = rd_count, DIR = O, BUS = MCB6, VEC = [6:0]
PORT MCB6_rd_overflow = rd_overflow, DIR = O, BUS = MCB6
PORT MCB6_rd_error = rd_error, DIR = O, BUS = MCB6
PORT FSL7_M_Clk = FSL_M_Clk, DIR = I, BUS = XCL7, SIGIS = CLK, INITIALVAL = VCC
PORT FSL7_M_Write = FSL_M_Write, DIR = I, BUS = XCL7
PORT FSL7_M_Data = FSL_M_Data, DIR = I, BUS = XCL7, VEC = [0:31]
PORT FSL7_M_Control = FSL_M_Control, DIR = I, BUS = XCL7
PORT FSL7_M_Full = FSL_M_Full, DIR = O, BUS = XCL7
PORT FSL7_S_Clk = FSL_S_Clk, DIR = I, BUS = XCL7
PORT FSL7_S_Read = FSL_S_Read, DIR = I, BUS = XCL7
PORT FSL7_S_Data = FSL_S_Data, DIR = O, BUS = XCL7, VEC = [0:31]
PORT FSL7_S_Control = FSL_S_Control, DIR = O, BUS = XCL7
PORT FSL7_S_Exists = FSL_S_Exists, DIR = O, BUS = XCL7
PORT FSL7_B_M_Clk = FSL_M_Clk, DIR = I, BUS = XCL7_B, SIGIS = CLK, INITIALVAL = VCC
PORT FSL7_B_M_Write = FSL_M_Write, DIR = I, BUS = XCL7_B
PORT FSL7_B_M_Data = FSL_M_Data, DIR = I, BUS = XCL7_B, VEC = [0:31]
PORT FSL7_B_M_Control = FSL_M_Control, DIR = I, BUS = XCL7_B
PORT FSL7_B_M_Full = FSL_M_Full, DIR = O, BUS = XCL7_B
PORT FSL7_B_S_Clk = FSL_S_Clk, DIR = I, BUS = XCL7_B
PORT FSL7_B_S_Read = FSL_S_Read, DIR = I, BUS = XCL7_B
PORT FSL7_B_S_Data = FSL_S_Data, DIR = O, BUS = XCL7_B, VEC = [0:31]
PORT FSL7_B_S_Control = FSL_S_Control, DIR = O, BUS = XCL7_B
PORT FSL7_B_S_Exists = FSL_S_Exists, DIR = O, BUS = XCL7_B
PORT SPLB7_Clk = "", DIR = I, BUS = SPLB7, SIGIS = CLK, INITIALVAL = VCC
PORT SPLB7_Rst = SPLB_Rst, DIR = I, BUS = SPLB7, SIGIS = RST
PORT SPLB7_PLB_ABus = PLB_ABus, DIR = I, BUS = SPLB7, VEC = [0:31]
PORT SPLB7_PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB7
PORT SPLB7_PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB7
PORT SPLB7_PLB_masterID = PLB_masterID, DIR = I, BUS = SPLB7, VEC = [0:(C_SPLB7_MID_WIDTH-1)]
PORT SPLB7_PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB7
PORT SPLB7_PLB_BE = PLB_BE, DIR = I, BUS = SPLB7, VEC = [0:((C_SPLB7_DWIDTH/8)-1)]
PORT SPLB7_PLB_UABus = PLB_UABus, DIR = I, BUS = SPLB7, VEC = [0:31]
PORT SPLB7_PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB7
PORT SPLB7_PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB7
PORT SPLB7_PLB_abort = PLB_abort, DIR = I, BUS = SPLB7
PORT SPLB7_PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB7
PORT SPLB7_PLB_MSize = PLB_MSize, DIR = I, BUS = SPLB7, VEC = [0:1]
PORT SPLB7_PLB_size = PLB_size, DIR = I, BUS = SPLB7, VEC = [0:3]
PORT SPLB7_PLB_type = PLB_type, DIR = I, BUS = SPLB7, VEC = [0:2]
PORT SPLB7_PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB7
PORT SPLB7_PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB7
PORT SPLB7_PLB_wrPendPri = PLB_wrPendPri, DIR = I, BUS = SPLB7, VEC = [0:1]
PORT SPLB7_PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB7
PORT SPLB7_PLB_rdPendPri = PLB_rdPendPri, DIR = I, BUS = SPLB7, VEC = [0:1]
PORT SPLB7_PLB_reqPri = PLB_reqPri, DIR = I, BUS = SPLB7, VEC = [0:1]
PORT SPLB7_PLB_TAttribute = PLB_TAttribute, DIR = I, BUS = SPLB7, VEC = [0:15]
PORT SPLB7_PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB7
PORT SPLB7_PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB7
PORT SPLB7_PLB_wrDBus = PLB_wrDBus, DIR = I, BUS = SPLB7, VEC = [0:(C_SPLB7_DWIDTH-1)]
PORT SPLB7_Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB7
PORT SPLB7_Sl_SSize = Sl_SSize, DIR = O, BUS = SPLB7, VEC = [0:1]
PORT SPLB7_Sl_wait = Sl_wait, DIR = O, BUS = SPLB7
PORT SPLB7_Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB7
PORT SPLB7_Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB7
PORT SPLB7_Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB7
PORT SPLB7_Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB7
PORT SPLB7_Sl_rdDBus = Sl_rdDBus, DIR = O, BUS = SPLB7, VEC = [0:(C_SPLB7_DWIDTH-1)]
PORT SPLB7_Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, BUS = SPLB7, VEC = [0:3]
PORT SPLB7_Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB7
PORT SPLB7_Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB7
PORT SPLB7_Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB7
PORT SPLB7_Sl_MBusy = Sl_MBusy, DIR = O, BUS = SPLB7, VEC = [0:(C_SPLB7_NUM_MASTERS-1)]
PORT SPLB7_Sl_MRdErr = Sl_MRdErr, DIR = O, BUS = SPLB7, VEC = [0:(C_SPLB7_NUM_MASTERS-1)]
PORT SPLB7_Sl_MWrErr = Sl_MWrErr, DIR = O, BUS = SPLB7, VEC = [0:(C_SPLB7_NUM_MASTERS-1)]
PORT SPLB7_Sl_MIRQ = Sl_MIRQ, DIR = O, BUS = SPLB7, VEC = [0:(C_SPLB7_NUM_MASTERS-1)]
PORT SDMA7_Clk = "", DIR = I, SIGIS = CLK, ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 3), ASSIGNMENT = REQUIRE
PORT SDMA7_Rx_IntOut = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 3)
PORT SDMA7_Tx_IntOut = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 3)
PORT SDMA7_RstOut = LL_RST_ACK, DIR = O, BUS = SDMA_LL7
PORT SDMA7_TX_D = LL_Tx_Data, DIR = O, BUS = SDMA_LL7, VEC = [0:31]
PORT SDMA7_TX_Rem = LL_Tx_Rem, DIR = O, BUS = SDMA_LL7, VEC = [0:3]
PORT SDMA7_TX_SOF = LL_Tx_SOF_n, DIR = O, BUS = SDMA_LL7
PORT SDMA7_TX_EOF = LL_Tx_EOF_n, DIR = O, BUS = SDMA_LL7
PORT SDMA7_TX_SOP = LL_Tx_SOP_n, DIR = O, BUS = SDMA_LL7
PORT SDMA7_TX_EOP = LL_Tx_EOP_n, DIR = O, BUS = SDMA_LL7
PORT SDMA7_TX_Src_Rdy = LL_Tx_SrcRdy_n, DIR = O, BUS = SDMA_LL7
PORT SDMA7_TX_Dst_Rdy = LL_Tx_DstRdy_n, DIR = I, BUS = SDMA_LL7, INITIALVAL = VCC
PORT SDMA7_RX_D = LL_Rx_Data, DIR = I, BUS = SDMA_LL7, INITIALVAL = GND, VEC = [0:31]
PORT SDMA7_RX_Rem = LL_Rx_Rem, DIR = I, BUS = SDMA_LL7, INITIALVAL = VCC, VEC = [0:3]
PORT SDMA7_RX_SOF = LL_Rx_SOF_n, DIR = I, BUS = SDMA_LL7, INITIALVAL = VCC
PORT SDMA7_RX_EOF = LL_Rx_EOF_n, DIR = I, BUS = SDMA_LL7, INITIALVAL = VCC
PORT SDMA7_RX_SOP = LL_Rx_SOP_n, DIR = I, BUS = SDMA_LL7, INITIALVAL = VCC
PORT SDMA7_RX_EOP = LL_Rx_EOP_n, DIR = I, BUS = SDMA_LL7, INITIALVAL = VCC
PORT SDMA7_RX_Src_Rdy = LL_Rx_SrcRdy_n, DIR = I, BUS = SDMA_LL7, INITIALVAL = VCC
PORT SDMA7_RX_Dst_Rdy = LL_Rx_DstRdy_n, DIR = O, BUS = SDMA_LL7
PORT SDMA_CTRL7_Clk = "", DIR = I, BUS = SDMA_CTRL7, SIGIS = CLK, INITIALVAL = VCC
PORT SDMA_CTRL7_Rst = SPLB_Rst, DIR = I, BUS = SDMA_CTRL7, SIGIS = RST
PORT SDMA_CTRL7_PLB_ABus = PLB_ABus, DIR = I, BUS = SDMA_CTRL7, VEC = [0:31]
PORT SDMA_CTRL7_PLB_PAValid = PLB_PAValid, DIR = I, BUS = SDMA_CTRL7
PORT SDMA_CTRL7_PLB_SAValid = PLB_SAValid, DIR = I, BUS = SDMA_CTRL7
PORT SDMA_CTRL7_PLB_masterID = PLB_masterID, DIR = I, BUS = SDMA_CTRL7, VEC = [0:(C_SDMA_CTRL7_MID_WIDTH-1)]
PORT SDMA_CTRL7_PLB_RNW = PLB_RNW, DIR = I, BUS = SDMA_CTRL7
PORT SDMA_CTRL7_PLB_BE = PLB_BE, DIR = I, BUS = SDMA_CTRL7, VEC = [0:((C_SDMA_CTRL7_DWIDTH/8)-1)]
PORT SDMA_CTRL7_PLB_UABus = PLB_UABus, DIR = I, BUS = SDMA_CTRL7, VEC = [0:31]
PORT SDMA_CTRL7_PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SDMA_CTRL7
PORT SDMA_CTRL7_PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SDMA_CTRL7
PORT SDMA_CTRL7_PLB_abort = PLB_abort, DIR = I, BUS = SDMA_CTRL7
PORT SDMA_CTRL7_PLB_busLock = PLB_busLock, DIR = I, BUS = SDMA_CTRL7
PORT SDMA_CTRL7_PLB_MSize = PLB_MSize, DIR = I, BUS = SDMA_CTRL7, VEC = [0:1]
PORT SDMA_CTRL7_PLB_size = PLB_size, DIR = I, BUS = SDMA_CTRL7, VEC = [0:3]
PORT SDMA_CTRL7_PLB_type = PLB_type, DIR = I, BUS = SDMA_CTRL7, VEC = [0:2]
PORT SDMA_CTRL7_PLB_lockErr = PLB_lockErr, DIR = I, BUS = SDMA_CTRL7
PORT SDMA_CTRL7_PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SDMA_CTRL7
PORT SDMA_CTRL7_PLB_wrPendPri = PLB_wrPendPri, DIR = I, BUS = SDMA_CTRL7, VEC = [0:1]
PORT SDMA_CTRL7_PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SDMA_CTRL7
PORT SDMA_CTRL7_PLB_rdPendPri = PLB_rdPendPri, DIR = I, BUS = SDMA_CTRL7, VEC = [0:1]
PORT SDMA_CTRL7_PLB_reqPri = PLB_reqPri, DIR = I, BUS = SDMA_CTRL7, VEC = [0:1]
PORT SDMA_CTRL7_PLB_TAttribute = PLB_TAttribute, DIR = I, BUS = SDMA_CTRL7, VEC = [0:15]
PORT SDMA_CTRL7_PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SDMA_CTRL7
PORT SDMA_CTRL7_PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SDMA_CTRL7
PORT SDMA_CTRL7_PLB_wrDBus = PLB_wrDBus, DIR = I, BUS = SDMA_CTRL7, VEC = [0:(C_SDMA_CTRL7_DWIDTH-1)]
PORT SDMA_CTRL7_Sl_addrAck = Sl_addrAck, DIR = O, BUS = SDMA_CTRL7
PORT SDMA_CTRL7_Sl_SSize = Sl_SSize, DIR = O, BUS = SDMA_CTRL7, VEC = [0:1]
PORT SDMA_CTRL7_Sl_wait = Sl_wait, DIR = O, BUS = SDMA_CTRL7
PORT SDMA_CTRL7_Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SDMA_CTRL7
PORT SDMA_CTRL7_Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SDMA_CTRL7
PORT SDMA_CTRL7_Sl_wrComp = Sl_wrComp, DIR = O, BUS = SDMA_CTRL7
PORT SDMA_CTRL7_Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SDMA_CTRL7
PORT SDMA_CTRL7_Sl_rdDBus = Sl_rdDBus, DIR = O, BUS = SDMA_CTRL7, VEC = [0:(C_SDMA_CTRL7_DWIDTH-1)]
PORT SDMA_CTRL7_Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, BUS = SDMA_CTRL7, VEC = [0:3]
PORT SDMA_CTRL7_Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SDMA_CTRL7
PORT SDMA_CTRL7_Sl_rdComp = Sl_rdComp, DIR = O, BUS = SDMA_CTRL7
PORT SDMA_CTRL7_Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SDMA_CTRL7
PORT SDMA_CTRL7_Sl_MBusy = Sl_MBusy, DIR = O, BUS = SDMA_CTRL7, VEC = [0:(C_SDMA_CTRL7_NUM_MASTERS-1)]
PORT SDMA_CTRL7_Sl_MRdErr = Sl_MRdErr, DIR = O, BUS = SDMA_CTRL7, VEC = [0:(C_SDMA_CTRL7_NUM_MASTERS-1)]
PORT SDMA_CTRL7_Sl_MWrErr = Sl_MWrErr, DIR = O, BUS = SDMA_CTRL7, VEC = [0:(C_SDMA_CTRL7_NUM_MASTERS-1)]
PORT SDMA_CTRL7_Sl_MIRQ = Sl_MIRQ, DIR = O, BUS = SDMA_CTRL7, VEC = [0:(C_SDMA_CTRL7_NUM_MASTERS-1)]
PORT PIM7_Addr = Addr, DIR = I, BUS = MPMC_PIM7, VEC = [31:0]
PORT PIM7_AddrReq = AddrReq, DIR = I, BUS = MPMC_PIM7
PORT PIM7_AddrAck = AddrAck, DIR = O, BUS = MPMC_PIM7
PORT PIM7_RNW = RNW, DIR = I, BUS = MPMC_PIM7
PORT PIM7_Size = Size, DIR = I, BUS = MPMC_PIM7, VEC = [3:0]
PORT PIM7_RdModWr = RdModWr, DIR = I, BUS = MPMC_PIM7
PORT PIM7_WrFIFO_Data = WrFIFO_Data, DIR = I, BUS = MPMC_PIM7, VEC = [(C_PIM7_DATA_WIDTH-1):0]
PORT PIM7_WrFIFO_BE = WrFIFO_BE, DIR = I, BUS = MPMC_PIM7, VEC = [(C_PIM7_DATA_WIDTH/8-1):0]
PORT PIM7_WrFIFO_Push = WrFIFO_Push, DIR = I, BUS = MPMC_PIM7
PORT PIM7_RdFIFO_Data = RdFIFO_Data, DIR = O, BUS = MPMC_PIM7, VEC = [(C_PIM7_DATA_WIDTH-1):0]
PORT PIM7_RdFIFO_Pop = RdFIFO_Pop, DIR = I, BUS = MPMC_PIM7
PORT PIM7_RdFIFO_RdWdAddr = RdFIFO_RdWdAddr, DIR = O, BUS = MPMC_PIM7, VEC = [3:0]
PORT PIM7_WrFIFO_Empty = WrFIFO_Empty, DIR = O, BUS = MPMC_PIM7
PORT PIM7_WrFIFO_AlmostFull = WrFIFO_AlmostFull, DIR = O, BUS = MPMC_PIM7
PORT PIM7_WrFIFO_Flush = WrFIFO_Flush, DIR = I, BUS = MPMC_PIM7
PORT PIM7_RdFIFO_Empty = RdFIFO_Empty, DIR = O, BUS = MPMC_PIM7
PORT PIM7_RdFIFO_Flush = RdFIFO_Flush, DIR = I, BUS = MPMC_PIM7
PORT PIM7_RdFIFO_Latency = RDFIFO_Latency, DIR = O, BUS = MPMC_PIM7, VEC = [1:0]
PORT PIM7_InitDone = InitDone, DIR = O, BUS = MPMC_PIM7
PORT PPC440MC7_MIMCReadNotWrite = MIMCREADNOTWRITE, DIR = I, BUS = PPC440MC7
PORT PPC440MC7_MIMCAddress = MIMCADDRESS, DIR = I, BUS = PPC440MC7, VEC = [0:35]
PORT PPC440MC7_MIMCAddressValid = MIMCADDRESSVALID, DIR = I, BUS = PPC440MC7
PORT PPC440MC7_MIMCWriteData = MIMCWRITEDATA, DIR = I, BUS = PPC440MC7, VEC = [0:127]
PORT PPC440MC7_MIMCWriteDataValid = MIMCWRITEDATAVALID, DIR = I, BUS = PPC440MC7
PORT PPC440MC7_MIMCByteEnable = MIMCBYTEENABLE, DIR = I, BUS = PPC440MC7, VEC = [0:15]
PORT PPC440MC7_MIMCBankConflict = MIMCBANKCONFLICT, DIR = I, BUS = PPC440MC7
PORT PPC440MC7_MIMCRowConflict = MIMCROWCONFLICT, DIR = I, BUS = PPC440MC7
PORT PPC440MC7_MCMIReadData = MCMIREADDATA, DIR = O, BUS = PPC440MC7, VEC = [0:127]
PORT PPC440MC7_MCMIReadDataValid = MCMIREADDATAVALID, DIR = O, BUS = PPC440MC7
PORT PPC440MC7_MCMIReadDataErr = MCMIREADDATAERR, DIR = O, BUS = PPC440MC7
PORT PPC440MC7_MCMIAddrReadyToAccept = MCMIADDRREADYTOACCEPT, DIR = O, BUS = PPC440MC7
PORT VFBC7_Cmd_Clk = cmd_clk, DIR = I, BUS = VFBC7
PORT VFBC7_Cmd_Reset = cmd_reset, DIR = I, BUS = VFBC7
PORT VFBC7_Cmd_Data = cmd_data, DIR = I, BUS = VFBC7, VEC = [31:0]
PORT VFBC7_Cmd_Write = cmd_write, DIR = I, BUS = VFBC7
PORT VFBC7_Cmd_End = cmd_end, DIR = I, BUS = VFBC7
PORT VFBC7_Cmd_Full = cmd_full, DIR = O, BUS = VFBC7
PORT VFBC7_Cmd_Almost_Full = cmd_almost_full, DIR = O, BUS = VFBC7
PORT VFBC7_Cmd_Idle = cmd_idle, DIR = O, BUS = VFBC7
PORT VFBC7_Wd_Clk = wd_clk, DIR = I, BUS = VFBC7
PORT VFBC7_Wd_Reset = wd_reset, DIR = I, BUS = VFBC7
PORT VFBC7_Wd_Write = wd_write, DIR = I, BUS = VFBC7
PORT VFBC7_Wd_End_Burst = wd_end_burst, DIR = I, BUS = VFBC7
PORT VFBC7_Wd_Flush = wd_flush, DIR = I, BUS = VFBC7
PORT VFBC7_Wd_Data = wd_data, DIR = I, BUS = VFBC7, VEC = [C_VFBC7_RDWD_DATA_WIDTH-1:0]
PORT VFBC7_Wd_Data_BE = wd_data_be, DIR = I, BUS = VFBC7, VEC = [C_VFBC7_RDWD_DATA_WIDTH/8-1:0]
PORT VFBC7_Wd_Full = wd_full, DIR = O, BUS = VFBC7
PORT VFBC7_Wd_Almost_Full = wd_almost_full, DIR = O, BUS = VFBC7
PORT VFBC7_Rd_Clk = rd_clk, DIR = I, BUS = VFBC7
PORT VFBC7_Rd_Reset = rd_reset, DIR = I, BUS = VFBC7
PORT VFBC7_Rd_Read = rd_read, DIR = I, BUS = VFBC7
PORT VFBC7_Rd_End_Burst = rd_end_burst, DIR = I, BUS = VFBC7
PORT VFBC7_Rd_Flush = rd_flush, DIR = I, BUS = VFBC7
PORT VFBC7_Rd_Data = rd_data, DIR = O, BUS = VFBC7, VEC = [C_VFBC7_RDWD_DATA_WIDTH-1:0]
PORT VFBC7_Rd_Empty = rd_empty, DIR = O, BUS = VFBC7
PORT VFBC7_Rd_Almost_Empty = rd_almost_empty, DIR = O, BUS = VFBC7
PORT MCB7_cmd_clk = cmd_clk, DIR = I, BUS = MCB7
PORT MCB7_cmd_en = cmd_en, DIR = I, BUS = MCB7
PORT MCB7_cmd_instr = cmd_instr, DIR = I, BUS = MCB7, VEC = [2:0]
PORT MCB7_cmd_bl = cmd_bl, DIR = I, BUS = MCB7, VEC = [5:0]
PORT MCB7_cmd_byte_addr = cmd_byte_addr, DIR = I, BUS = MCB7, VEC = [29:0]
PORT MCB7_cmd_empty = cmd_empty, DIR = O, BUS = MCB7
PORT MCB7_cmd_full = cmd_full, DIR = O, BUS = MCB7
PORT MCB7_wr_clk = wr_clk, DIR = I, BUS = MCB7
PORT MCB7_wr_en = wr_en, DIR = I, BUS = MCB7
PORT MCB7_wr_mask = wr_mask, DIR = I, BUS = MCB7, VEC = [C_PIM7_DATA_WIDTH/8-1:0]
PORT MCB7_wr_data = wr_data, DIR = I, BUS = MCB7, VEC = [C_PIM7_DATA_WIDTH-1:0]
PORT MCB7_wr_full = wr_full, DIR = O, BUS = MCB7
PORT MCB7_wr_empty = wr_empty, DIR = O, BUS = MCB7
PORT MCB7_wr_count = wr_count, DIR = O, BUS = MCB7, VEC = [6:0]
PORT MCB7_wr_underrun = wr_underrun, DIR = O, BUS = MCB7
PORT MCB7_wr_error = wr_error, DIR = O, BUS = MCB7
PORT MCB7_rd_clk = rd_clk, DIR = I, BUS = MCB7
PORT MCB7_rd_en = rd_en, DIR = I, BUS = MCB7
PORT MCB7_rd_data = rd_data, DIR = O, BUS = MCB7, VEC = [C_PIM7_DATA_WIDTH-1:0]
PORT MCB7_rd_full = rd_full, DIR = O, BUS = MCB7
PORT MCB7_rd_empty = rd_empty, DIR = O, BUS = MCB7
PORT MCB7_rd_count = rd_count, DIR = O, BUS = MCB7, VEC = [6:0]
PORT MCB7_rd_overflow = rd_overflow, DIR = O, BUS = MCB7
PORT MCB7_rd_error = rd_error, DIR = O, BUS = MCB7
PORT MPMC_CTRL_Clk = "", DIR = I, BUS = MPMC_CTRL, SIGIS = CLK, INITIALVAL = VCC
PORT MPMC_CTRL_Rst = SPLB_Rst, DIR = I, BUS = MPMC_CTRL, SIGIS = RST
PORT MPMC_CTRL_PLB_ABus = PLB_ABus, DIR = I, BUS = MPMC_CTRL, VEC = [0:31]
PORT MPMC_CTRL_PLB_PAValid = PLB_PAValid, DIR = I, BUS = MPMC_CTRL
PORT MPMC_CTRL_PLB_SAValid = PLB_SAValid, DIR = I, BUS = MPMC_CTRL
PORT MPMC_CTRL_PLB_masterID = PLB_masterID, DIR = I, BUS = MPMC_CTRL, VEC = [0:(C_MPMC_CTRL_MID_WIDTH-1)]
PORT MPMC_CTRL_PLB_RNW = PLB_RNW, DIR = I, BUS = MPMC_CTRL
PORT MPMC_CTRL_PLB_BE = PLB_BE, DIR = I, BUS = MPMC_CTRL, VEC = [0:((C_MPMC_CTRL_DWIDTH/8)-1)]
PORT MPMC_CTRL_PLB_UABus = PLB_UABus, DIR = I, BUS = MPMC_CTRL, VEC = [0:31]
PORT MPMC_CTRL_PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = MPMC_CTRL
PORT MPMC_CTRL_PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = MPMC_CTRL
PORT MPMC_CTRL_PLB_abort = PLB_abort, DIR = I, BUS = MPMC_CTRL
PORT MPMC_CTRL_PLB_busLock = PLB_busLock, DIR = I, BUS = MPMC_CTRL
PORT MPMC_CTRL_PLB_MSize = PLB_MSize, DIR = I, BUS = MPMC_CTRL, VEC = [0:1]
PORT MPMC_CTRL_PLB_size = PLB_size, DIR = I, BUS = MPMC_CTRL, VEC = [0:3]
PORT MPMC_CTRL_PLB_type = PLB_type, DIR = I, BUS = MPMC_CTRL, VEC = [0:2]
PORT MPMC_CTRL_PLB_lockErr = PLB_lockErr, DIR = I, BUS = MPMC_CTRL
PORT MPMC_CTRL_PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = MPMC_CTRL
PORT MPMC_CTRL_PLB_wrPendPri = PLB_wrPendPri, DIR = I, BUS = MPMC_CTRL, VEC = [0:1]
PORT MPMC_CTRL_PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = MPMC_CTRL
PORT MPMC_CTRL_PLB_rdPendPri = PLB_rdPendPri, DIR = I, BUS = MPMC_CTRL, VEC = [0:1]
PORT MPMC_CTRL_PLB_reqPri = PLB_reqPri, DIR = I, BUS = MPMC_CTRL, VEC = [0:1]
PORT MPMC_CTRL_PLB_TAttribute = PLB_TAttribute, DIR = I, BUS = MPMC_CTRL, VEC = [0:15]
PORT MPMC_CTRL_PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = MPMC_CTRL
PORT MPMC_CTRL_PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = MPMC_CTRL
PORT MPMC_CTRL_PLB_wrDBus = PLB_wrDBus, DIR = I, BUS = MPMC_CTRL, VEC = [0:(C_MPMC_CTRL_DWIDTH-1)]
PORT MPMC_CTRL_Sl_addrAck = Sl_addrAck, DIR = O, BUS = MPMC_CTRL
PORT MPMC_CTRL_Sl_SSize = Sl_SSize, DIR = O, BUS = MPMC_CTRL, VEC = [0:1]
PORT MPMC_CTRL_Sl_wait = Sl_wait, DIR = O, BUS = MPMC_CTRL
PORT MPMC_CTRL_Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = MPMC_CTRL
PORT MPMC_CTRL_Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = MPMC_CTRL
PORT MPMC_CTRL_Sl_wrComp = Sl_wrComp, DIR = O, BUS = MPMC_CTRL
PORT MPMC_CTRL_Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = MPMC_CTRL
PORT MPMC_CTRL_Sl_rdDBus = Sl_rdDBus, DIR = O, BUS = MPMC_CTRL, VEC = [0:(C_MPMC_CTRL_DWIDTH-1)]
PORT MPMC_CTRL_Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, BUS = MPMC_CTRL, VEC = [0:3]
PORT MPMC_CTRL_Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = MPMC_CTRL
PORT MPMC_CTRL_Sl_rdComp = Sl_rdComp, DIR = O, BUS = MPMC_CTRL
PORT MPMC_CTRL_Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = MPMC_CTRL
PORT MPMC_CTRL_Sl_MBusy = Sl_MBusy, DIR = O, BUS = MPMC_CTRL, VEC = [0:(C_MPMC_CTRL_NUM_MASTERS-1)]
PORT MPMC_CTRL_Sl_MRdErr = Sl_MRdErr, DIR = O, BUS = MPMC_CTRL, VEC = [0:(C_MPMC_CTRL_NUM_MASTERS-1)]
PORT MPMC_CTRL_Sl_MWrErr = Sl_MWrErr, DIR = O, BUS = MPMC_CTRL, VEC = [0:(C_MPMC_CTRL_NUM_MASTERS-1)]
PORT MPMC_CTRL_Sl_MIRQ = Sl_MIRQ, DIR = O, BUS = MPMC_CTRL, VEC = [0:(C_MPMC_CTRL_NUM_MASTERS-1)]
PORT MPMC_Clk0 = "", DIR = I, SIGIS = CLK, INITIALVAL = VCC, ASSIGNMENT = REQUIRE
PORT MPMC_Clk0_DIV2 = "", DIR = I, SIGIS = CLK, INITIALVAL = VCC, ISVALID = (C_USE_MIG_V5_PHY && [xstrncmp C_MEM_TYPE  DDR2 ]), ASSIGNMENT = REQUIRE
PORT MPMC_Clk90 = "", DIR = I, SIGIS = CLK, INITIALVAL = VCC, ASSIGNMENT = REQUIRE, ISVALID = (!C_USE_MCB_S6_PHY && !C_USE_MIG_V6_PHY && ([xstrncmp C_MEM_TYPE  DDR ] || [xstrncmp C_MEM_TYPE  DDR2 ] || C_DEBUG_REG_ENABLE))
PORT MPMC_Clk_200MHz = "", DIR = I, SIGIS = CLK, INITIALVAL = VCC, ISVALID = ((C_USE_MIG_V4_PHY || C_USE_MIG_V5_PHY|| C_USE_MIG_V6_PHY) && C_NUM_IDELAYCTRL > 0), ASSIGNMENT = REQUIRE
PORT MPMC_Rst = "", DIR = I, SIGIS = RST, ASSIGNMENT = REQUIRE
PORT MPMC_Clk_Mem = "", DIR = I, SIGIS = CLK, INITIALVAL = VCC, ISVALID = (C_USE_STATIC_PHY || C_USE_MIG_V6_PHY), ASSIGNMENT = REQUIRE
PORT MPMC_Clk_Mem_2x = "", DIR = I, SIGIS = CLK, INITIALVAL = VCC, ISVALID = (C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE
PORT MPMC_Clk_Mem_2x_180 = "", DIR = I, SIGIS = CLK, INITIALVAL = VCC, ISVALID = (C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE
PORT MPMC_Clk_Mem_2x_CE0 = "", DIR = I, SIGIS = CLK, INITIALVAL = VCC, ISVALID = (C_USE_MCB_S6_PHY && C_MCB_USE_EXTERNAL_BUFPLL), ASSIGNMENT = REQUIRE
PORT MPMC_Clk_Mem_2x_CE90 = "", DIR = I, SIGIS = CLK, INITIALVAL = VCC, ISVALID = (C_USE_MCB_S6_PHY && C_MCB_USE_EXTERNAL_BUFPLL), ASSIGNMENT = REQUIRE
PORT MPMC_Clk_Rd_Base = "", DIR = I, SIGIS = CLK, INITIALVAL = VCC, ISVALID = (C_USE_MIG_V6_PHY), ASSIGNMENT = REQUIRE
PORT MPMC_PLL_Lock = "", DIR = I, ISVALID = (C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE
PORT MPMC_Idelayctrl_Rdy_I = "", DIR = I, INITIALVAL = VCC, ISVALID = (C_USE_MIG_V4_PHY || C_USE_MIG_V5_PHY || C_USE_MIG_V6_PHY)
PORT MPMC_Idelayctrl_Rdy_O = "", DIR = O, ISVALID = (C_USE_MIG_V4_PHY || C_USE_MIG_V5_PHY || C_USE_MIG_V6_PHY)
PORT MPMC_InitDone = "", DIR = O
PORT MPMC_ECC_Intr = "", DIR = O, SIGIS = INTERRUPT, ISVALID = (C_INCLUDE_ECC_SUPPORT)
PORT MPMC_DCM_PSEN = "", DIR = O, ISVALID = (C_USE_STATIC_PHY || C_USE_MIG_V6_PHY)
PORT MPMC_DCM_PSINCDEC = "", DIR = O, ISVALID = (C_USE_STATIC_PHY || C_USE_MIG_V6_PHY)
PORT MPMC_DCM_PSDONE = "", DIR = I, ISVALID = (C_USE_STATIC_PHY || C_USE_MIG_V6_PHY)
PORT MPMC_MCB_DRP_Clk = "", DIR = I, SIGIS = CLK, INITIALVAL = VCC, ISVALID = (C_USE_MCB_S6_PHY)
PORT SDRAM_Clk = "", DIR = O, VEC = [C_MEM_CLK_WIDTH-1:0], SIGIS = CLK, ISVALID = ([xstrncmp C_MEM_TYPE  SDRAM ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = SDRAM_CLK
PORT SDRAM_CE = "", DIR = O, VEC = [C_MEM_CE_WIDTH-1:0], ISVALID = ([xstrncmp C_MEM_TYPE  SDRAM ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = SDRAM_CLK_ENABLE
PORT SDRAM_CS_n = "", DIR = O, VEC = [C_MEM_CS_N_WIDTH-1:0], ISVALID = ([xstrncmp C_MEM_TYPE  SDRAM ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = SDRAM_CHIP_SELECT
PORT SDRAM_RAS_n = "", DIR = O, ISVALID = ([xstrncmp C_MEM_TYPE  SDRAM ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = SDRAM_ROW_ADDR_SELECT
PORT SDRAM_CAS_n = "", DIR = O, ISVALID = ([xstrncmp C_MEM_TYPE  SDRAM ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = SDRAM_COL_ADDR_SELECT
PORT SDRAM_WE_n = "", DIR = O, ISVALID = ([xstrncmp C_MEM_TYPE  SDRAM ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = SDRAM_WRITE_ENABLE
PORT SDRAM_BankAddr = "", DIR = O, VEC = [C_MEM_BANKADDR_WIDTH-1:0], ISVALID = ([xstrncmp C_MEM_TYPE  SDRAM ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = SDRAM_BANKADDR
PORT SDRAM_Addr = "", DIR = O, VEC = [C_MEM_ADDR_WIDTH-1:0], ISVALID = ([xstrncmp C_MEM_TYPE  SDRAM ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = SDRAM_ADDRESS
PORT SDRAM_DQ = "", DIR = IO, VEC = [C_ECC_DATA_WIDTH  + C_MEM_DATA_WIDTH-1:0], THREE_STATE = FALSE, ISVALID = ([xstrncmp C_MEM_TYPE  SDRAM ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = SDRAM_DATA
PORT SDRAM_DM = "", DIR = O, VEC = [C_ECC_DM_WIDTH    + C_MEM_DM_WIDTH-1:0], ISVALID = ([xstrncmp C_MEM_TYPE  SDRAM ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = SDRAM_DATA_MASK
PORT DDR_Clk = "", DIR = O, VEC = [C_MEM_CLK_WIDTH-1:0], SIGIS = CLK, ISVALID = ([xstrncmp C_MEM_TYPE  DDR ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR_Clk
PORT DDR_Clk_n = "", DIR = O, VEC = [C_MEM_CLK_WIDTH-1:0], SIGIS = CLK, ISVALID = ([xstrncmp C_MEM_TYPE  DDR ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR_Clk_n
PORT DDR_CE = "", DIR = O, VEC = [C_MEM_CE_WIDTH-1:0], ISVALID = ([xstrncmp C_MEM_TYPE  DDR ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR_CLOCK_ENABLE
PORT DDR_CS_n = "", DIR = O, VEC = [C_MEM_CS_N_WIDTH-1:0], ISVALID = ([xstrncmp C_MEM_TYPE  DDR ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR_CHIP_SELECT
PORT DDR_RAS_n = "", DIR = O, ISVALID = ([xstrncmp C_MEM_TYPE  DDR ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR_ROW_ADDR_SELECT
PORT DDR_CAS_n = "", DIR = O, ISVALID = ([xstrncmp C_MEM_TYPE  DDR ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR_COL_ADDR_SELECT
PORT DDR_WE_n = "", DIR = O, ISVALID = ([xstrncmp C_MEM_TYPE  DDR ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR_WRITE_ENABLE
PORT DDR_BankAddr = "", DIR = O, VEC = [C_MEM_BANKADDR_WIDTH-1:0], ISVALID = ([xstrncmp C_MEM_TYPE  DDR ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR_BANKADDR
PORT DDR_Addr = "", DIR = O, VEC = [C_MEM_ADDR_WIDTH-1:0], ISVALID = ([xstrncmp C_MEM_TYPE  DDR ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR_ADDRESS
PORT DDR_DQ = "", DIR = IO, VEC = [C_ECC_DATA_WIDTH  + C_MEM_DATA_WIDTH-1:0], THREE_STATE = FALSE, ISVALID = ([xstrncmp C_MEM_TYPE  DDR ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR_DATA
PORT DDR_DM = "", DIR = O, VEC = [C_ECC_DM_WIDTH    + C_MEM_DM_WIDTH-1:0], ISVALID = ([xstrncmp C_MEM_TYPE  DDR ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR_DATA_MASK
PORT DDR_DQS = "", DIR = IO, VEC = [C_ECC_DQS_WIDTH   + C_MEM_DQS_WIDTH-1:0], THREE_STATE = FALSE, ISVALID = ([xstrncmp C_MEM_TYPE  DDR ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR_DATA_STROBE
PORT DDR_DQS_Div_O = "", DIR = O, ISVALID = ([xstrncmp C_MEM_TYPE  DDR ] && C_USE_MIG_S3_PHY), IO_IF = memory_0, IO_IS = DDR_DQS_DIV_O, ASSIGNMENT = REQUIRE
PORT DDR_DQS_Div_I = "", DIR = I, ISVALID = ([xstrncmp C_MEM_TYPE  DDR ] && C_USE_MIG_S3_PHY), IO_IF = memory_0, IO_IS = DDR_DQS_DIV_I, ASSIGNMENT = REQUIRE
PORT DDR2_Clk = "", DIR = O, VEC = [C_MEM_CLK_WIDTH-1:0], SIGIS = CLK, ISVALID = ([xstrncmp C_MEM_TYPE  DDR2 ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR2_Clk
PORT DDR2_Clk_n = "", DIR = O, VEC = [C_MEM_CLK_WIDTH-1:0], SIGIS = CLK, ISVALID = ([xstrncmp C_MEM_TYPE  DDR2 ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR2_Clk_n
PORT DDR2_CE = "", DIR = O, VEC = [C_MEM_CE_WIDTH-1:0], ISVALID = ([xstrncmp C_MEM_TYPE  DDR2 ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR2_CLK_ENABLE
PORT DDR2_CS_n = "", DIR = O, VEC = [C_MEM_CS_N_WIDTH-1:0], ISVALID = ([xstrncmp C_MEM_TYPE  DDR2 ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR2_CHIP_SELECT
PORT DDR2_ODT = "", DIR = O, VEC = [C_MEM_ODT_WIDTH-1:0], ISVALID = ([xstrncmp C_MEM_TYPE  DDR2 ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR2_ODT
PORT DDR2_RAS_n = "", DIR = O, ISVALID = ([xstrncmp C_MEM_TYPE  DDR2 ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR2_ROW_ADDR_SELECT
PORT DDR2_CAS_n = "", DIR = O, ISVALID = ([xstrncmp C_MEM_TYPE  DDR2 ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR2_COL_ADDR_SELECT
PORT DDR2_WE_n = "", DIR = O, ISVALID = ([xstrncmp C_MEM_TYPE  DDR2 ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR2_WRITE_ENABLE
PORT DDR2_BankAddr = "", DIR = O, VEC = [C_MEM_BANKADDR_WIDTH-1:0], ISVALID = ([xstrncmp C_MEM_TYPE  DDR2 ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR2_BANKADDR
PORT DDR2_Addr = "", DIR = O, VEC = [C_MEM_ADDR_WIDTH-1:0], ISVALID = ([xstrncmp C_MEM_TYPE  DDR2 ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR2_ADDRESS
PORT DDR2_DQ = "", DIR = IO, VEC = [C_ECC_DATA_WIDTH  + C_MEM_DATA_WIDTH-1:0], THREE_STATE = FALSE, ISVALID = ([xstrncmp C_MEM_TYPE  DDR2 ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR2_DATA
PORT DDR2_DM = "", DIR = O, VEC = [C_ECC_DM_WIDTH    + C_MEM_DM_WIDTH-1:0], ISVALID = ([xstrncmp C_MEM_TYPE  DDR2 ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR2_DATA_MASK
PORT DDR2_DQS = "", DIR = IO, VEC = [C_ECC_DQS_WIDTH   + C_MEM_DQS_WIDTH-1:0], THREE_STATE = FALSE, ISVALID = ([xstrncmp C_MEM_TYPE  DDR2 ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR2_DATA_STROBE
PORT DDR2_DQS_n = "", DIR = IO, VEC = [C_ECC_DQS_WIDTH   + C_MEM_DQS_WIDTH-1:0], THREE_STATE = FALSE, ISVALID = ([xstrncmp C_MEM_TYPE  DDR2 ] && !C_USE_MCB_S6_PHY && C_DDR2_DQSN_ENABLE), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR2_DATA_STROBE_N
PORT DDR2_DQS_Div_O = "", DIR = O, ISVALID = ([xstrncmp C_MEM_TYPE  DDR2 ] && C_USE_MIG_S3_PHY), IO_IF = memory_0, IO_IS = DDR2_DQS_DIV_O, ASSIGNMENT = REQUIRE
PORT DDR2_DQS_Div_I = "", DIR = I, ISVALID = ([xstrncmp C_MEM_TYPE  DDR2 ] && C_USE_MIG_S3_PHY), IO_IF = memory_0, IO_IS = DDR2_DQS_DIV_I, ASSIGNMENT = REQUIRE
PORT DDR3_Clk = "", DIR = O, VEC = [C_MEM_CLK_WIDTH-1:0], SIGIS = CLK, ISVALID = ([xstrncmp C_MEM_TYPE  DDR3 ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR3_Clk
PORT DDR3_Clk_n = "", DIR = O, VEC = [C_MEM_CLK_WIDTH-1:0], SIGIS = CLK, ISVALID = ([xstrncmp C_MEM_TYPE  DDR3 ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR3_Clk_n
PORT DDR3_CE = "", DIR = O, VEC = [C_MEM_CE_WIDTH-1:0], ISVALID = ([xstrncmp C_MEM_TYPE  DDR3 ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR3_CLK_ENABLE
PORT DDR3_CS_n = "", DIR = O, VEC = [C_MEM_CS_N_WIDTH-1:0], ISVALID = ([xstrncmp C_MEM_TYPE  DDR3 ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR3_CHIP_SELECT
PORT DDR3_ODT = "", DIR = O, VEC = [C_MEM_ODT_WIDTH-1:0], ISVALID = ([xstrncmp C_MEM_TYPE  DDR3 ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR3_ODT
PORT DDR3_RAS_n = "", DIR = O, ISVALID = ([xstrncmp C_MEM_TYPE  DDR3 ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR3_ROW_ADDR_SELECT
PORT DDR3_CAS_n = "", DIR = O, ISVALID = ([xstrncmp C_MEM_TYPE  DDR3 ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR3_COL_ADDR_SELECT
PORT DDR3_WE_n = "", DIR = O, ISVALID = ([xstrncmp C_MEM_TYPE  DDR3 ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR3_WRITE_ENABLE
PORT DDR3_BankAddr = "", DIR = O, VEC = [C_MEM_BANKADDR_WIDTH-1:0], ISVALID = ([xstrncmp C_MEM_TYPE  DDR3 ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR3_BANKADDR
PORT DDR3_Addr = "", DIR = O, VEC = [C_MEM_ADDR_WIDTH-1:0], ISVALID = ([xstrncmp C_MEM_TYPE  DDR3 ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR3_ADDRESS
PORT DDR3_DQ = "", DIR = IO, VEC = [C_ECC_DATA_WIDTH  + C_MEM_DATA_WIDTH-1:0], THREE_STATE = FALSE, ISVALID = ([xstrncmp C_MEM_TYPE  DDR3 ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR3_DATA
PORT DDR3_DM = "", DIR = O, VEC = [C_ECC_DM_WIDTH    + C_MEM_DM_WIDTH-1:0], ISVALID = ([xstrncmp C_MEM_TYPE  DDR3 ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR3_DATA_MASK
PORT DDR3_Reset_n = "", DIR = O, ISVALID = ([xstrncmp C_MEM_TYPE  DDR3 ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR3_RESET_N
PORT DDR3_DQS = "", DIR = IO, VEC = [C_ECC_DQS_WIDTH   + C_MEM_DQS_WIDTH-1:0], THREE_STATE = FALSE, ISVALID = ([xstrncmp C_MEM_TYPE  DDR3 ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR3_DATA_STROBE
PORT DDR3_DQS_n = "", DIR = IO, VEC = [C_ECC_DQS_WIDTH   + C_MEM_DQS_WIDTH-1:0], THREE_STATE = FALSE, ISVALID = ([xstrncmp C_MEM_TYPE  DDR3 ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR3_DATA_STROBE_N
PORT mcbx_dram_addr = "", DIR = O, VEC = [C_MEM_ADDR_WIDTH-1:0], ISVALID = (C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = MCB_ADDRESS
PORT mcbx_dram_ba = "", DIR = O, VEC = [C_MEM_BANKADDR_WIDTH-1:0], ISVALID = (C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = MCB_BANKADDR
PORT mcbx_dram_ras_n = "", DIR = O, ISVALID = (C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = MCB_ROW_ADDR_SELECT
PORT mcbx_dram_cas_n = "", DIR = O, ISVALID = (C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = MCB_COL_ADDR_SELECT
PORT mcbx_dram_we_n = "", DIR = O, ISVALID = (C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = MCB_WRITE_ENABLE
PORT mcbx_dram_cke = "", DIR = O, ISVALID = (C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = MCB_CLK_ENABLE
PORT mcbx_dram_clk = "", DIR = O, SIGIS = CLK, ISVALID = (C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = MCB_CLK
PORT mcbx_dram_clk_n = "", DIR = O, SIGIS = CLK, ISVALID = (C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = MCB_CLK_N
PORT mcbx_dram_dq = "", DIR = IO, VEC = [C_MEM_DATA_WIDTH-1:0], THREE_STATE = FALSE, ISVALID = (C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = MCB_DQ
PORT mcbx_dram_dqs = "", DIR = IO, THREE_STATE = FALSE, ISVALID = (C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = MCB_DQS
PORT mcbx_dram_dqs_n = "", DIR = IO, THREE_STATE = FALSE, ISVALID = (C_USE_MCB_S6_PHY && ([xstrncmp C_MEM_TYPE  DDR3 ] || ([xstrncmp C_MEM_TYPE  DDR2 ] && C_DDR2_DQSN_ENABLE))), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = MCB_DQS_N
PORT mcbx_dram_udqs = "", DIR = IO, THREE_STATE = FALSE, ISVALID = (C_USE_MCB_S6_PHY && (C_MEM_DATA_WIDTH > 8)), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = MCB_UDQS
PORT mcbx_dram_udqs_n = "", DIR = IO, THREE_STATE = FALSE, ISVALID = (C_USE_MCB_S6_PHY && (C_MEM_DATA_WIDTH > 8) && ([xstrncmp C_MEM_TYPE  DDR3 ] || ([xstrncmp C_MEM_TYPE  DDR2 ] && C_DDR2_DQSN_ENABLE))), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = MCB_UDQS_N
PORT mcbx_dram_udm = "", DIR = O, ISVALID = (C_USE_MCB_S6_PHY && (C_MEM_DATA_WIDTH > 8)), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = MCB_UDM
PORT mcbx_dram_ldm = "", DIR = O, ISVALID = (C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = MCB_LDM
PORT mcbx_dram_odt = "", DIR = O, ISVALID = (C_USE_MCB_S6_PHY && ([xstrncmp C_MEM_TYPE  DDR2 ] || [xstrncmp C_MEM_TYPE  DDR3 ])), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = MCB_ODT
PORT mcbx_dram_ddr3_rst = "", DIR = O, ISVALID = (C_USE_MCB_S6_PHY && [xstrncmp C_MEM_TYPE  DDR3 ]), IO_IF = memory_0, IO_IS = MCB_Rst
PORT selfrefresh_enter = "", DIR = I, INITIALVAL = GND, ISVALID = (C_USE_MCB_S6_PHY)
PORT selfrefresh_mode = "", DIR = O, ISVALID = (C_USE_MCB_S6_PHY)
PORT calib_recal = "", DIR = I, INITIALVAL = GND, ISVALID = (C_USE_MCB_S6_PHY)
PORT rzq = "", DIR = IO, THREE_STATE = FALSE, ISVALID = (C_USE_MCB_S6_PHY), IO_IF = memory_0, IO_IS = rzq
PORT zio = "", DIR = IO, THREE_STATE = FALSE, ISVALID = (C_USE_MCB_S6_PHY), IO_IF = memory_0, IO_IS = zio

END

FINISH_SINGLE_MPD

START_SINGLE_MPD xps_usb2_device_v3_00_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : xps_usb2_device
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN xps_usb2_device

## Peripheral Options
OPTION RUN_NGCBUILD = TRUE
OPTION PAY_CORE = xps_usb2_device@2010.04
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = MIXED
OPTION DESC = XPS USB2 Peripheral
OPTION LONG_DESC = USB with PLBV46 Interface.
OPTION IP_GROUP = Communication High-Speed:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=SUPERSEDED, spartan3=SUPERSEDED, spartan3an=SUPERSEDED, spartan3a=SUPERSEDED, spartan3e=SUPERSEDED, spartan3adsp=SUPERSEDED, virtex4lx=SUPERSEDED, virtex4sx=SUPERSEDED, virtex4fx=SUPERSEDED, virtex5lx=SUPERSEDED, virtex5sx=SUPERSEDED, virtex5fx=SUPERSEDED, aspartan3e=SUPERSEDED, aspartan3a=SUPERSEDED, aspartan3adsp=SUPERSEDED, qvirtex4lx=SUPERSEDED, qvirtex4sx=SUPERSEDED, qvirtex4fx=SUPERSEDED, qrvirtex4lx=SUPERSEDED, qrvirtex4sx=SUPERSEDED, qrvirtex4fx=SUPERSEDED, spartan6t=SUPERSEDED, spartan6=SUPERSEDED, spartan6l=SUPERSEDED, qspartan6t=SUPERSEDED, qspartan6=SUPERSEDED, aspartan6t=SUPERSEDED, aspartan6=SUPERSEDED, virtex6lx=SUPERSEDED, virtex6sx=SUPERSEDED, virtex6hx=SUPERSEDED, virtex6cx=SUPERSEDED, virtex6llx=SUPERSEDED, virtex6lsx=SUPERSEDED, qspartan6l=SUPERSEDED, qrvirtex5=SUPERSEDED, qvirtex6lx=SUPERSEDED, qvirtex6sx=SUPERSEDED, qvirtex6fx=SUPERSEDED, qvirtex6tx=SUPERSEDED)
OPTION STYLE = HDL


## Bus Interfaces
BUS_INTERFACE BUS = MPLB, BUS_TYPE = MASTER, BUS_STD = PLBV46, GENERATE_BURSTS = TRUE, ISVALID = (C_INCLUDE_DMA == 1)
BUS_INTERFACE BUS = SPLB, BUS_TYPE = SLAVE, BUS_STD = PLBV46

## Generics for VHDL or Parameters for Verilog
PARAMETER C_BASEADDR = 0xffffffff, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_HIGHADDR, MIN_SIZE = 0x8000, ASSIGNMENT = REQUIRE
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_BASEADDR, ASSIGNMENT = REQUIRE
PARAMETER C_FAMILY = virtex5, DT = STRING
PARAMETER C_SPLB_DWIDTH = 32, DT = INTEGER, BUS = SPLB, RANGE = (32,64,128)
PARAMETER C_SPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB, RANGE = (1,2,3,4)
PARAMETER C_SPLB_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB, RANGE = (1:16)
PARAMETER C_SPLB_AWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_INCLUDE_DMA = 0, DT = INTEGER, RANGE = (0,1)
PARAMETER C_SIMULATION = 0, DT = INTEGER, RANGE = (0,1)
PARAMETER C_MPLB_AWIDTH = 32, DT = INTEGER, BUS = MPLB, ASSIGNMENT = CONSTANT, ISVALID = (C_INCLUDE_DMA == 1)
PARAMETER C_MPLB_DWIDTH = 32, DT = INTEGER, BUS = MPLB, RANGE = (32,64,128), ISVALID = (C_INCLUDE_DMA == 1)
PARAMETER C_MPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = MPLB, ASSIGNMENT = CONSTANT, ISVALID = (C_INCLUDE_DMA == 1)

## Ports
PORT SPLB_Clk = "", DIR = I, SIGIS = Clk, BUS = SPLB
PORT SPLB_Rst = SPLB_Rst, DIR = I, SIGIS = Rst, BUS = SPLB
PORT MPLB_Clk = "", DIR = I, SIGIS = Clk, BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT MPLB_Rst = MPLB_Rst, DIR = I, SIGIS = Rst, BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT SPLB_ABus = PLB_ABus, DIR = I, VEC = [0:(C_SPLB_AWIDTH-1)], BUS = SPLB
PORT SPLB_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB_DWIDTH/8)-1)], BUS = SPLB
PORT SPLB_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT SPLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB
PORT SPLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB
PORT SPLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB
PORT SPLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB
PORT SPLB_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB_MID_WIDTH-1)], BUS = SPLB
PORT SPLB_abort = PLB_abort, DIR = I, BUS = SPLB
PORT SPLB_busLock = PLB_busLock, DIR = I, BUS = SPLB
PORT SPLB_RNW = PLB_RNW, DIR = I, BUS = SPLB
PORT SPLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB
PORT SPLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB
PORT SPLB_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB
PORT SPLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB
PORT SPLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT SPLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB
PORT SPLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB
PORT SPLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB
PORT SPLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB
PORT SPLB_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT SPLB_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT SPLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT SPLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB
PORT Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB
PORT Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB
PORT Sl_wait = Sl_wait, DIR = O, BUS = SPLB
PORT Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB
PORT Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB
PORT Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB
PORT Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB
PORT Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB
PORT Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB
PORT Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB
PORT Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB
PORT Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT MPLB_MAddrAck = PLB_MAddrAck, DIR = I, BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT MPLB_MSSize = PLB_MSSize, DIR = I, VEC = [0:1], BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT MPLB_MRearbitrate = PLB_MRearbitrate, DIR = I, BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT MPLB_MTimeout = PLB_MTimeout, DIR = I, BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT MPLB_MBusy = PLB_MBusy, DIR = I, BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT MPLB_MRdErr = PLB_MRdErr, DIR = I, BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT MPLB_MWrErr = PLB_MWrErr, DIR = I, BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT MPLB_MIRQ = PLB_MIRQ, DIR = I, BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT MPLB_MRdDBus = PLB_MRdDBus, DIR = I, VEC = [0:(C_MPLB_DWIDTH-1)], BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT MPLB_MRdWdAddr = PLB_MRdWdAddr, DIR = I, VEC = [0:3], BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT MPLB_MRdDAck = PLB_MRdDAck, DIR = I, BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT MPLB_MRdBTerm = PLB_MRdBTerm, DIR = I, BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT MPLB_MWrDAck = PLB_MWrDAck, DIR = I, BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT MPLB_MWrBTerm = PLB_MWrBTerm, DIR = I, BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT M_request = M_request, DIR = O, BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT M_priority = M_priority, DIR = O, VEC = [0:1], BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT M_busLock = M_busLock, DIR = O, BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT M_RNW = M_RNW, DIR = O, BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT M_BE = M_BE, DIR = O, VEC = [0:((C_MPLB_DWIDTH/8)-1)], BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT M_MSize = M_MSize, DIR = O, VEC = [0:1], BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT M_size = M_size, DIR = O, VEC = [0:3], BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT M_type = M_type, DIR = O, VEC = [0:2], BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT M_TAttribute = M_TAttribute, DIR = O, VEC = [0:15], BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT M_lockErr = M_lockErr, DIR = O, BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT M_abort = M_abort, DIR = O, BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT M_UABus = M_UABus, DIR = O, VEC = [0:31], BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT M_ABus = M_ABus, DIR = O, VEC = [0:(C_MPLB_AWIDTH-1)], BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT M_wrDBus = M_wrDBus, DIR = O, VEC = [0:(C_MPLB_DWIDTH-1)], BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT M_wrBurst = M_wrBurst, DIR = O, BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT M_rdBurst = M_rdBurst, DIR = O, BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT usb_irpt = "", DIR = O, SIGIS = INTERRUPT
PORT ULPI_Clock = "", DIR = I, SIGIS = Clk
PORT ULPI_Dir = "", DIR = I
PORT ULPI_Next = "", DIR = I
PORT ULPI_Stop = "", DIR = O
PORT ULPI_Reset = "", DIR = O
PORT ULPI_Data_I = "", DIR = I, VEC = [7:0]
PORT ULPI_Data_O = "", DIR = O, VEC = [7:0]
PORT ULPI_Data_T = "", DIR = O
PORT vbus_detect = "", DIR = O
PORT show_currentspeed = "", DIR = O
PORT running = "", DIR = O
PORT suspended = "", DIR = O
PORT disconnected = "", DIR = O
PORT configured = "", DIR = O
PORT spare1 = "", DIR = O
PORT spare2 = "", DIR = O
PORT ULPI_Data = "", DIR = IO, VEC = [7:0], ENABLE = SINGLE, THREE_STATE = TRUE, TRI_I = ULPI_Data_I, TRI_O = ULPI_Data_O, TRI_T = ULPI_Data_T

END

FINISH_SINGLE_MPD

START_SINGLE_MPD xps_hwicap_v4_00_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : xps_hwicap
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN xps_hwicap

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION DESC = FPGA Internal Configuration Access Port
OPTION LONG_DESC = PLBV46 interface to read and write the FPGA configuration memory through the Internal Configuration Access Port (ICAP) at run time
OPTION IP_GROUP = FPGA Reconfiguration:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=SUPERSEDED, spartan3=SUPERSEDED, spartan3an=SUPERSEDED, spartan3a=SUPERSEDED, spartan3e=SUPERSEDED, spartan3adsp=SUPERSEDED, virtex4lx=SUPERSEDED, virtex4sx=SUPERSEDED, virtex4fx=SUPERSEDED, virtex5lx=SUPERSEDED, virtex5sx=SUPERSEDED, virtex5fx=SUPERSEDED, aspartan3e=SUPERSEDED, aspartan3a=SUPERSEDED, aspartan3adsp=SUPERSEDED, qvirtex4lx=SUPERSEDED, qvirtex4sx=SUPERSEDED, qvirtex4fx=SUPERSEDED, qrvirtex4lx=SUPERSEDED, qrvirtex4sx=SUPERSEDED, qrvirtex4fx=SUPERSEDED, spartan6t=SUPERSEDED, spartan6=SUPERSEDED, spartan6l=SUPERSEDED, qspartan6t=SUPERSEDED, qspartan6=SUPERSEDED, aspartan6t=SUPERSEDED, aspartan6=SUPERSEDED, virtex6lx=SUPERSEDED, virtex6sx=SUPERSEDED, virtex6hx=SUPERSEDED, virtex6cx=SUPERSEDED, virtex6llx=SUPERSEDED, virtex6lsx=SUPERSEDED, qspartan6l=SUPERSEDED, qrvirtex5=SUPERSEDED, qvirtex6lx=SUPERSEDED, qvirtex6sx=SUPERSEDED, qvirtex6fx=SUPERSEDED, qvirtex6tx=SUPERSEDED)
OPTION RUN_NGCBUILD = FALSE
OPTION STYLE = HDL


## Bus Interfaces
BUS_INTERFACE BUS = SPLB, BUS_TYPE = SLAVE, BUS_STD = PLBV46

## Generics for VHDL or Parameters for Verilog
PARAMETER C_BASEADDR = 0xffffffff, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_HIGHADDR, MIN_SIZE = 0x1000, ASSIGNMENT = REQUIRE
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_BASEADDR, ASSIGNMENT = REQUIRE
PARAMETER C_SPLB_DWIDTH = 32, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_AWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_P2P = 0, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_MID_WIDTH = 3, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_NUM_MASTERS = 8, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_WRITE_FIFO_DEPTH = 64, DT = INTEGER, RANGE = (64,128,256,512,1024)
PARAMETER C_READ_FIFO_DEPTH = 128, DT = INTEGER, RANGE = (128,256)
PARAMETER C_SIMULATION = 2, DT = INTEGER, RANGE = (1,2)
PARAMETER C_BRAM_SRL_FIFO_TYPE = 1, DT = INTEGER, RANGE = (0,1)
PARAMETER C_FAMILY = virtex5, DT = STRING

## Ports
PORT ICAP_Clk = "", DIR = I, SIGIS = Clk
PORT SPLB_Clk = "", DIR = I, SIGIS = Clk, BUS = SPLB
PORT SPLB_Rst = SPLB_Rst, DIR = I, SIGIS = Rst, BUS = SPLB
PORT PLB_ABus = PLB_ABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB
PORT PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB
PORT PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB
PORT PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB
PORT PLB_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB_MID_WIDTH-1)], BUS = SPLB
PORT PLB_abort = PLB_abort, DIR = I, BUS = SPLB
PORT PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB
PORT PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB
PORT PLB_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB_DWIDTH/8)-1)], BUS = SPLB
PORT PLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB
PORT PLB_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB
PORT PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB
PORT PLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB
PORT PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB
PORT PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB
PORT PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB
PORT PLB_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB
PORT Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB
PORT Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB
PORT Sl_wait = Sl_wait, DIR = O, BUS = SPLB
PORT Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB
PORT Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB
PORT Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB
PORT Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB
PORT Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB
PORT Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB
PORT Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB
PORT Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB
PORT Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT IP2INTC_Irpt = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH

END

FINISH_SINGLE_MPD

START_SINGLE_MPD plbv46_pcie_v4_04_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : plbv46_pcie
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN plbv46_pcie

## Peripheral Options
OPTION RUN_NGCBUILD = TRUE
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = MIXED
OPTION STYLE = MIX
OPTION IPLEVEL_DRC_PROC = check_iplevel_settings
OPTION IPLEVEL_UPDATE_VALUE_PROC = update_native_dwidth
OPTION SYSLEVEL_DRC_PROC = check_syslevel_settings
OPTION PLATGEN_SYSLEVEL_UPDATE_PROC = generate_corelevel_ucf
OPTION USAGE_LEVEL = BASE_USER
OPTION DESC = PLBv46 IP Interface (IPIF) to LogicCORE PCI Express Bridge
OPTION LONG_DESC = Bridge between the PLBv46 IPIF and the Xilinx LogiCORE PCI Express Interface core
OPTION IP_GROUP = PCI:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (virtex5lx=PRODUCTION, virtex5sx=PRODUCTION, virtex5fx=PRODUCTION, spartan6t=PRODUCTION, spartan6=PRODUCTION, qspartan6t=PRODUCTION, qspartan6=PRODUCTION, virtex6lx=PRODUCTION, virtex6sx=PRODUCTION, virtex6hx=PRODUCTION, virtex6cx=PRODUCTION, virtex6llx=PRE_PRODUCTION, virtex6lsx=PRE_PRODUCTION, qvirtex6lx=PRE_PRODUCTION, qvirtex6sx=PRE_PRODUCTION, qvirtex6fx=PRE_PRODUCTION, qvirtex6tx=PRE_PRODUCTION)

IO_INTERFACE IO_IF = pcie_0, IO_TYPE = XIL_PCIE_V1

## Bus Interfaces
BUS_INTERFACE BUS = SPLB, BUS_TYPE = SLAVE, BUS_STD = PLBV46
BUS_INTERFACE BUS = MPLB, BUS_TYPE = MASTER, BUS_STD = PLBV46, GENERATE_BURSTS = TRUE

## Generics for VHDL or Parameters for Verilog
PARAMETER C_FAMILY = virtex5, DT = STRING, IPLEVEL_UPDATE_VALUE_PROC = update_cfamily
PARAMETER C_SUBFAMILY = lx, DT = STRING
PARAMETER C_IPIFBAR_NUM = 1, DT = INTEGER, RANGE = (1:6), IO_IF = pcie_0, IO_IS = C_IPIFBAR_NUM
PARAMETER C_INCLUDE_BAROFFSET_REG = 0, DT = INTEGER, RANGE = (0,1), IO_IF = pcie_0, IO_IS = C_INCLUDE_BAROFFSET_REG
PARAMETER C_PCIBAR_NUM = 1, DT = INTEGER, RANGE = (1:3), IO_IF = pcie_0, IO_IS = C_PCIBAR_NUM
PARAMETER C_NO_OF_LANES = 1, DT = INTEGER, RANGE = (1, 4, 8), IO_IF = pcie_0, IO_IS = C_NO_OF_LANES
PARAMETER C_DEVICE_ID = 0x0000, DT = std_logic_vector, IO_IF = pcie_0, IO_IS = C_DEVICE_ID
PARAMETER C_VENDOR_ID = 0x0000, DT = std_logic_vector, IO_IF = pcie_0, IO_IS = C_VENDOR_ID
PARAMETER C_CLASS_CODE = 0x000000, DT = std_logic_vector, IO_IF = pcie_0, IO_IS = C_CLASS_CODE
PARAMETER C_REF_CLK_FREQ = 0, DT = integer, IO_IF = pcie_0, IO_IS = C_REF_CLK_FREQ
PARAMETER C_REV_ID = 0x00, DT = std_logic_vector, IO_IF = pcie_0, IO_IS = C_REV_ID
PARAMETER C_SUBSYSTEM_ID = 0x0000, DT = std_logic_vector, IO_IF = pcie_0, IO_IS = C_SUBSYSTEM_ID
PARAMETER C_SUBSYSTEM_VENDOR_ID = 0x0000, DT = std_logic_vector, IO_IF = pcie_0, IO_IS = C_SUBSYSTEM_VENDOR_ID
PARAMETER C_COMP_TIMEOUT = 0, DT = INTEGER, RANGE = (0,1), IO_IF = pcie_0, IO_IS = C_COMP_TIMEOUT
PARAMETER C_INCLUDE_RC = 0, DT = INTEGER, RANGE = (0,1), IO_IF = pcie_0, IO_IS = C_INCLUDE_RC
PARAMETER C_MPLB_AWIDTH = 32, DT = INTEGER, BUS = MPLB, ASSIGNMENT = CONSTANT
PARAMETER C_MPLB_DWIDTH = 64, DT = INTEGER, BUS = MPLB
PARAMETER C_MPLB_SMALLEST_SLAVE = 32, BUS = MPLB, DT = INTEGER
PARAMETER C_MPLB_NATIVE_DWIDTH = 64, DT = INTEGER, BUS = MPLB, RANGE = (32, 64), IO_IF = pcie_0, IO_IS = C_MPLB_NATIVE_DWIDTH, ASSIGNMENT = UPDATE, IPLEVEL_UPDATE_VALUE_PROC = update_mplb_native_dwidth
PARAMETER C_SPLB_MID_WIDTH = 3, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_NUM_MASTERS = 8, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_AWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_BASEADDR = 0xffffffff, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_HIGHADDR, ADDR_TYPE = REGISTER
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_BASEADDR, ADDR_TYPE = REGISTER
PARAMETER C_SPLB_DWIDTH = 64, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_NATIVE_DWIDTH = 64, DT = INTEGER, BUS = SPLB, RANGE = (32, 64), IO_IF = pcie_0, IO_IS = C_SPLB_NATIVE_DWIDTH, ASSIGNMENT = UPDATE, IPLEVEL_UPDATE_VALUE_PROC = update_splb_native_dwidth
PARAMETER C_SPLB_P2P = 0, DT = INTEGER, BUS = SPLB, TYPE = NON_HDL
PARAMETER C_IPIFBAR_0 = 0xFFFFFFFF, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_IPIFBAR_HIGHADDR_0, ADDR_TYPE = BRIDGE, ISVALID = (C_IPIFBAR_NUM>=1), IO_IF = pcie_0, IO_IS = C_IPIFBAR_0
PARAMETER C_IPIFBAR_1 = 0xFFFFFFFF, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_IPIFBAR_HIGHADDR_1, ADDR_TYPE = BRIDGE, ISVALID = (C_IPIFBAR_NUM>=2), IO_IF = pcie_0, IO_IS = C_IPIFBAR_1
PARAMETER C_IPIFBAR_2 = 0xFFFFFFFF, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_IPIFBAR_HIGHADDR_2, ADDR_TYPE = BRIDGE, ISVALID = (C_IPIFBAR_NUM>=3), IO_IF = pcie_0, IO_IS = C_IPIFBAR_2
PARAMETER C_IPIFBAR_3 = 0xFFFFFFFF, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_IPIFBAR_HIGHADDR_3, ADDR_TYPE = BRIDGE, ISVALID = (C_IPIFBAR_NUM>=4), IO_IF = pcie_0, IO_IS = C_IPIFBAR_3
PARAMETER C_IPIFBAR_4 = 0xFFFFFFFF, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_IPIFBAR_HIGHADDR_4, ADDR_TYPE = BRIDGE, ISVALID = (C_IPIFBAR_NUM>=5), IO_IF = pcie_0, IO_IS = C_IPIFBAR_4
PARAMETER C_IPIFBAR_5 = 0xFFFFFFFF, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_IPIFBAR_HIGHADDR_5, ADDR_TYPE = BRIDGE, ISVALID = (C_IPIFBAR_NUM>=6), IO_IF = pcie_0, IO_IS = C_IPIFBAR_5
PARAMETER C_IPIFBAR_HIGHADDR_0 = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_IPIFBAR_0, ADDR_TYPE = BRIDGE, ISVALID = (C_IPIFBAR_NUM>=1), IO_IF = pcie_0, IO_IS = C_IPIFBAR_HIGHADDR_0
PARAMETER C_IPIFBAR_HIGHADDR_1 = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_IPIFBAR_1, ADDR_TYPE = BRIDGE, ISVALID = (C_IPIFBAR_NUM>=2), IO_IF = pcie_0, IO_IS = C_IPIFBAR_HIGHADDR_1
PARAMETER C_IPIFBAR_HIGHADDR_2 = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_IPIFBAR_2, ADDR_TYPE = BRIDGE, ISVALID = (C_IPIFBAR_NUM>=3), IO_IF = pcie_0, IO_IS = C_IPIFBAR_HIGHADDR_2
PARAMETER C_IPIFBAR_HIGHADDR_3 = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_IPIFBAR_3, ADDR_TYPE = BRIDGE, ISVALID = (C_IPIFBAR_NUM>=4), IO_IF = pcie_0, IO_IS = C_IPIFBAR_HIGHADDR_3
PARAMETER C_IPIFBAR_HIGHADDR_4 = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_IPIFBAR_4, ADDR_TYPE = BRIDGE, ISVALID = (C_IPIFBAR_NUM>=5), IO_IF = pcie_0, IO_IS = C_IPIFBAR_HIGHADDR_4
PARAMETER C_IPIFBAR_HIGHADDR_5 = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_IPIFBAR_5, ADDR_TYPE = BRIDGE, ISVALID = (C_IPIFBAR_NUM>=6), IO_IF = pcie_0, IO_IS = C_IPIFBAR_HIGHADDR_5
PARAMETER C_IPIFBAR2PCIBAR_0 = 0xFFFFFFFF, DT = std_logic_vector, ISVALID = (C_IPIFBAR_NUM>=1), IO_IF = pcie_0, IO_IS = C_IPIFBAR2PCIBAR_0
PARAMETER C_IPIFBAR2PCIBAR_1 = 0xFFFFFFFF, DT = std_logic_vector, ISVALID = (C_IPIFBAR_NUM>=2), IO_IF = pcie_0, IO_IS = C_IPIFBAR2PCIBAR_1
PARAMETER C_IPIFBAR2PCIBAR_2 = 0xFFFFFFFF, DT = std_logic_vector, ISVALID = (C_IPIFBAR_NUM>=3), IO_IF = pcie_0, IO_IS = C_IPIFBAR2PCIBAR_2
PARAMETER C_IPIFBAR2PCIBAR_3 = 0xFFFFFFFF, DT = std_logic_vector, ISVALID = (C_IPIFBAR_NUM>=4), IO_IF = pcie_0, IO_IS = C_IPIFBAR2PCIBAR_3
PARAMETER C_IPIFBAR2PCIBAR_4 = 0xFFFFFFFF, DT = std_logic_vector, ISVALID = (C_IPIFBAR_NUM>=5), IO_IF = pcie_0, IO_IS = C_IPIFBAR2PCIBAR_4
PARAMETER C_IPIFBAR2PCIBAR_5 = 0xFFFFFFFF, DT = std_logic_vector, ISVALID = (C_IPIFBAR_NUM>=6), IO_IF = pcie_0, IO_IS = C_IPIFBAR2PCIBAR_5
PARAMETER C_IPIFBAR_AS_0 = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_IPIFBAR_NUM>=1), IO_IF = pcie_0, IO_IS = C_IPIFBAR_AS_0
PARAMETER C_IPIFBAR_AS_1 = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_IPIFBAR_NUM>=2), IO_IF = pcie_0, IO_IS = C_IPIFBAR_AS_1
PARAMETER C_IPIFBAR_AS_2 = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_IPIFBAR_NUM>=3), IO_IF = pcie_0, IO_IS = C_IPIFBAR_AS_2
PARAMETER C_IPIFBAR_AS_3 = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_IPIFBAR_NUM>=4), IO_IF = pcie_0, IO_IS = C_IPIFBAR_AS_3
PARAMETER C_IPIFBAR_AS_4 = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_IPIFBAR_NUM>=5), IO_IF = pcie_0, IO_IS = C_IPIFBAR_AS_4
PARAMETER C_IPIFBAR_AS_5 = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_IPIFBAR_NUM>=6), IO_IF = pcie_0, IO_IS = C_IPIFBAR_AS_5
PARAMETER C_IPIFBAR_SPACE_TYPE_0 = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_INCLUDE_RC==1 && C_IPIFBAR_NUM>=1), IO_IF = pcie_0, IO_IS = C_IPIFBAR_SPACE_TYPE_0
PARAMETER C_IPIFBAR_SPACE_TYPE_1 = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_INCLUDE_RC==1 && C_IPIFBAR_NUM>=2), IO_IF = pcie_0, IO_IS = C_IPIFBAR_SPACE_TYPE_1
PARAMETER C_IPIFBAR_SPACE_TYPE_2 = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_INCLUDE_RC==1 && C_IPIFBAR_NUM>=3), IO_IF = pcie_0, IO_IS = C_IPIFBAR_SPACE_TYPE_2
PARAMETER C_IPIFBAR_SPACE_TYPE_3 = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_INCLUDE_RC==1 && C_IPIFBAR_NUM>=4), IO_IF = pcie_0, IO_IS = C_IPIFBAR_SPACE_TYPE_3
PARAMETER C_IPIFBAR_SPACE_TYPE_4 = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_INCLUDE_RC==1 && C_IPIFBAR_NUM>=5), IO_IF = pcie_0, IO_IS = C_IPIFBAR_SPACE_TYPE_4
PARAMETER C_IPIFBAR_SPACE_TYPE_5 = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_INCLUDE_RC==1 && C_IPIFBAR_NUM>=6), IO_IF = pcie_0, IO_IS = C_IPIFBAR_SPACE_TYPE_5
PARAMETER C_ECAM_BASEADDR = 0xFFFFFFFF, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_ECAM_HIGHADDR, ADDR_TYPE = BRIDGE, ISVALID = (C_INCLUDE_RC==1), IO_IF = pcie_0, IO_IS = C_ECAM_BASEADDR
PARAMETER C_ECAM_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_ECAM_BASEADDR, ADDR_TYPE = BRIDGE, ISVALID = (C_INCLUDE_RC==1), IO_IF = pcie_0, IO_IS = C_ECAM_HIGHADDR
PARAMETER C_PCIBAR2IPIFBAR_0 = 0xFFFFFFFF, DT = std_logic_vector, ISVALID = (C_PCIBAR_NUM>=1), IO_IF = pcie_0, IO_IS = C_PCIBAR2IPIFBAR_0
PARAMETER C_PCIBAR2IPIFBAR_1 = 0xFFFFFFFF, DT = std_logic_vector, ISVALID = (C_PCIBAR_NUM>=2), IO_IF = pcie_0, IO_IS = C_PCIBAR2IPIFBAR_1
PARAMETER C_PCIBAR2IPIFBAR_2 = 0xFFFFFFFF, DT = std_logic_vector, ISVALID = (C_PCIBAR_NUM>=3), IO_IF = pcie_0, IO_IS = C_PCIBAR2IPIFBAR_2
PARAMETER C_PCIBAR_LEN_0 = 16, DT = INTEGER, RANGE = (13:29), ISVALID = (C_PCIBAR_NUM>=1), IO_IF = pcie_0, IO_IS = C_PCIBAR_LEN_0
PARAMETER C_PCIBAR_LEN_1 = 16, DT = INTEGER, RANGE = (13:29), ISVALID = (C_PCIBAR_NUM>=2), IO_IF = pcie_0, IO_IS = C_PCIBAR_LEN_1
PARAMETER C_PCIBAR_LEN_2 = 16, DT = INTEGER, RANGE = (13:29), ISVALID = (C_PCIBAR_NUM>=3), IO_IF = pcie_0, IO_IS = C_PCIBAR_LEN_2
PARAMETER C_PCIBAR_AS = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PCIBAR_NUM>=1), IO_IF = pcie_0, IO_IS = C_PCIBAR_AS
PARAMETER C_PCIE_CAP_SLOT_IMPLEMENTED = 1, DT = INTEGER, RANGE = (0,1), IO_IF = pcie_0, IO_IS = C_PCIE_CAP_SLOT_IMPLEMENTED
PARAMETER C_BOARD = none, DT = STRING, TYPE = NON_HDL, IO_IF = pcie_0, IO_IS = C_BOARD, VALUES = (ml505=ml505, ml555=ml555, ml507=ml507, none=none)
PARAMETER C_DEVICE = DEFAULT, DT = STRING, TYPE = NON_HDL, ASSIGNMENT = UPDATE

## Ports
PORT MPLB_Clk = "", DIR = I, BUS = MPLB, SIGIS = CLK
PORT MPLB_Rst = MPLB_Rst, DIR = I, BUS = MPLB
PORT PLB_MTimeout = PLB_MTimeout, DIR = I, BUS = MPLB
PORT PLB_MIRQ = PLB_MIRQ, DIR = I, BUS = MPLB
PORT PLB_MAddrAck = PLB_MAddrAck, DIR = I, BUS = MPLB
PORT PLB_MSSize = PLB_MSSize, DIR = I, VEC = [0:1], BUS = MPLB
PORT PLB_MRearbitrate = PLB_MRearbitrate, DIR = I, BUS = MPLB
PORT PLB_MBusy = PLB_MBusy, DIR = I, BUS = MPLB
PORT PLB_MRdErr = PLB_MRdErr, DIR = I, BUS = MPLB
PORT PLB_MWrErr = PLB_MWrErr, DIR = I, BUS = MPLB
PORT PLB_MWrDAck = PLB_MWrDAck, DIR = I, BUS = MPLB
PORT PLB_MRdDBus = PLB_MRdDBus, DIR = I, VEC = [0:(C_MPLB_DWIDTH-1)], BUS = MPLB
PORT PLB_MRdWdAddr = PLB_MRdWdAddr, DIR = I, VEC = [0:3], BUS = MPLB
PORT PLB_MRdDAck = PLB_MRdDAck, DIR = I, BUS = MPLB
PORT PLB_MRdBTerm = PLB_MRdBTerm, DIR = I, BUS = MPLB
PORT PLB_MWrBTerm = PLB_MWrBTerm, DIR = I, BUS = MPLB
PORT M_request = M_request, DIR = O, BUS = MPLB
PORT M_priority = M_priority, DIR = O, VEC = [0:1], BUS = MPLB
PORT M_buslock = M_busLock, DIR = O, BUS = MPLB
PORT M_RNW = M_RNW, DIR = O, BUS = MPLB
PORT M_BE = M_BE, DIR = O, VEC = [0:((C_MPLB_DWIDTH/8)-1)], BUS = MPLB
PORT M_MSize = M_MSize, DIR = O, VEC = [0:1], BUS = MPLB
PORT M_size = M_size, DIR = O, VEC = [0:3], BUS = MPLB
PORT M_type = M_type, DIR = O, VEC = [0:2], BUS = MPLB
PORT M_lockErr = M_lockErr, DIR = O, BUS = MPLB
PORT M_abort = M_abort, DIR = O, BUS = MPLB
PORT M_TAttribute = M_TAttribute, DIR = O, VEC = [0:15], BUS = MPLB
PORT M_UABus = M_UABus, DIR = O, VEC = [0:31], BUS = MPLB
PORT M_ABus = M_ABus, DIR = O, VEC = [0:(C_MPLB_AWIDTH-1)], BUS = MPLB
PORT M_wrDBus = M_wrDBus, DIR = O, VEC = [0:(C_MPLB_DWIDTH-1)], BUS = MPLB
PORT M_wrBurst = M_wrBurst, DIR = O, BUS = MPLB
PORT M_rdBurst = M_rdBurst, DIR = O, BUS = MPLB
PORT SPLB_Clk = "", DIR = I, SIGIS = CLK, BUS = SPLB
PORT SPLB_Rst = SPLB_Rst, DIR = I, SIGIS = RST, BUS = SPLB
PORT PLB_ABus = PLB_ABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB
PORT PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB
PORT PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB
PORT PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB
PORT PLB_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB_MID_WIDTH-1)], BUS = SPLB
PORT PLB_abort = PLB_abort, DIR = I, BUS = SPLB
PORT PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB
PORT PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB
PORT PLB_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB_DWIDTH/8)-1)], BUS = SPLB
PORT PLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB
PORT PLB_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB
PORT PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB
PORT PLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB
PORT PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB
PORT PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB
PORT PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB
PORT PLB_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB
PORT Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB
PORT Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB
PORT Sl_wait = Sl_wait, DIR = O, BUS = SPLB
PORT Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB
PORT Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB
PORT Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB
PORT Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB
PORT Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB
PORT Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB
PORT Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB
PORT Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB
PORT Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT REFCLK = "", DIR = I, IO_IF = pcie_0, IO_IS = REFCLK
PORT Bridge_Clk = "", DIR = O, IO_IF = pcie_0, IO_IS = Bridge_Clk
PORT RXN = "", DIR = I, VEC = [(C_NO_OF_LANES-1):0], IOB_STATE = BUF, IO_IF = pcie_0, IO_IS = RXN
PORT RXP = "", DIR = I, VEC = [(C_NO_OF_LANES-1):0], IOB_STATE = BUF, IO_IF = pcie_0, IO_IS = RXP
PORT TXN = "", DIR = O, VEC = [(C_NO_OF_LANES-1):0], IOB_STATE = BUF, IO_IF = pcie_0, IO_IS = TXN
PORT TXP = "", DIR = O, VEC = [(C_NO_OF_LANES-1):0], IOB_STATE = BUF, IO_IF = pcie_0, IO_IS = TXP
PORT IP2INTC_Irpt = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH
PORT MSI_request = "", DIR = I, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, IO_IF = pcie_0, IO_IS = MSI_request

END

FINISH_SINGLE_MPD

START_SINGLE_MPD ppc440mc_ddr2_v3_00_b 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : ppc440mc_ddr2
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN ppc440mc_ddr2

## Peripheral Options
OPTION RUN_NGCBUILD = TRUE
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VERILOG
OPTION PLATGEN_SYSLEVEL_UPDATE_PROC = generate_corelevel_ucf
OPTION SYSLEVEL_DRC_PROC = check_syslevel_settings
OPTION USAGE_LEVEL = BASE_USER
OPTION ARCH_SUPPORT_MAP = (virtex5fx=PRODUCTION)
OPTION STYLE = HDL
OPTION LAST_UPDATED = 12.2
OPTION DESC = PowerPC 440 DDR2 Memory Controller
OPTION LONG_DESC = A wrapper to instantiate the PowerPC 440 DDR2 Memory Controller
OPTION IP_GROUP = Memory and Memory Controller:PPC

IO_INTERFACE IO_IF = memory_0, IO_TYPE = XIL_MEMORY_V1

## Bus Interfaces
BUS_INTERFACE BUS = PPC440MC, BUS_STD = XIL_PPC440MC, BUS_TYPE = TARGET

## Generics for VHDL or Parameters for Verilog
PARAMETER C_DDR_BAWIDTH = 2, DT = integer, RANGE = (2,3), IO_IF = memory_0, IO_IS = C_MEM_BANKADDR_WIDTH
PARAMETER C_NUM_CLK_PAIRS = 1, DT = integer, RANGE = (1:5), IO_IF = memory_0, IO_IS = C_MEM_CLK_WIDTH
PARAMETER C_DDR_DWIDTH = 64, DT = integer, RANGE = (16,32,64,72), IO_IF = memory_0, IO_IS = C_DDR_DWIDTH
PARAMETER C_DDR_CAWIDTH = 10, DT = integer, IO_IF = memory_0, IO_IS = C_DDR_COL_AWIDTH
PARAMETER C_NUM_RANKS_MEM = 1, DT = integer, IO_IF = memory_0, IO_IS = C_NUM_RANKS_MEM
PARAMETER C_CS_BITS = 0, DT = integer, IO_IF = memory_0, IO_IS = C_CS_BITS, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_ddr_cs_bits, ASSIGNMENT = UPDATE
PARAMETER C_DDR_DM_WIDTH = 8, DT = integer, RANGE = (2,4,8,9), IO_IF = memory_0, IO_IS = C_DDR_DM_WIDTH, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_ddr_dm_width, ASSIGNMENT = UPDATE
PARAMETER C_DQ_BITS = 6, DT = integer, IO_IF = memory_0, IO_IS = C_DQ_BITS, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_ddr_dq_bits, ASSIGNMENT = UPDATE
PARAMETER C_DDR2_ODT_WIDTH = 1, DT = integer, RANGE = (0:4), IO_IF = memory_0, IO_IS = C_DDR2_ODT_WIDTH
PARAMETER C_DDR2_ADDT_LAT = 0, DT = integer, RANGE = (0:4), IO_IF = memory_0, IO_IS = C_DDR2_ADDT_LAT
PARAMETER C_INCLUDE_ECC_SUPPORT = 0, DT = integer, RANGE = (0,1)
PARAMETER C_DDR2_ODT_SETTING = 1, DT = integer, RANGE = (0:3), IO_IF = memory_0, IO_IS = C_MEM_ODT_TYPE
PARAMETER C_DQS_BITS = 3, DT = integer, IO_IF = memory_0, IO_IS = C_DQS_BITS, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_ddr_dqs_bits, ASSIGNMENT = UPDATE
PARAMETER C_DDR_DQS_WIDTH = 8, DT = integer, RANGE = (2,4,8,9), IO_IF = memory_0, IO_IS = C_DDR_DQS_WIDTH, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_ddr_dqs_width, ASSIGNMENT = UPDATE
PARAMETER C_DDR_RAWIDTH = 14, DT = integer, IO_IF = memory_0, IO_IS = C_MEM_ADDR_WIDTH
PARAMETER C_DDR_BURST_LENGTH = 4, DT = integer, RANGE = (4,8)
PARAMETER C_DDR_CAS_LAT = 5, DT = integer, RANGE = (3:5), IO_IF = memory_0, IO_IS = C_DDR_CAS_LAT
PARAMETER C_REG_DIMM = 0, DT = integer, RANGE = (0:1), IO_IF = memory_0, IO_IS = C_REG_DIMM
PARAMETER C_MIB_MC_CLOCK_RATIO = 0, DT = integer, RANGE = (0:2)
PARAMETER C_MEM_BASEADDR = 0xFFFFFFFF, ADDRESS = BASE, PAIR = C_MEM_HIGHADDR, ADDR_TYPE = MEMORY, ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = C_BASEADDR, CACHEABLE = TRUE, PERMIT = BASE_USER, DESC = Bank 0 Base Address
PARAMETER C_MEM_HIGHADDR = 0x00000000, ADDRESS = HIGH, PAIR = C_MEM_BASEADDR, ADDR_TYPE = MEMORY, ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = C_HIGHADDR, PERMIT = BASE_USER, DESC = Bank 0 High Address
PARAMETER C_REDUCE_DRV = 0, DT = integer, RANGE = (0:1), IO_IF = memory_0, IO_IS = C_REDUCE_DRV
PARAMETER C_DDR_TREFI = 7800, DT = integer, IO_IF = memory_0, IO_IS = C_DDR_TREFI
PARAMETER C_DDR_TRAS = 40000, DT = integer, IO_IF = memory_0, IO_IS = C_DDR_TRAS
PARAMETER C_DDR_TRCD = 15000, DT = integer, IO_IF = memory_0, IO_IS = C_DDR_TRCD
PARAMETER C_DDR_TRFC = 70000, DT = integer, IO_IF = memory_0, IO_IS = C_DDR_TRFC
PARAMETER C_DDR_TRP = 15000, DT = integer, IO_IF = memory_0, IO_IS = C_DDR_TRP
PARAMETER C_DDR_TRTP = 7500, DT = integer, IO_IF = memory_0, IO_IS = C_DDR_TRTP
PARAMETER C_DDR_TWR = 15000, DT = integer, IO_IF = memory_0, IO_IS = C_DDR_TWR
PARAMETER C_DDR_TWTR = 10000, DT = integer, IO_IF = memory_0, IO_IS = C_DDR_TWTR
PARAMETER C_MC_MIBCLK_PERIOD_PS = 3000, DT = integer, RANGE = (3000:8000)
PARAMETER C_IDEL_HIGH_PERF = TRUE, DT = string
PARAMETER C_SIM_ONLY = 0, DT = integer, RANGE = (0:1)
PARAMETER C_NUM_IDELAYCTRL = 1, DT = integer, IO_IF = memory_0, IO_IS = C_NUM_IDELAYCTRL
PARAMETER C_IODELAY_GRP = NOT_SET, DT = STRING, ASSIGNMENT = OPTIONAL_UPDATE, IO_IF = memory_0, IO_IS = C_IODELAY_GRP, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_iodelay_grp
PARAMETER C_READ_DATA_PIPELINE = 0, DT = integer, RANGE = (0:1)
PARAMETER C_FPGA_SPEED_GRADE = 1, DT = integer, SYSLEVEL_UPDATE_VALUE_PROC = iplevel_update_speedgrade

## Ports
PORT mc_mibclk = "", DIR = I, SIGIS = CLK, ASSIGNMENT = REQUIRE
PORT mi_mcclk90 = "", DIR = I, SIGIS = CLK, ASSIGNMENT = REQUIRE
PORT mi_mcreset = "", DIR = I, SIGIS = RST, ASSIGNMENT = REQUIRE
PORT mi_mcclkdiv2 = "", DIR = I, SIGIS = CLK, ASSIGNMENT = REQUIRE
PORT mi_mcclk_200 = "", DIR = I, SIGIS = CLK, ASSIGNMENT = REQUIRE
PORT mi_mcaddressvalid = mimcaddressvalid, DIR = I, BUS = PPC440MC
PORT mi_mcaddress = mimcaddress, DIR = I, VEC = [0:35], BUS = PPC440MC
PORT mi_mcbankconflict = mimcbankconflict, DIR = I, BUS = PPC440MC
PORT mi_mcrowconflict = mimcrowconflict, DIR = I, BUS = PPC440MC
PORT mi_mcbyteenable = mimcbyteenable, DIR = I, VEC = [0:15], BUS = PPC440MC
PORT mi_mcwritedata = mimcwritedata, DIR = I, VEC = [0:127], BUS = PPC440MC
PORT mi_mcreadnotwrite = mimcreadnotwrite, DIR = I, BUS = PPC440MC
PORT mi_mcwritedatavalid = mimcwritedatavalid, DIR = I, BUS = PPC440MC
PORT mc_miaddrreadytoaccept = mcmiaddrreadytoaccept, DIR = O, BUS = PPC440MC
PORT mc_mireaddata = mcmireaddata, DIR = O, VEC = [0:127], BUS = PPC440MC
PORT mc_mireaddataerr = mcmireaddataerr, DIR = O, BUS = PPC440MC
PORT mc_mireaddatavalid = mcmireaddatavalid, DIR = O, BUS = PPC440MC
PORT idelay_ctrl_rdy_i = "", DIR = I, PERMIT = BASE_USER, INITIALVAL = VCC, IO_IF = memory_0, IO_IS = idelay_ctrl_rdy_i
PORT idelay_ctrl_rdy = "", DIR = O, PERMIT = BASE_USER, IO_IF = memory_0, IO_IS = idelay_ctrl_rdy
PORT DDR2_DQ = "", DIR = IO, VEC = [(C_DDR_DWIDTH-1):0], IOB_STATE = BUF, THREE_STATE = FALSE, PERMIT = BASE_USER, IO_IF = memory_0, IO_IS = ddr2_data
PORT DDR2_DQS = "", DIR = IO, VEC = [(C_DDR_DQS_WIDTH-1):0], IOB_STATE = BUF, THREE_STATE = FALSE, PERMIT = BASE_USER, IO_IF = memory_0, IO_IS = ddr2_data_strobe
PORT DDR2_DQS_N = "", DIR = IO, VEC = [(C_DDR_DQS_WIDTH-1):0], IOB_STATE = BUF, THREE_STATE = FALSE, PERMIT = BASE_USER, IO_IF = memory_0, IO_IS = ddr2_data_strobe_n
PORT DDR2_A = "", DIR = O, VEC = [(C_DDR_RAWIDTH-1):0], PERMIT = BASE_USER, IO_IF = memory_0, IO_IS = DDR2_ADDRESS
PORT DDR2_BA = "", DIR = O, VEC = [(C_DDR_BAWIDTH-1):0], PERMIT = BASE_USER, IO_IF = memory_0, IO_IS = DDR2_BankAddr
PORT DDR2_RAS_N = "", DIR = O, PERMIT = BASE_USER, IO_IF = memory_0, IO_IS = ddr2_row_addr_select
PORT DDR2_CAS_N = "", DIR = O, PERMIT = BASE_USER, IO_IF = memory_0, IO_IS = ddr2_col_addr_select
PORT DDR2_WE_N = "", DIR = O, PERMIT = BASE_USER, IO_IF = memory_0, IO_IS = ddr2_write_enable
PORT DDR2_CS_N = "", DIR = O, VEC = [(C_NUM_RANKS_MEM-1):0], PERMIT = BASE_USER, IO_IF = memory_0, IO_IS = ddr2_chip_select
PORT DDR2_ODT = "", DIR = O, VEC = [(C_DDR2_ODT_WIDTH-1):0], PERMIT = BASE_USER, IO_IF = memory_0, IO_IS = DDR2_ODT
PORT DDR2_CKE = "", DIR = O, VEC = [(C_NUM_RANKS_MEM-1):0], PERMIT = BASE_USER, IO_IF = memory_0, IO_IS = ddr2_clk_enable
PORT DDR2_DM = "", DIR = O, VEC = [(C_DDR_DM_WIDTH-1):0], PERMIT = BASE_USER, IO_IF = memory_0, IO_IS = ddr2_data_mask
PORT DDR2_CK = "", DIR = O, VEC = [(C_NUM_CLK_PAIRS-1):0], PERMIT = BASE_USER, IO_IF = memory_0, IO_IS = DDR2_CLK
PORT DDR2_CK_N = "", DIR = O, VEC = [(C_NUM_CLK_PAIRS-1):0], PERMIT = BASE_USER, IO_IF = memory_0, IO_IS = DDR2_CLK_N

END

FINISH_SINGLE_MPD

START_SINGLE_MPD xps_central_dma_v2_01_c 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : xps_central_dma
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN xps_central_dma

## Peripheral Options
OPTION STYLE = HDL
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION DESC = XPS Central DMA Controller
OPTION LONG_DESC = Simple Direct Memory Access (DMA) services for PLBV46
OPTION IP_GROUP = DMA and Timer:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=SUPERSEDED, spartan3=SUPERSEDED, spartan3an=SUPERSEDED, spartan3a=SUPERSEDED, spartan3e=SUPERSEDED, spartan3adsp=SUPERSEDED, virtex4lx=SUPERSEDED, virtex4sx=SUPERSEDED, virtex4fx=SUPERSEDED, virtex5lx=SUPERSEDED, virtex5sx=SUPERSEDED, virtex5fx=SUPERSEDED, aspartan3e=SUPERSEDED, aspartan3a=SUPERSEDED, aspartan3adsp=SUPERSEDED, qvirtex4lx=SUPERSEDED, qvirtex4sx=SUPERSEDED, qvirtex4fx=SUPERSEDED, qrvirtex4lx=SUPERSEDED, qrvirtex4sx=SUPERSEDED, qrvirtex4fx=SUPERSEDED, spartan6t=SUPERSEDED, spartan6=SUPERSEDED, spartan6l=SUPERSEDED, qspartan6t=SUPERSEDED, qspartan6=SUPERSEDED, aspartan6t=SUPERSEDED, aspartan6=SUPERSEDED, virtex6lx=SUPERSEDED, virtex6sx=SUPERSEDED, virtex6hx=SUPERSEDED, virtex6cx=SUPERSEDED, virtex6llx=SUPERSEDED, virtex6lsx=SUPERSEDED, qspartan6l=SUPERSEDED, qrvirtex5=SUPERSEDED, qvirtex6lx=SUPERSEDED, qvirtex6sx=SUPERSEDED, qvirtex6fx=SUPERSEDED, qvirtex6tx=SUPERSEDED)
OPTION RUN_NGCBUILD = FALSE


## Bus Interfaces
BUS_INTERFACE BUS = MPLB, BUS_TYPE = MASTER, BUS_STD = PLBV46, GENERATE_BURSTS = TRUE
BUS_INTERFACE BUS = SPLB, BUS_TYPE = SLAVE, BUS_STD = PLBV46

## Generics for VHDL or Parameters for Verilog
PARAMETER C_FIFO_DEPTH = 8, DT = INTEGER, RANGE = (1,8,16,32,48)
PARAMETER C_RD_BURST_SIZE = 8, DT = INTEGER, RANGE = (1,8,16)
PARAMETER C_WR_BURST_SIZE = 8, DT = INTEGER, RANGE = (1,8,16)
PARAMETER C_BASEADDR = 0xffffffff, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_HIGHADDR, MIN_SIZE = 0x40, ASSIGNMENT = REQUIRE
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_BASEADDR, ASSIGNMENT = REQUIRE
PARAMETER C_SPLB_DWIDTH = 32, DT = INTEGER, BUS = SPLB, RANGE = (32, 64, 128)
PARAMETER C_SPLB_AWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB, RANGE = (1:16)
PARAMETER C_SPLB_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB, RANGE = (1:4)
PARAMETER C_SPLB_P2P = 0, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_MPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = MPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_MPLB_AWIDTH = 32, DT = INTEGER, BUS = MPLB, ASSIGNMENT = CONSTANT
PARAMETER C_MPLB_DWIDTH = 32, DT = INTEGER, BUS = MPLB, RANGE = (32, 64, 128)
PARAMETER C_FAMILY = virtex5, DT = STRING

## Ports
PORT SPLB_Clk = "", DIR = I, SIGIS = Clk, BUS = SPLB
PORT SPLB_Rst = SPLB_Rst, DIR = I, SIGIS = Rst, BUS = SPLB
PORT MPLB_Clk = "", DIR = I, SIGIS = Clk, BUS = MPLB
PORT MPLB_Rst = MPLB_Rst, DIR = I, SIGIS = Rst, BUS = MPLB
PORT SPLB_ABus = PLB_ABus, DIR = I, VEC = [0:(C_SPLB_AWIDTH-1)], BUS = SPLB
PORT SPLB_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB_DWIDTH/8)-1)], BUS = SPLB
PORT SPLB_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT SPLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB
PORT SPLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB
PORT SPLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB
PORT SPLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB
PORT SPLB_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB_MID_WIDTH-1)], BUS = SPLB
PORT SPLB_abort = PLB_abort, DIR = I, BUS = SPLB
PORT SPLB_busLock = PLB_busLock, DIR = I, BUS = SPLB
PORT SPLB_RNW = PLB_RNW, DIR = I, BUS = SPLB
PORT SPLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB
PORT SPLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB
PORT SPLB_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB
PORT SPLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB
PORT SPLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT SPLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB
PORT SPLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB
PORT SPLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB
PORT SPLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB
PORT SPLB_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT SPLB_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT SPLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT SPLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB
PORT Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB
PORT Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB
PORT Sl_wait = Sl_wait, DIR = O, BUS = SPLB
PORT Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB
PORT Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB
PORT Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB
PORT Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB
PORT Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB
PORT Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB
PORT Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB
PORT Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB
PORT Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT IP2INTC_Irpt = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH
PORT MPLB_MAddrAck = PLB_MAddrAck, DIR = I, BUS = MPLB
PORT MPLB_MSSize = PLB_MSSize, DIR = I, VEC = [0:1], BUS = MPLB
PORT MPLB_MRearbitrate = PLB_MRearbitrate, DIR = I, BUS = MPLB
PORT MPLB_MTimeout = PLB_MTimeout, DIR = I, BUS = MPLB
PORT MPLB_MBusy = PLB_MBusy, DIR = I, BUS = MPLB
PORT MPLB_MRdErr = PLB_MRdErr, DIR = I, BUS = MPLB
PORT MPLB_MWrErr = PLB_MWrErr, DIR = I, BUS = MPLB
PORT MPLB_MIRQ = PLB_MIRQ, DIR = I, BUS = MPLB
PORT MPLB_MRdDBus = PLB_MRdDBus, DIR = I, VEC = [0:(C_MPLB_DWIDTH-1)], BUS = MPLB
PORT MPLB_MRdWdAddr = PLB_MRdWdAddr, DIR = I, VEC = [0:3], BUS = MPLB
PORT MPLB_MRdDAck = PLB_MRdDAck, DIR = I, BUS = MPLB
PORT MPLB_MRdBTerm = PLB_MRdBTerm, DIR = I, BUS = MPLB
PORT MPLB_MWrDAck = PLB_MWrDAck, DIR = I, BUS = MPLB
PORT MPLB_MWrBTerm = PLB_MWrBTerm, DIR = I, BUS = MPLB
PORT M_request = M_request, DIR = O, BUS = MPLB
PORT M_priority = M_priority, DIR = O, VEC = [0:1], BUS = MPLB
PORT M_busLock = M_busLock, DIR = O, BUS = MPLB
PORT M_RNW = M_RNW, DIR = O, BUS = MPLB
PORT M_BE = M_BE, DIR = O, VEC = [0:((C_MPLB_DWIDTH/8)-1)], BUS = MPLB
PORT M_MSize = M_MSize, DIR = O, VEC = [0:1], BUS = MPLB
PORT M_size = M_size, DIR = O, VEC = [0:3], BUS = MPLB
PORT M_type = M_type, DIR = O, VEC = [0:2], BUS = MPLB
PORT M_TAttribute = M_TAttribute, DIR = O, VEC = [0:15], BUS = MPLB
PORT M_lockErr = M_lockErr, DIR = O, BUS = MPLB
PORT M_abort = M_abort, DIR = O, BUS = MPLB
PORT M_UABus = M_UABus, DIR = O, VEC = [0:31], BUS = MPLB
PORT M_ABus = M_ABus, DIR = O, VEC = [0:(C_MPLB_AWIDTH-1)], BUS = MPLB
PORT M_wrDBus = M_wrDBus, DIR = O, VEC = [0:(C_MPLB_DWIDTH-1)], BUS = MPLB
PORT M_wrBurst = M_wrBurst, DIR = O, BUS = MPLB
PORT M_rdBurst = M_rdBurst, DIR = O, BUS = MPLB

END

FINISH_SINGLE_MPD

START_SINGLE_MPD xps_ethernetlite_v4_00_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : xps_ethernetlite
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN xps_ethernetlite

## Peripheral Options
OPTION STYLE = HDL
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION ALERT = This design requires design constraints to guarantee performance.\nPlease refer to the data sheet for details.  \nThe PLB clock frequency must be greater than or equal to 50 MHz for 100 Mbs Ethernet operation and greater than or equal to 5.0 MHz for 10 Mbs Ethernet operation.
OPTION USAGE_LEVEL = BASE_USER
OPTION PLATGEN_SYSLEVEL_UPDATE_PROC = generate_corelevel_ucf
OPTION SYSLEVEL_DRC_PROC = check_syslevel_drcs
OPTION RUN_NGCBUILD = TRUE
OPTION DESC = XPS 10/100 Ethernet MAC Lite
OPTION LONG_DESC = 'IEEE Std. 802.3 MII interface MAC with PLBV46 interface, lightweight implementation'
OPTION IP_GROUP = Communication High-Speed:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=PRODUCTION, spartan3=PRODUCTION, spartan3an=PRODUCTION, spartan3a=PRODUCTION, spartan3e=PRODUCTION, spartan3adsp=PRODUCTION, virtex4lx=PRODUCTION, virtex4sx=PRODUCTION, virtex4fx=PRODUCTION, virtex5lx=PRODUCTION, virtex5sx=PRODUCTION, virtex5fx=PRODUCTION, aspartan3e=PRODUCTION, aspartan3a=PRODUCTION, aspartan3adsp=PRODUCTION, qvirtex4lx=PRODUCTION, qvirtex4sx=PRODUCTION, qvirtex4fx=PRODUCTION, qrvirtex4lx=PRODUCTION, qrvirtex4sx=PRODUCTION, qrvirtex4fx=PRODUCTION, spartan6t=PRODUCTION, spartan6=PRODUCTION, spartan6l=PRE_PRODUCTION, qspartan6t=PRODUCTION, qspartan6=PRODUCTION, aspartan6t=PRODUCTION, aspartan6=PRODUCTION, virtex6lx=PRODUCTION, virtex6sx=PRODUCTION, virtex6hx=PRODUCTION, virtex6cx=PRODUCTION, virtex6llx=PRE_PRODUCTION, virtex6lsx=PRE_PRODUCTION, qspartan6l=PRE_PRODUCTION, qrvirtex5=PRE_PRODUCTION, qvirtex6lx=PRE_PRODUCTION, qvirtex6sx=PRE_PRODUCTION, qvirtex6fx=PRE_PRODUCTION, qvirtex6tx=PRE_PRODUCTION)

IO_INTERFACE IO_IF = ethernet_0, IO_TYPE = XIL_ETHERNET_V1

## Bus Interfaces
BUS_INTERFACE BUS = SPLB, BUS_STD = PLBV46, BUS_TYPE = SLAVE

## Generics for VHDL or Parameters for Verilog
PARAMETER C_FAMILY = virtex5, DT = STRING, IPLEVEL_UPDATE_VALUE_PROC = update_cfamily
PARAMETER C_BASEADDR = 0xffffffff, DT = std_logic_vector, ASSIGNMENT = REQUIRE, ADDRESS = BASE, PAIR = C_HIGHADDR, BUS = SPLB, MIN_SIZE = 0x02000
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector, ASSIGNMENT = REQUIRE, ADDRESS = HIGH, PAIR = C_BASEADDR, BUS = SPLB
PARAMETER C_SPLB_CLK_PERIOD_PS = 10000, DT = INTEGER, BUS = SPLB, ASSIGNMENT = REQUIRE, IO_IS = clk_freq
PARAMETER C_SPLB_AWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_DWIDTH = 32, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_P2P = 0, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SPLB, RANGE = (32,64,128)
PARAMETER C_SPLB_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB, RANGE = (0,1)
PARAMETER C_INCLUDE_MDIO = 1, DT = INTEGER, RANGE = (0,1)
PARAMETER C_INCLUDE_GLOBAL_BUFFERS = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (![xstrncmp C_FAMILY  spartan6 ])
PARAMETER C_INCLUDE_INTERNAL_LOOPBACK = 0, DT = INTEGER, RANGE = (0,1)
PARAMETER C_DUPLEX = 1, DT = INTEGER, RANGE = (0,1)
PARAMETER C_TX_PING_PONG = 0, DT = INTEGER, RANGE = (0,1)
PARAMETER C_RX_PING_PONG = 0, DT = INTEGER, RANGE = (0,1)

## Ports
PORT PHY_tx_clk = "", DIR = I, PERMIT = BASE_USER, BUFFER_TYPE = IBUF, DESC = 'Ethernet Transmit Clock Input', IO_IF = ethernet_0, IO_IS = ETH_TXC
PORT PHY_rx_clk = "", DIR = I, PERMIT = BASE_USER, BUFFER_TYPE = IBUF, DESC = 'Ethernet Receive Clock Input', IO_IF = ethernet_0, IO_IS = ETH_RXC
PORT PHY_crs = "", DIR = I, PERMIT = BASE_USER, DESC = 'Ethernet Carrier Sense Input', IO_IF = ethernet_0, IO_IS = ETH_CRS
PORT PHY_dv = "", DIR = I, PERMIT = BASE_USER, DESC = 'Ethernet Receive Data Valid', IO_IF = ethernet_0, IO_IS = ETH_RXDV
PORT PHY_rx_data = "", DIR = I, VEC = [3:0], PERMIT = BASE_USER, DESC = 'Ethernet Receive Data Input', IO_IF = ethernet_0, IO_IS = ETH_RXD
PORT PHY_col = "", DIR = I, PERMIT = BASE_USER, DESC = 'Ethernet Collision Input', IO_IF = ethernet_0, IO_IS = ETH_COL
PORT PHY_rx_er = "", DIR = I, PERMIT = BASE_USER, DESC = 'Ethernet Receive Error Input', IO_IF = ethernet_0, IO_IS = ETH_RXER
PORT PHY_rst_n = "", DIR = O, PERMIT = BASE_USER, DESC = 'Ethernet PHY Reset', IO_IF = ethernet_0, IO_IS = PHY_RESETn
PORT PHY_tx_en = "", DIR = O, PERMIT = BASE_USER, DESC = 'Ethernet Transmit Enable', IO_IF = ethernet_0, IO_IS = ETH_TXEN
PORT PHY_tx_data = "", DIR = O, VEC = [3:0], PERMIT = BASE_USER, DESC = 'Ethernet Transmit Data Output', IO_IF = ethernet_0, IO_IS = ETH_TXD
PORT PHY_MDC = "", DIR = O, PERMIT = BASE_USER, ISVALID = (C_INCLUDE_MDIO==1), ASSIGNMENT = REQUIRE, DESC = 'Ethernet PHY Management Clock', IO_IF = ethernet_0, IO_IS = ETH_MDC
PORT PHY_MDIO_I = "", DIR = I
PORT PHY_MDIO_O = "", DIR = O
PORT PHY_MDIO_T = "", DIR = O
PORT IP2INTC_Irpt = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = EDGE_RISING, INTERRUPT_PRIORITY = HIGH
PORT SPLB_Clk = "", DIR = I, SIGIS = CLK, BUS = SPLB
PORT SPLB_Rst = SPLB_Rst, DIR = I, SIGIS = RST, BUS = SPLB
PORT PLB_ABus = PLB_ABus, DIR = I, VEC = [0:(C_SPLB_AWIDTH-1)], BUS = SPLB
PORT PLB_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB
PORT PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB
PORT PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB
PORT PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB
PORT PLB_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB_MID_WIDTH-1)], BUS = SPLB
PORT PLB_abort = PLB_abort, DIR = I, BUS = SPLB
PORT PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB
PORT PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB
PORT PLB_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB_DWIDTH/8)-1)], BUS = SPLB
PORT PLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB
PORT PLB_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB
PORT PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB
PORT PLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB
PORT PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB
PORT PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB
PORT PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB
PORT PLB_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB
PORT Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB
PORT Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB
PORT Sl_wait = Sl_wait, DIR = O, BUS = SPLB
PORT Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB
PORT Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB
PORT Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB
PORT Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB
PORT Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB
PORT Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB
PORT Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB
PORT Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB
PORT Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT PHY_MDIO = "", DIR = IO, TRI_O = PHY_MDIO_O, TRI_T = PHY_MDIO_T, TRI_I = PHY_MDIO_I, THREE_STATE = TRUE, PERMIT = BASE_USER, ISVALID = (C_INCLUDE_MDIO==1), DESC = 'Ethernet PHY Management Data', IO_IF = ethernet_0, IO_IS = ETH_MDIO

END

FINISH_SINGLE_MPD

START_SINGLE_MPD xps_iic_v2_03_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : xps_iic
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN xps_iic

## Peripheral Options
OPTION STYLE = HDL
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION USAGE_LEVEL = BASE_USER
OPTION DESC = XPS IIC Interface
OPTION LONG_DESC = PLBV46 interface to Philips I2C bus v2.1
OPTION IP_GROUP = Communication Low-Speed:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=PRODUCTION, spartan3=PRODUCTION, spartan3an=PRODUCTION, spartan3a=PRODUCTION, spartan3e=PRODUCTION, spartan3adsp=PRODUCTION, virtex4lx=PRODUCTION, virtex4sx=PRODUCTION, virtex4fx=PRODUCTION, virtex5lx=PRODUCTION, virtex5sx=PRODUCTION, virtex5fx=PRODUCTION, aspartan3e=PRODUCTION, aspartan3a=PRODUCTION, aspartan3adsp=PRODUCTION, qvirtex4lx=PRODUCTION, qvirtex4sx=PRODUCTION, qvirtex4fx=PRODUCTION, qrvirtex4lx=PRODUCTION, qrvirtex4sx=PRODUCTION, qrvirtex4fx=PRODUCTION, spartan6t=PRODUCTION, spartan6=PRODUCTION, spartan6l=PRE_PRODUCTION, qspartan6t=PRODUCTION, qspartan6=PRODUCTION, aspartan6t=PRODUCTION, aspartan6=PRODUCTION, virtex6lx=PRODUCTION, virtex6sx=PRODUCTION, virtex6hx=PRODUCTION, virtex6cx=PRODUCTION, virtex6llx=PRE_PRODUCTION, virtex6lsx=PRE_PRODUCTION, qspartan6l=PRE_PRODUCTION, qrvirtex5=PRE_PRODUCTION, qvirtex6lx=PRE_PRODUCTION, qvirtex6sx=PRE_PRODUCTION, qvirtex6fx=PRE_PRODUCTION, qvirtex6tx=PRE_PRODUCTION)
OPTION RUN_NGCBUILD = FALSE

IO_INTERFACE IO_IF = iic_0, IO_TYPE = XIL_IIC_V1

## Bus Interfaces
BUS_INTERFACE BUS = SPLB, BUS_TYPE = SLAVE, BUS_STD = PLBV46

## Generics for VHDL or Parameters for Verilog
PARAMETER C_IIC_FREQ = 100000, DT = INTEGER, DESC = IIC (SCL) Clock Frequency, IO_IF = iic_0, IO_IS = clk_out_freq
PARAMETER C_TEN_BIT_ADR = 0, DT = INTEGER, RANGE = (0,1), DESC = IIC Address Width, IO_IF = iic_0, IO_IS = slave_respond_mode, VALUES = (0= 7-bit addresses , 1= 10-bit addresses )
PARAMETER C_GPO_WIDTH = 1, DT = INTEGER, RANGE = (1:8), DESC = General Purpose Output Bus Width, IO_IF = iic_0, IO_IS = gpo
PARAMETER C_CLK_FREQ = 25000000, DT = INTEGER, IO_IS = clk_freq, CLK_PORT = SPLB_Clk, CLK_UNIT = HZ
PARAMETER C_SCL_INERTIAL_DELAY = 5, DT = INTEGER, RANGE = (0:255), DESC = SCL intertial delay filter value in clocks, IO_IF = iic_0
PARAMETER C_SDA_INERTIAL_DELAY = 5, DT = INTEGER, RANGE = (0:255), DESC = SDA intertial delay filter value in clocks, IO_IF = iic_0
PARAMETER C_BASEADDR = 0xffffffff, DT = std_logic_vector(0 to 31), BUS = SPLB, ADDRESS = BASE, PAIR = C_HIGHADDR, MIN_SIZE = 0x00200, ASSIGNMENT = REQUIRE
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector(0 to 31), BUS = SPLB, ADDRESS = HIGH, PAIR = C_BASEADDR, ASSIGNMENT = REQUIRE
PARAMETER C_SPLB_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_AWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_DWIDTH = 32, DT = INTEGER, BUS = SPLB, RANGE = (32,64, 128)
PARAMETER C_SPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB, TYPE = NON_HDL, ASSIGNMENT = CONSTANT
PARAMETER C_FAMILY = virtex5, DT = STRING

## Ports
PORT Sda_I = "", DIR = I
PORT Sda_O = "", DIR = O
PORT Sda_T = "", DIR = O
PORT Scl_I = "", DIR = I
PORT Scl_O = "", DIR = O
PORT Scl_T = "", DIR = O
PORT Gpo = "", DIR = O, VEC = [(32-C_GPO_WIDTH):(32-1)], PERMIT = BASE_USER, DESC = ''IIC General Purpose Output'', IO_IF = iic_0, IO_IS = gpo
PORT IIC2INTC_Irpt = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, INTERRUPT_PRIORITY = LOW
PORT SPLB_Clk = "", DIR = I, SIGIS = CLK, BUS = SPLB
PORT SPLB_Rst = SPLB_Rst, DIR = I, SIGIS = RST, BUS = SPLB
PORT PLB_ABus = PLB_ABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB
PORT PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB
PORT PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB
PORT PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB
PORT PLB_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB_MID_WIDTH-1)], BUS = SPLB
PORT PLB_abort = PLB_abort, DIR = I, BUS = SPLB
PORT PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB
PORT PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB
PORT PLB_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB_DWIDTH/8)-1)], BUS = SPLB
PORT PLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB
PORT PLB_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB
PORT PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB
PORT PLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB
PORT PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB
PORT PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB
PORT PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB
PORT PLB_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB
PORT Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB
PORT Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB
PORT Sl_wait = Sl_wait, DIR = O, BUS = SPLB
PORT Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB
PORT Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB
PORT Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB
PORT Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB
PORT Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB
PORT Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB
PORT Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB
PORT Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB
PORT Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sda = "", DIR = IO, THREE_STATE = TRUE, TRI_I = Sda_I, TRI_O = Sda_O, TRI_T = Sda_T, PERMIT = BASE_USER, DESC = ''IIC Serial Data'', IO_IF = iic_0, IO_IS = Serial_Data
PORT Scl = "", DIR = IO, THREE_STATE = TRUE, TRI_I = Scl_I, TRI_O = Scl_O, TRI_T = Scl_T, PERMIT = BASE_USER, DESC = ''IIC Serial Clock'', IO_IF = iic_0, IO_IS = Serial_Clock

END

FINISH_SINGLE_MPD

START_SINGLE_MPD fit_timer_v1_01_b 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : fit_timer
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN fit_timer

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION DESC = Fixed Interval Timer
OPTION LONG_DESC = Generates an interrupt periodically
OPTION IP_GROUP = DMA and Timer:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=PRODUCTION, spartan3=PRODUCTION, spartan3an=PRODUCTION, spartan3a=PRODUCTION, spartan3e=PRODUCTION, spartan3adsp=PRODUCTION, virtex4lx=PRODUCTION, virtex4sx=PRODUCTION, virtex4fx=PRODUCTION, virtex5lx=PRODUCTION, virtex5sx=PRODUCTION, virtex5fx=PRODUCTION, aspartan3e=PRODUCTION, aspartan3a=PRODUCTION, aspartan3adsp=PRODUCTION, qvirtex4lx=PRODUCTION, qvirtex4sx=PRODUCTION, qvirtex4fx=PRODUCTION, qrvirtex4lx=PRODUCTION, qrvirtex4sx=PRODUCTION, qrvirtex4fx=PRODUCTION, spartan6t=PRODUCTION, spartan6=PRODUCTION, spartan6l=PRE_PRODUCTION, qspartan6t=PRODUCTION, qspartan6=PRODUCTION, aspartan6t=PRODUCTION, aspartan6=PRODUCTION, virtex6lx=PRODUCTION, virtex6sx=PRODUCTION, virtex6hx=PRODUCTION, virtex6cx=PRODUCTION, virtex6llx=PRE_PRODUCTION, virtex6lsx=PRE_PRODUCTION, qspartan6l=PRE_PRODUCTION, qrvirtex5=PRE_PRODUCTION, qvirtex6lx=PRE_PRODUCTION, qvirtex6sx=PRE_PRODUCTION, qvirtex6fx=PRE_PRODUCTION, qvirtex6tx=PRE_PRODUCTION)
OPTION HDL = MIXED
OPTION RUN_NGCBUILD = FALSE
OPTION STYLE = HDL


## Bus Interfaces

## Generics for VHDL or Parameters for Verilog
PARAMETER C_FAMILY = virtex2, DT = string
PARAMETER C_NO_CLOCKS = 6216, DT = integer, RANGE = (3:2147483647)
PARAMETER C_INACCURACY = 0, DT = integer, RANGE = (0:999)
PARAMETER C_EXT_RESET_HIGH = 1, DT = integer, IO_IS = polarity, RANGE = (0:1)

## Ports
PORT Clk = "", DIR = I, SIGIS = CLK
PORT Rst = "", DIR = I
PORT Interrupt = "", DIR = O, EDGE = RISING, SIGIS = INTERRUPT

END

FINISH_SINGLE_MPD

START_SINGLE_MPD fsl_v20_v2_11_c 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : fsl_v20
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN fsl_v20

## Peripheral Options
OPTION IPTYPE = BUS
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION BUS_STD = FSL
OPTION RUN_NGCBUILD = TRUE
OPTION MAX_MASTERS = 1
OPTION MAX_SLAVES = 1
OPTION SYSLEVEL_DRC_PROC = check_syslevel_settings
OPTION PLATGEN_SYSLEVEL_UPDATE_PROC = generate_corelevel_ucf
OPTION DESC = Fast Simplex Link (FSL) Bus
OPTION LONG_DESC = Fast Simplex Link (FSL) is a fast uni-directional point to point communication channel
OPTION IP_GROUP = Bus and Bridge:MICROBLAZE
OPTION ARCH_SUPPORT_MAP = (aspartan3=PRODUCTION, spartan3=PRODUCTION, spartan3an=PRODUCTION, spartan3a=PRODUCTION, spartan3e=PRODUCTION, spartan3adsp=PRODUCTION, virtex4lx=PRODUCTION, virtex4sx=PRODUCTION, virtex4fx=PRODUCTION, virtex5lx=PRODUCTION, virtex5sx=PRODUCTION, virtex5fx=PRODUCTION, aspartan3e=PRODUCTION, aspartan3a=PRODUCTION, aspartan3adsp=PRODUCTION, qvirtex4lx=PRODUCTION, qvirtex4sx=PRODUCTION, qvirtex4fx=PRODUCTION, qrvirtex4lx=PRODUCTION, qrvirtex4sx=PRODUCTION, qrvirtex4fx=PRODUCTION, spartan6t=PRODUCTION, spartan6=PRODUCTION, spartan6l=PRE_PRODUCTION, qspartan6t=PRODUCTION, qspartan6=PRODUCTION, aspartan6t=PRODUCTION, aspartan6=PRODUCTION, virtex6lx=PRODUCTION, virtex6sx=PRODUCTION, virtex6hx=PRODUCTION, virtex6cx=PRODUCTION, virtex6llx=PRE_PRODUCTION, virtex6lsx=PRE_PRODUCTION, qspartan6l=PRE_PRODUCTION, qrvirtex5=PRE_PRODUCTION, qvirtex6lx=PRE_PRODUCTION, qvirtex6sx=PRE_PRODUCTION, qvirtex6fx=PRE_PRODUCTION, qvirtex6tx=PRE_PRODUCTION)
OPTION STYLE = HDL


## Bus Interfaces

## Generics for VHDL or Parameters for Verilog
PARAMETER C_EXT_RESET_HIGH = 1, DT = integer, RANGE = (0:1)
PARAMETER C_ASYNC_CLKS = 0, DT = integer, RANGE = (0:1)
PARAMETER C_IMPL_STYLE = 0, DT = integer, RANGE = (0:1)
PARAMETER C_USE_CONTROL = 1, DT = integer, RANGE = (0:1)
PARAMETER C_FSL_DWIDTH = 32, DT = integer
PARAMETER C_FSL_DEPTH = 16, DT = integer, RANGE = (!C_ASYNC_CLKS | C_ASYNC_CLKS*!C_IMPL_STYLE*16 | C_ASYNC_CLKS*C_IMPL_STYLE*512 : !C_ASYNC_CLKS*8192 | C_ASYNC_CLKS*!C_IMPL_STYLE*128 | C_ASYNC_CLKS*C_IMPL_STYLE*8192)
PARAMETER C_READ_CLOCK_PERIOD = 0, DT = integer, CLK_PORT = FSL_S_Clk, CLK_UNIT = PS

## Ports
PORT FSL_Clk = "", DIR = I, SIGIS = CLK
PORT SYS_Rst = "", DIR = I
PORT FSL_Rst = LMB_Rst, DIR = O
PORT FSL_M_Clk = "", DIR = I
PORT FSL_M_Data = FSL_M_Data, DIR = I, VEC = [0:C_FSL_DWIDTH-1]
PORT FSL_M_Control = FSL_M_Control, DIR = I
PORT FSL_M_Write = FSL_M_Write, DIR = I
PORT FSL_M_Full = FSL_M_Full, DIR = O
PORT FSL_S_Clk = "", DIR = I
PORT FSL_S_Data = FSL_S_Data, DIR = O, VEC = [0:C_FSL_DWIDTH-1]
PORT FSL_S_Control = FSL_S_Control, DIR = O
PORT FSL_S_Read = FSL_S_Read, DIR = I
PORT FSL_S_Exists = FSL_S_Exists, DIR = O
PORT FSL_Full = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH
PORT FSL_Has_Data = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH
PORT FSL_Control_IRQ = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH

END

FINISH_SINGLE_MPD

START_SINGLE_MPD xps_ps2_v1_01_b 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : xps_ps2
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN xps_ps2

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION DESC = XPS PS2 Interface
OPTION LONG_DESC = PLBV46 to PS2 Adapter
OPTION IP_GROUP = Communication Low-Speed:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=PRODUCTION, spartan3=PRODUCTION, spartan3an=PRODUCTION, spartan3a=PRODUCTION, spartan3e=PRODUCTION, spartan3adsp=PRODUCTION, virtex4lx=PRODUCTION, virtex4sx=PRODUCTION, virtex4fx=PRODUCTION, virtex5lx=PRODUCTION, virtex5sx=PRODUCTION, virtex5fx=PRODUCTION, aspartan3e=PRODUCTION, aspartan3a=PRODUCTION, aspartan3adsp=PRODUCTION, qvirtex4lx=PRODUCTION, qvirtex4sx=PRODUCTION, qvirtex4fx=PRODUCTION, qrvirtex4lx=PRODUCTION, qrvirtex4sx=PRODUCTION, qrvirtex4fx=PRODUCTION, spartan6t=PRODUCTION, spartan6=PRODUCTION, spartan6l=PRE_PRODUCTION, qspartan6t=PRODUCTION, qspartan6=PRODUCTION, aspartan6t=PRODUCTION, aspartan6=PRODUCTION, virtex6lx=PRODUCTION, virtex6sx=PRODUCTION, virtex6hx=PRODUCTION, virtex6cx=PRODUCTION, virtex6llx=PRE_PRODUCTION, virtex6lsx=PRE_PRODUCTION, qspartan6l=PRE_PRODUCTION, qvirtex6lx=PRE_PRODUCTION, qvirtex6sx=PRE_PRODUCTION, qvirtex6fx=PRE_PRODUCTION, qvirtex6tx=PRE_PRODUCTION)
OPTION RUN_NGCBUILD = FALSE
OPTION STYLE = HDL

IO_INTERFACE IO_IF = ps2_0, IO_TYPE = XIL_PS2_V1

## Bus Interfaces
BUS_INTERFACE BUS = SPLB, BUS_TYPE = SLAVE, BUS_STD = PLBV46

## Generics for VHDL or Parameters for Verilog
PARAMETER C_BASEADDR = 0xffffffff, DT = std_logic_vector(0 to 31), BUS = SPLB, ADDRESS = BASE, PAIR = C_HIGHADDR, MIN_SIZE = 0x200, ASSIGNMENT = REQUIRE
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector(0 to 31), BUS = SPLB, ADDRESS = HIGH, PAIR = C_BASEADDR, ASSIGNMENT = REQUIRE
PARAMETER C_SPLB_AWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_DWIDTH = 32, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_P2P = 0, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_FAMILY = virtex5, DT = STRING
PARAMETER C_IS_DUAL = 0, DT = INTEGER, RANGE = (0,1), DESC = Use Dual PS2, IO_IF = ps2_0, IO_IS = is_dual
PARAMETER C_SPLB_CLK_FREQ_HZ = 100000000, DT = INTEGER, ASSIGNMENT = REQUIRE

## Ports
PORT SPLB_Clk = "", DIR = I, SIGIS = Clk, BUS = SPLB
PORT SPLB_Rst = SPLB_Rst, DIR = I, SIGIS = Rst, BUS = SPLB
PORT PLB_ABus = PLB_ABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB
PORT PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB
PORT PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB
PORT PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB
PORT PLB_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB_MID_WIDTH-1)], BUS = SPLB
PORT PLB_abort = PLB_abort, DIR = I, BUS = SPLB
PORT PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB
PORT PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB
PORT PLB_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB_DWIDTH/8)-1)], BUS = SPLB
PORT PLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB
PORT PLB_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB
PORT PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB
PORT PLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB
PORT PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB
PORT PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB
PORT PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB
PORT PLB_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB
PORT Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB
PORT Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB
PORT Sl_wait = Sl_wait, DIR = O, BUS = SPLB
PORT Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB
PORT Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB
PORT Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB
PORT Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB
PORT Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB
PORT Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB
PORT Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB
PORT Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB
PORT Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT IP2INTC_Irpt_1 = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, INTERRUPT_PRIORITY = MEDIUM
PORT IP2INTC_Irpt_2 = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, INTERRUPT_PRIORITY = MEDIUM, ISVALID = (C_IS_DUAL==1)
PORT PS2_1_DATA_I = "", DIR = I
PORT PS2_1_DATA_O = "", DIR = O
PORT PS2_1_DATA_T = "", DIR = O
PORT PS2_1_CLK_I = "", DIR = I
PORT PS2_1_CLK_O = "", DIR = O
PORT PS2_1_CLK_T = "", DIR = O
PORT PS2_2_DATA_I = "", DIR = I, ISVALID = (C_IS_DUAL==1)
PORT PS2_2_DATA_O = "", DIR = O, ISVALID = (C_IS_DUAL==1)
PORT PS2_2_DATA_T = "", DIR = O, ISVALID = (C_IS_DUAL==1)
PORT PS2_2_CLK_I = "", DIR = I, ISVALID = (C_IS_DUAL==1)
PORT PS2_2_CLK_O = "", DIR = O, ISVALID = (C_IS_DUAL==1)
PORT PS2_2_CLK_T = "", DIR = O, ISVALID = (C_IS_DUAL==1)
PORT PS2_1_DATA = "", DIR = IO, THREE_STATE = TRUE, TRI_I = PS2_1_DATA_I, TRI_O = PS2_1_DATA_O, TRI_T = PS2_1_DATA_T, ENABLE = MULTI, PERMIT = BASE_USER, DESC = 'PS2 1 Data IO', IO_IF = ps2_0, IO_IS = ps2_1_data
PORT PS2_1_CLK = "", DIR = IO, THREE_STATE = TRUE, TRI_I = PS2_1_CLK_I, TRI_O = PS2_1_CLK_O, TRI_T = PS2_1_CLK_T, ENABLE = MULTI, PERMIT = BASE_USER, DESC = 'PS2 1 Clock IO', IO_IF = ps2_0, IO_IS = ps2_1_clk
PORT PS2_2_DATA = "", DIR = IO, THREE_STATE = TRUE, TRI_I = PS2_2_DATA_I, TRI_O = PS2_2_DATA_O, TRI_T = PS2_2_DATA_T, ENABLE = MULTI, PERMIT = BASE_USER, DESC = 'PS2 2 Data IO', IO_IF = ps2_0, IO_IS = ps2_2_data, ISVALID = (C_IS_DUAL==1)
PORT PS2_2_CLK = "", DIR = IO, THREE_STATE = TRUE, TRI_I = PS2_2_CLK_I, TRI_O = PS2_2_CLK_O, TRI_T = PS2_2_CLK_T, ENABLE = MULTI, PERMIT = BASE_USER, DESC = 'PS2 2 Clock IO', IO_IF = ps2_0, IO_IS = ps2_2_clk, ISVALID = (C_IS_DUAL==1)

END

FINISH_SINGLE_MPD

START_SINGLE_MPD mii_to_rmii_v1_01_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : mii_to_rmii
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN mii_to_rmii

## Peripheral Options
OPTION STYLE = HDL
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION DESC = Ethernet PHY MII to Reduced MII
OPTION LONG_DESC = Reduced Media Independent Interface between Ethernet PHYs and Xilinx Ethernet cores such as the OPB 10/100 Ethernet MAC (opb_ethernet)
OPTION IP_GROUP = Communication High-Speed:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=PRODUCTION, spartan3=PRODUCTION, spartan3an=PRODUCTION, spartan3a=PRODUCTION, spartan3e=PRODUCTION, spartan3adsp=PRODUCTION, virtex4lx=PRODUCTION, virtex4sx=PRODUCTION, virtex4fx=PRODUCTION, virtex5lx=PRODUCTION, virtex5sx=PRODUCTION, virtex5fx=PRODUCTION, aspartan3e=PRODUCTION, aspartan3a=PRODUCTION, aspartan3adsp=PRODUCTION, qvirtex4lx=PRODUCTION, qvirtex4sx=PRODUCTION, qvirtex4fx=PRODUCTION, qrvirtex4lx=PRODUCTION, qrvirtex4sx=PRODUCTION, qrvirtex4fx=PRODUCTION, spartan6t=PRODUCTION, spartan6=PRODUCTION, spartan6l=PRE_PRODUCTION, qspartan6t=PRODUCTION, qspartan6=PRODUCTION, aspartan6t=PRODUCTION, aspartan6=PRODUCTION, virtex6lx=PRODUCTION, virtex6sx=PRODUCTION, virtex6hx=PRODUCTION, virtex6cx=PRODUCTION, virtex6llx=PRE_PRODUCTION, virtex6lsx=PRE_PRODUCTION, qspartan6l=PRE_PRODUCTION, qrvirtex5=PRE_PRODUCTION, qvirtex6lx=PRE_PRODUCTION, qvirtex6sx=PRE_PRODUCTION, qvirtex6fx=PRE_PRODUCTION, qvirtex6tx=PRE_PRODUCTION)
OPTION RUN_NGCBUILD = FALSE


## Bus Interfaces

## Generics for VHDL or Parameters for Verilog
PARAMETER C_FIXED_SPEED = 1, DT = std_logic, RANGE = (0:1)
PARAMETER C_SPEED_100 = 1, DT = std_logic, RANGE = (0:1)

## Ports
PORT Rst_n = "", DIR = I, SIGIS = RST
PORT Ref_Clk = "", DIR = I, SIGIS = CLK
PORT Mac2Rmii_tx_en = "", DIR = I
PORT Mac2Rmii_txd = "", DIR = I, VEC = [3:0], ENDIAN = LITTLE
PORT Mac2Rmii_tx_er = "", DIR = I
PORT Rmii2Mac_tx_clk = "", DIR = O
PORT Rmii2Mac_rx_clk = "", DIR = O
PORT Rmii2Mac_col = "", DIR = O
PORT Rmii2Mac_crs = "", DIR = O
PORT Rmii2Mac_rx_dv = "", DIR = O
PORT Rmii2Mac_rx_er = "", DIR = O
PORT Rmii2Mac_rxd = "", DIR = O, VEC = [3:0], ENDIAN = LITTLE
PORT Phy2Rmii_crs_dv = "", DIR = I
PORT Phy2Rmii_rx_er = "", DIR = I
PORT Phy2Rmii_rxd = "", DIR = I, VEC = [1:0], ENDIAN = LITTLE
PORT Rmii2Phy_txd = "", DIR = O, VEC = [1:0], ENDIAN = LITTLE
PORT Rmii2Phy_tx_en = "", DIR = O

END

FINISH_SINGLE_MPD

START_SINGLE_MPD xps_intc_v2_01_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : xps_intc
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN xps_intc

## Peripheral Options
OPTION RUN_NGCBUILD = TRUE
OPTION IMP_NETLIST = TRUE
OPTION STYLE = HDL
OPTION HDL = VHDL
OPTION IPTYPE = PERIPHERAL
OPTION SPECIAL = INTERRUPT_CONTROLLER
OPTION USAGE_LEVEL = BASE_USER
OPTION SYSLEVEL_DRC_PROC = syslevel_check_interrupt_sensitivity
OPTION DESC = XPS Interrupt Controller
OPTION LONG_DESC = intc core attached to the PLBV46
OPTION IP_GROUP = 'Clock, Reset and Interrupt:MICROBLAZE:PPC'
OPTION ARCH_SUPPORT_MAP = (aspartan3=PRODUCTION, spartan3=PRODUCTION, spartan3an=PRODUCTION, spartan3a=PRODUCTION, spartan3e=PRODUCTION, spartan3adsp=PRODUCTION, virtex4lx=PRODUCTION, virtex4sx=PRODUCTION, virtex4fx=PRODUCTION, virtex5lx=PRODUCTION, virtex5sx=PRODUCTION, virtex5fx=PRODUCTION, aspartan3e=PRODUCTION, aspartan3a=PRODUCTION, aspartan3adsp=PRODUCTION, qvirtex4lx=PRODUCTION, qvirtex4sx=PRODUCTION, qvirtex4fx=PRODUCTION, qrvirtex4lx=PRODUCTION, qrvirtex4sx=PRODUCTION, qrvirtex4fx=PRODUCTION, spartan6t=PRODUCTION, spartan6=PRODUCTION, spartan6l=PRE_PRODUCTION, qspartan6t=PRODUCTION, qspartan6=PRODUCTION, aspartan6t=PRODUCTION, aspartan6=PRODUCTION, virtex6lx=PRODUCTION, virtex6sx=PRODUCTION, virtex6hx=PRODUCTION, virtex6cx=PRODUCTION, virtex6llx=PRE_PRODUCTION, virtex6lsx=PRE_PRODUCTION, qspartan6l=PRE_PRODUCTION, qrvirtex5=PRE_PRODUCTION, qvirtex6lx=PRE_PRODUCTION, qvirtex6sx=PRE_PRODUCTION, qvirtex6fx=PRE_PRODUCTION, qvirtex6tx=PRE_PRODUCTION)


## Bus Interfaces
BUS_INTERFACE BUS = SPLB, BUS_TYPE = SLAVE, BUS_STD = PLBV46

## Generics for VHDL or Parameters for Verilog
PARAMETER C_FAMILY = virtex5, DT = STRING
PARAMETER C_BASEADDR = 0xffffffff, DT = std_logic_vector(0 to 31), BUS = SPLB, ADDRESS = BASE, PAIR = C_HIGHADDR, MIN_SIZE = 0x20, ASSIGNMENT = REQUIRE
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector(0 to 31), BUS = SPLB, ADDRESS = HIGH, PAIR = C_BASEADDR, ASSIGNMENT = REQUIRE
PARAMETER C_SPLB_AWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_DWIDTH = 32, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_P2P = 0, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_NUM_INTR_INPUTS = 2, DT = INTEGER, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_num_intr_inputs, RANGE = (1:C_SPLB_NATIVE_DWIDTH)
PARAMETER C_KIND_OF_INTR = 0xffffffff, DT = std_logic_vector(31 downto 0), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_kind_of_intr
PARAMETER C_KIND_OF_EDGE = 0xffffffff, DT = std_logic_vector(31 downto 0), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_kind_of_edge
PARAMETER C_KIND_OF_LVL = 0xffffffff, DT = std_logic_vector(31 downto 0), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_kind_of_lvl
PARAMETER C_HAS_IPR = 1, DT = INTEGER, PERMIT = BASE_USER, RANGE = (0,1), DESC = Interrupt Pending Register
PARAMETER C_HAS_SIE = 1, DT = INTEGER, PERMIT = BASE_USER, RANGE = (0,1), DESC = Set Interrupt Enables
PARAMETER C_HAS_CIE = 1, DT = INTEGER, PERMIT = BASE_USER, RANGE = (0,1), DESC = Clear Interrupt Enables
PARAMETER C_HAS_IVR = 1, DT = INTEGER, PERMIT = BASE_USER, RANGE = (0,1), DESC = Interrupt Vector Register
PARAMETER C_IRQ_IS_LEVEL = 1, DT = INTEGER, PERMIT = BASE_USER, RANGE = (0,1), VALUES = (0 = Edge, 1 = Level )
PARAMETER C_IRQ_ACTIVE = 1, DT = std_logic, RANGE = (0,1), VALUES = (0 = Falling/Low, 1 = Rising/High )

## Ports
PORT SPLB_Clk = "", DIR = I, SIGIS = Clk, BUS = SPLB
PORT SPLB_Rst = SPLB_Rst, DIR = I, SIGIS = Rst, BUS = SPLB
PORT PLB_ABus = PLB_ABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB
PORT PLB_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB_MID_WIDTH-1)], BUS = SPLB
PORT PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB
PORT PLB_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB_DWIDTH/8)-1)], BUS = SPLB
PORT PLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB
PORT PLB_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB
PORT PLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT PLB_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB
PORT PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB
PORT PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB
PORT PLB_abort = PLB_abort, DIR = I, BUS = SPLB
PORT PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB
PORT PLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB
PORT PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB
PORT PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB
PORT PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB
PORT PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB
PORT PLB_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB
PORT Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB
PORT Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB
PORT Sl_wait = Sl_wait, DIR = O, BUS = SPLB
PORT Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB
PORT Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB
PORT Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB
PORT Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB
PORT Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB
PORT Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB
PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB
PORT Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB
PORT Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Intr = "", DIR = I, VEC = [(C_NUM_INTR_INPUTS-1):0], SIGIS = INTERRUPT, ENDIAN = LITTLE
PORT Irq = "", DIR = O, SIGIS = INTERRUPT

END

FINISH_SINGLE_MPD

START_SINGLE_MPD xps_timer_v1_02_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : xps_timer
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN xps_timer

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION USAGE_LEVEL = BASE_USER
OPTION DESC = XPS Timer/Counter
OPTION LONG_DESC = Timer counter with PLBV46 interface
OPTION IP_GROUP = DMA and Timer:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=PRODUCTION, spartan3=PRODUCTION, spartan3an=PRODUCTION, spartan3a=PRODUCTION, spartan3e=PRODUCTION, spartan3adsp=PRODUCTION, virtex4lx=PRODUCTION, virtex4sx=PRODUCTION, virtex4fx=PRODUCTION, virtex5lx=PRODUCTION, virtex5sx=PRODUCTION, virtex5fx=PRODUCTION, aspartan3e=PRODUCTION, aspartan3a=PRODUCTION, aspartan3adsp=PRODUCTION, qvirtex4lx=PRODUCTION, qvirtex4sx=PRODUCTION, qvirtex4fx=PRODUCTION, qrvirtex4lx=PRODUCTION, qrvirtex4sx=PRODUCTION, qrvirtex4fx=PRODUCTION, spartan6t=PRODUCTION, spartan6=PRODUCTION, spartan6l=PRE_PRODUCTION, qspartan6t=PRODUCTION, qspartan6=PRODUCTION, aspartan6t=PRODUCTION, aspartan6=PRODUCTION, virtex6lx=PRODUCTION, virtex6sx=PRODUCTION, virtex6hx=PRODUCTION, virtex6cx=PRODUCTION, virtex6llx=PRE_PRODUCTION, virtex6lsx=PRE_PRODUCTION, qspartan6l=PRE_PRODUCTION, qrvirtex5=PRE_PRODUCTION, qvirtex6lx=PRE_PRODUCTION, qvirtex6sx=PRE_PRODUCTION, qvirtex6fx=PRE_PRODUCTION, qvirtex6tx=PRE_PRODUCTION)
OPTION RUN_NGCBUILD = FALSE
OPTION STYLE = HDL


## Bus Interfaces
BUS_INTERFACE BUS = SPLB, BUS_TYPE = SLAVE, BUS_STD = PLBV46

## Generics for VHDL or Parameters for Verilog
PARAMETER C_FAMILY = virtex5, DT = STRING
PARAMETER C_COUNT_WIDTH = 32, DT = INTEGER, RANGE = (8:32), PERMIT = BASE_USER, DESC = Counter Bit Width
PARAMETER C_ONE_TIMER_ONLY = 0, DT = INTEGER, RANGE = (0,1), PERMIT = BASE_USER, DESC = Timer Mode
PARAMETER C_TRIG0_ASSERT = 1, DT = std_logic, RANGE = (0,1)
PARAMETER C_TRIG1_ASSERT = 1, DT = std_logic, RANGE = (0,1)
PARAMETER C_GEN0_ASSERT = 1, DT = std_logic, RANGE = (0,1)
PARAMETER C_GEN1_ASSERT = 1, DT = std_logic, RANGE = (0,1)
PARAMETER C_BASEADDR = 0xffffffff, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_HIGHADDR, MIN_SIZE = 0x100
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_BASEADDR
PARAMETER C_SPLB_AWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_DWIDTH = 32, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_P2P = 0, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_MID_WIDTH = 3, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_NUM_MASTERS = 8, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT

## Ports
PORT CaptureTrig0 = "", DIR = I, DESC = 'Capture Trig 0'
PORT CaptureTrig1 = "", DIR = I, DESC = 'Capture Trig 1'
PORT GenerateOut0 = "", DIR = O, DESC = 'Generate Out 0'
PORT GenerateOut1 = "", DIR = O, DESC = 'Generate Out 1'
PORT PWM0 = "", DIR = O, DESC = 'Pulse Width Modulation 0'
PORT Interrupt = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = EDGE_RISING, INTERRUPT_PRIORITY = HIGH
PORT Freeze = "", DIR = I
PORT SPLB_Clk = "", DIR = I, SIGIS = Clk, BUS = SPLB
PORT SPLB_Rst = SPLB_Rst, DIR = I, SIGIS = Rst, BUS = SPLB
PORT PLB_ABus = PLB_ABus, DIR = I, VEC = [0:C_SPLB_AWIDTH-1], BUS = SPLB
PORT PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB
PORT PLB_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB_MID_WIDTH-1)], BUS = SPLB
PORT PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB
PORT PLB_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB_DWIDTH/8)-1)], BUS = SPLB
PORT PLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB
PORT PLB_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB
PORT PLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB
PORT Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB
PORT Sl_wait = Sl_wait, DIR = O, BUS = SPLB
PORT Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB
PORT Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB
PORT Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB
PORT Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB
PORT Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB
PORT Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT PLB_UABus = PLB_UABus, DIR = I, VEC = [0:C_SPLB_AWIDTH-1], BUS = SPLB
PORT PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB
PORT PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB
PORT PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB
PORT PLB_abort = PLB_abort, DIR = I, BUS = SPLB
PORT PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB
PORT PLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB
PORT PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB
PORT PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB
PORT PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB
PORT PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB
PORT PLB_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB
PORT Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB
PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB
PORT Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB
PORT Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB

END

FINISH_SINGLE_MPD

START_SINGLE_MPD xps_hwicap_v5_00_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : xps_hwicap
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN xps_hwicap

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION DESC = FPGA Internal Configuration Access Port
OPTION LONG_DESC = PLBV46 interface to read and write the FPGA configuration memory through the Internal Configuration Access Port (ICAP) at run time
OPTION IP_GROUP = FPGA Reconfiguration:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (virtex4lx=PRODUCTION, virtex4sx=PRODUCTION, virtex4fx=PRODUCTION, virtex5lx=PRODUCTION, virtex5sx=PRODUCTION, virtex5fx=PRODUCTION, qvirtex4lx=PRODUCTION, qvirtex4sx=PRODUCTION, qvirtex4fx=PRODUCTION, qrvirtex4lx=PRODUCTION, qrvirtex4sx=PRODUCTION, qrvirtex4fx=PRODUCTION, spartan6t=PRODUCTION, spartan6=PRODUCTION, spartan6l=PRE_PRODUCTION, qspartan6t=PRODUCTION, qspartan6=PRODUCTION, aspartan6t=PRODUCTION, aspartan6=PRODUCTION, virtex6lx=PRODUCTION, virtex6sx=PRODUCTION, virtex6hx=PRODUCTION, virtex6cx=PRODUCTION, virtex6llx=PRE_PRODUCTION, virtex6lsx=PRE_PRODUCTION, qspartan6l=PRE_PRODUCTION, qrvirtex5=PRE_PRODUCTION, qvirtex6lx=PRE_PRODUCTION, qvirtex6sx=PRE_PRODUCTION, qvirtex6fx=PRE_PRODUCTION, qvirtex6tx=PRE_PRODUCTION)
OPTION RUN_NGCBUILD = FALSE
OPTION STYLE = HDL


## Bus Interfaces
BUS_INTERFACE BUS = SPLB, BUS_TYPE = SLAVE, BUS_STD = PLBV46

## Generics for VHDL or Parameters for Verilog
PARAMETER C_BASEADDR = 0xffffffff, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_HIGHADDR, MIN_SIZE = 0x1000, ASSIGNMENT = REQUIRE
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_BASEADDR, ASSIGNMENT = REQUIRE
PARAMETER C_SPLB_DWIDTH = 32, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_AWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_P2P = 0, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_MID_WIDTH = 3, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_NUM_MASTERS = 8, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_WRITE_FIFO_DEPTH = 64, DT = INTEGER, RANGE = (64,128,256,512,1024)
PARAMETER C_READ_FIFO_DEPTH = 128, DT = INTEGER, RANGE = (128,256)
PARAMETER C_SIMULATION = 2, DT = INTEGER, RANGE = (1,2)
PARAMETER C_BRAM_SRL_FIFO_TYPE = 1, DT = INTEGER, RANGE = (0,1)
PARAMETER C_FAMILY = virtex5, DT = STRING, IPLEVEL_UPDATE_VALUE_PROC = update_cfamily

## Ports
PORT ICAP_Clk = "", DIR = I, SIGIS = Clk
PORT SPLB_Clk = "", DIR = I, SIGIS = Clk, BUS = SPLB
PORT SPLB_Rst = SPLB_Rst, DIR = I, SIGIS = Rst, BUS = SPLB
PORT PLB_ABus = PLB_ABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB
PORT PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB
PORT PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB
PORT PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB
PORT PLB_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB_MID_WIDTH-1)], BUS = SPLB
PORT PLB_abort = PLB_abort, DIR = I, BUS = SPLB
PORT PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB
PORT PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB
PORT PLB_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB_DWIDTH/8)-1)], BUS = SPLB
PORT PLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB
PORT PLB_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB
PORT PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB
PORT PLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB
PORT PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB
PORT PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB
PORT PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB
PORT PLB_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB
PORT Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB
PORT Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB
PORT Sl_wait = Sl_wait, DIR = O, BUS = SPLB
PORT Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB
PORT Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB
PORT Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB
PORT Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB
PORT Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB
PORT Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB
PORT Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB
PORT Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB
PORT Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT IP2INTC_Irpt = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH

END

FINISH_SINGLE_MPD

START_SINGLE_MPD xps_can_v3_01_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : xps_can
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN xps_can

## Peripheral Options
OPTION RUN_NGCBUILD = TRUE
OPTION PAY_CORE = xps_can@2010.04
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION PLATGEN_SYSLEVEL_UPDATE_PROC = generate_corelevel_ucf
OPTION DESC = XPS CAN Controller
OPTION LONG_DESC = Controller Area Network for PLBV46
OPTION IP_GROUP = Communication High-Speed:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=PRODUCTION, spartan3=PRODUCTION, spartan3an=PRODUCTION, spartan3a=PRODUCTION, spartan3e=PRODUCTION, spartan3adsp=PRODUCTION, virtex4lx=PRODUCTION, virtex4sx=PRODUCTION, virtex4fx=PRODUCTION, virtex5lx=PRODUCTION, virtex5sx=PRODUCTION, virtex5fx=PRODUCTION, aspartan3e=PRODUCTION, aspartan3a=PRODUCTION, aspartan3adsp=PRODUCTION, qvirtex4lx=PRODUCTION, qvirtex4sx=PRODUCTION, qvirtex4fx=PRODUCTION, qrvirtex4lx=PRODUCTION, qrvirtex4sx=PRODUCTION, qrvirtex4fx=PRODUCTION, spartan6t=PRODUCTION, spartan6=PRODUCTION, spartan6l=PRE_PRODUCTION, qspartan6t=PRODUCTION, qspartan6=PRODUCTION, aspartan6t=PRODUCTION, aspartan6=PRODUCTION, virtex6lx=PRODUCTION, virtex6sx=PRODUCTION, virtex6hx=PRODUCTION, virtex6cx=PRODUCTION, virtex6llx=PRE_PRODUCTION, virtex6lsx=PRE_PRODUCTION, qspartan6l=PRE_PRODUCTION, qvirtex6lx=PRE_PRODUCTION, qvirtex6sx=PRE_PRODUCTION, qvirtex6fx=PRE_PRODUCTION, qvirtex6tx=PRE_PRODUCTION)
OPTION STYLE = HDL


## Bus Interfaces
BUS_INTERFACE BUS = SPLB, BUS_TYPE = SLAVE, BUS_STD = PLBV46

## Generics for VHDL or Parameters for Verilog
PARAMETER C_CAN_RX_DPTH = 2, DT = INTEGER, RANGE = (2,4,8,16,32,64)
PARAMETER C_CAN_TX_DPTH = 2, DT = INTEGER, RANGE = (2,4,8,16,32,64)
PARAMETER C_CAN_NUM_ACF = 1, DT = INTEGER, RANGE = (0,1,2,3,4)
PARAMETER C_BASEADDR = 0xffffffff, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_HIGHADDR
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_BASEADDR
PARAMETER C_SPLB_AWIDTH = 32, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_DWIDTH = 32, DT = INTEGER, BUS = SPLB
PARAMETER C_SIPIF_DWIDTH = 32, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_P2P = 0, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB
PARAMETER C_FAMILY = spartan3, DT = STRING

## Ports
PORT CAN_CLK = "", DIR = I, SIGIS = Clk
PORT CAN_PHY_RX = "", DIR = I
PORT CAN_PHY_TX = "", DIR = O
PORT IP2Bus_IntrEvent = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = EDGE_RISING
PORT SPLB_Clk = "", DIR = I, SIGIS = Clk, BUS = SPLB
PORT SPLB_Rst = PLB_Rst, DIR = I, SIGIS = Rst, BUS = SPLB
PORT PLB_ABus = PLB_ABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB
PORT PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB
PORT PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB
PORT PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB
PORT PLB_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB_MID_WIDTH-1)], BUS = SPLB
PORT PLB_abort = PLB_abort, DIR = I, BUS = SPLB
PORT PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB
PORT PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB
PORT PLB_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB_DWIDTH/8)-1)], BUS = SPLB
PORT PLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB
PORT PLB_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB
PORT PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB
PORT PLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB
PORT PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB
PORT PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB
PORT PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB
PORT PLB_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB
PORT Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB
PORT Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB
PORT Sl_wait = Sl_wait, DIR = O, BUS = SPLB
PORT Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB
PORT Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB
PORT Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB
PORT Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB
PORT Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB
PORT Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB
PORT Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB
PORT Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB
PORT Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB

END

FINISH_SINGLE_MPD

START_SINGLE_MPD microblaze_v7_30_b 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : microblaze
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN microblaze

## Peripheral Options
OPTION IPTYPE = PROCESSOR
OPTION IMP_NETLIST = TRUE
OPTION STYLE = HDL
OPTION HDL = VHDL
OPTION IPLEVEL_DRC_PROC = check_iplevel_settings
OPTION SYSLEVEL_DRC_PROC = check_syslevel_settings
OPTION SPECIAL = MICROBLAZE
OPTION DESC = MicroBlaze
OPTION LONG_DESC = The MicroBlaze 32 bit soft processor
OPTION IP_GROUP = Processor:MICROBLAZE
OPTION ARCH_SUPPORT_MAP = (aspartan3=PRODUCTION, spartan3=PRODUCTION, spartan3an=PRODUCTION, spartan3a=PRODUCTION, spartan3e=PRODUCTION, spartan3adsp=PRODUCTION, virtex4lx=PRODUCTION, virtex4sx=PRODUCTION, virtex4fx=PRODUCTION, virtex5lx=PRODUCTION, virtex5sx=PRODUCTION, virtex5fx=PRODUCTION, aspartan3e=PRODUCTION, aspartan3a=PRODUCTION, aspartan3adsp=PRODUCTION, qvirtex4lx=PRODUCTION, qvirtex4sx=PRODUCTION, qvirtex4fx=PRODUCTION, qrvirtex4lx=PRODUCTION, qrvirtex4sx=PRODUCTION, qrvirtex4fx=PRODUCTION, spartan6t=PRODUCTION, spartan6=PRODUCTION, spartan6l=PRE_PRODUCTION, qspartan6t=PRODUCTION, qspartan6=PRODUCTION, aspartan6t=PRODUCTION, aspartan6=PRODUCTION, virtex6lx=PRODUCTION, virtex6sx=PRODUCTION, virtex6hx=PRODUCTION, virtex6cx=PRODUCTION, virtex6llx=PRE_PRODUCTION, virtex6lsx=PRE_PRODUCTION, qspartan6l=PRE_PRODUCTION, qrvirtex5=PRE_PRODUCTION, qvirtex6lx=PRE_PRODUCTION, qvirtex6sx=PRE_PRODUCTION, qvirtex6fx=PRE_PRODUCTION, qvirtex6tx=PRE_PRODUCTION)
OPTION RUN_NGCBUILD = FALSE


## Bus Interfaces
BUS_INTERFACE BUS = DLMB, BUS_STD = LMB, BUS_TYPE = MASTER, SHARES_ADDR = DPLB
BUS_INTERFACE BUS = ILMB, BUS_STD = LMB, BUS_TYPE = MASTER, SHARES_ADDR = IPLB
BUS_INTERFACE BUS = DPLB, BUS_STD = PLBV46, BUS_TYPE = MASTER, SHARES_ADDR = DLMB, ISVALID = (C_INTERCONNECT == 1)
BUS_INTERFACE BUS = IPLB, BUS_STD = PLBV46, BUS_TYPE = MASTER, SHARES_ADDR = ILMB, ISVALID = (C_INTERCONNECT == 1)
BUS_INTERFACE BUS = SFSL0, BUS_STD = FSL, BUS_TYPE = SLAVE, EXCLUDE_BUSIF = DRFSL0, ISVALID = (C_FSL_LINKS >= 1)
BUS_INTERFACE BUS = MFSL0, BUS_STD = FSL, BUS_TYPE = MASTER, EXCLUDE_BUSIF = DWFSL0, ISVALID = (C_FSL_LINKS >= 1)
BUS_INTERFACE BUS = SFSL1, BUS_STD = FSL, BUS_TYPE = SLAVE, EXCLUDE_BUSIF = DRFSL1, ISVALID = (C_FSL_LINKS >= 2)
BUS_INTERFACE BUS = MFSL1, BUS_STD = FSL, BUS_TYPE = MASTER, EXCLUDE_BUSIF = DWFSL1, ISVALID = (C_FSL_LINKS >= 2)
BUS_INTERFACE BUS = SFSL2, BUS_STD = FSL, BUS_TYPE = SLAVE, EXCLUDE_BUSIF = DRFSL2, ISVALID = (C_FSL_LINKS >= 3)
BUS_INTERFACE BUS = MFSL2, BUS_STD = FSL, BUS_TYPE = MASTER, EXCLUDE_BUSIF = DWFSL2, ISVALID = (C_FSL_LINKS >= 3)
BUS_INTERFACE BUS = SFSL3, BUS_STD = FSL, BUS_TYPE = SLAVE, EXCLUDE_BUSIF = DRFSL3, ISVALID = (C_FSL_LINKS >= 4)
BUS_INTERFACE BUS = MFSL3, BUS_STD = FSL, BUS_TYPE = MASTER, EXCLUDE_BUSIF = DWFSL3, ISVALID = (C_FSL_LINKS >= 4)
BUS_INTERFACE BUS = SFSL4, BUS_STD = FSL, BUS_TYPE = SLAVE, EXCLUDE_BUSIF = DRFSL4, ISVALID = (C_FSL_LINKS >= 5)
BUS_INTERFACE BUS = MFSL4, BUS_STD = FSL, BUS_TYPE = MASTER, EXCLUDE_BUSIF = DWFSL4, ISVALID = (C_FSL_LINKS >= 5)
BUS_INTERFACE BUS = SFSL5, BUS_STD = FSL, BUS_TYPE = SLAVE, EXCLUDE_BUSIF = DRFSL5, ISVALID = (C_FSL_LINKS >= 6)
BUS_INTERFACE BUS = MFSL5, BUS_STD = FSL, BUS_TYPE = MASTER, EXCLUDE_BUSIF = DWFSL5, ISVALID = (C_FSL_LINKS >= 6)
BUS_INTERFACE BUS = SFSL6, BUS_STD = FSL, BUS_TYPE = SLAVE, EXCLUDE_BUSIF = DRFSL6, ISVALID = (C_FSL_LINKS >= 7)
BUS_INTERFACE BUS = MFSL6, BUS_STD = FSL, BUS_TYPE = MASTER, EXCLUDE_BUSIF = DWFSL6, ISVALID = (C_FSL_LINKS >= 7)
BUS_INTERFACE BUS = SFSL7, BUS_STD = FSL, BUS_TYPE = SLAVE, EXCLUDE_BUSIF = DRFSL7, ISVALID = (C_FSL_LINKS >= 8)
BUS_INTERFACE BUS = MFSL7, BUS_STD = FSL, BUS_TYPE = MASTER, EXCLUDE_BUSIF = DWFSL7, ISVALID = (C_FSL_LINKS >= 8)
BUS_INTERFACE BUS = SFSL8, BUS_STD = FSL, BUS_TYPE = SLAVE, EXCLUDE_BUSIF = DRFSL8, ISVALID = (C_FSL_LINKS >= 9)
BUS_INTERFACE BUS = MFSL8, BUS_STD = FSL, BUS_TYPE = MASTER, EXCLUDE_BUSIF = DWFSL8, ISVALID = (C_FSL_LINKS >= 9)
BUS_INTERFACE BUS = SFSL9, BUS_STD = FSL, BUS_TYPE = SLAVE, EXCLUDE_BUSIF = DRFSL9, ISVALID = (C_FSL_LINKS >= 10)
BUS_INTERFACE BUS = MFSL9, BUS_STD = FSL, BUS_TYPE = MASTER, EXCLUDE_BUSIF = DWFSL9, ISVALID = (C_FSL_LINKS >= 10)
BUS_INTERFACE BUS = SFSL10, BUS_STD = FSL, BUS_TYPE = SLAVE, EXCLUDE_BUSIF = DRFSL10, ISVALID = (C_FSL_LINKS >= 11)
BUS_INTERFACE BUS = MFSL10, BUS_STD = FSL, BUS_TYPE = MASTER, EXCLUDE_BUSIF = DWFSL10, ISVALID = (C_FSL_LINKS >= 11)
BUS_INTERFACE BUS = SFSL11, BUS_STD = FSL, BUS_TYPE = SLAVE, EXCLUDE_BUSIF = DRFSL11, ISVALID = (C_FSL_LINKS >= 12)
BUS_INTERFACE BUS = MFSL11, BUS_STD = FSL, BUS_TYPE = MASTER, EXCLUDE_BUSIF = DWFSL11, ISVALID = (C_FSL_LINKS >= 12)
BUS_INTERFACE BUS = SFSL12, BUS_STD = FSL, BUS_TYPE = SLAVE, EXCLUDE_BUSIF = DRFSL12, ISVALID = (C_FSL_LINKS >= 13)
BUS_INTERFACE BUS = MFSL12, BUS_STD = FSL, BUS_TYPE = MASTER, EXCLUDE_BUSIF = DWFSL12, ISVALID = (C_FSL_LINKS >= 13)
BUS_INTERFACE BUS = SFSL13, BUS_STD = FSL, BUS_TYPE = SLAVE, EXCLUDE_BUSIF = DRFSL13, ISVALID = (C_FSL_LINKS >= 14)
BUS_INTERFACE BUS = MFSL13, BUS_STD = FSL, BUS_TYPE = MASTER, EXCLUDE_BUSIF = DWFSL13, ISVALID = (C_FSL_LINKS >= 14)
BUS_INTERFACE BUS = SFSL14, BUS_STD = FSL, BUS_TYPE = SLAVE, EXCLUDE_BUSIF = DRFSL14, ISVALID = (C_FSL_LINKS >= 15)
BUS_INTERFACE BUS = MFSL14, BUS_STD = FSL, BUS_TYPE = MASTER, EXCLUDE_BUSIF = DWFSL14, ISVALID = (C_FSL_LINKS >= 15)
BUS_INTERFACE BUS = SFSL15, BUS_STD = FSL, BUS_TYPE = SLAVE, EXCLUDE_BUSIF = DRFSL15, ISVALID = (C_FSL_LINKS >= 16)
BUS_INTERFACE BUS = MFSL15, BUS_STD = FSL, BUS_TYPE = MASTER, EXCLUDE_BUSIF = DWFSL15, ISVALID = (C_FSL_LINKS >= 16)
BUS_INTERFACE BUS = DRFSL0, BUS_STD = XIL_DRFSL, BUS_TYPE = TARGET, EXCLUDE_BUSIF = SFSL0, ISVALID = (C_FSL_LINKS >= 1)
BUS_INTERFACE BUS = DWFSL0, BUS_STD = XIL_DWFSL, BUS_TYPE = INITIATOR, EXCLUDE_BUSIF = MFSL0, ISVALID = (C_FSL_LINKS >= 1)
BUS_INTERFACE BUS = DRFSL1, BUS_STD = XIL_DRFSL, BUS_TYPE = TARGET, EXCLUDE_BUSIF = SFSL1, ISVALID = (C_FSL_LINKS >= 2)
BUS_INTERFACE BUS = DWFSL1, BUS_STD = XIL_DWFSL, BUS_TYPE = INITIATOR, EXCLUDE_BUSIF = MFSL1, ISVALID = (C_FSL_LINKS >= 2)
BUS_INTERFACE BUS = DRFSL2, BUS_STD = XIL_DRFSL, BUS_TYPE = TARGET, EXCLUDE_BUSIF = SFSL2, ISVALID = (C_FSL_LINKS >= 3)
BUS_INTERFACE BUS = DWFSL2, BUS_STD = XIL_DWFSL, BUS_TYPE = INITIATOR, EXCLUDE_BUSIF = MFSL2, ISVALID = (C_FSL_LINKS >= 3)
BUS_INTERFACE BUS = DRFSL3, BUS_STD = XIL_DRFSL, BUS_TYPE = TARGET, EXCLUDE_BUSIF = SFSL3, ISVALID = (C_FSL_LINKS >= 4)
BUS_INTERFACE BUS = DWFSL3, BUS_STD = XIL_DWFSL, BUS_TYPE = INITIATOR, EXCLUDE_BUSIF = MFSL3, ISVALID = (C_FSL_LINKS >= 4)
BUS_INTERFACE BUS = DRFSL4, BUS_STD = XIL_DRFSL, BUS_TYPE = TARGET, EXCLUDE_BUSIF = SFSL4, ISVALID = (C_FSL_LINKS >= 5)
BUS_INTERFACE BUS = DWFSL4, BUS_STD = XIL_DWFSL, BUS_TYPE = INITIATOR, EXCLUDE_BUSIF = MFSL4, ISVALID = (C_FSL_LINKS >= 5)
BUS_INTERFACE BUS = DRFSL5, BUS_STD = XIL_DRFSL, BUS_TYPE = TARGET, EXCLUDE_BUSIF = SFSL5, ISVALID = (C_FSL_LINKS >= 6)
BUS_INTERFACE BUS = DWFSL5, BUS_STD = XIL_DWFSL, BUS_TYPE = INITIATOR, EXCLUDE_BUSIF = MFSL5, ISVALID = (C_FSL_LINKS >= 6)
BUS_INTERFACE BUS = DRFSL6, BUS_STD = XIL_DRFSL, BUS_TYPE = TARGET, EXCLUDE_BUSIF = SFSL6, ISVALID = (C_FSL_LINKS >= 7)
BUS_INTERFACE BUS = DWFSL6, BUS_STD = XIL_DWFSL, BUS_TYPE = INITIATOR, EXCLUDE_BUSIF = MFSL6, ISVALID = (C_FSL_LINKS >= 7)
BUS_INTERFACE BUS = DRFSL7, BUS_STD = XIL_DRFSL, BUS_TYPE = TARGET, EXCLUDE_BUSIF = SFSL7, ISVALID = (C_FSL_LINKS >= 8)
BUS_INTERFACE BUS = DWFSL7, BUS_STD = XIL_DWFSL, BUS_TYPE = INITIATOR, EXCLUDE_BUSIF = MFSL7, ISVALID = (C_FSL_LINKS >= 8)
BUS_INTERFACE BUS = DRFSL8, BUS_STD = XIL_DRFSL, BUS_TYPE = TARGET, EXCLUDE_BUSIF = SFSL8, ISVALID = (C_FSL_LINKS >= 9)
BUS_INTERFACE BUS = DWFSL8, BUS_STD = XIL_DWFSL, BUS_TYPE = INITIATOR, EXCLUDE_BUSIF = MFSL8, ISVALID = (C_FSL_LINKS >= 9)
BUS_INTERFACE BUS = DRFSL9, BUS_STD = XIL_DRFSL, BUS_TYPE = TARGET, EXCLUDE_BUSIF = SFSL9, ISVALID = (C_FSL_LINKS >= 10)
BUS_INTERFACE BUS = DWFSL9, BUS_STD = XIL_DWFSL, BUS_TYPE = INITIATOR, EXCLUDE_BUSIF = MFSL9, ISVALID = (C_FSL_LINKS >= 10)
BUS_INTERFACE BUS = DRFSL10, BUS_STD = XIL_DRFSL, BUS_TYPE = TARGET, EXCLUDE_BUSIF = SFSL10, ISVALID = (C_FSL_LINKS >= 11)
BUS_INTERFACE BUS = DWFSL10, BUS_STD = XIL_DWFSL, BUS_TYPE = INITIATOR, EXCLUDE_BUSIF = MFSL10, ISVALID = (C_FSL_LINKS >= 11)
BUS_INTERFACE BUS = DRFSL11, BUS_STD = XIL_DRFSL, BUS_TYPE = TARGET, EXCLUDE_BUSIF = SFSL11, ISVALID = (C_FSL_LINKS >= 12)
BUS_INTERFACE BUS = DWFSL11, BUS_STD = XIL_DWFSL, BUS_TYPE = INITIATOR, EXCLUDE_BUSIF = MFSL11, ISVALID = (C_FSL_LINKS >= 12)
BUS_INTERFACE BUS = DRFSL12, BUS_STD = XIL_DRFSL, BUS_TYPE = TARGET, EXCLUDE_BUSIF = SFSL12, ISVALID = (C_FSL_LINKS >= 13)
BUS_INTERFACE BUS = DWFSL12, BUS_STD = XIL_DWFSL, BUS_TYPE = INITIATOR, EXCLUDE_BUSIF = MFSL12, ISVALID = (C_FSL_LINKS >= 13)
BUS_INTERFACE BUS = DRFSL13, BUS_STD = XIL_DRFSL, BUS_TYPE = TARGET, EXCLUDE_BUSIF = SFSL13, ISVALID = (C_FSL_LINKS >= 14)
BUS_INTERFACE BUS = DWFSL13, BUS_STD = XIL_DWFSL, BUS_TYPE = INITIATOR, EXCLUDE_BUSIF = MFSL13, ISVALID = (C_FSL_LINKS >= 14)
BUS_INTERFACE BUS = DRFSL14, BUS_STD = XIL_DRFSL, BUS_TYPE = TARGET, EXCLUDE_BUSIF = SFSL14, ISVALID = (C_FSL_LINKS >= 15)
BUS_INTERFACE BUS = DWFSL14, BUS_STD = XIL_DWFSL, BUS_TYPE = INITIATOR, EXCLUDE_BUSIF = MFSL14, ISVALID = (C_FSL_LINKS >= 15)
BUS_INTERFACE BUS = DRFSL15, BUS_STD = XIL_DRFSL, BUS_TYPE = TARGET, EXCLUDE_BUSIF = SFSL15, ISVALID = (C_FSL_LINKS >= 16)
BUS_INTERFACE BUS = DWFSL15, BUS_STD = XIL_DWFSL, BUS_TYPE = INITIATOR, EXCLUDE_BUSIF = MFSL15, ISVALID = (C_FSL_LINKS >= 16)
BUS_INTERFACE BUS = DXCL, BUS_STD = XIL_MEMORY_CHANNEL, BUS_TYPE = INITIATOR, ISVALID = (C_INTERCONNECT == 1)
BUS_INTERFACE BUS = IXCL, BUS_STD = XIL_MEMORY_CHANNEL, BUS_TYPE = INITIATOR, ISVALID = (C_INTERCONNECT == 1)
BUS_INTERFACE BUS = DEBUG, BUS_STD = XIL_MBDEBUG2, BUS_TYPE = TARGET
BUS_INTERFACE BUS = TRACE, BUS_STD = XIL_MBTRACE2, BUS_TYPE = INITIATOR

## Generics for VHDL or Parameters for Verilog
PARAMETER C_SCO = 0, DT = integer, ASSIGNMENT = CONSTANT
PARAMETER C_FREQ = 0, DT = integer, IO_IS = clk_freq, CLK_PORT = CLK, CLK_UNIT = HZ
PARAMETER C_DATA_SIZE = 32, DT = integer, ASSIGNMENT = CONSTANT
PARAMETER C_DYNAMIC_BUS_SIZING = 1, DT = integer, ASSIGNMENT = CONSTANT
PARAMETER C_FAMILY = virtex5, DT = string
PARAMETER C_INSTANCE = microblaze, DT = string
PARAMETER C_AREA_OPTIMIZED = 0, DT = integer, RANGE = (0:1)
PARAMETER C_OPTIMIZATION = 0, DT = integer, ASSIGNMENT = CONSTANT
PARAMETER C_INTERCONNECT = 1, DT = integer, ASSIGNMENT = CONSTANT
PARAMETER C_DPLB_DWIDTH = 32, DT = integer, RANGE = (32,64,128), BUS = DPLB
PARAMETER C_DPLB_NATIVE_DWIDTH = 32, DT = integer, RANGE = (32:32), ASSIGNMENT = CONSTANT, BUS = DPLB
PARAMETER C_DPLB_BURST_EN = 0, DT = integer, RANGE = (0:0), ASSIGNMENT = CONSTANT, BUS = DPLB
PARAMETER C_DPLB_P2P = 0, DT = integer, RANGE = (0:1), BUS = DPLB
PARAMETER C_IPLB_DWIDTH = 32, DT = integer, RANGE = (32,64,128), BUS = IPLB
PARAMETER C_IPLB_NATIVE_DWIDTH = 32, DT = integer, RANGE = (32:32), ASSIGNMENT = CONSTANT, BUS = IPLB
PARAMETER C_IPLB_BURST_EN = 0, DT = integer, RANGE = (0:0), ASSIGNMENT = CONSTANT, BUS = IPLB
PARAMETER C_IPLB_P2P = 0, DT = integer, RANGE = (0:1), BUS = IPLB
PARAMETER C_D_PLB = 0, DT = integer, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_d_plb
PARAMETER C_D_LMB = 1, DT = integer, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_d_lmb
PARAMETER C_I_PLB = 0, DT = integer, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_i_plb
PARAMETER C_I_LMB = 1, DT = integer, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_i_lmb
PARAMETER C_USE_MSR_INSTR = 1, DT = integer, RANGE = (0:1)
PARAMETER C_USE_PCMP_INSTR = 1, DT = integer, RANGE = (0:1)
PARAMETER C_USE_BARREL = 0, DT = integer, RANGE = (0:1)
PARAMETER C_USE_DIV = 0, DT = integer, RANGE = (0:1)
PARAMETER C_USE_HW_MUL = 1, DT = integer, VALUES = (0= NONE, 1= MUL32, 2= MUL64)
PARAMETER C_USE_FPU = 0, DT = integer, VALUES = (0= NONE, 1= BASIC, 2= EXTENDED)
PARAMETER C_UNALIGNED_EXCEPTIONS = 0, DT = integer, RANGE = (0:1)
PARAMETER C_ILL_OPCODE_EXCEPTION = 0, DT = integer, RANGE = (0:1)
PARAMETER C_IPLB_BUS_EXCEPTION = 0, DT = integer, RANGE = (0:1), ISVALID = (C_INTERCONNECT == 1)
PARAMETER C_DPLB_BUS_EXCEPTION = 0, DT = integer, RANGE = (0:1), ISVALID = (C_INTERCONNECT == 1)
PARAMETER C_DIV_ZERO_EXCEPTION = 0, DT = integer, RANGE = (0:1), ISVALID = (C_USE_DIV == 1)
PARAMETER C_FPU_EXCEPTION = 0, DT = integer, RANGE = (0:1), ISVALID = (C_USE_FPU >= 1)
PARAMETER C_FSL_EXCEPTION = 0, DT = integer, RANGE = (0:1), ISVALID = (C_FSL_LINKS >= 1 && C_USE_EXTENDED_FSL_INSTR >= 1)
PARAMETER C_PVR = 0, DT = integer, VALUES = (0= NONE, 1= BASIC, 2= FULL)
PARAMETER C_PVR_USER1 = 0x00, DT = std_logic_vector(0 to 7)
PARAMETER C_PVR_USER2 = 0x00000000, DT = std_logic_vector(0 to 31)
PARAMETER C_DEBUG_ENABLED = 0, DT = integer, RANGE = (0:1)
PARAMETER C_NUMBER_OF_PC_BRK = 1, DT = integer, RANGE = (0:8)
PARAMETER C_NUMBER_OF_RD_ADDR_BRK = 0, DT = integer, RANGE = (0:4)
PARAMETER C_NUMBER_OF_WR_ADDR_BRK = 0, DT = integer, RANGE = (0:4)
PARAMETER C_INTERRUPT_IS_EDGE = 0, DT = integer, RANGE = (0:1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_interrupt_edge
PARAMETER C_EDGE_IS_POSITIVE = 1, DT = integer, RANGE = (0:1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_edge_positive
PARAMETER C_RESET_MSR = 0x00000000, DT = std_logic_vector, VALUES = (0x0000= NONE, 0x0020= ICE, 0x0080= DCE, 0x00a0= ICE_DCE)
PARAMETER C_OPCODE_0x0_ILLEGAL = 0, DT = integer, RANGE = (0:1)
PARAMETER C_FSL_LINKS = 0, DT = integer, RANGE = (0:16)
PARAMETER C_FSL_DATA_SIZE = 32, DT = integer, ASSIGNMENT = CONSTANT
PARAMETER C_USE_EXTENDED_FSL_INSTR = 0, DT = integer, RANGE = (0:1), ISVALID = (C_FSL_LINKS >= 1)
PARAMETER C_ICACHE_BASEADDR = 0x00000000, DT = std_logic_vector, ADDRESS = NONE, ASSIGNMENT = OPTIONAL, SYSLEVEL_UPDATE_VALUE_PROC = update_icache_baseaddr
PARAMETER C_ICACHE_HIGHADDR = 0x3FFFFFFF, DT = std_logic_vector, ADDRESS = NONE, ASSIGNMENT = OPTIONAL, SYSLEVEL_UPDATE_VALUE_PROC = update_icache_highaddr
PARAMETER C_USE_ICACHE = 0, DT = integer, RANGE = (0:1)
PARAMETER C_ALLOW_ICACHE_WR = 1, DT = integer, RANGE = (0:1)
PARAMETER C_ADDR_TAG_BITS = 17, DT = integer, RANGE = (0:25), ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = update_icache_tag_bits
PARAMETER C_CACHE_BYTE_SIZE = 8192, DT = integer, VALUES = (64= 64B, 128= 128B, 256= 256B, 512= 512B, 1024= 1kB, 2048= 2kB,4096= 4kB,8192= 8kB,16384= 16kB,32768= 32kB,65536= 64kB)
PARAMETER C_ICACHE_USE_FSL = 1, DT = integer, RANGE = (0:1), ASSIGNMENT = UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_cache_use_fsl
PARAMETER C_ICACHE_LINE_LEN = 4, DT = integer, RANGE = (4, 8)
PARAMETER C_ICACHE_ALWAYS_USED = 0, DT = integer, RANGE = (0:1)
PARAMETER C_ICACHE_INTERFACE = 0, DT = integer, RANGE = (0,1), VALUES = (0=IXCL, 1=IXCL2)
PARAMETER C_ICACHE_VICTIMS = 0, DT = integer, RANGE = (0,2,4,8), ISVALID = (C_AREA_OPTIMIZED != 1)
PARAMETER C_ICACHE_STREAMS = 0, DT = integer, RANGE = (0:1), ISVALID = (C_AREA_OPTIMIZED != 1)
PARAMETER C_DCACHE_BASEADDR = 0x00000000, DT = std_logic_vector, ADDRESS = NONE, ASSIGNMENT = OPTIONAL, SYSLEVEL_UPDATE_VALUE_PROC = update_dcache_baseaddr
PARAMETER C_DCACHE_HIGHADDR = 0x3FFFFFFF, DT = std_logic_vector, ADDRESS = NONE, ASSIGNMENT = OPTIONAL, SYSLEVEL_UPDATE_VALUE_PROC = update_dcache_highaddr
PARAMETER C_USE_DCACHE = 0, DT = integer, RANGE = (0:1)
PARAMETER C_ALLOW_DCACHE_WR = 1, DT = integer, RANGE = (0:1)
PARAMETER C_DCACHE_ADDR_TAG = 17, DT = integer, RANGE = (0:25), ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = update_dcache_tag_bits
PARAMETER C_DCACHE_BYTE_SIZE = 8192, DT = integer, VALUES = (64= 64B, 128= 128B, 256= 256B, 512= 512B, 1024= 1kB, 2048= 2kB,4096= 4kB,8192= 8kB,16384= 16kB,32768= 32kB,65536= 64kB)
PARAMETER C_DCACHE_USE_FSL = 1, DT = integer, RANGE = (0:1), ASSIGNMENT = UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_cache_use_fsl
PARAMETER C_DCACHE_LINE_LEN = 4, DT = integer, RANGE = (4, 8)
PARAMETER C_DCACHE_ALWAYS_USED = 0, DT = integer, RANGE = (0:1)
PARAMETER C_DCACHE_INTERFACE = 0, DT = integer, RANGE = (0,1), VALUES = (0=DXCL, 1=DXCL2), ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_dcache_interface
PARAMETER C_DCACHE_USE_WRITEBACK = 0, DT = integer, RANGE = (0:1)
PARAMETER C_DCACHE_VICTIMS = 0, DT = integer, RANGE = (0,2,4,8), ISVALID = (C_AREA_OPTIMIZED != 1 && C_DCACHE_USE_WRITEBACK == 1)
PARAMETER C_USE_MMU = 0, DT = integer, VALUES = (0= NONE, 1=USERMODE, 2=PROTECTION, 3=VIRTUAL), ISVALID = (C_AREA_OPTIMIZED == 0)
PARAMETER C_MMU_DTLB_SIZE = 4, DT = integer, VALUES = (1= 1, 2= 2, 4= 4, 8= 8), ISVALID = (C_USE_MMU >= 2 && C_AREA_OPTIMIZED == 0)
PARAMETER C_MMU_ITLB_SIZE = 2, DT = integer, VALUES = (1= 1, 2= 2, 4= 4, 8= 8), ISVALID = (C_USE_MMU >= 2 && C_AREA_OPTIMIZED == 0)
PARAMETER C_MMU_TLB_ACCESS = 3, DT = integer, VALUES = (0=MINIMAL, 1=READ, 2=WRITE, 3=FULL), ISVALID = (C_USE_MMU >= 2 && C_AREA_OPTIMIZED == 0)
PARAMETER C_MMU_ZONES = 16, DT = integer, RANGE = (0:16), ISVALID = (C_USE_MMU >= 2 && C_AREA_OPTIMIZED == 0)
PARAMETER C_USE_INTERRUPT = 0, DT = integer, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_use_interrupt
PARAMETER C_USE_EXT_BRK = 0, DT = integer, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_use_ext_brk
PARAMETER C_USE_EXT_NM_BRK = 0, DT = integer, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_use_ext_nm_brk
PARAMETER C_USE_BRANCH_TARGET_CACHE = 0, DT = integer, RANGE = (0:1), ISVALID = (C_AREA_OPTIMIZED == 0)
PARAMETER C_BRANCH_TARGET_CACHE_SIZE = 0, DT = integer, VALUES = (0=DEFAULT, 1=   8 ENTRIES, 2=  16 ENTRIES, 3=  32 ENTRIES, 4=  64 ENTRIES, 5= 512 ENTRIES, 6=1024 ENTRIES, 7=2048 ENTRIES), ISVALID = (C_AREA_OPTIMIZED == 0)

## Ports
PORT CLK = "", DIR = I, SIGIS = CLK, BUS = DPLB:IPLB:DLMB:ILMB, ASSIGNMENT = REQUIRE
PORT RESET = LMB_Rst, DIR = I, SIGIS = RST, BUS = DLMB:ILMB
PORT MB_RESET = "", DIR = I, SIGIS = RST
PORT INTERRUPT = "", DIR = I, LEVEL = HIGH, SIGIS = INTERRUPT
PORT EXT_BRK = Ext_BRK, DIR = I
PORT EXT_NM_BRK = Ext_NM_BRK, DIR = I
PORT DBG_STOP = "", DIR = I
PORT MB_Halted = "", DIR = O
PORT INSTR = LMB_ReadDBus, DIR = I, VEC = [0:31], BUS = ILMB
PORT IREADY = LMB_Ready, DIR = I, BUS = ILMB
PORT IWAIT = LMB_Wait, DIR = I, BUS = ILMB
PORT INSTR_ADDR = M_ABus, DIR = O, VEC = [0:31], BUS = ILMB
PORT IFETCH = M_ReadStrobe, DIR = O, BUS = ILMB
PORT I_AS = M_AddrStrobe, DIR = O, BUS = ILMB
PORT IPLB_M_ABort = M_ABort, DIR = O, BUS = IPLB
PORT IPLB_M_ABus = M_ABus, DIR = O, VEC = [0:31], BUS = IPLB
PORT IPLB_M_UABus = M_UABus, DIR = O, VEC = [0:31], BUS = IPLB
PORT IPLB_M_BE = M_BE, DIR = O, VEC = [0:(C_IPLB_DWIDTH-1)/8], BUS = IPLB
PORT IPLB_M_busLock = M_busLock, DIR = O, BUS = IPLB
PORT IPLB_M_lockErr = M_lockErr, DIR = O, BUS = IPLB
PORT IPLB_M_MSize = M_MSize, DIR = O, VEC = [0:1], BUS = IPLB
PORT IPLB_M_priority = M_priority, DIR = O, VEC = [0:1], BUS = IPLB
PORT IPLB_M_rdBurst = M_rdBurst, DIR = O, BUS = IPLB
PORT IPLB_M_request = M_request, DIR = O, BUS = IPLB
PORT IPLB_M_RNW = M_RNW, DIR = O, BUS = IPLB
PORT IPLB_M_size = M_size, DIR = O, VEC = [0:3], BUS = IPLB
PORT IPLB_M_TAttribute = M_TAttribute, DIR = O, VEC = [0:15], BUS = IPLB
PORT IPLB_M_type = M_type, DIR = O, VEC = [0:2], BUS = IPLB
PORT IPLB_M_wrBurst = M_wrBurst, DIR = O, BUS = IPLB
PORT IPLB_M_wrDBus = M_wrDBus, DIR = O, VEC = [0:C_IPLB_DWIDTH-1], BUS = IPLB
PORT IPLB_MBusy = PLB_MBusy, DIR = I, BUS = IPLB
PORT IPLB_MRdErr = PLB_MRdErr, DIR = I, BUS = IPLB
PORT IPLB_MWrErr = PLB_MWrErr, DIR = I, BUS = IPLB
PORT IPLB_MIRQ = PLB_MIRQ, DIR = I, BUS = IPLB
PORT IPLB_MWrBTerm = PLB_MWrBTerm, DIR = I, BUS = IPLB
PORT IPLB_MWrDAck = PLB_MWrDAck, DIR = I, BUS = IPLB
PORT IPLB_MAddrAck = PLB_MAddrAck, DIR = I, BUS = IPLB
PORT IPLB_MRdBTerm = PLB_MRdBTerm, DIR = I, BUS = IPLB
PORT IPLB_MRdDAck = PLB_MRdDAck, DIR = I, BUS = IPLB
PORT IPLB_MRdDBus = PLB_MRdDBus, DIR = I, VEC = [0:C_IPLB_DWIDTH-1], BUS = IPLB
PORT IPLB_MRdWdAddr = PLB_MRdWdAddr, DIR = I, VEC = [0:3], BUS = IPLB
PORT IPLB_MRearbitrate = PLB_MRearbitrate, DIR = I, BUS = IPLB
PORT IPLB_MSSize = PLB_MSSize, DIR = I, VEC = [0:1], BUS = IPLB
PORT IPLB_MTimeout = PLB_MTimeout, DIR = I, BUS = IPLB
PORT DATA_READ = LMB_ReadDBus, DIR = I, VEC = [0:31], BUS = DLMB
PORT DREADY = LMB_Ready, DIR = I, BUS = DLMB
PORT DWAIT = LMB_Wait, DIR = I, BUS = DLMB
PORT DATA_WRITE = M_DBus, DIR = O, VEC = [0:31], BUS = DLMB
PORT DATA_ADDR = M_ABus, DIR = O, VEC = [0:31], BUS = DLMB
PORT D_AS = M_AddrStrobe, DIR = O, BUS = DLMB
PORT READ_STROBE = M_ReadStrobe, DIR = O, BUS = DLMB
PORT WRITE_STROBE = M_WriteStrobe, DIR = O, BUS = DLMB
PORT BYTE_ENABLE = M_BE, DIR = O, VEC = [0:3], BUS = DLMB
PORT DPLB_M_ABort = M_ABort, DIR = O, BUS = DPLB
PORT DPLB_M_ABus = M_ABus, DIR = O, VEC = [0:31], BUS = DPLB
PORT DPLB_M_UABus = M_UABus, DIR = O, VEC = [0:31], BUS = DPLB
PORT DPLB_M_BE = M_BE, DIR = O, VEC = [0:(C_DPLB_DWIDTH-1)/8], BUS = DPLB
PORT DPLB_M_busLock = M_busLock, DIR = O, BUS = DPLB
PORT DPLB_M_lockErr = M_lockErr, DIR = O, BUS = DPLB
PORT DPLB_M_MSize = M_MSize, DIR = O, VEC = [0:1], BUS = DPLB
PORT DPLB_M_priority = M_priority, DIR = O, VEC = [0:1], BUS = DPLB
PORT DPLB_M_rdBurst = M_rdBurst, DIR = O, BUS = DPLB
PORT DPLB_M_request = M_request, DIR = O, BUS = DPLB
PORT DPLB_M_RNW = M_RNW, DIR = O, BUS = DPLB
PORT DPLB_M_size = M_size, DIR = O, VEC = [0:3], BUS = DPLB
PORT DPLB_M_TAttribute = M_TAttribute, DIR = O, VEC = [0:15], BUS = DPLB
PORT DPLB_M_type = M_type, DIR = O, VEC = [0:2], BUS = DPLB
PORT DPLB_M_wrBurst = M_wrBurst, DIR = O, BUS = DPLB
PORT DPLB_M_wrDBus = M_wrDBus, DIR = O, VEC = [0:C_DPLB_DWIDTH-1], BUS = DPLB
PORT DPLB_MBusy = PLB_MBusy, DIR = I, BUS = DPLB
PORT DPLB_MRdErr = PLB_MRdErr, DIR = I, BUS = DPLB
PORT DPLB_MWrErr = PLB_MWrErr, DIR = I, BUS = DPLB
PORT DPLB_MIRQ = PLB_MIRQ, DIR = I, BUS = DPLB
PORT DPLB_MWrBTerm = PLB_MWrBTerm, DIR = I, BUS = DPLB
PORT DPLB_MWrDAck = PLB_MWrDAck, DIR = I, BUS = DPLB
PORT DPLB_MAddrAck = PLB_MAddrAck, DIR = I, BUS = DPLB
PORT DPLB_MRdBTerm = PLB_MRdBTerm, DIR = I, BUS = DPLB
PORT DPLB_MRdDAck = PLB_MRdDAck, DIR = I, BUS = DPLB
PORT DPLB_MRdDBus = PLB_MRdDBus, DIR = I, VEC = [0:C_DPLB_DWIDTH-1], BUS = DPLB
PORT DPLB_MRdWdAddr = PLB_MRdWdAddr, DIR = I, VEC = [0:3], BUS = DPLB
PORT DPLB_MRearbitrate = PLB_MRearbitrate, DIR = I, BUS = DPLB
PORT DPLB_MSSize = PLB_MSSize, DIR = I, VEC = [0:1], BUS = DPLB
PORT DPLB_MTimeout = PLB_MTimeout, DIR = I, BUS = DPLB
PORT DBG_CLK = Dbg_Clk, DIR = I, BUS = DEBUG
PORT DBG_TDI = Dbg_TDI, DIR = I, BUS = DEBUG
PORT DBG_TDO = Dbg_TDO, DIR = O, BUS = DEBUG
PORT DBG_REG_EN = Dbg_Reg_En, DIR = I, VEC = [0:4], BUS = DEBUG
PORT DBG_SHIFT = Dbg_Shift, DIR = I, BUS = DEBUG
PORT DBG_CAPTURE = Dbg_Capture, DIR = I, BUS = DEBUG
PORT DBG_UPDATE = Dbg_Update, DIR = I, BUS = DEBUG
PORT DEBUG_RST = Debug_Rst, DIR = I, SIGIS = RST, BUS = DEBUG
PORT Trace_Instruction = Trace_Instruction, DIR = O, VEC = [0:31], BUS = TRACE
PORT Trace_Valid_Instr = Trace_Valid_Instr, DIR = O, BUS = TRACE
PORT Trace_PC = Trace_PC, DIR = O, VEC = [0:31], BUS = TRACE
PORT Trace_Reg_Write = Trace_Reg_Write, DIR = O, BUS = TRACE
PORT Trace_Reg_Addr = Trace_Reg_Addr, DIR = O, VEC = [0:4], BUS = TRACE
PORT Trace_MSR_Reg = Trace_MSR_Reg, DIR = O, VEC = [0:14], BUS = TRACE
PORT Trace_PID_Reg = Trace_PID_Reg, DIR = O, VEC = [0:7], BUS = TRACE
PORT Trace_New_Reg_Value = Trace_New_Reg_Value, DIR = O, VEC = [0:31], BUS = TRACE
PORT Trace_Exception_Taken = Trace_Exception_Taken, DIR = O, BUS = TRACE
PORT Trace_Exception_Kind = Trace_Exception_Kind, DIR = O, VEC = [0:4], BUS = TRACE
PORT Trace_Jump_Taken = Trace_Jump_Taken, DIR = O, BUS = TRACE
PORT Trace_Delay_Slot = Trace_Delay_Slot, DIR = O, BUS = TRACE
PORT Trace_Data_Address = Trace_Data_Address, DIR = O, VEC = [0:31], BUS = TRACE
PORT Trace_Data_Access = Trace_Data_Access, DIR = O, BUS = TRACE
PORT Trace_Data_Read = Trace_Data_Read, DIR = O, BUS = TRACE
PORT Trace_Data_Write = Trace_Data_Write, DIR = O, BUS = TRACE
PORT Trace_Data_Write_Value = Trace_Data_Write_Value, DIR = O, VEC = [0:31], BUS = TRACE
PORT Trace_Data_Byte_Enable = Trace_Data_Byte_Enable, DIR = O, VEC = [0:3], BUS = TRACE
PORT Trace_DCache_Req = Trace_DCache_Req, DIR = O, BUS = TRACE
PORT Trace_DCache_Hit = Trace_DCache_Hit, DIR = O, BUS = TRACE
PORT Trace_DCache_Rdy = Trace_DCache_Rdy, DIR = O, BUS = TRACE
PORT Trace_DCache_Read = Trace_DCache_Read, DIR = O, BUS = TRACE
PORT Trace_ICache_Req = Trace_ICache_Req, DIR = O, BUS = TRACE
PORT Trace_ICache_Hit = Trace_ICache_Hit, DIR = O, BUS = TRACE
PORT Trace_ICache_Rdy = Trace_ICache_Rdy, DIR = O, BUS = TRACE
PORT Trace_OF_PipeRun = Trace_OF_PipeRun, DIR = O, BUS = TRACE
PORT Trace_EX_PipeRun = Trace_EX_PipeRun, DIR = O, BUS = TRACE
PORT Trace_MEM_PipeRun = Trace_MEM_PipeRun, DIR = O, BUS = TRACE
PORT Trace_MB_Halted = Trace_MB_Halted, DIR = O, BUS = TRACE
PORT Trace_Jump_Hit = Trace_Jump_Hit, DIR = O, BUS = TRACE
PORT FSL0_S_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = SFSL0:DRFSL0
PORT FSL0_S_READ = FSL_S_Read, DIR = O, BUS = SFSL0:DRFSL0
PORT FSL0_S_DATA = FSL_S_Data, DIR = I, VEC = [0:C_FSL_DATA_SIZE-1], BUS = SFSL0:DRFSL0
PORT FSL0_S_CONTROL = FSL_S_Control, DIR = I, BUS = SFSL0:DRFSL0
PORT FSL0_S_EXISTS = FSL_S_Exists, DIR = I, BUS = SFSL0:DRFSL0
PORT FSL0_M_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = MFSL0:DWFSL0
PORT FSL0_M_WRITE = FSL_M_Write, DIR = O, BUS = MFSL0:DWFSL0
PORT FSL0_M_DATA = FSL_M_Data, DIR = O, VEC = [0:C_FSL_DATA_SIZE-1], BUS = MFSL0:DWFSL0
PORT FSL0_M_CONTROL = FSL_M_Control, DIR = O, BUS = MFSL0:DWFSL0
PORT FSL0_M_FULL = FSL_M_Full, DIR = I, BUS = MFSL0:DWFSL0
PORT FSL1_S_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = SFSL1:DRFSL1
PORT FSL1_S_READ = FSL_S_Read, DIR = O, BUS = SFSL1:DRFSL1
PORT FSL1_S_DATA = FSL_S_Data, DIR = I, VEC = [0:C_FSL_DATA_SIZE-1], BUS = SFSL1:DRFSL1
PORT FSL1_S_CONTROL = FSL_S_Control, DIR = I, BUS = SFSL1:DRFSL1
PORT FSL1_S_EXISTS = FSL_S_Exists, DIR = I, BUS = SFSL1:DRFSL1
PORT FSL1_M_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = MFSL1:DWFSL1
PORT FSL1_M_WRITE = FSL_M_Write, DIR = O, BUS = MFSL1:DWFSL1
PORT FSL1_M_DATA = FSL_M_Data, DIR = O, VEC = [0:C_FSL_DATA_SIZE-1], BUS = MFSL1:DWFSL1
PORT FSL1_M_CONTROL = FSL_M_Control, DIR = O, BUS = MFSL1:DWFSL1
PORT FSL1_M_FULL = FSL_M_Full, DIR = I, BUS = MFSL1:DWFSL1
PORT FSL2_S_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = SFSL2:DRFSL2
PORT FSL2_S_READ = FSL_S_Read, DIR = O, BUS = SFSL2:DRFSL2
PORT FSL2_S_DATA = FSL_S_Data, DIR = I, VEC = [0:C_FSL_DATA_SIZE-1], BUS = SFSL2:DRFSL2
PORT FSL2_S_CONTROL = FSL_S_Control, DIR = I, BUS = SFSL2:DRFSL2
PORT FSL2_S_EXISTS = FSL_S_Exists, DIR = I, BUS = SFSL2:DRFSL2
PORT FSL2_M_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = MFSL2:DWFSL2
PORT FSL2_M_WRITE = FSL_M_Write, DIR = O, BUS = MFSL2:DWFSL2
PORT FSL2_M_DATA = FSL_M_Data, DIR = O, VEC = [0:C_FSL_DATA_SIZE-1], BUS = MFSL2:DWFSL2
PORT FSL2_M_CONTROL = FSL_M_Control, DIR = O, BUS = MFSL2:DWFSL2
PORT FSL2_M_FULL = FSL_M_Full, DIR = I, BUS = MFSL2:DWFSL2
PORT FSL3_S_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = SFSL3:DRFSL3
PORT FSL3_S_READ = FSL_S_Read, DIR = O, BUS = SFSL3:DRFSL3
PORT FSL3_S_DATA = FSL_S_Data, DIR = I, VEC = [0:C_FSL_DATA_SIZE-1], BUS = SFSL3:DRFSL3
PORT FSL3_S_CONTROL = FSL_S_Control, DIR = I, BUS = SFSL3:DRFSL3
PORT FSL3_S_EXISTS = FSL_S_Exists, DIR = I, BUS = SFSL3:DRFSL3
PORT FSL3_M_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = MFSL3:DWFSL3
PORT FSL3_M_WRITE = FSL_M_Write, DIR = O, BUS = MFSL3:DWFSL3
PORT FSL3_M_DATA = FSL_M_Data, DIR = O, VEC = [0:C_FSL_DATA_SIZE-1], BUS = MFSL3:DWFSL3
PORT FSL3_M_CONTROL = FSL_M_Control, DIR = O, BUS = MFSL3:DWFSL3
PORT FSL3_M_FULL = FSL_M_Full, DIR = I, BUS = MFSL3:DWFSL3
PORT FSL4_S_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = SFSL4:DRFSL4
PORT FSL4_S_READ = FSL_S_Read, DIR = O, BUS = SFSL4:DRFSL4
PORT FSL4_S_DATA = FSL_S_Data, DIR = I, VEC = [0:C_FSL_DATA_SIZE-1], BUS = SFSL4:DRFSL4
PORT FSL4_S_CONTROL = FSL_S_Control, DIR = I, BUS = SFSL4:DRFSL4
PORT FSL4_S_EXISTS = FSL_S_Exists, DIR = I, BUS = SFSL4:DRFSL4
PORT FSL4_M_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = MFSL4:DWFSL4
PORT FSL4_M_WRITE = FSL_M_Write, DIR = O, BUS = MFSL4:DWFSL4
PORT FSL4_M_DATA = FSL_M_Data, DIR = O, VEC = [0:C_FSL_DATA_SIZE-1], BUS = MFSL4:DWFSL4
PORT FSL4_M_CONTROL = FSL_M_Control, DIR = O, BUS = MFSL4:DWFSL4
PORT FSL4_M_FULL = FSL_M_Full, DIR = I, BUS = MFSL4:DWFSL4
PORT FSL5_S_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = SFSL5:DRFSL5
PORT FSL5_S_READ = FSL_S_Read, DIR = O, BUS = SFSL5:DRFSL5
PORT FSL5_S_DATA = FSL_S_Data, DIR = I, VEC = [0:C_FSL_DATA_SIZE-1], BUS = SFSL5:DRFSL5
PORT FSL5_S_CONTROL = FSL_S_Control, DIR = I, BUS = SFSL5:DRFSL5
PORT FSL5_S_EXISTS = FSL_S_Exists, DIR = I, BUS = SFSL5:DRFSL5
PORT FSL5_M_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = MFSL5:DWFSL5
PORT FSL5_M_WRITE = FSL_M_Write, DIR = O, BUS = MFSL5:DWFSL5
PORT FSL5_M_DATA = FSL_M_Data, DIR = O, VEC = [0:C_FSL_DATA_SIZE-1], BUS = MFSL5:DWFSL5
PORT FSL5_M_CONTROL = FSL_M_Control, DIR = O, BUS = MFSL5:DWFSL5
PORT FSL5_M_FULL = FSL_M_Full, DIR = I, BUS = MFSL5:DWFSL5
PORT FSL6_S_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = SFSL6:DRFSL6
PORT FSL6_S_READ = FSL_S_Read, DIR = O, BUS = SFSL6:DRFSL6
PORT FSL6_S_DATA = FSL_S_Data, DIR = I, VEC = [0:C_FSL_DATA_SIZE-1], BUS = SFSL6:DRFSL6
PORT FSL6_S_CONTROL = FSL_S_Control, DIR = I, BUS = SFSL6:DRFSL6
PORT FSL6_S_EXISTS = FSL_S_Exists, DIR = I, BUS = SFSL6:DRFSL6
PORT FSL6_M_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = MFSL6:DWFSL6
PORT FSL6_M_WRITE = FSL_M_Write, DIR = O, BUS = MFSL6:DWFSL6
PORT FSL6_M_DATA = FSL_M_Data, DIR = O, VEC = [0:C_FSL_DATA_SIZE-1], BUS = MFSL6:DWFSL6
PORT FSL6_M_CONTROL = FSL_M_Control, DIR = O, BUS = MFSL6:DWFSL6
PORT FSL6_M_FULL = FSL_M_Full, DIR = I, BUS = MFSL6:DWFSL6
PORT FSL7_S_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = SFSL7:DRFSL7
PORT FSL7_S_READ = FSL_S_Read, DIR = O, BUS = SFSL7:DRFSL7
PORT FSL7_S_DATA = FSL_S_Data, DIR = I, VEC = [0:C_FSL_DATA_SIZE-1], BUS = SFSL7:DRFSL7
PORT FSL7_S_CONTROL = FSL_S_Control, DIR = I, BUS = SFSL7:DRFSL7
PORT FSL7_S_EXISTS = FSL_S_Exists, DIR = I, BUS = SFSL7:DRFSL7
PORT FSL7_M_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = MFSL7:DWFSL7
PORT FSL7_M_WRITE = FSL_M_Write, DIR = O, BUS = MFSL7:DWFSL7
PORT FSL7_M_DATA = FSL_M_Data, DIR = O, VEC = [0:C_FSL_DATA_SIZE-1], BUS = MFSL7:DWFSL7
PORT FSL7_M_CONTROL = FSL_M_Control, DIR = O, BUS = MFSL7:DWFSL7
PORT FSL7_M_FULL = FSL_M_Full, DIR = I, BUS = MFSL7:DWFSL7
PORT FSL8_S_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = SFSL8:DRFSL8
PORT FSL8_S_READ = FSL_S_Read, DIR = O, BUS = SFSL8:DRFSL8
PORT FSL8_S_DATA = FSL_S_Data, DIR = I, VEC = [0:C_FSL_DATA_SIZE-1], BUS = SFSL8:DRFSL8
PORT FSL8_S_CONTROL = FSL_S_Control, DIR = I, BUS = SFSL8:DRFSL8
PORT FSL8_S_EXISTS = FSL_S_Exists, DIR = I, BUS = SFSL8:DRFSL8
PORT FSL8_M_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = MFSL8:DWFSL8
PORT FSL8_M_WRITE = FSL_M_Write, DIR = O, BUS = MFSL8:DWFSL8
PORT FSL8_M_DATA = FSL_M_Data, DIR = O, VEC = [0:C_FSL_DATA_SIZE-1], BUS = MFSL8:DWFSL8
PORT FSL8_M_CONTROL = FSL_M_Control, DIR = O, BUS = MFSL8:DWFSL8
PORT FSL8_M_FULL = FSL_M_Full, DIR = I, BUS = MFSL8:DWFSL8
PORT FSL9_S_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = SFSL9:DRFSL9
PORT FSL9_S_READ = FSL_S_Read, DIR = O, BUS = SFSL9:DRFSL9
PORT FSL9_S_DATA = FSL_S_Data, DIR = I, VEC = [0:C_FSL_DATA_SIZE-1], BUS = SFSL9:DRFSL9
PORT FSL9_S_CONTROL = FSL_S_Control, DIR = I, BUS = SFSL9:DRFSL9
PORT FSL9_S_EXISTS = FSL_S_Exists, DIR = I, BUS = SFSL9:DRFSL9
PORT FSL9_M_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = MFSL9:DWFSL9
PORT FSL9_M_WRITE = FSL_M_Write, DIR = O, BUS = MFSL9:DWFSL9
PORT FSL9_M_DATA = FSL_M_Data, DIR = O, VEC = [0:C_FSL_DATA_SIZE-1], BUS = MFSL9:DWFSL9
PORT FSL9_M_CONTROL = FSL_M_Control, DIR = O, BUS = MFSL9:DWFSL9
PORT FSL9_M_FULL = FSL_M_Full, DIR = I, BUS = MFSL9:DWFSL9
PORT FSL10_S_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = SFSL10:DRFSL10
PORT FSL10_S_READ = FSL_S_Read, DIR = O, BUS = SFSL10:DRFSL10
PORT FSL10_S_DATA = FSL_S_Data, DIR = I, VEC = [0:C_FSL_DATA_SIZE-1], BUS = SFSL10:DRFSL10
PORT FSL10_S_CONTROL = FSL_S_Control, DIR = I, BUS = SFSL10:DRFSL10
PORT FSL10_S_EXISTS = FSL_S_Exists, DIR = I, BUS = SFSL10:DRFSL10
PORT FSL10_M_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = MFSL10:DWFSL10
PORT FSL10_M_WRITE = FSL_M_Write, DIR = O, BUS = MFSL10:DWFSL10
PORT FSL10_M_DATA = FSL_M_Data, DIR = O, VEC = [0:C_FSL_DATA_SIZE-1], BUS = MFSL10:DWFSL10
PORT FSL10_M_CONTROL = FSL_M_Control, DIR = O, BUS = MFSL10:DWFSL10
PORT FSL10_M_FULL = FSL_M_Full, DIR = I, BUS = MFSL10:DWFSL10
PORT FSL11_S_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = SFSL11:DRFSL11
PORT FSL11_S_READ = FSL_S_Read, DIR = O, BUS = SFSL11:DRFSL11
PORT FSL11_S_DATA = FSL_S_Data, DIR = I, VEC = [0:C_FSL_DATA_SIZE-1], BUS = SFSL11:DRFSL11
PORT FSL11_S_CONTROL = FSL_S_Control, DIR = I, BUS = SFSL11:DRFSL11
PORT FSL11_S_EXISTS = FSL_S_Exists, DIR = I, BUS = SFSL11:DRFSL11
PORT FSL11_M_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = MFSL11:DWFSL11
PORT FSL11_M_WRITE = FSL_M_Write, DIR = O, BUS = MFSL11:DWFSL11
PORT FSL11_M_DATA = FSL_M_Data, DIR = O, VEC = [0:C_FSL_DATA_SIZE-1], BUS = MFSL11:DWFSL11
PORT FSL11_M_CONTROL = FSL_M_Control, DIR = O, BUS = MFSL11:DWFSL11
PORT FSL11_M_FULL = FSL_M_Full, DIR = I, BUS = MFSL11:DWFSL11
PORT FSL12_S_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = SFSL12:DRFSL12
PORT FSL12_S_READ = FSL_S_Read, DIR = O, BUS = SFSL12:DRFSL12
PORT FSL12_S_DATA = FSL_S_Data, DIR = I, VEC = [0:C_FSL_DATA_SIZE-1], BUS = SFSL12:DRFSL12
PORT FSL12_S_CONTROL = FSL_S_Control, DIR = I, BUS = SFSL12:DRFSL12
PORT FSL12_S_EXISTS = FSL_S_Exists, DIR = I, BUS = SFSL12:DRFSL12
PORT FSL12_M_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = MFSL12:DWFSL12
PORT FSL12_M_WRITE = FSL_M_Write, DIR = O, BUS = MFSL12:DWFSL12
PORT FSL12_M_DATA = FSL_M_Data, DIR = O, VEC = [0:C_FSL_DATA_SIZE-1], BUS = MFSL12:DWFSL12
PORT FSL12_M_CONTROL = FSL_M_Control, DIR = O, BUS = MFSL12:DWFSL12
PORT FSL12_M_FULL = FSL_M_Full, DIR = I, BUS = MFSL12:DWFSL12
PORT FSL13_S_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = SFSL13:DRFSL13
PORT FSL13_S_READ = FSL_S_Read, DIR = O, BUS = SFSL13:DRFSL13
PORT FSL13_S_DATA = FSL_S_Data, DIR = I, VEC = [0:C_FSL_DATA_SIZE-1], BUS = SFSL13:DRFSL13
PORT FSL13_S_CONTROL = FSL_S_Control, DIR = I, BUS = SFSL13:DRFSL13
PORT FSL13_S_EXISTS = FSL_S_Exists, DIR = I, BUS = SFSL13:DRFSL13
PORT FSL13_M_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = MFSL13:DWFSL13
PORT FSL13_M_WRITE = FSL_M_Write, DIR = O, BUS = MFSL13:DWFSL13
PORT FSL13_M_DATA = FSL_M_Data, DIR = O, VEC = [0:C_FSL_DATA_SIZE-1], BUS = MFSL13:DWFSL13
PORT FSL13_M_CONTROL = FSL_M_Control, DIR = O, BUS = MFSL13:DWFSL13
PORT FSL13_M_FULL = FSL_M_Full, DIR = I, BUS = MFSL13:DWFSL13
PORT FSL14_S_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = SFSL14:DRFSL14
PORT FSL14_S_READ = FSL_S_Read, DIR = O, BUS = SFSL14:DRFSL14
PORT FSL14_S_DATA = FSL_S_Data, DIR = I, VEC = [0:C_FSL_DATA_SIZE-1], BUS = SFSL14:DRFSL14
PORT FSL14_S_CONTROL = FSL_S_Control, DIR = I, BUS = SFSL14:DRFSL14
PORT FSL14_S_EXISTS = FSL_S_Exists, DIR = I, BUS = SFSL14:DRFSL14
PORT FSL14_M_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = MFSL14:DWFSL14
PORT FSL14_M_WRITE = FSL_M_Write, DIR = O, BUS = MFSL14:DWFSL14
PORT FSL14_M_DATA = FSL_M_Data, DIR = O, VEC = [0:C_FSL_DATA_SIZE-1], BUS = MFSL14:DWFSL14
PORT FSL14_M_CONTROL = FSL_M_Control, DIR = O, BUS = MFSL14:DWFSL14
PORT FSL14_M_FULL = FSL_M_Full, DIR = I, BUS = MFSL14:DWFSL14
PORT FSL15_S_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = SFSL15:DRFSL15
PORT FSL15_S_READ = FSL_S_Read, DIR = O, BUS = SFSL15:DRFSL15
PORT FSL15_S_DATA = FSL_S_Data, DIR = I, VEC = [0:C_FSL_DATA_SIZE-1], BUS = SFSL15:DRFSL15
PORT FSL15_S_CONTROL = FSL_S_Control, DIR = I, BUS = SFSL15:DRFSL15
PORT FSL15_S_EXISTS = FSL_S_Exists, DIR = I, BUS = SFSL15:DRFSL15
PORT FSL15_M_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = MFSL15:DWFSL15
PORT FSL15_M_WRITE = FSL_M_Write, DIR = O, BUS = MFSL15:DWFSL15
PORT FSL15_M_DATA = FSL_M_Data, DIR = O, VEC = [0:C_FSL_DATA_SIZE-1], BUS = MFSL15:DWFSL15
PORT FSL15_M_CONTROL = FSL_M_Control, DIR = O, BUS = MFSL15:DWFSL15
PORT FSL15_M_FULL = FSL_M_Full, DIR = I, BUS = MFSL15:DWFSL15
PORT ICACHE_FSL_IN_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = IXCL
PORT ICACHE_FSL_IN_READ = FSL_S_Read, DIR = O, BUS = IXCL
PORT ICACHE_FSL_IN_DATA = FSL_S_Data, DIR = I, VEC = [0:31], BUS = IXCL
PORT ICACHE_FSL_IN_CONTROL = FSL_S_Control, DIR = I, BUS = IXCL
PORT ICACHE_FSL_IN_EXISTS = FSL_S_Exists, DIR = I, BUS = IXCL
PORT ICACHE_FSL_OUT_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = IXCL
PORT ICACHE_FSL_OUT_WRITE = FSL_M_Write, DIR = O, BUS = IXCL
PORT ICACHE_FSL_OUT_DATA = FSL_M_Data, DIR = O, VEC = [0:31], BUS = IXCL
PORT ICACHE_FSL_OUT_CONTROL = FSL_M_Control, DIR = O, BUS = IXCL
PORT ICACHE_FSL_OUT_FULL = FSL_M_Full, DIR = I, BUS = IXCL
PORT DCACHE_FSL_IN_CLK = FSL_S_Clk, DIR = O, SIGIS = CLK, BUS = DXCL
PORT DCACHE_FSL_IN_READ = FSL_S_Read, DIR = O, BUS = DXCL
PORT DCACHE_FSL_IN_DATA = FSL_S_Data, DIR = I, VEC = [0:31], BUS = DXCL
PORT DCACHE_FSL_IN_CONTROL = FSL_S_Control, DIR = I, BUS = DXCL
PORT DCACHE_FSL_IN_EXISTS = FSL_S_Exists, DIR = I, BUS = DXCL
PORT DCACHE_FSL_OUT_CLK = FSL_M_Clk, DIR = O, SIGIS = CLK, BUS = DXCL
PORT DCACHE_FSL_OUT_WRITE = FSL_M_Write, DIR = O, BUS = DXCL
PORT DCACHE_FSL_OUT_DATA = FSL_M_Data, DIR = O, VEC = [0:31], BUS = DXCL
PORT DCACHE_FSL_OUT_CONTROL = FSL_M_Control, DIR = O, BUS = DXCL
PORT DCACHE_FSL_OUT_FULL = FSL_M_Full, DIR = I, BUS = DXCL

END

FINISH_SINGLE_MPD

START_SINGLE_MPD mpmc_v6_01_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : mpmc
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN mpmc

## Peripheral Options
OPTION HDL = MIXED
OPTION IMP_NETLIST = TRUE
OPTION IPTYPE = PERIPHERAL
OPTION RUN_NGCBUILD = TRUE
OPTION USAGE_LEVEL = BASE_USER
OPTION IPLEVEL_DRC_PROC = check_iplevel_drcs
OPTION SYSLEVEL_DRC_PROC = check_syslevel_drcs
OPTION PLATGEN_SYSLEVEL_UPDATE_PROC = platgen_syslevel_update
OPTION CLK_FREQ_RATIOS = (MPMC_Clk0 / MPMC_Clk90=(1/1), MPMC_Clk0 / MPMC_Clk0_DIV2=(2/1), MPMC_Clk0 / MPMC_CTRL_Clk=([1:2]/1), MPMC_Clk0 / (FSL0_M_Clk, FSL1_M_Clk, FSL2_M_Clk, FSL3_M_Clk, FSL4_M_Clk, FSL5_M_Clk, FSL6_M_Clk, FSL7_M_Clk)=([1:2]/1), MPMC_Clk0 / (SPLB0_Clk, SPLB1_Clk, SPLB2_Clk, SPLB3_Clk, SPLB4_Clk, SPLB5_Clk, SPLB6_Clk, SPLB7_Clk)=([1:2]/1), MPMC_Clk0 / (SDMA0_Clk, SDMA1_Clk, SDMA2_Clk, SDMA3_Clk, SDMA4_Clk, SDMA5_Clk, SDMA6_Clk, SDMA7_Clk)=([1:2]/1), SDMA0_Clk / SDMA_CTRL0_Clk=([1:2]/1), SDMA1_Clk / SDMA_CTRL1_Clk=([1:2]/1), SDMA2_Clk / SDMA_CTRL2_Clk=([1:2]/1), SDMA3_Clk / SDMA_CTRL3_Clk=([1:2]/1), SDMA4_Clk / SDMA_CTRL4_Clk=([1:2]/1), SDMA5_Clk / SDMA_CTRL5_Clk=([1:2]/1), SDMA6_Clk / SDMA_CTRL6_Clk=([1:2]/1), SDMA7_Clk / SDMA_CTRL7_Clk=([1:2]/1))
OPTION DESC = Multi-Port Memory Controller(DDR/DDR2/SDRAM)
OPTION LONG_DESC = Multi-port memory controller.
OPTION IP_GROUP = Memory and Memory Controller:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=PRODUCTION, spartan3=PRODUCTION, spartan3an=PRODUCTION, spartan3a=PRODUCTION, spartan3e=PRODUCTION, spartan3adsp=PRODUCTION, virtex4lx=PRODUCTION, virtex4sx=PRODUCTION, virtex4fx=PRODUCTION, virtex5lx=PRODUCTION, virtex5sx=PRODUCTION, virtex5fx=PRODUCTION, aspartan3e=PRODUCTION, aspartan3a=PRODUCTION, aspartan3adsp=PRODUCTION, qvirtex4lx=PRODUCTION, qvirtex4sx=PRODUCTION, qvirtex4fx=PRODUCTION, qrvirtex4lx=PRODUCTION, qrvirtex4sx=PRODUCTION, qrvirtex4fx=PRODUCTION, spartan6t=PRODUCTION, spartan6=PRODUCTION, spartan6l=PRE_PRODUCTION, qspartan6t=PRE_PRODUCTION, qspartan6=PRE_PRODUCTION, aspartan6t=PRODUCTION, aspartan6=PRODUCTION, virtex6lx=PRE_PRODUCTION, virtex6sx=PRE_PRODUCTION, virtex6hx=PRE_PRODUCTION, virtex6cx=PRE_PRODUCTION, virtex6llx=PRE_PRODUCTION, virtex6lsx=PRE_PRODUCTION, qspartan6l=PRE_PRODUCTION, qvirtex6lx=PRE_PRODUCTION, qvirtex6sx=PRE_PRODUCTION, qvirtex6fx=PRE_PRODUCTION, qvirtex6tx=PRE_PRODUCTION)
OPTION STYLE = HDL

IO_INTERFACE IO_IF = memory_0, IO_TYPE = XIL_MEMORY_V1

## Bus Interfaces
BUS_INTERFACE BUS = XCL0, BUS_STD = XIL_MEMORY_CHANNEL, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 0 && C_PIM0_BASETYPE == 1 && !(C_USE_MCB_S6_PHY && C_PORT_CONFIG > 1))
BUS_INTERFACE BUS = XCL0_B, BUS_STD = XIL_MEMORY_CHANNEL, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 0 && C_PIM0_BASETYPE == 1 && C_XCL0_B_IN_USE && !(C_USE_MCB_S6_PHY && C_PORT_CONFIG > 1))
BUS_INTERFACE BUS = SPLB0, BUS_STD = PLBV46, BUS_TYPE = SLAVE, ISVALID = (C_NUM_PORTS > 0 && C_PIM0_BASETYPE == 2 && !(C_USE_MCB_S6_PHY && C_PORT_CONFIG == 4))
BUS_INTERFACE BUS = SDMA_CTRL0, BUS_STD = PLBV46, BUS_TYPE = SLAVE, ISVALID = (C_NUM_PORTS > 0 && C_PIM0_BASETYPE == 3 && !(C_USE_MCB_S6_PHY && C_PORT_CONFIG > 1))
BUS_INTERFACE BUS = SDMA_LL0, BUS_STD = XIL_LL_DMA, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 0 && C_PIM0_BASETYPE == 3 && !(C_USE_MCB_S6_PHY && C_PORT_CONFIG > 1))
BUS_INTERFACE BUS = MPMC_PIM0, BUS_STD = XIL_NPI, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 0 && C_PIM0_BASETYPE == 4 && !(C_USE_MCB_S6_PHY && C_PORT_CONFIG == 4))
BUS_INTERFACE BUS = PPC440MC0, BUS_STD = XIL_PPC440MC, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 0 && C_PIM0_BASETYPE == 5 && !C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = VFBC0, BUS_STD = XIL_VFBC, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 0 && C_PIM0_BASETYPE == 6 && !(C_USE_MCB_S6_PHY && C_PORT_CONFIG == 4))
BUS_INTERFACE BUS = MCB0, BUS_STD = XIL_MCB_PORT, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 0 && C_PIM0_BASETYPE == 7 && C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = XCL1, BUS_STD = XIL_MEMORY_CHANNEL, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 1 && !(C_USE_MCB_S6_PHY && C_PORT_CONFIG > 2))
BUS_INTERFACE BUS = XCL1_B, BUS_STD = XIL_MEMORY_CHANNEL, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 1 && C_XCL1_B_IN_USE && !(C_USE_MCB_S6_PHY && C_PORT_CONFIG > 2))
BUS_INTERFACE BUS = SPLB1, BUS_STD = PLBV46, BUS_TYPE = SLAVE, ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 2 && !(C_USE_MCB_S6_PHY && C_PORT_CONFIG == 4))
BUS_INTERFACE BUS = SDMA_CTRL1, BUS_STD = PLBV46, BUS_TYPE = SLAVE, ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 3 && !(C_USE_MCB_S6_PHY && C_PORT_CONFIG > 2))
BUS_INTERFACE BUS = SDMA_LL1, BUS_STD = XIL_LL_DMA, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 3 && !(C_USE_MCB_S6_PHY && C_PORT_CONFIG > 2))
BUS_INTERFACE BUS = MPMC_PIM1, BUS_STD = XIL_NPI, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 4 && !(C_USE_MCB_S6_PHY && C_PORT_CONFIG == 4))
BUS_INTERFACE BUS = PPC440MC1, BUS_STD = XIL_PPC440MC, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 5 && !C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = VFBC1, BUS_STD = XIL_VFBC, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 6 && !(C_USE_MCB_S6_PHY && C_PORT_CONFIG == 4))
BUS_INTERFACE BUS = MCB1, BUS_STD = XIL_MCB_PORT, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 7 && C_USE_MCB_S6_PHY && C_PORT_CONFIG < 4)
BUS_INTERFACE BUS = XCL2, BUS_STD = XIL_MEMORY_CHANNEL, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 1 && !(C_USE_MCB_S6_PHY && C_PORT_CONFIG > 2))
BUS_INTERFACE BUS = XCL2_B, BUS_STD = XIL_MEMORY_CHANNEL, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 1 && C_XCL2_B_IN_USE && !(C_USE_MCB_S6_PHY && C_PORT_CONFIG > 2))
BUS_INTERFACE BUS = SPLB2, BUS_STD = PLBV46, BUS_TYPE = SLAVE, ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 2 && !(C_USE_MCB_S6_PHY && C_PORT_CONFIG > 2))
BUS_INTERFACE BUS = SDMA_CTRL2, BUS_STD = PLBV46, BUS_TYPE = SLAVE, ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 3 && !(C_USE_MCB_S6_PHY && C_PORT_CONFIG > 2))
BUS_INTERFACE BUS = SDMA_LL2, BUS_STD = XIL_LL_DMA, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 3 && !(C_USE_MCB_S6_PHY && C_PORT_CONFIG > 2))
BUS_INTERFACE BUS = MPMC_PIM2, BUS_STD = XIL_NPI, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 4 && !(C_USE_MCB_S6_PHY && C_PORT_CONFIG > 2))
BUS_INTERFACE BUS = PPC440MC2, BUS_STD = XIL_PPC440MC, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 5 && !C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = VFBC2, BUS_STD = XIL_VFBC, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 6 && !(C_USE_MCB_S6_PHY && C_PORT_CONFIG > 2))
BUS_INTERFACE BUS = MCB2, BUS_STD = XIL_MCB_PORT, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 2 && (C_PIM2_BASETYPE == 7 || C_PIM2_BASETYPE == 8 || C_PIM2_BASETYPE == 9) && C_USE_MCB_S6_PHY && C_PORT_CONFIG < 3)
BUS_INTERFACE BUS = XCL3, BUS_STD = XIL_MEMORY_CHANNEL, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 1 && !(C_USE_MCB_S6_PHY && C_PORT_CONFIG > 1))
BUS_INTERFACE BUS = XCL3_B, BUS_STD = XIL_MEMORY_CHANNEL, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 1 && C_XCL3_B_IN_USE && !(C_USE_MCB_S6_PHY && C_PORT_CONFIG > 1))
BUS_INTERFACE BUS = SPLB3, BUS_STD = PLBV46, BUS_TYPE = SLAVE, ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 2 && !(C_USE_MCB_S6_PHY && C_PORT_CONFIG > 1))
BUS_INTERFACE BUS = SDMA_CTRL3, BUS_STD = PLBV46, BUS_TYPE = SLAVE, ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 3 && !(C_USE_MCB_S6_PHY && C_PORT_CONFIG > 1))
BUS_INTERFACE BUS = SDMA_LL3, BUS_STD = XIL_LL_DMA, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 3 && !(C_USE_MCB_S6_PHY && C_PORT_CONFIG > 1))
BUS_INTERFACE BUS = MPMC_PIM3, BUS_STD = XIL_NPI, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 4 && !(C_USE_MCB_S6_PHY && C_PORT_CONFIG > 1))
BUS_INTERFACE BUS = PPC440MC3, BUS_STD = XIL_PPC440MC, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 5 && !C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = VFBC3, BUS_STD = XIL_VFBC, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 6 && !(C_USE_MCB_S6_PHY && C_PORT_CONFIG > 1))
BUS_INTERFACE BUS = MCB3, BUS_STD = XIL_MCB_PORT, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 3 && (C_PIM3_BASETYPE == 7 || C_PIM3_BASETYPE == 8 || C_PIM3_BASETYPE == 9) && C_USE_MCB_S6_PHY && C_PORT_CONFIG < 2)
BUS_INTERFACE BUS = XCL4, BUS_STD = XIL_MEMORY_CHANNEL, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 1 && !C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = XCL4_B, BUS_STD = XIL_MEMORY_CHANNEL, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 1 && C_XCL4_B_IN_USE && !C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = SPLB4, BUS_STD = PLBV46, BUS_TYPE = SLAVE, ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 2 && !C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = SDMA_CTRL4, BUS_STD = PLBV46, BUS_TYPE = SLAVE, ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 3 && !C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = SDMA_LL4, BUS_STD = XIL_LL_DMA, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 3 && !C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = MPMC_PIM4, BUS_STD = XIL_NPI, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 4 && !C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = PPC440MC4, BUS_STD = XIL_PPC440MC, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 5 && !C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = VFBC4, BUS_STD = XIL_VFBC, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 6 && !C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = MCB4, BUS_STD = XIL_MCB_PORT, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 4 && (C_PIM4_BASETYPE == 8 || C_PIM4_BASETYPE == 9) && C_USE_MCB_S6_PHY && C_PORT_CONFIG == 0)
BUS_INTERFACE BUS = XCL5, BUS_STD = XIL_MEMORY_CHANNEL, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 1 && !C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = XCL5_B, BUS_STD = XIL_MEMORY_CHANNEL, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 1 && C_XCL5_B_IN_USE && !C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = SPLB5, BUS_STD = PLBV46, BUS_TYPE = SLAVE, ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 2 && !C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = SDMA_CTRL5, BUS_STD = PLBV46, BUS_TYPE = SLAVE, ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 3 && !C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = SDMA_LL5, BUS_STD = XIL_LL_DMA, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 3 && !C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = MPMC_PIM5, BUS_STD = XIL_NPI, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 4 && !C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = PPC440MC5, BUS_STD = XIL_PPC440MC, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 5 && !C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = VFBC5, BUS_STD = XIL_VFBC, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 6 && !C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = MCB5, BUS_STD = XIL_MCB_PORT, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 5 && (C_PIM5_BASETYPE == 8 || C_PIM5_BASETYPE == 9) && C_USE_MCB_S6_PHY && C_PORT_CONFIG == 0)
BUS_INTERFACE BUS = XCL6, BUS_STD = XIL_MEMORY_CHANNEL, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 1 && !C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = XCL6_B, BUS_STD = XIL_MEMORY_CHANNEL, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 1 && C_XCL6_B_IN_USE && !C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = SPLB6, BUS_STD = PLBV46, BUS_TYPE = SLAVE, ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 2 && !C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = SDMA_CTRL6, BUS_STD = PLBV46, BUS_TYPE = SLAVE, ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 3 && !C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = SDMA_LL6, BUS_STD = XIL_LL_DMA, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 3 && !C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = MPMC_PIM6, BUS_STD = XIL_NPI, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 4 && !C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = PPC440MC6, BUS_STD = XIL_PPC440MC, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 5 && !C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = VFBC6, BUS_STD = XIL_VFBC, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 6 && !C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = MCB6, BUS_STD = XIL_MCB_PORT, BUS_TYPE = TARGET, ISVALID = (0)
BUS_INTERFACE BUS = XCL7, BUS_STD = XIL_MEMORY_CHANNEL, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 1 && !C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = XCL7_B, BUS_STD = XIL_MEMORY_CHANNEL, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 1 && C_XCL7_B_IN_USE && !C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = SPLB7, BUS_STD = PLBV46, BUS_TYPE = SLAVE, ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 2 && !C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = SDMA_CTRL7, BUS_STD = PLBV46, BUS_TYPE = SLAVE, ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 3 && !C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = SDMA_LL7, BUS_STD = XIL_LL_DMA, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 3 && !C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = MPMC_PIM7, BUS_STD = XIL_NPI, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 4 && !C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = PPC440MC7, BUS_STD = XIL_PPC440MC, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 5 && !C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = VFBC7, BUS_STD = XIL_VFBC, BUS_TYPE = TARGET, ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 6 && !C_USE_MCB_S6_PHY)
BUS_INTERFACE BUS = MCB7, BUS_STD = XIL_MCB_PORT, BUS_TYPE = TARGET, ISVALID = (0)
BUS_INTERFACE BUS = MPMC_CTRL, BUS_STD = PLBV46, BUS_TYPE = SLAVE, ISVALID = (C_INCLUDE_ECC_SUPPORT || C_USE_STATIC_PHY || C_DEBUG_REG_ENABLE || C_PM_ENABLE || [xstrncmp C_MEM_TYPE  SDRAM ])

## Generics for VHDL or Parameters for Verilog
PARAMETER C_FAMILY = virtex5, DT = STRING
PARAMETER C_BASEFAMILY = virtex5, DT = STRING, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_basefamily
PARAMETER C_SUBFAMILY = fx, DT = STRING, TYPE = NON_HDL
PARAMETER C_DEVICE = 5vlx50t, DT = STRING, TYPE = NON_HDL
PARAMETER C_PACKAGE = ff1136, DT = STRING, TYPE = NON_HDL
PARAMETER C_SPEEDGRADE = -1, DT = STRING, TYPE = NON_HDL
PARAMETER C_SPEEDGRADE_INT = 1, DT = INTEGER, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_speedgrade
PARAMETER C_NUM_PORTS = 1, DT = INTEGER, RANGE = (1:8), IPLEVEL_DRC_PROC = iplevel_drc_num_ports
PARAMETER C_PORT_CONFIG = 1, DT = INTEGER, RANGE = (0:4), ASSIGNMENT = REQUIRE, VALUES = (0=B32 B32 U32 U32 U32 U32, 1=B32 B32 B32 B32, 2=B64 B32 B32, 3=B64 B64, 4=B128), ISVALID = (C_USE_MCB_S6_PHY), IO_IS = C_PORT_CONFIG
PARAMETER C_ALL_PIMS_SHARE_ADDRESSES = 1, DT = INTEGER, RANGE = (0,1)
PARAMETER C_MPMC_BASEADDR = 0xFFFFFFFF, BUS = XCL0:XCL0_B:SPLB0:SDMA_LL0:PPC440MC0:VFBC0:XCL1:XCL1_B:SPLB1:SDMA_LL1:PPC440MC1:VFBC1:XCL2:XCL2_B:SPLB2:SDMA_LL2:PPC440MC2:VFBC2:XCL3:XCL3_B:SPLB3:SDMA_LL3:PPC440MC3:VFBC3:XCL4:XCL4_B:SPLB4:SDMA_LL4:PPC440MC4:VFBC4:XCL5:XCL5_B:SPLB5:SDMA_LL5:PPC440MC5:VFBC5:XCL6:XCL6_B:SPLB6:SDMA_LL6:PPC440MC6:VFBC6:XCL7:XCL7_B:SPLB7:SDMA_LL7:PPC440MC7:VFBC7, ADDRESS = BASE, PAIR = C_MPMC_HIGHADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = (C_ALL_PIMS_SHARE_ADDRESSES), IO_IF = memory_0, IO_IS = C_BASEADDR, ASSIGNMENT = REQUIRE
PARAMETER C_MPMC_HIGHADDR = 0x00000000, BUS = XCL0:XCL0_B:SPLB0:SDMA_LL0:PPC440MC0:VFBC0:XCL1:XCL1_B:SPLB1:SDMA_LL1:PPC440MC1:VFBC1:XCL2:XCL2_B:SPLB2:SDMA_LL2:PPC440MC2:VFBC2:XCL3:XCL3_B:SPLB3:SDMA_LL3:PPC440MC3:VFBC3:XCL4:XCL4_B:SPLB4:SDMA_LL4:PPC440MC4:VFBC4:XCL5:XCL5_B:SPLB5:SDMA_LL5:PPC440MC5:VFBC5:XCL6:XCL6_B:SPLB6:SDMA_LL6:PPC440MC6:VFBC6:XCL7:XCL7_B:SPLB7:SDMA_LL7:PPC440MC7:VFBC7, ADDRESS = HIGH, PAIR = C_MPMC_BASEADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = (C_ALL_PIMS_SHARE_ADDRESSES), IO_IF = memory_0, IO_IS = C_HIGHADDR, ASSIGNMENT = REQUIRE
PARAMETER C_MPMC_SW_BASEADDR = 0xFFFFFFFF, DT = STD_LOGIC_VECTOR, ISVALID = (C_ALL_PIMS_SHARE_ADDRESSES == 0), TYPE = NON_HDL
PARAMETER C_MPMC_SW_HIGHADDR = 0x00000000, DT = STD_LOGIC_VECTOR, ISVALID = (C_ALL_PIMS_SHARE_ADDRESSES == 0), TYPE = NON_HDL
PARAMETER C_SDMA_CTRL_BASEADDR = 0xFFFFFFFF, DT = STD_LOGIC_VECTOR, BUS = SDMA_CTRL0:SDMA_CTRL1:SDMA_CTRL2:SDMA_CTRL3:SDMA_CTRL4:SDMA_CTRL5:SDMA_CTRL6:SDMA_CTRL7, ADDRESS = BASE, PAIR = C_SDMA_CTRL_HIGHADDR, ADDR_TYPE = REGISTER, ISVALID = ((C_ALL_PIMS_SHARE_ADDRESSES) && ((C_PIM0_BASETYPE == 3) || (C_PIM1_BASETYPE == 3) || (C_PIM2_BASETYPE == 3) || (C_PIM3_BASETYPE == 3) || (C_PIM4_BASETYPE == 3) || (C_PIM5_BASETYPE == 3) || (C_PIM6_BASETYPE == 3) || (C_PIM7_BASETYPE == 3))), ASSIGNMENT = REQUIRE
PARAMETER C_SDMA_CTRL_HIGHADDR = 0x00000000, DT = STD_LOGIC_VECTOR, BUS = SDMA_CTRL0:SDMA_CTRL1:SDMA_CTRL2:SDMA_CTRL3:SDMA_CTRL4:SDMA_CTRL5:SDMA_CTRL6:SDMA_CTRL7, ADDRESS = HIGH, PAIR = C_SDMA_CTRL_BASEADDR, ADDR_TYPE = REGISTER, ISVALID = ((C_ALL_PIMS_SHARE_ADDRESSES) && ((C_PIM0_BASETYPE == 3) || (C_PIM1_BASETYPE == 3) || (C_PIM2_BASETYPE == 3) || (C_PIM3_BASETYPE == 3) || (C_PIM4_BASETYPE == 3) || (C_PIM5_BASETYPE == 3) || (C_PIM6_BASETYPE == 3) || (C_PIM7_BASETYPE == 3))), ASSIGNMENT = REQUIRE
PARAMETER C_MPMC_CTRL_BASEADDR = 0xFFFFFFFF, DT = STD_LOGIC_VECTOR, BUS = MPMC_CTRL, ADDRESS = BASE, PAIR = C_MPMC_CTRL_HIGHADDR, ADDR_TYPE = REGISTER, ISVALID = (C_INCLUDE_ECC_SUPPORT || C_USE_STATIC_PHY || C_DEBUG_REG_ENABLE || C_PM_ENABLE), ASSIGNMENT = REQUIRE
PARAMETER C_MPMC_CTRL_HIGHADDR = 0x00000000, DT = STD_LOGIC_VECTOR, BUS = MPMC_CTRL, ADDRESS = HIGH, PAIR = C_MPMC_CTRL_BASEADDR, ADDR_TYPE = REGISTER, ISVALID = (C_INCLUDE_ECC_SUPPORT || C_USE_STATIC_PHY || C_DEBUG_REG_ENABLE || C_PM_ENABLE), ASSIGNMENT = REQUIRE
PARAMETER C_MPMC_CTRL_AWIDTH = 32, DT = INTEGER, BUS = MPMC_CTRL, ASSIGNMENT = CONSTANT, ISVALID = (C_INCLUDE_ECC_SUPPORT || C_USE_STATIC_PHY || C_DEBUG_REG_ENABLE || C_PM_ENABLE)
PARAMETER C_MPMC_CTRL_DWIDTH = 64, DT = INTEGER, BUS = MPMC_CTRL, RANGE = (32,64,128), ISVALID = (C_INCLUDE_ECC_SUPPORT || C_USE_STATIC_PHY || C_DEBUG_REG_ENABLE || C_PM_ENABLE)
PARAMETER C_MPMC_CTRL_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = MPMC_CTRL, ASSIGNMENT = CONSTANT, ISVALID = (C_INCLUDE_ECC_SUPPORT || C_USE_STATIC_PHY || C_DEBUG_REG_ENABLE || C_PM_ENABLE)
PARAMETER C_MPMC_CTRL_NUM_MASTERS = 1, DT = INTEGER, BUS = MPMC_CTRL, RANGE = (0:16), ISVALID = (C_INCLUDE_ECC_SUPPORT || C_USE_STATIC_PHY || C_DEBUG_REG_ENABLE || C_PM_ENABLE)
PARAMETER C_MPMC_CTRL_MID_WIDTH = 1, DT = INTEGER, BUS = MPMC_CTRL, RANGE = (0:4), ISVALID = (C_INCLUDE_ECC_SUPPORT || C_USE_STATIC_PHY || C_DEBUG_REG_ENABLE || C_PM_ENABLE)
PARAMETER C_MPMC_CTRL_P2P = 1, DT = INTEGER, BUS = MPMC_CTRL, RANGE = (0,1), ISVALID = (C_INCLUDE_ECC_SUPPORT || C_USE_STATIC_PHY || C_DEBUG_REG_ENABLE || C_PM_ENABLE)
PARAMETER C_MPMC_CTRL_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = MPMC_CTRL, ASSIGNMENT = CONSTANT, ISVALID = (C_INCLUDE_ECC_SUPPORT || C_USE_STATIC_PHY || C_DEBUG_REG_ENABLE || C_PM_ENABLE)
PARAMETER C_MPMC_CTRL_SMALLEST_MASTER = 32, DT = INTEGER, BUS = MPMC_CTRL, RANGE = (32,64,128), ISVALID = (C_INCLUDE_ECC_SUPPORT || C_USE_STATIC_PHY || C_DEBUG_REG_ENABLE || C_PM_ENABLE)
PARAMETER C_NUM_IDELAYCTRL = 1, DT = INTEGER, RANGE = (0:16), IO_IF = memory_0, IO_IS = C_NUM_IDELAYCTRL, ASSIGNMENT = OPTIONAL_UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_num_idelayctrl, ISVALID = (C_USE_MIG_V4_PHY | C_USE_MIG_V5_PHY)
PARAMETER C_IDELAYCTRL_LOC = NOT_SET, DT = STRING, TYPE = NON_HDL, IO_IF = memory_0, IO_IS = C_IDELAYCTRL_LOC, ASSIGNMENT = OPTIONAL_UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_idelayctrl_loc, ISVALID = (C_USE_MIG_V4_PHY | C_USE_MIG_V5_PHY)
PARAMETER C_IODELAY_GRP = NOT_SET, DT = STRING, ASSIGNMENT = OPTIONAL_UPDATE, IO_IF = memory_0, IO_IS = C_IODELAY_GRP, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_iodelay_grp, ISVALID = (C_USE_MIG_V6_PHY)
PARAMETER C_MCB_LOC = NOT_SET, DT = STRING, TYPE = NON_HDL, VALUES = (NOT_SET=NOT SET, MEMC1=MEMC1, MEMC2=MEMC2, MEMC3=MEMC3, MEMC4=MEMC4), IO_IF = memory_0, IO_IS = C_MCB_LOC, ASSIGNMENT = REQUIRE, ISVALID = (C_USE_MCB_S6_PHY)
PARAMETER C_MMCM_EXT_LOC = NOT_SET, DT = STRING, TYPE = NON_HDL, IO_IS = C_MMCM_EXT_LOC, ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mmcm_loc, ISVALID = (C_USE_MIG_V6_PHY)
PARAMETER C_MMCM_INT_LOC = NOT_SET, DT = STRING, TYPE = NON_HDL, IO_IS = C_MMCM_INT_LOC, ISVALID = (0)
PARAMETER C_MAX_REQ_ALLOWED = 1, DT = INTEGER, ASSIGNMENT = CONSTANT
PARAMETER C_ARB_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (!C_USE_MCB_S6_PHY)
PARAMETER C_WR_DATAPATH_TML_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (!C_USE_MCB_S6_PHY)
PARAMETER C_RD_DATAPATH_TML_MAX_FANOUT = 0, DT = INTEGER, RANGE = (0,1,2,4,8), ISVALID = (!C_USE_MCB_S6_PHY)
PARAMETER C_ARB_USE_DEFAULT = 0, DT = INTEGER, ASSIGNMENT = CONSTANT
PARAMETER C_ARB0_ALGO = ROUND_ROBIN, DT = STRING, VALUES = (ROUND_ROBIN=Round Robin, FIXED=Fixed, CUSTOM=Custom)
PARAMETER C_ARB0_NUM_SLOTS = 8, DT = INTEGER, RANGE = (1:16), ISVALID = ([xstrncmp C_ARB0_ALGO  CUSTOM ]), IPLEVEL_DRC_PROC = iplevel_drc_arb0_num_slots
PARAMETER C_ARB0_SLOT0 = 01234567, DT = STRING, ISVALID = (C_ARB0_NUM_SLOTS > 0  && [xstrncmp C_ARB0_ALGO  CUSTOM ]), TYPE = NON_HDL
PARAMETER C_ARB0_SLOT1 = 12345670, DT = STRING, ISVALID = (C_ARB0_NUM_SLOTS > 1  && [xstrncmp C_ARB0_ALGO  CUSTOM ]), TYPE = NON_HDL
PARAMETER C_ARB0_SLOT2 = 23456701, DT = STRING, ISVALID = (C_ARB0_NUM_SLOTS > 2  && [xstrncmp C_ARB0_ALGO  CUSTOM ]), TYPE = NON_HDL
PARAMETER C_ARB0_SLOT3 = 34567012, DT = STRING, ISVALID = (C_ARB0_NUM_SLOTS > 3  && [xstrncmp C_ARB0_ALGO  CUSTOM ]), TYPE = NON_HDL
PARAMETER C_ARB0_SLOT4 = 45670123, DT = STRING, ISVALID = (C_ARB0_NUM_SLOTS > 4  && [xstrncmp C_ARB0_ALGO  CUSTOM ]), TYPE = NON_HDL
PARAMETER C_ARB0_SLOT5 = 56701234, DT = STRING, ISVALID = (C_ARB0_NUM_SLOTS > 5  && [xstrncmp C_ARB0_ALGO  CUSTOM ]), TYPE = NON_HDL
PARAMETER C_ARB0_SLOT6 = 67012345, DT = STRING, ISVALID = (C_ARB0_NUM_SLOTS > 6  && [xstrncmp C_ARB0_ALGO  CUSTOM ]), TYPE = NON_HDL
PARAMETER C_ARB0_SLOT7 = 70123456, DT = STRING, ISVALID = (C_ARB0_NUM_SLOTS > 7  && [xstrncmp C_ARB0_ALGO  CUSTOM ]), TYPE = NON_HDL
PARAMETER C_ARB0_SLOT8 = 01234567, DT = STRING, ISVALID = (C_ARB0_NUM_SLOTS > 8  && [xstrncmp C_ARB0_ALGO  CUSTOM ]), TYPE = NON_HDL
PARAMETER C_ARB0_SLOT9 = 12345670, DT = STRING, ISVALID = (C_ARB0_NUM_SLOTS > 9  && [xstrncmp C_ARB0_ALGO  CUSTOM ]), TYPE = NON_HDL
PARAMETER C_ARB0_SLOT10 = 23456701, DT = STRING, ISVALID = (C_ARB0_NUM_SLOTS > 10 && [xstrncmp C_ARB0_ALGO  CUSTOM ]), TYPE = NON_HDL
PARAMETER C_ARB0_SLOT11 = 34567012, DT = STRING, ISVALID = (C_ARB0_NUM_SLOTS > 11 && [xstrncmp C_ARB0_ALGO  CUSTOM ]), TYPE = NON_HDL
PARAMETER C_ARB0_SLOT12 = 45670123, DT = STRING, ISVALID = (C_ARB0_NUM_SLOTS > 12 && [xstrncmp C_ARB0_ALGO  CUSTOM ]), TYPE = NON_HDL
PARAMETER C_ARB0_SLOT13 = 56701234, DT = STRING, ISVALID = (C_ARB0_NUM_SLOTS > 13 && [xstrncmp C_ARB0_ALGO  CUSTOM ]), TYPE = NON_HDL
PARAMETER C_ARB0_SLOT14 = 67012345, DT = STRING, ISVALID = (C_ARB0_NUM_SLOTS > 14 && [xstrncmp C_ARB0_ALGO  CUSTOM ]), TYPE = NON_HDL
PARAMETER C_ARB0_SLOT15 = 70123456, DT = STRING, ISVALID = (C_ARB0_NUM_SLOTS > 15 && [xstrncmp C_ARB0_ALGO  CUSTOM ]), TYPE = NON_HDL
PARAMETER C_PM_ENABLE = 0, DT = INTEGER, RANGE = (0,1)
PARAMETER C_PM_DC_WIDTH = 48, DT = INTEGER, RANGE = (1:64), ISVALID = (C_PM_ENABLE)
PARAMETER C_PM_GC_CNTR = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PM_ENABLE)
PARAMETER C_PM_GC_WIDTH = 48, DT = INTEGER, RANGE = (1:64), ISVALID = (C_PM_ENABLE)
PARAMETER C_PM_SHIFT_CNT_BY = 1, DT = INTEGER, RANGE = (0:3), ISVALID = (C_PM_ENABLE)
PARAMETER C_SKIP_SIM_INIT_DELAY = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (!C_USE_MCB_S6_PHY)
PARAMETER C_USE_MIG_S3_PHY = 0, DT = INTEGER, RANGE = (0,1), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_phy, ASSIGNMENT = UPDATE
PARAMETER C_USE_MIG_V4_PHY = 0, DT = INTEGER, RANGE = (0,1), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_phy, ASSIGNMENT = UPDATE
PARAMETER C_USE_MIG_V5_PHY = 0, DT = INTEGER, RANGE = (0,1), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_phy, ASSIGNMENT = UPDATE
PARAMETER C_USE_MIG_V6_PHY = 0, DT = INTEGER, RANGE = (0,1), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_phy, ASSIGNMENT = UPDATE
PARAMETER C_USE_MCB_S6_PHY = 0, DT = INTEGER, RANGE = (0,1), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_phy, ASSIGNMENT = UPDATE
PARAMETER C_USE_STATIC_PHY = 0, DT = INTEGER, RANGE = (0,1), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_phy, ASSIGNMENT = OPTIONAL_UPDATE, IO_IF = memory_0, IO_IS = C_USE_STATIC_PHY, ISVALID = (![xstrncmp C_BASEFAMILY  spartan6 ] && ![xstrncmp C_BASEFAMILY  virtex6 ])
PARAMETER C_STATIC_PHY_RDDATA_CLK_SEL = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_USE_STATIC_PHY)
PARAMETER C_STATIC_PHY_RDDATA_SWAP_RISE = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_USE_STATIC_PHY && ![xstrncmp C_MEM_TYPE  SDRAM ])
PARAMETER C_STATIC_PHY_RDEN_DELAY = 5, DT = INTEGER, RANGE = (0:15), ISVALID = (C_USE_STATIC_PHY), IO_IF = memory_0, IO_IS = C_STATIC_PHY_RDEN_DELAY
PARAMETER C_DEBUG_REG_ENABLE = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_USE_MIG_S3_PHY || C_USE_MIG_V4_PHY || C_USE_MIG_V5_PHY)
PARAMETER C_SPECIAL_BOARD = NONE, DT = STRING, VALUES = (NONE=NONE, S3E_STKIT=S3E_STKIT, S3E_1600E=S3E_1600E, S3A_STKIT=S3A_STKIT), IO_IF = memory_0, IO_IS = C_SPECIAL_BOARD, ISVALID = (C_USE_MIG_S3_PHY)
PARAMETER C_USE_MIG_FLOW = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_USE_MIG_S3_PHY || C_USE_MIG_V4_PHY || C_USE_MIG_V5_PHY || C_USE_MIG_V6_PHY), TYPE = NON_HDL, SYSLEVEL_DRC_PROC = syslevel_drc_mig_flow
PARAMETER C_MEM_ADDR_ORDER = BANK_ROW_COLUMN, DT = STRING, VALUES = (BANK_ROW_COLUMN=BANK_ROW_COLUMN, ROW_BANK_COLUMN=ROW_BANK_COLUMN), ISVALID = (C_USE_MCB_S6_PHY), IO_IS = C_MEM_ADDR_ORDER
PARAMETER C_MEM_CALIBRATION_MODE = 1, DT = INTEGER, RANGE = (0:1), VALUES = (1=CALIBRATION, 0=NO CALIBRATION), ISVALID = (C_USE_MCB_S6_PHY), IO_IS = C_MEM_CALIBRATION_MODE
PARAMETER C_MEM_CALIBRATION_DELAY = HALF, DT = STRING, VALUES = (QUARTER=QUARTER, FULL=FULL, HALF=HALF, THREEQUARTER=THREEQUARTER), ISVALID = (C_USE_MCB_S6_PHY), IO_IS = C_MEM_CALIBRATION_DELAY
PARAMETER C_MEM_CALIBRATION_SOFT_IP = FALSE, DT = STRING, VALUES = (FALSE=FALSE, TRUE=TRUE), ISVALID = (C_USE_MCB_S6_PHY), IO_IS = C_MEM_CALIBRATION_SOFT_IP
PARAMETER C_MEM_CALIBRATION_BYPASS = NO, DT = STRING, VALUES = (YES=YES, NO=NO), ISVALID = (C_USE_MCB_S6_PHY), IO_IS = C_MEM_CALIBRATION_BYPASS
PARAMETER C_MPMC_MCB_DRP_CLK_PRESENT = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_USE_MCB_S6_PHY), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mpmc_mcb_drp_clk_present
PARAMETER C_MEM_SKIP_IN_TERM_CAL = 1, DT = INTEGER, RANGE = (0:1), ISVALID = (C_USE_MCB_S6_PHY && [xstrncmp C_MEM_CALIBRATION_SOFT_IP  TRUE ] && ![xstrncmp C_MEM_TYPE  LPDDR ]), IO_IS = C_MEM_SKIP_IN_TERM_CAL
PARAMETER C_MEM_SKIP_DYNAMIC_CAL = 1, DT = INTEGER, RANGE = (0:1), ISVALID = (C_USE_MCB_S6_PHY && [xstrncmp C_MEM_CALIBRATION_SOFT_IP  TRUE ]), IO_IS = C_MEM_SKIP_DYNAMIC_CAL
PARAMETER C_MEM_SKIP_DYN_IN_TERM = 1, DT = INTEGER, RANGE = (0:1), ISVALID = (C_USE_MCB_S6_PHY && [xstrncmp C_MEM_CALIBRATION_SOFT_IP  TRUE ] && ![xstrncmp C_MEM_TYPE  LPDDR ]), IO_IS = C_MEM_SKIP_DYN_IN_TERM
PARAMETER C_MEM_INCDEC_THRESHOLD = 0x02, DT = INTEGER, RANGE = (0:255), ISVALID = (C_USE_MCB_S6_PHY), IO_IS = C_MEM_INCDEC_THRESHOLD
PARAMETER C_MEM_CHECK_MAX_INDELAY = 0, DT = INTEGER, RANGE = (0:1), ISVALID = (C_USE_MCB_S6_PHY), IO_IS = C_MEM_CHECK_MAX_INDELAY
PARAMETER C_MEM_CHECK_MAX_TAP_REG = 0, DT = INTEGER, RANGE = (0:1), ISVALID = (C_USE_MCB_S6_PHY), IO_IS = C_MEM_CHECK_MAX_TAP_REG
PARAMETER C_MEM_TZQINIT_MAXCNT = 512, DT = INTEGER, ISVALID = (C_USE_MCB_S6_PHY), IO_IS = C_MEM_TZQINIT_MAXCNT
PARAMETER C_MPMC_CLK_MEM_2X_PERIOD_PS = 1250, DT = INTEGER, RANGE = (1250:12500), ASSIGNMENT = OPTIONAL_UPDATE, CLK_PORT = MPMC_Clk_Mem_2x, CLK_UNIT = PS, ISVALID = (C_USE_MCB_S6_PHY), IO_IS = C_MPMC_CLK_MEM_2X_PERIOD_PS
PARAMETER C_MCB_USE_EXTERNAL_BUFPLL = 0, DT = INTEGER, RANGE = (0:1), ISVALID = (C_USE_MCB_S6_PHY), IO_IS = C_MCB_USE_EXTERNAL_BUFPLL
PARAMETER C_MCB_LDQSP_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = (C_USE_MCB_S6_PHY), IO_IS = C_MCB_LDQSP_TAP_DELAY_VAL
PARAMETER C_MCB_UDQSP_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = (C_USE_MCB_S6_PHY), IO_IS = C_MCB_UDQSP_TAP_DELAY_VAL
PARAMETER C_MCB_LDQSN_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = (C_USE_MCB_S6_PHY), IO_IS = C_MCB_LDQSN_TAP_DELAY_VAL
PARAMETER C_MCB_UDQSN_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = (C_USE_MCB_S6_PHY), IO_IS = C_MCB_UDQSN_TAP_DELAY_VAL
PARAMETER C_MCB_DQ0_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = (C_USE_MCB_S6_PHY), IO_IS = C_MCB_DQ0_TAP_DELAY_VAL
PARAMETER C_MCB_DQ1_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = (C_USE_MCB_S6_PHY), IO_IS = C_MCB_DQ1_TAP_DELAY_VAL
PARAMETER C_MCB_DQ2_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = (C_USE_MCB_S6_PHY), IO_IS = C_MCB_DQ2_TAP_DELAY_VAL
PARAMETER C_MCB_DQ3_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = (C_USE_MCB_S6_PHY), IO_IS = C_MCB_DQ3_TAP_DELAY_VAL
PARAMETER C_MCB_DQ4_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = (C_USE_MCB_S6_PHY), IO_IS = C_MCB_DQ4_TAP_DELAY_VAL
PARAMETER C_MCB_DQ5_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = (C_USE_MCB_S6_PHY), IO_IS = C_MCB_DQ5_TAP_DELAY_VAL
PARAMETER C_MCB_DQ6_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = (C_USE_MCB_S6_PHY), IO_IS = C_MCB_DQ6_TAP_DELAY_VAL
PARAMETER C_MCB_DQ7_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = (C_USE_MCB_S6_PHY), IO_IS = C_MCB_DQ7_TAP_DELAY_VAL
PARAMETER C_MCB_DQ8_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = (C_USE_MCB_S6_PHY), IO_IS = C_MCB_DQ8_TAP_DELAY_VAL
PARAMETER C_MCB_DQ9_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = (C_USE_MCB_S6_PHY), IO_IS = C_MCB_DQ9_TAP_DELAY_VAL
PARAMETER C_MCB_DQ10_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = (C_USE_MCB_S6_PHY), IO_IS = C_MCB_DQ10_TAP_DELAY_VAL
PARAMETER C_MCB_DQ11_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = (C_USE_MCB_S6_PHY), IO_IS = C_MCB_DQ11_TAP_DELAY_VAL
PARAMETER C_MCB_DQ12_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = (C_USE_MCB_S6_PHY), IO_IS = C_MCB_DQ12_TAP_DELAY_VAL
PARAMETER C_MCB_DQ13_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = (C_USE_MCB_S6_PHY), IO_IS = C_MCB_DQ13_TAP_DELAY_VAL
PARAMETER C_MCB_DQ14_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = (C_USE_MCB_S6_PHY), IO_IS = C_MCB_DQ14_TAP_DELAY_VAL
PARAMETER C_MCB_DQ15_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = (C_USE_MCB_S6_PHY), IO_IS = C_MCB_DQ15_TAP_DELAY_VAL
PARAMETER C_MCB_RZQ_LOC = NOT_SET, DT = STRING, TYPE = NON_HDL, IO_IS = C_MCB_RZQ_LOC, ISVALID = (C_USE_MCB_S6_PHY)
PARAMETER C_MCB_ZIO_LOC = NOT_SET, DT = STRING, TYPE = NON_HDL, IO_IS = C_MCB_ZIO_LOC, ISVALID = (C_USE_MCB_S6_PHY)
PARAMETER C_MEM_TYPE = DDR2, DT = STRING, VALUES = (DDR3=DDR3, DDR2=DDR2, DDR=DDR, LPDDR=LPDDR, SDRAM=SDRAM), IPLEVEL_DRC_PROC = iplevel_drc_mem_type, IO_IF = memory_0, IO_IS = C_MEM_TYPE
PARAMETER C_MEM_PARTNO = NONE, DT = STRING, TYPE = NON_HDL, IO_IF = memory_0, IO_IS = C_MEM_PARTNO, ASSIGNMENT = REQUIRE, IPLEVEL_DRC_PROC = iplevel_drc_partno
PARAMETER C_MEM_PART_DATA_DEPTH = 16, DT = INTEGER, RANGE = (1,2,4,8,16,32,64,128,256,512,1024), ASSIGNMENT = REQUIRE, TYPE = NON_HDL, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ]), IO_IF = memory_0, IO_IS = C_MEM_PART_DATA_DEPTH
PARAMETER C_MEM_PART_DATA_WIDTH = 8, DT = INTEGER, RANGE = (4,8,16,32,64), ASSIGNMENT = REQUIRE, TYPE = NON_HDL, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ]), IO_IF = memory_0, IO_IS = C_MEM_PART_DATA_WIDTH, IPLEVEL_DRC_PROC = iplevel_drc_mem_data_width
PARAMETER C_MEM_PART_NUM_BANK_BITS = 2, DT = INTEGER, RANGE = (1:4), ASSIGNMENT = REQUIRE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ]), IO_IF = memory_0, IO_IS = C_MEM_PART_NUM_BANK_BITS
PARAMETER C_MEM_PART_NUM_ROW_BITS = 13, DT = INTEGER, RANGE = (1:20), ASSIGNMENT = REQUIRE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ]), IO_IF = memory_0, IO_IS = C_MEM_PART_NUM_ROW_BITS
PARAMETER C_MEM_PART_NUM_COL_BITS = 9, DT = INTEGER, RANGE = (1:20), ASSIGNMENT = REQUIRE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ]), IO_IF = memory_0, IO_IS = C_MEM_PART_NUM_COL_BITS
PARAMETER C_MEM_PART_TRAS = 0, DT = INTEGER, ASSIGNMENT = REQUIRE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ]), IO_IF = memory_0, IO_IS = C_MEM_PART_TRAS
PARAMETER C_MEM_PART_TRASMAX = 0, DT = INTEGER, ASSIGNMENT = REQUIRE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ]), IO_IF = memory_0, IO_IS = C_MEM_PART_TRASMAX, TYPE = NON_HDL
PARAMETER C_MEM_PART_TRC = 0, DT = INTEGER, ASSIGNMENT = REQUIRE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ]), IO_IF = memory_0, IO_IS = C_MEM_PART_TRC, TYPE = NON_HDL
PARAMETER C_MEM_PART_TRCD = 0, DT = INTEGER, ASSIGNMENT = REQUIRE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ]), IO_IF = memory_0, IO_IS = C_MEM_PART_TRCD
PARAMETER C_MEM_PART_TDQSS = 1, DT = INTEGER, RANGE = (1), ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ] && [xstrncmp C_MEM_TYPE  DDR ]), IO_IF = memory_0, IO_IS = C_MEM_PART_TDQSS, TYPE = NON_HDL
PARAMETER C_MEM_PART_TWR = 0, DT = INTEGER, ASSIGNMENT = REQUIRE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ]), IO_IF = memory_0, IO_IS = C_MEM_PART_TWR
PARAMETER C_MEM_PART_TRP = 0, DT = INTEGER, ASSIGNMENT = REQUIRE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ]), IO_IF = memory_0, IO_IS = C_MEM_PART_TRP
PARAMETER C_MEM_PART_TMRD = 4, DT = INTEGER, ASSIGNMENT = REQUIRE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = (0), IO_IF = memory_0, IO_IS = C_MEM_PART_TMRD, TYPE = NON_HDL
PARAMETER C_MEM_PART_TRRD = 0, DT = INTEGER, ASSIGNMENT = REQUIRE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ]), IO_IF = memory_0, IO_IS = C_MEM_PART_TRRD, TYPE = NON_HDL
PARAMETER C_MEM_PART_TRFC = 0, DT = INTEGER, ASSIGNMENT = REQUIRE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ]), IO_IF = memory_0, IO_IS = C_MEM_PART_TRFC
PARAMETER C_MEM_PART_TREFI = 0, DT = INTEGER, ASSIGNMENT = REQUIRE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ]), IO_IF = memory_0, IO_IS = C_MEM_PART_TREFI
PARAMETER C_MEM_PART_TAL = 0, DT = INTEGER, RANGE = (0), ISVALID = (0), IO_IF = memory_0, IO_IS = C_MEM_PART_TAL, TYPE = NON_HDL
PARAMETER C_MEM_PART_TCCD = 0, DT = INTEGER, ASSIGNMENT = REQUIRE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ] && ([xstrncmp C_MEM_TYPE  DDR2 ] || [xstrncmp C_MEM_TYPE  DDR3 ])), IO_IF = memory_0, IO_IS = C_MEM_PART_TCCD, TYPE = NON_HDL
PARAMETER C_MEM_PART_TWTR = 0, DT = INTEGER, ASSIGNMENT = REQUIRE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ] && ([xstrncmp C_MEM_TYPE  DDR2 ] || [xstrncmp C_MEM_TYPE  DDR3 ])), IO_IF = memory_0, IO_IS = C_MEM_PART_TWTR
PARAMETER C_MEM_PART_TRTP = 7500, DT = INTEGER, RANGE = (7500), ISVALID = (0), IO_IF = memory_0, IO_IS = C_MEM_PART_TRTP
PARAMETER C_MEM_PART_TZQINIT = 512, DT = INTEGER, RANGE = (512), ISVALID = (0), IO_IF = memory_0, IO_IS = C_MEM_PART_TZQCS, TYPE = NON_HDL
PARAMETER C_MEM_PART_TZQCS = 64, DT = INTEGER, RANGE = (64), ISVALID = (0), IO_IF = memory_0, IO_IS = C_MEM_PART_TZQCS, TYPE = NON_HDL
PARAMETER C_MEM_PART_TPRDI = 1000000, DT = INTEGER, ISVALID = (C_USE_MIG_V6_PHY), IO_IF = memory_0, IO_IS = C_MEM_PART_TPRDI
PARAMETER C_MEM_PART_TZQI = 128000000, DT = INTEGER, ISVALID = (C_USE_MIG_V6_PHY && [xstrncmp C_MEM_TYPE  DDR3 ]), IO_IF = memory_0, IO_IS = C_MEM_PART_TZQI
PARAMETER C_MEM_PART_CAS_A_FMAX = 0, DT = INTEGER, TYPE = NON_HDL, ASSIGNMENT = REQUIRE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ]), IO_IF = memory_0, IO_IS = C_MEM_PART_CAS_A_FMAX
PARAMETER C_MEM_PART_CAS_A = 0, DT = INTEGER, TYPE = NON_HDL, ASSIGNMENT = REQUIRE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ]), VALUES = (1.5 = 1.5 (2), 2 = 2, 2.5 = 2.5 (3), 3 = 3, 3.5 = 3.5 (4), 4 = 4, 5 = 5, 6 = 6, 7 = 7, 8 = 8, 9 = 9, 10 = 10), IO_IF = memory_0, IO_IS = C_MEM_PART_CAS_A, IPLEVEL_DRC_PROC = iplevel_drc_cas_check
PARAMETER C_MEM_PART_CAS_B_FMAX = 0, DT = INTEGER, TYPE = NON_HDL, ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ] && C_MEM_PART_CAS_A_FMAX != 0), IO_IF = memory_0, IO_IS = C_MEM_PART_CAS_B_FMAX
PARAMETER C_MEM_PART_CAS_B = 0, DT = INTEGER, TYPE = NON_HDL, ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ] && C_MEM_PART_CAS_A_FMAX != 0), VALUES = (1.5 = 1.5 (2), 2 = 2, 2.5 = 2.5 (3), 3 = 3, 3.5 = 3.5 (4), 4 = 4, 5 = 5, 6 = 6, 7 = 7, 8 = 8, 9 = 9, 10 = 10), IO_IF = memory_0, IO_IS = C_MEM_PART_CAS_B, IPLEVEL_DRC_PROC = iplevel_drc_cas_check
PARAMETER C_MEM_PART_CAS_C_FMAX = 0, DT = INTEGER, TYPE = NON_HDL, ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ] && C_MEM_PART_CAS_B_FMAX != 0), IO_IF = memory_0, IO_IS = C_MEM_PART_CAS_C_FMAX
PARAMETER C_MEM_PART_CAS_C = 0, DT = INTEGER, TYPE = NON_HDL, ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ] && C_MEM_PART_CAS_B_FMAX != 0), VALUES = (1.5 = 1.5 (2), 2 = 2, 2.5 = 2.5 (3), 3 = 3, 3.5 = 3.5 (4), 4 = 4, 5 = 5, 6 = 6, 7 = 7, 8 = 8, 9 = 9, 10 = 10), IO_IF = memory_0, IO_IS = C_MEM_PART_CAS_C, IPLEVEL_DRC_PROC = iplevel_drc_cas_check
PARAMETER C_MEM_PART_CAS_D_FMAX = 0, DT = INTEGER, TYPE = NON_HDL, ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ] && C_MEM_PART_CAS_C_FMAX != 0), IO_IF = memory_0, IO_IS = C_MEM_PART_CAS_D_FMAX
PARAMETER C_MEM_PART_CAS_D = 0, DT = INTEGER, TYPE = NON_HDL, ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ] && C_MEM_PART_CAS_C_FMAX != 0), VALUES = (1.5 = 1.5 (2), 2 = 2, 2.5 = 2.5 (3), 3 = 3, 3.5 = 3.5 (4), 4 = 4, 5 = 5, 6 = 6, 7 = 7, 8 = 8, 9 = 9, 10 = 10), IO_IF = memory_0, IO_IS = C_MEM_PART_CAS_D, IPLEVEL_DRC_PROC = iplevel_drc_cas_check
PARAMETER C_MPMC_CLK0_PERIOD_PS = 1, DT = INTEGER, RANGE = (1:1000000), ASSIGNMENT = OPTIONAL_UPDATE, CLK_PORT = MPMC_Clk0, CLK_UNIT = PS
PARAMETER C_MPMC_CLK_MEM_PERIOD_PS = 1, DT = INTEGER, RANGE = (1:1000000), ASSIGNMENT = OPTIONAL_UPDATE, CLK_PORT = MPMC_Clk_Mem, CLK_UNIT = PS, TYPE = NON_HDL, ISVALID = (C_USE_STATIC_PHY || C_USE_MIG_V6_PHY)
PARAMETER C_MEM_CAS_LATENCY = 3, DT = INTEGER, RANGE = (2:10), ASSIGNMENT = OPTIONAL_UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_mem_cas_latency
PARAMETER C_MEM_ODT_TYPE = 0, DT = INTEGER, RANGE = (0:5), VALUES = (0= Disabled/Disabled , 1= 75 Ohm/RZQ/4 , 2= 150 Ohm/RZQ/2 , 3= 50 Ohm/RZQ/6, 4=Reserved/RZQ/12, 5=Reserved/RZQ/8), ISVALID = ([xstrncmp C_MEM_TYPE  DDR2 ] || [xstrncmp C_MEM_TYPE  DDR3 ]), IPLEVEL_DRC_PROC = iplevel_drc_mem_odt_type, IO_IS = C_MEM_ODT_TYPE
PARAMETER C_MEM_REDUCED_DRV = 0, DT = INTEGER, RANGE = (0:3), VALUES = (0=FULL/RZQ/6/FULL, 1=REDUCED/RZQ/7/HALF, 2=RESERVED/RESERVED/QUARTER, 3=RESERVED/RESERVED/THREEQUARTERS), IPLEVEL_DRC_PROC = iplevel_drc_mem_reduced_drv, ISVALID = ([xstrncmp C_MEM_TYPE  LPDDR ] || [xstrncmp C_MEM_TYPE  DDR ] || [xstrncmp C_MEM_TYPE  DDR2 ] || [xstrncmp C_MEM_TYPE  DDR3 ])
PARAMETER C_MEM_REG_DIMM = 0, DT = INTEGER, RANGE = (0,1), ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, IO_IF = memory_0, IO_IS = C_MEM_REG_DIMM, ISVALID = (!C_USE_MCB_S6_PHY)
PARAMETER C_MEM_CLK_WIDTH = 1, DT = INTEGER, RANGE = (1:16), ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, IO_IF = memory_0, IO_IS = C_MEM_CLK_WIDTH, ISVALID = (!C_USE_MCB_S6_PHY)
PARAMETER C_MEM_ODT_WIDTH = 1, DT = INTEGER, RANGE = (1:16), ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, IO_IF = memory_0, IO_IS = C_MEM_ODT_WIDTH, ISVALID = ([xstrncmp C_MEM_TYPE  DDR2 ] && !C_USE_MCB_S6_PHY), IPLEVEL_DRC_PROC = iplevel_drc_ranks_x_dimms_multiple
PARAMETER C_MEM_CE_WIDTH = 1, DT = INTEGER, RANGE = (1:16), ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, IO_IF = memory_0, IO_IS = C_MEM_CE_WIDTH, ISVALID = (!C_USE_MCB_S6_PHY)
PARAMETER C_MEM_CS_N_WIDTH = 1, DT = INTEGER, RANGE = (1:16), ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, IO_IF = memory_0, IO_IS = C_MEM_CS_N_WIDTH, IPLEVEL_DRC_PROC = iplevel_drc_ranks_x_dimms_multiple, ISVALID = (!C_USE_MCB_S6_PHY)
PARAMETER C_MEM_ADDR_WIDTH = 13, DT = INTEGER, RANGE = (1:20), IO_IF = memory_0, IO_IS = C_MEM_ADDR_WIDTH, ASSIGNMENT = UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_addr_width
PARAMETER C_MEM_BANKADDR_WIDTH = 2, DT = INTEGER, RANGE = (1:4), IO_IF = memory_0, IO_IS = C_MEM_BANKADDR_WIDTH, ASSIGNMENT = UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_bankaddr_width
PARAMETER C_MEM_DATA_WIDTH = 64, DT = INTEGER, RANGE = (4,8,16,32,64), IO_IF = memory_0, IO_IS = C_MEM_DATA_WIDTH, IPLEVEL_DRC_PROC = iplevel_drc_mem_data_width
PARAMETER C_MEM_BITS_DATA_PER_DQS = 8, DT = INTEGER, RANGE = (4:8), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_bits_data
PARAMETER C_MEM_DM_WIDTH = 8, DT = INTEGER, RANGE = (1,2,4,8), IO_IF = memory_0, IO_IS = C_MEM_DM_WIDTH, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_dm_width, ASSIGNMENT = UPDATE
PARAMETER C_MEM_DQS_WIDTH = 8, DT = INTEGER, RANGE = (1,2,4,8), IO_IF = memory_0, IO_IS = C_MEM_DQS_WIDTH, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_dqs_width, ASSIGNMENT = UPDATE
PARAMETER C_MEM_NUM_DIMMS = 1, DT = INTEGER, RANGE = (1)
PARAMETER C_MEM_NUM_RANKS = 1, DT = INTEGER, RANGE = (1:2), ISVALID = (!C_USE_MIG_V6_PHY && !C_USE_MCB_S6_PHY), ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, IPLEVEL_DRC_PROC = iplevel_drc_mem_num_ranks
PARAMETER C_MEM_DQS_IO_COL = 0x000000000000000000, DT = STD_LOGIC_VECTOR, IPLEVEL_DRC_PROC = iplevel_drc_mig_v3, ASSIGNMENT = CONSTANT
PARAMETER C_MEM_DQ_IO_MS = 0x000000000000000000, DT = STD_LOGIC_VECTOR, IPLEVEL_DRC_PROC = iplevel_drc_mig_v3, ASSIGNMENT = CONSTANT
PARAMETER C_DDR2_DQSN_ENABLE = 1, DT = INTEGER, RANGE = (0,1), IO_IS = C_DDR2_DQSN_ENABLE, IO_IF = memory_0, ISVALID = ([xstrncmp C_MEM_TYPE  DDR2 ]), IPLEVEL_DRC_PROC = iplevel_drc_ddr2_dqsn_enable
PARAMETER C_INCLUDE_ECC_SUPPORT = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_USE_MIG_S3_PHY || C_USE_MIG_V4_PHY || C_USE_MIG_V5_PHY || C_USE_STATIC_PHY)
PARAMETER C_ECC_DEFAULT_ON = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_INCLUDE_ECC_SUPPORT)
PARAMETER C_INCLUDE_ECC_TEST = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_INCLUDE_ECC_SUPPORT)
PARAMETER C_ECC_SEC_THRESHOLD = 1, DT = INTEGER, RANGE = (1:4095), ISVALID = (C_INCLUDE_ECC_SUPPORT)
PARAMETER C_ECC_DEC_THRESHOLD = 1, DT = INTEGER, RANGE = (1:4095), ISVALID = (C_INCLUDE_ECC_SUPPORT)
PARAMETER C_ECC_PEC_THRESHOLD = 1, DT = INTEGER, RANGE = (1:4095), ISVALID = (C_INCLUDE_ECC_SUPPORT)
PARAMETER C_ECC_DATA_WIDTH = 0, DT = INTEGER, RANGE = (0,3:8), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_ecc_datawidth, ISVALID = (C_INCLUDE_ECC_SUPPORT)
PARAMETER C_ECC_DM_WIDTH = 0, DT = INTEGER, RANGE = (0:1), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_ecc_dmwidth, ISVALID = (C_INCLUDE_ECC_SUPPORT)
PARAMETER C_ECC_DQS_WIDTH = 0, DT = INTEGER, RANGE = (0:1), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_ecc_dqswidth, ISVALID = (C_INCLUDE_ECC_SUPPORT)
PARAMETER C_MEM_PA_SR = 0, DT = INTEGER, RANGE = (0:1), VALUES = (0=FULL, 1=HALF), ISVALID = (C_USE_MCB_S6_PHY && [xstrncmp C_MEM_TYPE  LPDDR ]), IPLEVEL_DRC_PROC = iplevel_drc_mem_pa_sr
PARAMETER C_MEM_CAS_WR_LATENCY = 5, DT = INTEGER, RANGE = (5:8), ISVALID = ([xstrncmp C_MEM_TYPE  DDR3 ]), ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_mem_cas_wr_latency
PARAMETER C_MEM_AUTO_SR = ENABLED, DT = STRING, VALUES = (ENABLED=ENABLED, MANUAL=MANUAL), ISVALID = (C_USE_MCB_S6_PHY && [xstrncmp C_MEM_TYPE  DDR3 ])
PARAMETER C_MEM_HIGH_TEMP_SR = NORMAL, DT = STRING, VALUES = (NORMAL=NORMAL, EXTENDED=EXTENDED), ISVALID = (C_USE_MCB_S6_PHY && ([xstrncmp C_MEM_TYPE  DDR2 ] || [xstrncmp C_MEM_TYPE  DDR3 ]))
PARAMETER C_MEM_DYNAMIC_WRITE_ODT = OFF, DT = STRING, VALUES = (OFF=OFF, DIV2=DIV2, DIV4=DIV4), ISVALID = (C_USE_MCB_S6_PHY && [xstrncmp C_MEM_TYPE  DDR3 ])
PARAMETER C_MEM_WRLVL = 1, DT = INTEGER, RANGE = (0:1), ISVALID = (C_USE_MIG_V6_PHY && [xstrncmp C_MEM_TYPE  DDR3 ])
PARAMETER C_IDELAY_CLK_FREQ = DEFAULT, DT = STRING, VALUES = (DEFAULT=DEFAULT, 200.0=200.0, 300.0=300.0)
PARAMETER C_MEM_PHASE_DETECT = DEFAULT, DT = STRING, VALUES = (DEFAULT=DEFAULT, ON=ON, OFF=OFF)
PARAMETER C_MEM_IBUF_LPWR_MODE = DEFAULT, DT = STRING, VALUES = (DEFAULT=DEFAULT, ON=ON, OFF=OFF)
PARAMETER C_MEM_IODELAY_HP_MODE = DEFAULT, DT = STRING, VALUES = (DEFAULT=DEFAULT, ON=ON, OFF=OFF)
PARAMETER C_MEM_SIM_INIT_OPTION = DEFAULT, DT = STRING, VALUES = (DEFAULT=DEFAULT, SKIP_INIT=SKIP_INIT, SKIP_PU_DELAY=SKIP_PU_DELAY, NONE=NONE)
PARAMETER C_MEM_SIM_CAL_OPTION = DEFAULT, DT = STRING, VALUES = (DEFAULT=DEFAULT, SKIP_CAL=SKIP_CAL, FAST_CAL=FAST_CAL, FAST_WIN_DETECT=FAST_WIN_DETECT, NONE=NONE)
PARAMETER C_MEM_CAL_WIDTH = DEFAULT, DT = STRING, VALUES = (DEFAULT=DEFAULT, FULL=FULL, HALF=HALF)
PARAMETER C_MEM_NDQS_COL0 = 0, DT = INTEGER, ASSIGNMENT = OPTIONAL_UPDATE, RANGE = (0:18), ISVALID = (C_USE_MIG_V6_PHY), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_dqs_col, IO_IS = C_MEM_NDQS_COL0
PARAMETER C_MEM_NDQS_COL1 = 0, DT = INTEGER, ASSIGNMENT = OPTIONAL_UPDATE, RANGE = (0:18), ISVALID = (C_USE_MIG_V6_PHY), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_dqs_col, IO_IS = C_MEM_NDQS_COL1
PARAMETER C_MEM_NDQS_COL2 = 0, DT = INTEGER, ASSIGNMENT = OPTIONAL_UPDATE, RANGE = (0:18), ISVALID = (C_USE_MIG_V6_PHY), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_dqs_col, IO_IS = C_MEM_NDQS_COL2
PARAMETER C_MEM_NDQS_COL3 = 0, DT = INTEGER, ASSIGNMENT = OPTIONAL_UPDATE, RANGE = (0:18), ISVALID = (C_USE_MIG_V6_PHY), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_dqs_col, IO_IS = C_MEM_NDQS_COL3
PARAMETER C_MEM_DQS_LOC_COL0 = 0x000000000000000000000000000000000000, DT = STD_LOGIC_VECTOR, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_USE_MIG_V6_PHY), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_dqs_col, IO_IS = C_MEM_DQS_LOC_COL0
PARAMETER C_MEM_DQS_LOC_COL1 = 0x000000000000000000000000000000000000, DT = STD_LOGIC_VECTOR, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_USE_MIG_V6_PHY), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_dqs_col, IO_IS = C_MEM_DQS_LOC_COL1
PARAMETER C_MEM_DQS_LOC_COL2 = 0x000000000000000000000000000000000000, DT = STD_LOGIC_VECTOR, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_USE_MIG_V6_PHY), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_dqs_col, IO_IS = C_MEM_DQS_LOC_COL2
PARAMETER C_MEM_DQS_LOC_COL3 = 0x000000000000000000000000000000000000, DT = STD_LOGIC_VECTOR, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_USE_MIG_V6_PHY), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_dqs_col, IO_IS = C_MEM_DQS_LOC_COL3
PARAMETER C_MAINT_PRESCALER_PERIOD = 200000, DT = INTEGER, ISVALID = (C_USE_MIG_V6_PHY), IO_IS = C_MAINT_PRESCALER_PERIOD
PARAMETER C_TBY4TAPVALUE = 9999, DT = INTEGER, RANGE = (0:63,9999), ISVALID = (C_USE_MIG_V4_PHY)
PARAMETER C_PIM0_BASEADDR = 0xFFFFFFFF, BUS = XCL0:XCL0_B:SPLB0:SDMA_LL0:PPC440MC0:VFBC0, ADDRESS = BASE, PAIR = C_PIM0_HIGHADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = ((C_PIM0_BASETYPE != 0 && C_PIM0_BASETYPE != 4) && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_PIM0_HIGHADDR = 0x00000000, BUS = XCL0:XCL0_B:SPLB0:SDMA_LL0:PPC440MC0:VFBC0, ADDRESS = HIGH, PAIR = C_PIM0_BASEADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = ((C_PIM0_BASETYPE != 0 && C_PIM0_BASETYPE != 4) && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_PIM0_OFFSET = 0x00000000, BUS = XCL0:XCL0_B:SPLB0:SDMA_LL0:PPC440MC0, DT = STD_LOGIC_VECTOR, ISVALID = ((C_PIM0_BASETYPE == 1 || C_PIM0_BASETYPE == 2 || C_PIM0_BASETYPE == 5) && C_ALL_PIMS_SHARE_ADDRESSES == 0)
PARAMETER C_PIM0_DATA_WIDTH = 64, DT = INTEGER, BUS = MPMC_PIM0:VFBC0:MCB0, RANGE = (32,64,128), ISVALID = (C_PIM0_BASETYPE == 4 || C_PIM0_BASETYPE == 6 || ((C_PIM0_BASETYPE == 7 || C_PIM0_BASETYPE == 8 || C_PIM0_BASETYPE == 9) && C_USE_MCB_S6_PHY)), IPLEVEL_DRC_PROC = iplevel_drc_pim_data_width, ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_pim_data_width
PARAMETER C_PIM0_BASETYPE = 2, DT = INTEGER, BUS = XCL0:XCL0_B:SPLB0:SDMA_LL0:MPMC_PIM0:PPC440MC0:VFBC0:MCB0, RANGE = (0:9), VALUES = (0=INACTIVE, 1=XCL, 2=PLBV46, 3=SDMA, 4=NPI, 5=PPC440MC, 6=VFBC, 7=MCB, 8=MCB-Read, 9=MCB-Write), IPLEVEL_DRC_PROC = iplevel_drc_pim_basetype
PARAMETER C_PIM0_SUBTYPE = PLB, DT = STRING, BUS = XCL0:SPLB0:SDMA_LL0:MPMC_PIM0:PPC440MC0:VFBC0:MCB0, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_PIM0_BASETYPE != 0), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_pim_subtype, SYSLEVEL_DRC_PROC = syslevel_drc_splb_subtype
PARAMETER C_XCL0_LINESIZE = 4, DT = INTEGER, BUS = XCL0, RANGE = (1,4,8,16), ISVALID = (C_PIM0_BASETYPE == 1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_xcl_linesize
PARAMETER C_XCL0_WRITEXFER = 1, DT = INTEGER, BUS = XCL0, RANGE = (0:2), ISVALID = (C_PIM0_BASETYPE == 1)
PARAMETER C_XCL0_PIPE_STAGES = 2, DT = INTEGER, BUS = XCL0, RANGE = (0:3), ISVALID = (C_PIM0_BASETYPE == 1)
PARAMETER C_XCL0_B_IN_USE = 0, DT = INTEGER, BUS = XCL0, RANGE = (0,1), ISVALID = (C_PIM0_BASETYPE == 1)
PARAMETER C_PIM0_B_SUBTYPE = INACTIVE, DT = STRING, BUS = XCL0_B, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_XCL0_B_IN_USE), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_pim_subtype
PARAMETER C_XCL0_B_LINESIZE = 4, DT = INTEGER, BUS = XCL0_B, RANGE = (1,4,8,16), ISVALID = (C_XCL0_B_IN_USE), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_xcl_linesize
PARAMETER C_XCL0_B_WRITEXFER = 1, DT = INTEGER, BUS = XCL0_B, RANGE = (0:2), ISVALID = (C_XCL0_B_IN_USE)
PARAMETER C_SPLB0_AWIDTH = 32, DT = INTEGER, BUS = SPLB0, ASSIGNMENT = CONSTANT, ISVALID = (C_PIM0_BASETYPE == 2)
PARAMETER C_SPLB0_DWIDTH = 64, DT = INTEGER, BUS = SPLB0, RANGE = (32,64,128), ISVALID = (C_PIM0_BASETYPE == 2)
PARAMETER C_SPLB0_NATIVE_DWIDTH = 64, DT = INTEGER, BUS = SPLB0, RANGE = (32,64), ISVALID = (C_PIM0_BASETYPE == 2), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_splb_native_dwidth, ASSIGNMENT = OPTIONAL_UPDATE, SYSLEVEL_DRC_PROC = syslevel_drc_splb_native_dwidth, IO_IS = C_SPLB0_NATIVE_DWIDTH
PARAMETER C_SPLB0_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB0, RANGE = (0:16), ISVALID = (C_PIM0_BASETYPE == 2)
PARAMETER C_SPLB0_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB0, RANGE = (0:4), ISVALID = (C_PIM0_BASETYPE == 2)
PARAMETER C_SPLB0_P2P = 1, DT = INTEGER, BUS = SPLB0, RANGE = (0,1), ISVALID = (C_PIM0_BASETYPE == 2)
PARAMETER C_SPLB0_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB0, RANGE = (0,1), ISVALID = (C_PIM0_BASETYPE == 2)
PARAMETER C_SPLB0_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SPLB0, RANGE = (32,64,128), ISVALID = (C_PIM0_BASETYPE == 2)
PARAMETER C_SDMA_CTRL0_BASEADDR = 0xFFFFFFFF, BUS = SDMA_CTRL0, ADDRESS = BASE, PAIR = C_SDMA_CTRL0_HIGHADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = REGISTER, ISVALID = (C_PIM0_BASETYPE == 3 && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_SDMA_CTRL0_HIGHADDR = 0x00000000, BUS = SDMA_CTRL0, ADDRESS = HIGH, PAIR = C_SDMA_CTRL0_BASEADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = REGISTER, ISVALID = (C_PIM0_BASETYPE == 3 && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_SDMA_CTRL0_AWIDTH = 32, DT = INTEGER, BUS = SDMA_CTRL0, ASSIGNMENT = CONSTANT, ISVALID = (C_PIM0_BASETYPE == 3)
PARAMETER C_SDMA_CTRL0_DWIDTH = 64, DT = INTEGER, BUS = SDMA_CTRL0, RANGE = (32,64,128), ISVALID = (C_PIM0_BASETYPE == 3)
PARAMETER C_SDMA_CTRL0_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SDMA_CTRL0, RANGE = (32,64), ISVALID = (C_PIM0_BASETYPE == 3)
PARAMETER C_SDMA_CTRL0_NUM_MASTERS = 1, DT = INTEGER, BUS = SDMA_CTRL0, RANGE = (0:16), ISVALID = (C_PIM0_BASETYPE == 3)
PARAMETER C_SDMA_CTRL0_MID_WIDTH = 1, DT = INTEGER, BUS = SDMA_CTRL0, RANGE = (0:4), ISVALID = (C_PIM0_BASETYPE == 3)
PARAMETER C_SDMA_CTRL0_P2P = 1, DT = INTEGER, BUS = SDMA_CTRL0, RANGE = (0,1), ISVALID = (C_PIM0_BASETYPE == 3)
PARAMETER C_SDMA_CTRL0_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SDMA_CTRL0, RANGE = (0,1), ASSIGNMENT = CONSTANT, ISVALID = (C_PIM0_BASETYPE == 3)
PARAMETER C_SDMA_CTRL0_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SDMA_CTRL0, RANGE = (32,64,128), ISVALID = (C_PIM0_BASETYPE == 3)
PARAMETER C_SDMA0_COMPLETED_ERR_TX = 1, DT = INTEGER, BUS = SDMA_LL0, RANGE = (0,1), ISVALID = (C_PIM0_BASETYPE == 3)
PARAMETER C_SDMA0_COMPLETED_ERR_RX = 1, DT = INTEGER, BUS = SDMA_LL0, RANGE = (0,1), ISVALID = (C_PIM0_BASETYPE == 3)
PARAMETER C_SDMA0_PRESCALAR = 1023, DT = INTEGER, BUS = SDMA_LL0, RANGE = (0:1023), ISVALID = (C_PIM0_BASETYPE == 3)
PARAMETER C_SDMA0_PI2LL_CLK_RATIO = 1, DT = INTEGER, BUS = SDMA_LL0, RANGE = (1:2), ISVALID = (C_PIM0_BASETYPE == 3), ASSIGNMENT = REQUIRE
PARAMETER C_PPC440MC0_BURST_LENGTH = 4, DT = INTEGER, BUS = PPC440MC0, RANGE = (2,4,8), ISVALID = (C_PIM0_BASETYPE == 5)
PARAMETER C_PPC440MC0_PIPE_STAGES = 1, DT = INTEGER, BUS = PPC440MC0, RANGE = (0:2), ISVALID = (C_PIM0_BASETYPE == 5)
PARAMETER C_VFBC0_CMD_FIFO_DEPTH = 32, DT = INTEGER, BUS = VFBC0, RANGE = (32,64,128,256,512,1024,2048,4096,8192), ISVALID = (C_PIM0_BASETYPE == 6)
PARAMETER C_VFBC0_CMD_AFULL_COUNT = 3, DT = INTEGER, BUS = VFBC0, ISVALID = (C_PIM0_BASETYPE == 6)
PARAMETER C_VFBC0_RDWD_DATA_WIDTH = 32, DT = INTEGER, BUS = VFBC0, RANGE = (8,16,32,64), ISVALID = (C_PIM0_BASETYPE == 6)
PARAMETER C_VFBC0_RDWD_FIFO_DEPTH = 1024, DT = INTEGER, BUS = VFBC0, RANGE = (512,1024,2048,4096,8192), ISVALID = (C_PIM0_BASETYPE == 6)
PARAMETER C_VFBC0_RD_AEMPTY_WD_AFULL_COUNT = 3, DT = INTEGER, BUS = VFBC0, ISVALID = (C_PIM0_BASETYPE == 6)
PARAMETER C_PI0_RD_FIFO_TYPE = BRAM, DT = STRING, VALUES = ( BRAM = BRAM ,  SRL = SRL ,  DISABLED = Wr-Only ), ISVALID = (C_PIM0_BASETYPE != 0 && !C_USE_MCB_S6_PHY || C_PIM0_BASETYPE == 6)
PARAMETER C_PI0_WR_FIFO_TYPE = BRAM, DT = STRING, VALUES = ( BRAM = BRAM ,  SRL = SRL ,  DISABLED = Rd-Only ), ISVALID = (C_PIM0_BASETYPE != 0 && !C_USE_MCB_S6_PHY || C_PIM0_BASETYPE == 6), IPLEVEL_DRC_PROC = iplevel_drc_wr_fifo
PARAMETER C_PI0_ADDRACK_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM0_BASETYPE != 0 && !C_USE_MCB_S6_PHY)
PARAMETER C_PI0_RD_FIFO_APP_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM0_BASETYPE != 0 && ![xstrncmp C_PI0_RD_FIFO_TYPE DISABLED] && !C_USE_MCB_S6_PHY)
PARAMETER C_PI0_RD_FIFO_MEM_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM0_BASETYPE != 0 && ![xstrncmp C_PI0_RD_FIFO_TYPE DISABLED] && !C_USE_MCB_S6_PHY)
PARAMETER C_PI0_WR_FIFO_APP_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM0_BASETYPE != 0 && ![xstrncmp C_PI0_WR_FIFO_TYPE DISABLED] && !C_USE_MCB_S6_PHY)
PARAMETER C_PI0_WR_FIFO_MEM_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM0_BASETYPE != 0 && ![xstrncmp C_PI0_WR_FIFO_TYPE DISABLED] && !C_USE_MCB_S6_PHY)
PARAMETER C_PI0_PM_USED = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM0_BASETYPE != 0 && C_PM_ENABLE)
PARAMETER C_PI0_PM_DC_CNTR = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM0_BASETYPE != 0 && C_PM_ENABLE)
PARAMETER C_PIM1_BASEADDR = 0xFFFFFFFF, BUS = XCL1:XCL1_B:SPLB1:SDMA_LL1:PPC440MC1:VFBC1, ADDRESS = BASE, PAIR = C_PIM1_HIGHADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = (C_NUM_PORTS > 1 && (C_PIM1_BASETYPE != 0 && C_PIM1_BASETYPE != 4) && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_PIM1_HIGHADDR = 0x00000000, BUS = XCL1:XCL1_B:SPLB1:SDMA_LL1:PPC440MC1:VFBC1, ADDRESS = HIGH, PAIR = C_PIM1_BASEADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = (C_NUM_PORTS > 1 && (C_PIM1_BASETYPE != 0 && C_PIM1_BASETYPE != 4) && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_PIM1_OFFSET = 0x00000000, BUS = XCL1:XCL1_B:SPLB1:SDMA_LL1:PPC440MC1, DT = STD_LOGIC_VECTOR, ISVALID = (C_NUM_PORTS > 1 && (C_PIM1_BASETYPE == 1 || C_PIM1_BASETYPE == 2 || C_PIM1_BASETYPE == 5) && C_ALL_PIMS_SHARE_ADDRESSES == 0)
PARAMETER C_PIM1_DATA_WIDTH = 64, DT = INTEGER, BUS = MPMC_PIM1:VFBC1:MCB1, RANGE = (32,64), ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 4 || C_PIM1_BASETYPE == 6 || ((C_PIM1_BASETYPE == 7 || C_PIM1_BASETYPE == 8 || C_PIM1_BASETYPE == 9) && C_USE_MCB_S6_PHY)), IPLEVEL_DRC_PROC = iplevel_drc_pim_data_width, ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_pim_data_width
PARAMETER C_PIM1_BASETYPE = 0, DT = INTEGER, BUS = XCL1:SPLB1:SDMA_LL1:MPMC_PIM1:PPC440MC1:VFBC1:MCB1, RANGE = (0:9), VALUES = (0=INACTIVE, 1=XCL, 2=PLBV46, 3=SDMA, 4=NPI, 5=PPC440MC, 6=VFBC, 7=MCB, 8=MCB-Read, 9=MCB-Write), IPLEVEL_DRC_PROC = iplevel_drc_pim_basetype
PARAMETER C_PIM1_SUBTYPE = INACTIVE, DT = STRING, BUS = XCL1:SPLB1:SDMA_LL1:MPMC_PIM1:PPC440MC1:VFBC1:MCB1, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE != 0), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_pim_subtype, SYSLEVEL_DRC_PROC = syslevel_drc_splb_subtype
PARAMETER C_XCL1_LINESIZE = 4, DT = INTEGER, BUS = XCL1, RANGE = (1,4,8,16), ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_xcl_linesize
PARAMETER C_XCL1_WRITEXFER = 1, DT = INTEGER, BUS = XCL1, RANGE = (0:2), ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 1)
PARAMETER C_XCL1_PIPE_STAGES = 2, DT = INTEGER, BUS = XCL1, RANGE = (0:3), ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 1)
PARAMETER C_XCL1_B_IN_USE = 0, DT = INTEGER, BUS = XCL1, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 1)
PARAMETER C_PIM1_B_SUBTYPE = INACTIVE, DT = STRING, BUS = XCL1_B, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_NUM_PORTS > 1 && C_XCL1_B_IN_USE), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_pim_subtype
PARAMETER C_XCL1_B_LINESIZE = 4, DT = INTEGER, BUS = XCL1_B, RANGE = (1,4,8,16), ISVALID = (C_NUM_PORTS > 1 && C_XCL1_B_IN_USE), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_xcl_linesize
PARAMETER C_XCL1_B_WRITEXFER = 1, DT = INTEGER, BUS = XCL1_B, RANGE = (0:2), ISVALID = (C_NUM_PORTS > 1 && C_XCL1_B_IN_USE)
PARAMETER C_SPLB1_AWIDTH = 32, DT = INTEGER, BUS = SPLB1, ASSIGNMENT = CONSTANT, ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 2)
PARAMETER C_SPLB1_DWIDTH = 64, DT = INTEGER, BUS = SPLB1, RANGE = (32,64,128), ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 2)
PARAMETER C_SPLB1_NATIVE_DWIDTH = 64, DT = INTEGER, BUS = SPLB1, RANGE = (32,64), ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 2), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_splb_native_dwidth, ASSIGNMENT = OPTIONAL_UPDATE, SYSLEVEL_DRC_PROC = syslevel_drc_splb_native_dwidth, IO_IS = C_SPLB1_NATIVE_DWIDTH
PARAMETER C_SPLB1_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB1, RANGE = (0:16), ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 2)
PARAMETER C_SPLB1_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB1, RANGE = (0:4), ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 2)
PARAMETER C_SPLB1_P2P = 1, DT = INTEGER, BUS = SPLB1, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 2)
PARAMETER C_SPLB1_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB1, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 2)
PARAMETER C_SPLB1_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SPLB1, RANGE = (32,64,128), ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 2)
PARAMETER C_SDMA_CTRL1_BASEADDR = 0xFFFFFFFF, BUS = SDMA_CTRL1, ADDRESS = BASE, PAIR = C_SDMA_CTRL1_HIGHADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = REGISTER, ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 3 && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_SDMA_CTRL1_HIGHADDR = 0x00000000, BUS = SDMA_CTRL1, ADDRESS = HIGH, PAIR = C_SDMA_CTRL1_BASEADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = REGISTER, ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 3 && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_SDMA_CTRL1_AWIDTH = 32, DT = INTEGER, BUS = SDMA_CTRL1, ASSIGNMENT = CONSTANT, ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 3)
PARAMETER C_SDMA_CTRL1_DWIDTH = 64, DT = INTEGER, BUS = SDMA_CTRL1, RANGE = (32,64,128), ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 3)
PARAMETER C_SDMA_CTRL1_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SDMA_CTRL1, RANGE = (32,64), ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 3)
PARAMETER C_SDMA_CTRL1_NUM_MASTERS = 1, DT = INTEGER, BUS = SDMA_CTRL1, RANGE = (0:16), ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 3)
PARAMETER C_SDMA_CTRL1_MID_WIDTH = 1, DT = INTEGER, BUS = SDMA_CTRL1, RANGE = (0:4), ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 3)
PARAMETER C_SDMA_CTRL1_P2P = 1, DT = INTEGER, BUS = SDMA_CTRL1, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 3)
PARAMETER C_SDMA_CTRL1_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SDMA_CTRL1, RANGE = (0,1), ASSIGNMENT = CONSTANT, ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 3)
PARAMETER C_SDMA_CTRL1_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SDMA_CTRL1, RANGE = (32,64,128), ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 3)
PARAMETER C_SDMA1_COMPLETED_ERR_TX = 1, DT = INTEGER, BUS = SDMA_LL1, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 3)
PARAMETER C_SDMA1_COMPLETED_ERR_RX = 1, DT = INTEGER, BUS = SDMA_LL1, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 3)
PARAMETER C_SDMA1_PRESCALAR = 1023, DT = INTEGER, BUS = SDMA_LL1, RANGE = (0:1023), ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 3)
PARAMETER C_SDMA1_PI2LL_CLK_RATIO = 1, DT = INTEGER, BUS = SDMA_LL1, RANGE = (1:2), ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 3), ASSIGNMENT = REQUIRE
PARAMETER C_PPC440MC1_BURST_LENGTH = 4, DT = INTEGER, BUS = PPC440MC1, RANGE = (2,4,8), ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 5)
PARAMETER C_PPC440MC1_PIPE_STAGES = 1, DT = INTEGER, BUS = PPC440MC1, RANGE = (0:2), ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 5)
PARAMETER C_VFBC1_CMD_FIFO_DEPTH = 32, DT = INTEGER, BUS = VFBC1, RANGE = (32,64,128,256,512,1024,2048,4096,8192), ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 6)
PARAMETER C_VFBC1_CMD_AFULL_COUNT = 3, DT = INTEGER, BUS = VFBC1, ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 6)
PARAMETER C_VFBC1_RDWD_DATA_WIDTH = 32, DT = INTEGER, BUS = VFBC1, RANGE = (8,16,32,64), ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 6)
PARAMETER C_VFBC1_RDWD_FIFO_DEPTH = 1024, DT = INTEGER, BUS = VFBC1, RANGE = (512,1024,2048,4096,8192), ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 6)
PARAMETER C_VFBC1_RD_AEMPTY_WD_AFULL_COUNT = 3, DT = INTEGER, BUS = VFBC1, ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 6)
PARAMETER C_PI1_RD_FIFO_TYPE = BRAM, DT = STRING, VALUES = ( BRAM = BRAM ,  SRL = SRL ,  DISABLED = Wr-Only ), ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE != 0 && !C_USE_MCB_S6_PHY || C_PIM1_BASETYPE == 6)
PARAMETER C_PI1_WR_FIFO_TYPE = BRAM, DT = STRING, VALUES = ( BRAM = BRAM ,  SRL = SRL ,  DISABLED = Rd-Only ), ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE != 0 && !C_USE_MCB_S6_PHY || C_PIM1_BASETYPE == 6), IPLEVEL_DRC_PROC = iplevel_drc_wr_fifo
PARAMETER C_PI1_ADDRACK_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE != 0 && !C_USE_MCB_S6_PHY)
PARAMETER C_PI1_RD_FIFO_APP_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE != 0 && ![xstrncmp C_PI1_RD_FIFO_TYPE DISABLED] && !C_USE_MCB_S6_PHY)
PARAMETER C_PI1_RD_FIFO_MEM_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE != 0 && ![xstrncmp C_PI1_RD_FIFO_TYPE DISABLED] && !C_USE_MCB_S6_PHY)
PARAMETER C_PI1_WR_FIFO_APP_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE != 0 && ![xstrncmp C_PI1_WR_FIFO_TYPE DISABLED] && !C_USE_MCB_S6_PHY)
PARAMETER C_PI1_WR_FIFO_MEM_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE != 0 && ![xstrncmp C_PI1_WR_FIFO_TYPE DISABLED] && !C_USE_MCB_S6_PHY)
PARAMETER C_PI1_PM_USED = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE != 0 && C_PM_ENABLE)
PARAMETER C_PI1_PM_DC_CNTR = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE != 0 && C_PM_ENABLE)
PARAMETER C_PIM2_BASEADDR = 0xFFFFFFFF, BUS = XCL2:XCL2_B:SPLB2:SDMA_LL2:PPC440MC2:VFBC2, ADDRESS = BASE, PAIR = C_PIM2_HIGHADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = (C_NUM_PORTS > 2 && (C_PIM2_BASETYPE != 0 && C_PIM2_BASETYPE != 4) && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_PIM2_HIGHADDR = 0x00000000, BUS = XCL2:XCL2_B:SPLB2:SDMA_LL2:PPC440MC2:VFBC2, ADDRESS = HIGH, PAIR = C_PIM2_BASEADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = (C_NUM_PORTS > 2 && (C_PIM2_BASETYPE != 0 && C_PIM2_BASETYPE != 4) && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_PIM2_OFFSET = 0x00000000, BUS = XCL2:XCL2_B:SPLB2:SDMA_LL2:PPC440MC2, DT = STD_LOGIC_VECTOR, ISVALID = (C_NUM_PORTS > 2 && (C_PIM2_BASETYPE == 1 || C_PIM2_BASETYPE == 2 || C_PIM2_BASETYPE == 5) && C_ALL_PIMS_SHARE_ADDRESSES == 0)
PARAMETER C_PIM2_DATA_WIDTH = 64, DT = INTEGER, BUS = MPMC_PIM2:VFBC2:MCB2, RANGE = (32,64), ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 4 || C_PIM2_BASETYPE == 6 || ((C_PIM2_BASETYPE == 7 || C_PIM2_BASETYPE == 8 || C_PIM2_BASETYPE == 9) && C_USE_MCB_S6_PHY)), IPLEVEL_DRC_PROC = iplevel_drc_pim_data_width, ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_pim_data_width
PARAMETER C_PIM2_BASETYPE = 0, DT = INTEGER, BUS = XCL2:SPLB2:SDMA_LL2:MPMC_PIM2:PPC440MC2:VFBC2:MCB2, RANGE = (0:9), VALUES = (0=INACTIVE, 1=XCL, 2=PLBV46, 3=SDMA, 4=NPI, 5=PPC440MC, 6=VFBC, 7=MCB, 8=MCB-Read, 9=MCB-Write), IPLEVEL_DRC_PROC = iplevel_drc_pim_basetype
PARAMETER C_PIM2_SUBTYPE = INACTIVE, DT = STRING, BUS = XCL2:SPLB2:SDMA_LL2:MPMC_PIM2:PPC440MC2:VFBC2:MCB2, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE != 0), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_pim_subtype, SYSLEVEL_DRC_PROC = syslevel_drc_splb_subtype
PARAMETER C_XCL2_LINESIZE = 4, DT = INTEGER, BUS = XCL2, RANGE = (1,4,8,16), ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_xcl_linesize
PARAMETER C_XCL2_WRITEXFER = 1, DT = INTEGER, BUS = XCL2, RANGE = (0:2), ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 1)
PARAMETER C_XCL2_PIPE_STAGES = 2, DT = INTEGER, BUS = XCL2, RANGE = (0:3), ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 1)
PARAMETER C_XCL2_B_IN_USE = 0, DT = INTEGER, BUS = XCL2, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 1)
PARAMETER C_PIM2_B_SUBTYPE = INACTIVE, DT = STRING, BUS = XCL2_B, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_NUM_PORTS > 2 && C_XCL2_B_IN_USE), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_pim_subtype
PARAMETER C_XCL2_B_LINESIZE = 4, DT = INTEGER, BUS = XCL2_B, RANGE = (1,4,8,16), ISVALID = (C_NUM_PORTS > 2 && C_XCL2_B_IN_USE), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_xcl_linesize
PARAMETER C_XCL2_B_WRITEXFER = 1, DT = INTEGER, BUS = XCL2_B, RANGE = (0:2), ISVALID = (C_NUM_PORTS > 2 && C_XCL2_B_IN_USE)
PARAMETER C_SPLB2_AWIDTH = 32, DT = INTEGER, BUS = SPLB2, ASSIGNMENT = CONSTANT, ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 2)
PARAMETER C_SPLB2_DWIDTH = 64, DT = INTEGER, BUS = SPLB2, RANGE = (32,64,128), ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 2)
PARAMETER C_SPLB2_NATIVE_DWIDTH = 64, DT = INTEGER, BUS = SPLB2, RANGE = (32,64), ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 2), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_splb_native_dwidth, ASSIGNMENT = OPTIONAL_UPDATE, SYSLEVEL_DRC_PROC = syslevel_drc_splb_native_dwidth, IO_IS = C_SPLB2_NATIVE_DWIDTH
PARAMETER C_SPLB2_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB2, RANGE = (0:16), ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 2)
PARAMETER C_SPLB2_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB2, RANGE = (0:4), ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 2)
PARAMETER C_SPLB2_P2P = 1, DT = INTEGER, BUS = SPLB2, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 2)
PARAMETER C_SPLB2_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB2, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 2)
PARAMETER C_SPLB2_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SPLB2, RANGE = (32,64,128), ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 2)
PARAMETER C_SDMA_CTRL2_BASEADDR = 0xFFFFFFFF, BUS = SDMA_CTRL2, ADDRESS = BASE, PAIR = C_SDMA_CTRL2_HIGHADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = REGISTER, ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 3 && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_SDMA_CTRL2_HIGHADDR = 0x00000000, BUS = SDMA_CTRL2, ADDRESS = HIGH, PAIR = C_SDMA_CTRL2_BASEADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = REGISTER, ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 3 && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_SDMA_CTRL2_AWIDTH = 32, DT = INTEGER, BUS = SDMA_CTRL2, ASSIGNMENT = CONSTANT, ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 3)
PARAMETER C_SDMA_CTRL2_DWIDTH = 64, DT = INTEGER, BUS = SDMA_CTRL2, RANGE = (32,64,128), ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 3)
PARAMETER C_SDMA_CTRL2_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SDMA_CTRL2, RANGE = (32,64), ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 3)
PARAMETER C_SDMA_CTRL2_NUM_MASTERS = 1, DT = INTEGER, BUS = SDMA_CTRL2, RANGE = (0:16), ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 3)
PARAMETER C_SDMA_CTRL2_MID_WIDTH = 1, DT = INTEGER, BUS = SDMA_CTRL2, RANGE = (0:4), ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 3)
PARAMETER C_SDMA_CTRL2_P2P = 1, DT = INTEGER, BUS = SDMA_CTRL2, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 3)
PARAMETER C_SDMA_CTRL2_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SDMA_CTRL2, RANGE = (0,1), ASSIGNMENT = CONSTANT, ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 3)
PARAMETER C_SDMA_CTRL2_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SDMA_CTRL2, RANGE = (32,64,128), ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 3)
PARAMETER C_SDMA2_COMPLETED_ERR_TX = 1, DT = INTEGER, BUS = SDMA_LL2, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 3)
PARAMETER C_SDMA2_COMPLETED_ERR_RX = 1, DT = INTEGER, BUS = SDMA_LL2, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 3)
PARAMETER C_SDMA2_PRESCALAR = 1023, DT = INTEGER, BUS = SDMA_LL2, RANGE = (0:1023), ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 3)
PARAMETER C_SDMA2_PI2LL_CLK_RATIO = 1, DT = INTEGER, BUS = SDMA_LL2, RANGE = (1:2), ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 3), ASSIGNMENT = REQUIRE
PARAMETER C_PPC440MC2_BURST_LENGTH = 4, DT = INTEGER, BUS = PPC440MC2, RANGE = (2,4,8), ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 5)
PARAMETER C_PPC440MC2_PIPE_STAGES = 1, DT = INTEGER, BUS = PPC440MC2, RANGE = (0:2), ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 5)
PARAMETER C_VFBC2_CMD_FIFO_DEPTH = 32, DT = INTEGER, BUS = VFBC2, RANGE = (32,64,128,256,512,1024,2048,4096,8192), ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 6)
PARAMETER C_VFBC2_CMD_AFULL_COUNT = 3, DT = INTEGER, BUS = VFBC2, ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 6)
PARAMETER C_VFBC2_RDWD_DATA_WIDTH = 32, DT = INTEGER, BUS = VFBC2, RANGE = (8,16,32,64), ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 6)
PARAMETER C_VFBC2_RDWD_FIFO_DEPTH = 1024, DT = INTEGER, BUS = VFBC2, RANGE = (512,1024,2048,4096,8192), ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 6)
PARAMETER C_VFBC2_RD_AEMPTY_WD_AFULL_COUNT = 3, DT = INTEGER, BUS = VFBC2, ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 6)
PARAMETER C_PI2_RD_FIFO_TYPE = BRAM, DT = STRING, VALUES = ( BRAM = BRAM ,  SRL = SRL ,  DISABLED = Wr-Only ), ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE != 0 && !C_USE_MCB_S6_PHY || C_PIM2_BASETYPE == 6)
PARAMETER C_PI2_WR_FIFO_TYPE = BRAM, DT = STRING, VALUES = ( BRAM = BRAM ,  SRL = SRL ,  DISABLED = Rd-Only ), ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE != 0 && !C_USE_MCB_S6_PHY || C_PIM2_BASETYPE == 6), IPLEVEL_DRC_PROC = iplevel_drc_wr_fifo
PARAMETER C_PI2_ADDRACK_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE != 0 && !C_USE_MCB_S6_PHY)
PARAMETER C_PI2_RD_FIFO_APP_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE != 0 && ![xstrncmp C_PI2_RD_FIFO_TYPE DISABLED] && !C_USE_MCB_S6_PHY)
PARAMETER C_PI2_RD_FIFO_MEM_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE != 0 && ![xstrncmp C_PI2_RD_FIFO_TYPE DISABLED] && !C_USE_MCB_S6_PHY)
PARAMETER C_PI2_WR_FIFO_APP_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE != 0 && ![xstrncmp C_PI2_WR_FIFO_TYPE DISABLED] && !C_USE_MCB_S6_PHY)
PARAMETER C_PI2_WR_FIFO_MEM_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE != 0 && ![xstrncmp C_PI2_WR_FIFO_TYPE DISABLED] && !C_USE_MCB_S6_PHY)
PARAMETER C_PI2_PM_USED = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE != 0 && C_PM_ENABLE)
PARAMETER C_PI2_PM_DC_CNTR = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE != 0 && C_PM_ENABLE)
PARAMETER C_PIM3_BASEADDR = 0xFFFFFFFF, BUS = XCL3:XCL3_B:SPLB3:SDMA_LL3:PPC440MC3:VFBC3, ADDRESS = BASE, PAIR = C_PIM3_HIGHADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = (C_NUM_PORTS > 3 && (C_PIM3_BASETYPE != 0 && C_PIM3_BASETYPE != 4) && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_PIM3_HIGHADDR = 0x00000000, BUS = XCL3:XCL3_B:SPLB3:SDMA_LL3:PPC440MC3:VFBC3, ADDRESS = HIGH, PAIR = C_PIM3_BASEADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = (C_NUM_PORTS > 3 && (C_PIM3_BASETYPE != 0 && C_PIM3_BASETYPE != 4) && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_PIM3_OFFSET = 0x00000000, BUS = XCL3:XCL3_B:SPLB3:SDMA_LL3:PPC440MC3, DT = STD_LOGIC_VECTOR, ISVALID = (C_NUM_PORTS > 3 && (C_PIM3_BASETYPE == 1 || C_PIM3_BASETYPE == 2 || C_PIM3_BASETYPE == 5) && C_ALL_PIMS_SHARE_ADDRESSES == 0)
PARAMETER C_PIM3_DATA_WIDTH = 64, DT = INTEGER, BUS = MPMC_PIM3:VFBC3:MCB3, RANGE = (32,64), ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 4 || C_PIM3_BASETYPE == 6 || ((C_PIM3_BASETYPE == 7 || C_PIM3_BASETYPE == 8 || C_PIM3_BASETYPE == 9) && C_USE_MCB_S6_PHY)), IPLEVEL_DRC_PROC = iplevel_drc_pim_data_width, ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_pim_data_width
PARAMETER C_PIM3_BASETYPE = 0, DT = INTEGER, BUS = XCL3:SPLB3:SDMA_LL3:MPMC_PIM3:PPC440MC3:VFBC3:MCB3, RANGE = (0:9), VALUES = (0=INACTIVE, 1=XCL, 2=PLBV46, 3=SDMA, 4=NPI, 5=PPC440MC, 6=VFBC, 7=MCB, 8=MCB-Read, 9=MCB-Write), IPLEVEL_DRC_PROC = iplevel_drc_pim_basetype
PARAMETER C_PIM3_SUBTYPE = INACTIVE, DT = STRING, BUS = XCL3:SPLB3:SDMA_LL3:MPMC_PIM3:PPC440MC3:VFBC3:MCB3, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE != 0), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_pim_subtype, SYSLEVEL_DRC_PROC = syslevel_drc_splb_subtype
PARAMETER C_XCL3_LINESIZE = 4, DT = INTEGER, BUS = XCL3, RANGE = (1,4,8,16), ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_xcl_linesize
PARAMETER C_XCL3_WRITEXFER = 1, DT = INTEGER, BUS = XCL3, RANGE = (0:2), ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 1)
PARAMETER C_XCL3_PIPE_STAGES = 2, DT = INTEGER, BUS = XCL3, RANGE = (0:3), ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 1)
PARAMETER C_XCL3_B_IN_USE = 0, DT = INTEGER, BUS = XCL3, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 1)
PARAMETER C_PIM3_B_SUBTYPE = INACTIVE, DT = STRING, BUS = XCL3_B, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_NUM_PORTS > 3 && C_XCL3_B_IN_USE), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_pim_subtype
PARAMETER C_XCL3_B_LINESIZE = 4, DT = INTEGER, BUS = XCL3_B, RANGE = (1,4,8,16), ISVALID = (C_NUM_PORTS > 3 && C_XCL3_B_IN_USE), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_xcl_linesize
PARAMETER C_XCL3_B_WRITEXFER = 1, DT = INTEGER, BUS = XCL3_B, RANGE = (0:2), ISVALID = (C_NUM_PORTS > 3 && C_XCL3_B_IN_USE)
PARAMETER C_SPLB3_AWIDTH = 32, DT = INTEGER, BUS = SPLB3, ASSIGNMENT = CONSTANT, ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 2)
PARAMETER C_SPLB3_DWIDTH = 64, DT = INTEGER, BUS = SPLB3, RANGE = (32,64,128), ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 2)
PARAMETER C_SPLB3_NATIVE_DWIDTH = 64, DT = INTEGER, BUS = SPLB3, RANGE = (32,64), ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 2), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_splb_native_dwidth, ASSIGNMENT = OPTIONAL_UPDATE, SYSLEVEL_DRC_PROC = syslevel_drc_splb_native_dwidth, IO_IS = C_SPLB3_NATIVE_DWIDTH
PARAMETER C_SPLB3_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB3, RANGE = (0:16), ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 2)
PARAMETER C_SPLB3_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB3, RANGE = (0:4), ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 2)
PARAMETER C_SPLB3_P2P = 1, DT = INTEGER, BUS = SPLB3, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 2)
PARAMETER C_SPLB3_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB3, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 2)
PARAMETER C_SPLB3_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SPLB3, RANGE = (32,64,128), ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 2)
PARAMETER C_SDMA_CTRL3_BASEADDR = 0xFFFFFFFF, BUS = SDMA_CTRL3, ADDRESS = BASE, PAIR = C_SDMA_CTRL3_HIGHADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = REGISTER, ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 3 && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_SDMA_CTRL3_HIGHADDR = 0x00000000, BUS = SDMA_CTRL3, ADDRESS = HIGH, PAIR = C_SDMA_CTRL3_BASEADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = REGISTER, ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 3 && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_SDMA_CTRL3_AWIDTH = 32, DT = INTEGER, BUS = SDMA_CTRL3, ASSIGNMENT = CONSTANT, ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 3)
PARAMETER C_SDMA_CTRL3_DWIDTH = 64, DT = INTEGER, BUS = SDMA_CTRL3, RANGE = (32,64,128), ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 3)
PARAMETER C_SDMA_CTRL3_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SDMA_CTRL3, RANGE = (32,64), ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 3)
PARAMETER C_SDMA_CTRL3_NUM_MASTERS = 1, DT = INTEGER, BUS = SDMA_CTRL3, RANGE = (0:16), ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 3)
PARAMETER C_SDMA_CTRL3_MID_WIDTH = 1, DT = INTEGER, BUS = SDMA_CTRL3, RANGE = (0:4), ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 3)
PARAMETER C_SDMA_CTRL3_P2P = 1, DT = INTEGER, BUS = SDMA_CTRL3, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 3)
PARAMETER C_SDMA_CTRL3_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SDMA_CTRL3, RANGE = (0,1), ASSIGNMENT = CONSTANT, ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 3)
PARAMETER C_SDMA_CTRL3_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SDMA_CTRL3, RANGE = (32,64,128), ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 3)
PARAMETER C_SDMA3_COMPLETED_ERR_TX = 1, DT = INTEGER, BUS = SDMA_LL3, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 3)
PARAMETER C_SDMA3_COMPLETED_ERR_RX = 1, DT = INTEGER, BUS = SDMA_LL3, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 3)
PARAMETER C_SDMA3_PRESCALAR = 1023, DT = INTEGER, BUS = SDMA_LL3, RANGE = (0:1023), ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 3)
PARAMETER C_SDMA3_PI2LL_CLK_RATIO = 1, DT = INTEGER, BUS = SDMA_LL3, RANGE = (1:2), ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 3), ASSIGNMENT = REQUIRE
PARAMETER C_PPC440MC3_BURST_LENGTH = 4, DT = INTEGER, BUS = PPC440MC3, RANGE = (2,4,8), ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 5)
PARAMETER C_PPC440MC3_PIPE_STAGES = 1, DT = INTEGER, BUS = PPC440MC3, RANGE = (0:2), ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 5)
PARAMETER C_VFBC3_CMD_FIFO_DEPTH = 32, DT = INTEGER, BUS = VFBC3, RANGE = (32,64,128,256,512,1024,2048,4096,8192), ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 6)
PARAMETER C_VFBC3_CMD_AFULL_COUNT = 3, DT = INTEGER, BUS = VFBC3, ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 6)
PARAMETER C_VFBC3_RDWD_DATA_WIDTH = 32, DT = INTEGER, BUS = VFBC3, RANGE = (8,16,32,64), ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 6)
PARAMETER C_VFBC3_RDWD_FIFO_DEPTH = 1024, DT = INTEGER, BUS = VFBC3, RANGE = (512,1024,2048,4096,8192), ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 6)
PARAMETER C_VFBC3_RD_AEMPTY_WD_AFULL_COUNT = 3, DT = INTEGER, BUS = VFBC3, ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 6)
PARAMETER C_PI3_RD_FIFO_TYPE = BRAM, DT = STRING, VALUES = ( BRAM = BRAM ,  SRL = SRL ,  DISABLED = Wr-Only ), ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE != 0 && !C_USE_MCB_S6_PHY || C_PIM3_BASETYPE == 6)
PARAMETER C_PI3_WR_FIFO_TYPE = BRAM, DT = STRING, VALUES = ( BRAM = BRAM ,  SRL = SRL ,  DISABLED = Rd-Only ), ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE != 0 && !C_USE_MCB_S6_PHY || C_PIM3_BASETYPE == 6), IPLEVEL_DRC_PROC = iplevel_drc_wr_fifo
PARAMETER C_PI3_ADDRACK_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE != 0 && !C_USE_MCB_S6_PHY)
PARAMETER C_PI3_RD_FIFO_APP_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE != 0 && ![xstrncmp C_PI3_RD_FIFO_TYPE DISABLED] && !C_USE_MCB_S6_PHY)
PARAMETER C_PI3_RD_FIFO_MEM_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE != 0 && ![xstrncmp C_PI3_RD_FIFO_TYPE DISABLED] && !C_USE_MCB_S6_PHY)
PARAMETER C_PI3_WR_FIFO_APP_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE != 0 && ![xstrncmp C_PI3_WR_FIFO_TYPE DISABLED] && !C_USE_MCB_S6_PHY)
PARAMETER C_PI3_WR_FIFO_MEM_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE != 0 && ![xstrncmp C_PI3_WR_FIFO_TYPE DISABLED] && !C_USE_MCB_S6_PHY)
PARAMETER C_PI3_PM_USED = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE != 0 && C_PM_ENABLE)
PARAMETER C_PI3_PM_DC_CNTR = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE != 0 && C_PM_ENABLE)
PARAMETER C_PIM4_BASEADDR = 0xFFFFFFFF, BUS = XCL4:XCL4_B:SPLB4:SDMA_LL4:PPC440MC4:VFBC4, ADDRESS = BASE, PAIR = C_PIM4_HIGHADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = (C_NUM_PORTS > 4 && (C_PIM4_BASETYPE != 0 && C_PIM4_BASETYPE != 4) && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_PIM4_HIGHADDR = 0x00000000, BUS = XCL4:XCL4_B:SPLB4:SDMA_LL4:PPC440MC4:VFBC4, ADDRESS = HIGH, PAIR = C_PIM4_BASEADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = (C_NUM_PORTS > 4 && (C_PIM4_BASETYPE != 0 && C_PIM4_BASETYPE != 4) && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_PIM4_OFFSET = 0x00000000, BUS = XCL4:XCL4_B:SPLB4:SDMA_LL4:PPC440MC4, DT = STD_LOGIC_VECTOR, ISVALID = (C_NUM_PORTS > 4 && (C_PIM4_BASETYPE == 1 || C_PIM4_BASETYPE == 2 || C_PIM4_BASETYPE == 5) && C_ALL_PIMS_SHARE_ADDRESSES == 0)
PARAMETER C_PIM4_DATA_WIDTH = 64, DT = INTEGER, BUS = MPMC_PIM4:VFBC4:MCB4, RANGE = (32,64), ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 4 || C_PIM4_BASETYPE == 6 || ((C_PIM4_BASETYPE == 7 || C_PIM4_BASETYPE == 8 || C_PIM4_BASETYPE == 9) && C_USE_MCB_S6_PHY)), IPLEVEL_DRC_PROC = iplevel_drc_pim_data_width, ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_pim_data_width
PARAMETER C_PIM4_BASETYPE = 0, DT = INTEGER, BUS = XCL4:SPLB4:SDMA_LL4:MPMC_PIM4:PPC440MC4:VFBC4:MCB4, RANGE = (0:9), VALUES = (0=INACTIVE, 1=XCL, 2=PLBV46, 3=SDMA, 4=NPI, 5=PPC440MC, 6=VFBC, 7=MCB, 8=MCB-Read, 9=MCB-Write), IPLEVEL_DRC_PROC = iplevel_drc_pim_basetype
PARAMETER C_PIM4_SUBTYPE = INACTIVE, DT = STRING, BUS = XCL4:SPLB4:SDMA_LL4:MPMC_PIM4:PPC440MC4:VFBC4:MCB4, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE != 0), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_pim_subtype, SYSLEVEL_DRC_PROC = syslevel_drc_splb_subtype
PARAMETER C_XCL4_LINESIZE = 4, DT = INTEGER, BUS = XCL4, RANGE = (1,4,8,16), ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_xcl_linesize
PARAMETER C_XCL4_WRITEXFER = 1, DT = INTEGER, BUS = XCL4, RANGE = (0:2), ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 1)
PARAMETER C_XCL4_PIPE_STAGES = 2, DT = INTEGER, BUS = XCL4, RANGE = (0:3), ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 1)
PARAMETER C_XCL4_B_IN_USE = 0, DT = INTEGER, BUS = XCL4, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 1)
PARAMETER C_PIM4_B_SUBTYPE = INACTIVE, DT = STRING, BUS = XCL4_B, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_NUM_PORTS > 4 && C_XCL4_B_IN_USE), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_pim_subtype
PARAMETER C_XCL4_B_LINESIZE = 4, DT = INTEGER, BUS = XCL4_B, RANGE = (1,4,8,16), ISVALID = (C_NUM_PORTS > 4 && C_XCL4_B_IN_USE), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_xcl_linesize
PARAMETER C_XCL4_B_WRITEXFER = 1, DT = INTEGER, BUS = XCL4_B, RANGE = (0:2), ISVALID = (C_NUM_PORTS > 4 && C_XCL4_B_IN_USE)
PARAMETER C_SPLB4_AWIDTH = 32, DT = INTEGER, BUS = SPLB4, ASSIGNMENT = CONSTANT, ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 2)
PARAMETER C_SPLB4_DWIDTH = 64, DT = INTEGER, BUS = SPLB4, RANGE = (32,64,128), ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 2)
PARAMETER C_SPLB4_NATIVE_DWIDTH = 64, DT = INTEGER, BUS = SPLB4, RANGE = (32,64), ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 2), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_splb_native_dwidth, ASSIGNMENT = OPTIONAL_UPDATE, SYSLEVEL_DRC_PROC = syslevel_drc_splb_native_dwidth, IO_IS = C_SPLB4_NATIVE_DWIDTH
PARAMETER C_SPLB4_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB4, RANGE = (0:16), ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 2)
PARAMETER C_SPLB4_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB4, RANGE = (0:4), ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 2)
PARAMETER C_SPLB4_P2P = 1, DT = INTEGER, BUS = SPLB4, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 2)
PARAMETER C_SPLB4_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB4, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 2)
PARAMETER C_SPLB4_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SPLB4, RANGE = (32,64,128), ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 2)
PARAMETER C_SDMA_CTRL4_BASEADDR = 0xFFFFFFFF, BUS = SDMA_CTRL4, ADDRESS = BASE, PAIR = C_SDMA_CTRL4_HIGHADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = REGISTER, ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 3 && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_SDMA_CTRL4_HIGHADDR = 0x00000000, BUS = SDMA_CTRL4, ADDRESS = HIGH, PAIR = C_SDMA_CTRL4_BASEADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = REGISTER, ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 3 && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_SDMA_CTRL4_AWIDTH = 32, DT = INTEGER, BUS = SDMA_CTRL4, ASSIGNMENT = CONSTANT, ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 3)
PARAMETER C_SDMA_CTRL4_DWIDTH = 64, DT = INTEGER, BUS = SDMA_CTRL4, RANGE = (32,64,128), ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 3)
PARAMETER C_SDMA_CTRL4_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SDMA_CTRL4, RANGE = (32,64), ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 3)
PARAMETER C_SDMA_CTRL4_NUM_MASTERS = 1, DT = INTEGER, BUS = SDMA_CTRL4, RANGE = (0:16), ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 3)
PARAMETER C_SDMA_CTRL4_MID_WIDTH = 1, DT = INTEGER, BUS = SDMA_CTRL4, RANGE = (0:4), ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 3)
PARAMETER C_SDMA_CTRL4_P2P = 1, DT = INTEGER, BUS = SDMA_CTRL4, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 3)
PARAMETER C_SDMA_CTRL4_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SDMA_CTRL4, RANGE = (0,1), ASSIGNMENT = CONSTANT, ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 3)
PARAMETER C_SDMA_CTRL4_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SDMA_CTRL4, RANGE = (32,64,128), ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 3)
PARAMETER C_SDMA4_COMPLETED_ERR_TX = 1, DT = INTEGER, BUS = SDMA_LL4, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 3)
PARAMETER C_SDMA4_COMPLETED_ERR_RX = 1, DT = INTEGER, BUS = SDMA_LL4, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 3)
PARAMETER C_SDMA4_PRESCALAR = 1023, DT = INTEGER, BUS = SDMA_LL4, RANGE = (0:1023), ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 3)
PARAMETER C_SDMA4_PI2LL_CLK_RATIO = 1, DT = INTEGER, BUS = SDMA_LL4, RANGE = (1:2), ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 3), ASSIGNMENT = REQUIRE
PARAMETER C_PPC440MC4_BURST_LENGTH = 4, DT = INTEGER, BUS = PPC440MC4, RANGE = (2,4,8), ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 5)
PARAMETER C_PPC440MC4_PIPE_STAGES = 1, DT = INTEGER, BUS = PPC440MC4, RANGE = (0:2), ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 5)
PARAMETER C_VFBC4_CMD_FIFO_DEPTH = 32, DT = INTEGER, BUS = VFBC4, RANGE = (32,64,128,256,512,1024,2048,4096,8192), ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 6)
PARAMETER C_VFBC4_CMD_AFULL_COUNT = 3, DT = INTEGER, BUS = VFBC4, ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 6)
PARAMETER C_VFBC4_RDWD_DATA_WIDTH = 32, DT = INTEGER, BUS = VFBC4, RANGE = (8,16,32,64), ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 6)
PARAMETER C_VFBC4_RDWD_FIFO_DEPTH = 1024, DT = INTEGER, BUS = VFBC4, RANGE = (512,1024,2048,4096,8192), ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 6)
PARAMETER C_VFBC4_RD_AEMPTY_WD_AFULL_COUNT = 3, DT = INTEGER, BUS = VFBC4, ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 6)
PARAMETER C_PI4_RD_FIFO_TYPE = BRAM, DT = STRING, VALUES = ( BRAM = BRAM ,  SRL = SRL ,  DISABLED = Wr-Only ), ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE != 0 && !C_USE_MCB_S6_PHY || C_PIM4_BASETYPE == 6)
PARAMETER C_PI4_WR_FIFO_TYPE = BRAM, DT = STRING, VALUES = ( BRAM = BRAM ,  SRL = SRL ,  DISABLED = Rd-Only ), ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE != 0 && !C_USE_MCB_S6_PHY || C_PIM4_BASETYPE == 6), IPLEVEL_DRC_PROC = iplevel_drc_wr_fifo
PARAMETER C_PI4_ADDRACK_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE != 0 && !C_USE_MCB_S6_PHY)
PARAMETER C_PI4_RD_FIFO_APP_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE != 0 && ![xstrncmp C_PI4_RD_FIFO_TYPE DISABLED] && !C_USE_MCB_S6_PHY)
PARAMETER C_PI4_RD_FIFO_MEM_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE != 0 && ![xstrncmp C_PI4_RD_FIFO_TYPE DISABLED] && !C_USE_MCB_S6_PHY)
PARAMETER C_PI4_WR_FIFO_APP_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE != 0 && ![xstrncmp C_PI4_WR_FIFO_TYPE DISABLED] && !C_USE_MCB_S6_PHY)
PARAMETER C_PI4_WR_FIFO_MEM_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE != 0 && ![xstrncmp C_PI4_WR_FIFO_TYPE DISABLED] && !C_USE_MCB_S6_PHY)
PARAMETER C_PI4_PM_USED = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE != 0 && C_PM_ENABLE)
PARAMETER C_PI4_PM_DC_CNTR = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE != 0 && C_PM_ENABLE)
PARAMETER C_PIM5_BASEADDR = 0xFFFFFFFF, BUS = XCL5:XCL5_B:SPLB5:SDMA_LL5:PPC440MC5:VFBC5, ADDRESS = BASE, PAIR = C_PIM5_HIGHADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = (C_NUM_PORTS > 5 && (C_PIM5_BASETYPE != 0 && C_PIM5_BASETYPE != 4) && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_PIM5_HIGHADDR = 0x00000000, BUS = XCL5:XCL5_B:SPLB5:SDMA_LL5:PPC440MC5:VFBC5, ADDRESS = HIGH, PAIR = C_PIM5_BASEADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = (C_NUM_PORTS > 5 && (C_PIM5_BASETYPE != 0 && C_PIM5_BASETYPE != 4) && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_PIM5_OFFSET = 0x00000000, BUS = XCL5:XCL5_B:SPLB5:SDMA_LL5:PPC440MC5, DT = STD_LOGIC_VECTOR, ISVALID = (C_NUM_PORTS > 5 && (C_PIM5_BASETYPE == 1 || C_PIM5_BASETYPE == 2 || C_PIM5_BASETYPE == 5) && C_ALL_PIMS_SHARE_ADDRESSES == 0)
PARAMETER C_PIM5_DATA_WIDTH = 64, DT = INTEGER, BUS = MPMC_PIM5:VFBC5:MCB5, RANGE = (32,64), ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 4 || C_PIM5_BASETYPE == 6 || ((C_PIM5_BASETYPE == 7 || C_PIM5_BASETYPE == 8 || C_PIM5_BASETYPE == 9) && C_USE_MCB_S6_PHY)), IPLEVEL_DRC_PROC = iplevel_drc_pim_data_width, ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_pim_data_width
PARAMETER C_PIM5_BASETYPE = 0, DT = INTEGER, BUS = XCL5:SPLB5:SDMA_LL5:MPMC_PIM5:PPC440MC5:VFBC5:MCB5, RANGE = (0:9), VALUES = (0=INACTIVE, 1=XCL, 2=PLBV46, 3=SDMA, 4=NPI, 5=PPC440MC, 6=VFBC, 7=MCB, 8=MCB-Read, 9=MCB-Write), IPLEVEL_DRC_PROC = iplevel_drc_pim_basetype
PARAMETER C_PIM5_SUBTYPE = INACTIVE, DT = STRING, BUS = XCL5:SPLB5:SDMA_LL5:MPMC_PIM5:PPC440MC5:VFBC5:MCB5, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE != 0), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_pim_subtype, SYSLEVEL_DRC_PROC = syslevel_drc_splb_subtype
PARAMETER C_XCL5_LINESIZE = 4, DT = INTEGER, BUS = XCL5, RANGE = (1,4,8,16), ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_xcl_linesize
PARAMETER C_XCL5_WRITEXFER = 1, DT = INTEGER, BUS = XCL5, RANGE = (0:2), ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 1)
PARAMETER C_XCL5_PIPE_STAGES = 2, DT = INTEGER, BUS = XCL5, RANGE = (0:3), ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 1)
PARAMETER C_XCL5_B_IN_USE = 0, DT = INTEGER, BUS = XCL5, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 1)
PARAMETER C_PIM5_B_SUBTYPE = INACTIVE, DT = STRING, BUS = XCL5_B, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_NUM_PORTS > 5 && C_XCL5_B_IN_USE), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_pim_subtype
PARAMETER C_XCL5_B_LINESIZE = 4, DT = INTEGER, BUS = XCL5_B, RANGE = (1,4,8,16), ISVALID = (C_NUM_PORTS > 5 && C_XCL5_B_IN_USE), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_xcl_linesize
PARAMETER C_XCL5_B_WRITEXFER = 1, DT = INTEGER, BUS = XCL5_B, RANGE = (0:2), ISVALID = (C_NUM_PORTS > 5 && C_XCL5_B_IN_USE)
PARAMETER C_SPLB5_AWIDTH = 32, DT = INTEGER, BUS = SPLB5, ASSIGNMENT = CONSTANT, ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 2)
PARAMETER C_SPLB5_DWIDTH = 64, DT = INTEGER, BUS = SPLB5, RANGE = (32,64,128), ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 2)
PARAMETER C_SPLB5_NATIVE_DWIDTH = 64, DT = INTEGER, BUS = SPLB5, RANGE = (32,64), ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 2), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_splb_native_dwidth, ASSIGNMENT = OPTIONAL_UPDATE, SYSLEVEL_DRC_PROC = syslevel_drc_splb_native_dwidth, IO_IS = C_SPLB5_NATIVE_DWIDTH
PARAMETER C_SPLB5_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB5, RANGE = (0:16), ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 2)
PARAMETER C_SPLB5_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB5, RANGE = (0:4), ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 2)
PARAMETER C_SPLB5_P2P = 1, DT = INTEGER, BUS = SPLB5, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 2)
PARAMETER C_SPLB5_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB5, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 2)
PARAMETER C_SPLB5_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SPLB5, RANGE = (32,64,128), ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 2)
PARAMETER C_SDMA_CTRL5_BASEADDR = 0xFFFFFFFF, BUS = SDMA_CTRL5, ADDRESS = BASE, PAIR = C_SDMA_CTRL5_HIGHADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = REGISTER, ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 3 && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_SDMA_CTRL5_HIGHADDR = 0x00000000, BUS = SDMA_CTRL5, ADDRESS = HIGH, PAIR = C_SDMA_CTRL5_BASEADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = REGISTER, ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 3 && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_SDMA_CTRL5_AWIDTH = 32, DT = INTEGER, BUS = SDMA_CTRL5, ASSIGNMENT = CONSTANT, ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 3)
PARAMETER C_SDMA_CTRL5_DWIDTH = 64, DT = INTEGER, BUS = SDMA_CTRL5, RANGE = (32,64,128), ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 3)
PARAMETER C_SDMA_CTRL5_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SDMA_CTRL5, RANGE = (32,64), ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 3)
PARAMETER C_SDMA_CTRL5_NUM_MASTERS = 1, DT = INTEGER, BUS = SDMA_CTRL5, RANGE = (0:16), ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 3)
PARAMETER C_SDMA_CTRL5_MID_WIDTH = 1, DT = INTEGER, BUS = SDMA_CTRL5, RANGE = (0:4), ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 3)
PARAMETER C_SDMA_CTRL5_P2P = 1, DT = INTEGER, BUS = SDMA_CTRL5, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 3)
PARAMETER C_SDMA_CTRL5_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SDMA_CTRL5, RANGE = (0,1), ASSIGNMENT = CONSTANT, ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 3)
PARAMETER C_SDMA_CTRL5_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SDMA_CTRL5, RANGE = (32,64,128), ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 3)
PARAMETER C_SDMA5_COMPLETED_ERR_TX = 1, DT = INTEGER, BUS = SDMA_LL5, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 3)
PARAMETER C_SDMA5_COMPLETED_ERR_RX = 1, DT = INTEGER, BUS = SDMA_LL5, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 3)
PARAMETER C_SDMA5_PRESCALAR = 1023, DT = INTEGER, BUS = SDMA_LL5, RANGE = (0:1023), ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 3)
PARAMETER C_SDMA5_PI2LL_CLK_RATIO = 1, DT = INTEGER, BUS = SDMA_LL5, RANGE = (1:2), ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 3), ASSIGNMENT = REQUIRE
PARAMETER C_PPC440MC5_BURST_LENGTH = 4, DT = INTEGER, BUS = PPC440MC5, RANGE = (2,4,8), ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 5)
PARAMETER C_PPC440MC5_PIPE_STAGES = 1, DT = INTEGER, BUS = PPC440MC5, RANGE = (0:2), ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 5)
PARAMETER C_VFBC5_CMD_FIFO_DEPTH = 32, DT = INTEGER, BUS = VFBC5, RANGE = (32,64,128,256,512,1024,2048,4096,8192), ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 6)
PARAMETER C_VFBC5_CMD_AFULL_COUNT = 3, DT = INTEGER, BUS = VFBC5, ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 6)
PARAMETER C_VFBC5_RDWD_DATA_WIDTH = 32, DT = INTEGER, BUS = VFBC5, RANGE = (8,16,32,64), ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 6)
PARAMETER C_VFBC5_RDWD_FIFO_DEPTH = 1024, DT = INTEGER, BUS = VFBC5, RANGE = (512,1024,2048,4096,8192), ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 6)
PARAMETER C_VFBC5_RD_AEMPTY_WD_AFULL_COUNT = 3, DT = INTEGER, BUS = VFBC5, ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 6)
PARAMETER C_PI5_RD_FIFO_TYPE = BRAM, DT = STRING, VALUES = ( BRAM = BRAM ,  SRL = SRL ,  DISABLED = Wr-Only ), ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE != 0 && !C_USE_MCB_S6_PHY || C_PIM5_BASETYPE == 6)
PARAMETER C_PI5_WR_FIFO_TYPE = BRAM, DT = STRING, VALUES = ( BRAM = BRAM ,  SRL = SRL ,  DISABLED = Rd-Only ), ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE != 0 && !C_USE_MCB_S6_PHY || C_PIM5_BASETYPE == 6), IPLEVEL_DRC_PROC = iplevel_drc_wr_fifo
PARAMETER C_PI5_ADDRACK_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE != 0 && !C_USE_MCB_S6_PHY)
PARAMETER C_PI5_RD_FIFO_APP_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE != 0 && ![xstrncmp C_PI5_RD_FIFO_TYPE DISABLED] && !C_USE_MCB_S6_PHY)
PARAMETER C_PI5_RD_FIFO_MEM_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE != 0 && ![xstrncmp C_PI5_RD_FIFO_TYPE DISABLED] && !C_USE_MCB_S6_PHY)
PARAMETER C_PI5_WR_FIFO_APP_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE != 0 && ![xstrncmp C_PI5_WR_FIFO_TYPE DISABLED] && !C_USE_MCB_S6_PHY)
PARAMETER C_PI5_WR_FIFO_MEM_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE != 0 && ![xstrncmp C_PI5_WR_FIFO_TYPE DISABLED] && !C_USE_MCB_S6_PHY)
PARAMETER C_PI5_PM_USED = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE != 0 && C_PM_ENABLE)
PARAMETER C_PI5_PM_DC_CNTR = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE != 0 && C_PM_ENABLE)
PARAMETER C_PIM6_BASEADDR = 0xFFFFFFFF, BUS = XCL6:XCL6_B:SPLB6:SDMA_LL6:PPC440MC6:VFBC6, ADDRESS = BASE, PAIR = C_PIM6_HIGHADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = (C_NUM_PORTS > 6 && (C_PIM6_BASETYPE != 0 && C_PIM6_BASETYPE != 4) && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_PIM6_HIGHADDR = 0x00000000, BUS = XCL6:XCL6_B:SPLB6:SDMA_LL6:PPC440MC6:VFBC6, ADDRESS = HIGH, PAIR = C_PIM6_BASEADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = (C_NUM_PORTS > 6 && (C_PIM6_BASETYPE != 0 && C_PIM6_BASETYPE != 4) && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_PIM6_OFFSET = 0x00000000, BUS = XCL6:XCL6_B:SPLB6:SDMA_LL6:PPC440MC6, DT = STD_LOGIC_VECTOR, ISVALID = (C_NUM_PORTS > 6 && (C_PIM6_BASETYPE == 1 || C_PIM6_BASETYPE == 2 || C_PIM6_BASETYPE == 5) && C_ALL_PIMS_SHARE_ADDRESSES == 0)
PARAMETER C_PIM6_DATA_WIDTH = 64, DT = INTEGER, BUS = MPMC_PIM6:VFBC6:MCB6, RANGE = (32,64), ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 4 || C_PIM6_BASETYPE == 6 || ((C_PIM6_BASETYPE == 7 || C_PIM6_BASETYPE == 8 || C_PIM6_BASETYPE == 9) && C_USE_MCB_S6_PHY)), IPLEVEL_DRC_PROC = iplevel_drc_pim_data_width, ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_pim_data_width
PARAMETER C_PIM6_BASETYPE = 0, DT = INTEGER, BUS = XCL6:SPLB6:SDMA_LL6:MPMC_PIM6:PPC440MC6:VFBC6:MCB6, RANGE = (0:9), VALUES = (0=INACTIVE, 1=XCL, 2=PLBV46, 3=SDMA, 4=NPI, 5=PPC440MC, 6=VFBC, 7=MCB, 8=MCB-Read, 9=MCB-Write), IPLEVEL_DRC_PROC = iplevel_drc_pim_basetype
PARAMETER C_PIM6_SUBTYPE = INACTIVE, DT = STRING, BUS = XCL6:SPLB6:SDMA_LL6:MPMC_PIM6:PPC440MC6:VFBC6:MCB6, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE != 0), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_pim_subtype, SYSLEVEL_DRC_PROC = syslevel_drc_splb_subtype
PARAMETER C_XCL6_LINESIZE = 4, DT = INTEGER, BUS = XCL6, RANGE = (1,4,8,16), ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_xcl_linesize
PARAMETER C_XCL6_WRITEXFER = 1, DT = INTEGER, BUS = XCL6, RANGE = (0:2), ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 1)
PARAMETER C_XCL6_PIPE_STAGES = 2, DT = INTEGER, BUS = XCL6, RANGE = (0:3), ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 1)
PARAMETER C_XCL6_B_IN_USE = 0, DT = INTEGER, BUS = XCL6, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 1)
PARAMETER C_PIM6_B_SUBTYPE = INACTIVE, DT = STRING, BUS = XCL6_B, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_NUM_PORTS > 6 && C_XCL6_B_IN_USE), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_pim_subtype
PARAMETER C_XCL6_B_LINESIZE = 4, DT = INTEGER, BUS = XCL6_B, RANGE = (1,4,8,16), ISVALID = (C_NUM_PORTS > 6 && C_XCL6_B_IN_USE), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_xcl_linesize
PARAMETER C_XCL6_B_WRITEXFER = 1, DT = INTEGER, BUS = XCL6_B, RANGE = (0:2), ISVALID = (C_NUM_PORTS > 6 && C_XCL6_B_IN_USE)
PARAMETER C_SPLB6_AWIDTH = 32, DT = INTEGER, BUS = SPLB6, ASSIGNMENT = CONSTANT, ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 2)
PARAMETER C_SPLB6_DWIDTH = 64, DT = INTEGER, BUS = SPLB6, RANGE = (32,64,128), ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 2)
PARAMETER C_SPLB6_NATIVE_DWIDTH = 64, DT = INTEGER, BUS = SPLB6, RANGE = (32,64), ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 2), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_splb_native_dwidth, ASSIGNMENT = OPTIONAL_UPDATE, SYSLEVEL_DRC_PROC = syslevel_drc_splb_native_dwidth, IO_IS = C_SPLB6_NATIVE_DWIDTH
PARAMETER C_SPLB6_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB6, RANGE = (0:16), ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 2)
PARAMETER C_SPLB6_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB6, RANGE = (0:4), ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 2)
PARAMETER C_SPLB6_P2P = 1, DT = INTEGER, BUS = SPLB6, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 2)
PARAMETER C_SPLB6_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB6, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 2)
PARAMETER C_SPLB6_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SPLB6, RANGE = (32,64,128), ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 2)
PARAMETER C_SDMA_CTRL6_BASEADDR = 0xFFFFFFFF, BUS = SDMA_CTRL6, ADDRESS = BASE, PAIR = C_SDMA_CTRL6_HIGHADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = REGISTER, ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 3 && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_SDMA_CTRL6_HIGHADDR = 0x00000000, BUS = SDMA_CTRL6, ADDRESS = HIGH, PAIR = C_SDMA_CTRL6_BASEADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = REGISTER, ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 3 && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_SDMA_CTRL6_AWIDTH = 32, DT = INTEGER, BUS = SDMA_CTRL6, ASSIGNMENT = CONSTANT, ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 3)
PARAMETER C_SDMA_CTRL6_DWIDTH = 64, DT = INTEGER, BUS = SDMA_CTRL6, RANGE = (32,64,128), ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 3)
PARAMETER C_SDMA_CTRL6_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SDMA_CTRL6, RANGE = (32,64), ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 3)
PARAMETER C_SDMA_CTRL6_NUM_MASTERS = 1, DT = INTEGER, BUS = SDMA_CTRL6, RANGE = (0:16), ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 3)
PARAMETER C_SDMA_CTRL6_MID_WIDTH = 1, DT = INTEGER, BUS = SDMA_CTRL6, RANGE = (0:4), ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 3)
PARAMETER C_SDMA_CTRL6_P2P = 1, DT = INTEGER, BUS = SDMA_CTRL6, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 3)
PARAMETER C_SDMA_CTRL6_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SDMA_CTRL6, RANGE = (0,1), ASSIGNMENT = CONSTANT, ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 3)
PARAMETER C_SDMA_CTRL6_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SDMA_CTRL6, RANGE = (32,64,128), ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 3)
PARAMETER C_SDMA6_COMPLETED_ERR_TX = 1, DT = INTEGER, BUS = SDMA_LL6, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 3)
PARAMETER C_SDMA6_COMPLETED_ERR_RX = 1, DT = INTEGER, BUS = SDMA_LL6, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 3)
PARAMETER C_SDMA6_PRESCALAR = 1023, DT = INTEGER, BUS = SDMA_LL6, RANGE = (0:1023), ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 3)
PARAMETER C_SDMA6_PI2LL_CLK_RATIO = 1, DT = INTEGER, BUS = SDMA_LL6, RANGE = (1:2), ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 3), ASSIGNMENT = REQUIRE
PARAMETER C_PPC440MC6_BURST_LENGTH = 4, DT = INTEGER, BUS = PPC440MC6, RANGE = (2,4,8), ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 5)
PARAMETER C_PPC440MC6_PIPE_STAGES = 1, DT = INTEGER, BUS = PPC440MC6, RANGE = (0:2), ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 5)
PARAMETER C_VFBC6_CMD_FIFO_DEPTH = 32, DT = INTEGER, BUS = VFBC6, RANGE = (32,64,128,256,512,1024,2048,4096,8192), ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 6)
PARAMETER C_VFBC6_CMD_AFULL_COUNT = 3, DT = INTEGER, BUS = VFBC6, ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 6)
PARAMETER C_VFBC6_RDWD_DATA_WIDTH = 32, DT = INTEGER, BUS = VFBC6, RANGE = (8,16,32,64), ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 6)
PARAMETER C_VFBC6_RDWD_FIFO_DEPTH = 1024, DT = INTEGER, BUS = VFBC6, RANGE = (512,1024,2048,4096,8192), ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 6)
PARAMETER C_VFBC6_RD_AEMPTY_WD_AFULL_COUNT = 3, DT = INTEGER, BUS = VFBC6, ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 6)
PARAMETER C_PI6_RD_FIFO_TYPE = BRAM, DT = STRING, VALUES = ( BRAM = BRAM ,  SRL = SRL ,  DISABLED = Wr-Only ), ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE != 0 && !C_USE_MCB_S6_PHY)
PARAMETER C_PI6_WR_FIFO_TYPE = BRAM, DT = STRING, VALUES = ( BRAM = BRAM ,  SRL = SRL ,  DISABLED = Rd-Only ), ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE != 0 && !C_USE_MCB_S6_PHY), IPLEVEL_DRC_PROC = iplevel_drc_wr_fifo
PARAMETER C_PI6_ADDRACK_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE != 0 && !C_USE_MCB_S6_PHY)
PARAMETER C_PI6_RD_FIFO_APP_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE != 0 && ![xstrncmp C_PI6_RD_FIFO_TYPE DISABLED] && !C_USE_MCB_S6_PHY)
PARAMETER C_PI6_RD_FIFO_MEM_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE != 0 && ![xstrncmp C_PI6_RD_FIFO_TYPE DISABLED] && !C_USE_MCB_S6_PHY)
PARAMETER C_PI6_WR_FIFO_APP_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE != 0 && ![xstrncmp C_PI6_WR_FIFO_TYPE DISABLED] && !C_USE_MCB_S6_PHY)
PARAMETER C_PI6_WR_FIFO_MEM_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE != 0 && ![xstrncmp C_PI6_WR_FIFO_TYPE DISABLED] && !C_USE_MCB_S6_PHY)
PARAMETER C_PI6_PM_USED = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE != 0 && C_PM_ENABLE)
PARAMETER C_PI6_PM_DC_CNTR = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE != 0 && C_PM_ENABLE)
PARAMETER C_PIM7_BASEADDR = 0xFFFFFFFF, BUS = XCL7:XCL7_B:SPLB7:SDMA_LL7:PPC440MC7:VFBC7, ADDRESS = BASE, PAIR = C_PIM7_HIGHADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = (C_NUM_PORTS > 7 && (C_PIM7_BASETYPE != 0 && C_PIM7_BASETYPE != 4) && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_PIM7_HIGHADDR = 0x00000000, BUS = XCL7:XCL7_B:SPLB7:SDMA_LL7:PPC440MC7:VFBC7, ADDRESS = HIGH, PAIR = C_PIM7_BASEADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = (C_NUM_PORTS > 7 && (C_PIM7_BASETYPE != 0 && C_PIM7_BASETYPE != 4) && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_PIM7_OFFSET = 0x00000000, BUS = XCL7:XCL7_B:SPLB7:SDMA_LL7:PPC440MC7, DT = STD_LOGIC_VECTOR, ISVALID = (C_NUM_PORTS > 7 && (C_PIM7_BASETYPE == 1 || C_PIM7_BASETYPE == 2 || C_PIM7_BASETYPE == 5) && C_ALL_PIMS_SHARE_ADDRESSES == 0)
PARAMETER C_PIM7_DATA_WIDTH = 64, DT = INTEGER, BUS = MPMC_PIM7:VFBC7:MCB7, RANGE = (32,64), ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 4 || C_PIM7_BASETYPE == 6 || ((C_PIM7_BASETYPE == 7 || C_PIM7_BASETYPE == 8 || C_PIM7_BASETYPE == 9) && C_USE_MCB_S6_PHY)), IPLEVEL_DRC_PROC = iplevel_drc_pim_data_width, ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_pim_data_width
PARAMETER C_PIM7_BASETYPE = 0, DT = INTEGER, BUS = XCL7:SPLB7:SDMA_LL7:MPMC_PIM7:PPC440MC7:VFBC7:MCB7, RANGE = (0:9), VALUES = (0=INACTIVE, 1=XCL, 2=PLBV46, 3=SDMA, 4=NPI, 5=PPC440MC, 6=VFBC, 7=MCB, 8=MCB-Read, 9=MCB-Write), IPLEVEL_DRC_PROC = iplevel_drc_pim_basetype
PARAMETER C_PIM7_SUBTYPE = INACTIVE, DT = STRING, BUS = XCL7:SPLB7:SDMA_LL7:MPMC_PIM7:PPC440MC7:VFBC7:MCB7, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE != 0), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_pim_subtype, SYSLEVEL_DRC_PROC = syslevel_drc_splb_subtype
PARAMETER C_XCL7_LINESIZE = 4, DT = INTEGER, BUS = XCL7, RANGE = (1,4,8,16), ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_xcl_linesize
PARAMETER C_XCL7_WRITEXFER = 1, DT = INTEGER, BUS = XCL7, RANGE = (0:2), ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 1)
PARAMETER C_XCL7_PIPE_STAGES = 2, DT = INTEGER, BUS = XCL7, RANGE = (0:3), ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 1)
PARAMETER C_XCL7_B_IN_USE = 0, DT = INTEGER, BUS = XCL7, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 1)
PARAMETER C_PIM7_B_SUBTYPE = INACTIVE, DT = STRING, BUS = XCL7_B, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_NUM_PORTS > 7 && C_XCL7_B_IN_USE), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_pim_subtype
PARAMETER C_XCL7_B_LINESIZE = 4, DT = INTEGER, BUS = XCL7_B, RANGE = (1,4,8,16), ISVALID = (C_NUM_PORTS > 7 && C_XCL7_B_IN_USE), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_xcl_linesize
PARAMETER C_XCL7_B_WRITEXFER = 1, DT = INTEGER, BUS = XCL7_B, RANGE = (0:2), ISVALID = (C_NUM_PORTS > 7 && C_XCL7_B_IN_USE)
PARAMETER C_SPLB7_AWIDTH = 32, DT = INTEGER, BUS = SPLB7, ASSIGNMENT = CONSTANT, ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 2)
PARAMETER C_SPLB7_DWIDTH = 64, DT = INTEGER, BUS = SPLB7, RANGE = (32,64,128), ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 2)
PARAMETER C_SPLB7_NATIVE_DWIDTH = 64, DT = INTEGER, BUS = SPLB7, RANGE = (32,64), ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 2), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_splb_native_dwidth, ASSIGNMENT = OPTIONAL_UPDATE, SYSLEVEL_DRC_PROC = syslevel_drc_splb_native_dwidth, IO_IS = C_SPLB7_NATIVE_DWIDTH
PARAMETER C_SPLB7_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB7, RANGE = (0:16), ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 2)
PARAMETER C_SPLB7_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB7, RANGE = (0:4), ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 2)
PARAMETER C_SPLB7_P2P = 1, DT = INTEGER, BUS = SPLB7, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 2)
PARAMETER C_SPLB7_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB7, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 2)
PARAMETER C_SPLB7_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SPLB7, RANGE = (32,64,128), ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 2)
PARAMETER C_SDMA_CTRL7_BASEADDR = 0xFFFFFFFF, BUS = SDMA_CTRL7, ADDRESS = BASE, PAIR = C_SDMA_CTRL7_HIGHADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = REGISTER, ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 3 && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_SDMA_CTRL7_HIGHADDR = 0x00000000, BUS = SDMA_CTRL7, ADDRESS = HIGH, PAIR = C_SDMA_CTRL7_BASEADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = REGISTER, ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 3 && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE
PARAMETER C_SDMA_CTRL7_AWIDTH = 32, DT = INTEGER, BUS = SDMA_CTRL7, ASSIGNMENT = CONSTANT, ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 3)
PARAMETER C_SDMA_CTRL7_DWIDTH = 64, DT = INTEGER, BUS = SDMA_CTRL7, RANGE = (32,64,128), ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 3)
PARAMETER C_SDMA_CTRL7_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SDMA_CTRL7, RANGE = (32,64), ASSIGNMENT = CONSTANT, ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 3)
PARAMETER C_SDMA_CTRL7_NUM_MASTERS = 1, DT = INTEGER, BUS = SDMA_CTRL7, RANGE = (0:16), ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 3)
PARAMETER C_SDMA_CTRL7_MID_WIDTH = 1, DT = INTEGER, BUS = SDMA_CTRL7, RANGE = (0:4), ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 3)
PARAMETER C_SDMA_CTRL7_P2P = 1, DT = INTEGER, BUS = SDMA_CTRL7, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 3)
PARAMETER C_SDMA_CTRL7_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SDMA_CTRL7, RANGE = (0,1), ASSIGNMENT = CONSTANT, ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 3)
PARAMETER C_SDMA_CTRL7_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SDMA_CTRL7, RANGE = (32,64,128), ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 3)
PARAMETER C_SDMA7_COMPLETED_ERR_TX = 1, DT = INTEGER, BUS = SDMA_LL7, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 3)
PARAMETER C_SDMA7_COMPLETED_ERR_RX = 1, DT = INTEGER, BUS = SDMA_LL7, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 3)
PARAMETER C_SDMA7_PRESCALAR = 1023, DT = INTEGER, BUS = SDMA_LL7, RANGE = (0:1023), ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 3)
PARAMETER C_SDMA7_PI2LL_CLK_RATIO = 1, DT = INTEGER, BUS = SDMA_LL7, RANGE = (1:2), ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 3), ASSIGNMENT = REQUIRE
PARAMETER C_PPC440MC7_BURST_LENGTH = 4, DT = INTEGER, BUS = PPC440MC7, RANGE = (2,4,8), ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 5)
PARAMETER C_PPC440MC7_PIPE_STAGES = 1, DT = INTEGER, BUS = PPC440MC7, RANGE = (0:2), ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 5)
PARAMETER C_VFBC7_CMD_FIFO_DEPTH = 32, DT = INTEGER, BUS = VFBC7, RANGE = (32,64,128,256,512,1024,2048,4096,8192), ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 6)
PARAMETER C_VFBC7_CMD_AFULL_COUNT = 3, DT = INTEGER, BUS = VFBC7, ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 6)
PARAMETER C_VFBC7_RDWD_DATA_WIDTH = 32, DT = INTEGER, BUS = VFBC7, RANGE = (8,16,32,64), ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 6)
PARAMETER C_VFBC7_RDWD_FIFO_DEPTH = 1024, DT = INTEGER, BUS = VFBC7, RANGE = (512,1024,2048,4096,8192), ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 6)
PARAMETER C_VFBC7_RD_AEMPTY_WD_AFULL_COUNT = 3, DT = INTEGER, BUS = VFBC7, ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 6)
PARAMETER C_PI7_RD_FIFO_TYPE = BRAM, DT = STRING, VALUES = ( BRAM = BRAM ,  SRL = SRL ,  DISABLED = Wr-Only ), ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE != 0 && !C_USE_MCB_S6_PHY)
PARAMETER C_PI7_WR_FIFO_TYPE = BRAM, DT = STRING, VALUES = ( BRAM = BRAM ,  SRL = SRL ,  DISABLED = Rd-Only ), ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE != 0 && !C_USE_MCB_S6_PHY), IPLEVEL_DRC_PROC = iplevel_drc_wr_fifo
PARAMETER C_PI7_ADDRACK_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE != 0 && !C_USE_MCB_S6_PHY)
PARAMETER C_PI7_RD_FIFO_APP_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE != 0 && ![xstrncmp C_PI7_RD_FIFO_TYPE DISABLED] && !C_USE_MCB_S6_PHY)
PARAMETER C_PI7_RD_FIFO_MEM_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE != 0 && ![xstrncmp C_PI7_RD_FIFO_TYPE DISABLED] && !C_USE_MCB_S6_PHY)
PARAMETER C_PI7_WR_FIFO_APP_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE != 0 && ![xstrncmp C_PI7_WR_FIFO_TYPE DISABLED] && !C_USE_MCB_S6_PHY)
PARAMETER C_PI7_WR_FIFO_MEM_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE != 0 && ![xstrncmp C_PI7_WR_FIFO_TYPE DISABLED] && !C_USE_MCB_S6_PHY)
PARAMETER C_PI7_PM_USED = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE != 0 && C_PM_ENABLE)
PARAMETER C_PI7_PM_DC_CNTR = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE != 0 && C_PM_ENABLE)
PARAMETER C_WR_TRAINING_PORT = 0, DT = INTEGER, ISVALID = (C_USE_MIG_V4_PHY || C_USE_MIG_V5_PHY), RANGE = (0:7), ASSIGNMENT = OPTIONAL_UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_training_port, SYSLEVEL_DRC_PROC = syslevel_drc_training_port
PARAMETER C_ARB_BRAM_INIT_00 = 0b0000000011111111111111111111111100000000111111111111111111111111000000001111111111111111111111110000000011111111111111111111111100000000111111111111010001000011000000001111111111110010000110100000000011111111111100001101000100000000111111111111011010001000, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_bram_init
PARAMETER C_ARB_BRAM_INIT_01 = 0b0000000011111111111111111111111100000000111111111111111111111111000000001111111111111111111111110000000011111111111111111111111100000000111111111111111111111111000000001111111111111111111111110000000011111111111111111111111100000000111111111111111111111111, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_bram_init
PARAMETER C_ARB_BRAM_INIT_02 = 0b0000000011111111111111111111111100000000111111111111111111111111000000001111111111111111111111110000000011111111111111111111111100000000111111111111011010001000000000001111111111110110100010000000000011111111111101101000100000000000111111111111011010001000, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE
PARAMETER C_ARB_BRAM_INIT_03 = 0b0000000011111111111111111111111100000000111111111111111111111111000000001111111111111111111111110000000011111111111111111111111100000000111111111111111111111111000000001111111111111111111111110000000011111111111111111111111100000000111111111111111111111111, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE
PARAMETER C_ARB_BRAM_INIT_04 = 0b0000000011111111111111111111111100000000111111111111111111111111000000001111111111111111111111110000000011111111111111111111111100000000111111111111010001000011000000001111111111110010000110100000000011111111111100001101000100000000111111111111011010001000, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE
PARAMETER C_ARB_BRAM_INIT_05 = 0b0000000011111111111111111111111100000000111111111111111111111111000000001111111111111111111111110000000011111111111111111111111100000000111111111111111111111111000000001111111111111111111111110000000011111111111111111111111100000000111111111111111111111111, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE
PARAMETER C_ARB_BRAM_INIT_06 = 0b0000000011111111111111111111111100000000111111111111111111111111000000001111111111111111111111110000000011111111111111111111111100000000111111111111011010001000000000001111111111110110100010000000000011111111111101101000100000000000111111111111011010001000, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE
PARAMETER C_ARB_BRAM_INIT_07 = 0b0000000011111111111111111111111100000000111111111111111111111111000000001111111111111111111111110000000011111111111111111111111100000000111111111111111111111111000000001111111111111111111111110000000011111111111111111111111100000000111111111111111111111111, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE
PARAMETER C_NCK_PER_CLK = 1, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_TWR = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_COMPLETE_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_IS_WRITE_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_PHYIF_RAS_N_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_PHYIF_CAS_N_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_PHYIF_WE_N_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_RMW_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_SKIP_0_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_PHYIF_DQS_O_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_SKIP_1_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_DP_RDFIFO_PUSH_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_SKIP_2_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_AP_COL_CNT_LOAD_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_AP_COL_CNT_ENABLE_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_AP_PRECHARGE_ADDR10_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_AP_ROW_COL_SEL_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_PHYIF_FORCE_DM_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_REPEAT4_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_DFI_RAS_N_0_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_DFI_CAS_N_0_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_DFI_WE_N_0_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_DFI_RAS_N_1_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_DFI_CAS_N_1_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_DFI_WE_N_1_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_DP_WRFIFO_POP_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_DFI_WRDATA_EN_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_DFI_RDDATA_EN_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_AP_OTF_ADDR12_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_ARB_RDMODWR_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_AP_COL_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_AP_PI_ADDR_CE_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_AP_PORT_SELECT_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_AP_PIPELINE1_CE_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_DP_LOAD_RDWDADDR_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_DP_RDFIFO_WHICHPORT_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_DP_SIZE_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_DP_WRFIFO_WHICHPORT_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_PHYIF_DUMMYREADSTART_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q0_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q1_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q2_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q3_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q4_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q5_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q6_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q7_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q8_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q9_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q10_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q11_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q12_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q13_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q14_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q15_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q16_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q17_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q18_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q19_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q20_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q21_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q22_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q23_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q24_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q25_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q26_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q27_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q28_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q29_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q30_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q31_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q32_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q33_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q34_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_Q35_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_SKIP_1_VALUE = 15, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_SKIP_2_VALUE = 15, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_SKIP_3_VALUE = 15, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_SKIP_4_VALUE = 20, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_SKIP_5_VALUE = 36, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_SKIP_6_VALUE = 20, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_SKIP_7_VALUE = 36, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_B16_REPEAT_CNT = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_B32_REPEAT_CNT = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_B64_REPEAT_CNT = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_ZQCS_REPEAT_CNT = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_BASEADDR_CTRL0 = 0x000, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_HIGHADDR_CTRL0 = 0x00d, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_BASEADDR_CTRL1 = 0x00e, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_HIGHADDR_CTRL1 = 0x017, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_BASEADDR_CTRL2 = 0x018, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_HIGHADDR_CTRL2 = 0x025, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_BASEADDR_CTRL3 = 0x026, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_HIGHADDR_CTRL3 = 0x02f, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_BASEADDR_CTRL4 = 0x030, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_HIGHADDR_CTRL4 = 0x03d, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_BASEADDR_CTRL5 = 0x03e, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_HIGHADDR_CTRL5 = 0x047, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_BASEADDR_CTRL6 = 0x048, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_HIGHADDR_CTRL6 = 0x05b, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_BASEADDR_CTRL7 = 0x05c, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_HIGHADDR_CTRL7 = 0x06a, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_BASEADDR_CTRL8 = 0x06b, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_HIGHADDR_CTRL8 = 0x086, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_BASEADDR_CTRL9 = 0x087, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_HIGHADDR_CTRL9 = 0x09d, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_BASEADDR_CTRL10 = 0x09e, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_HIGHADDR_CTRL10 = 0x0a5, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_BASEADDR_CTRL11 = 0x0a6, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_HIGHADDR_CTRL11 = 0x0ad, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_BASEADDR_CTRL12 = 0x0ae, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_HIGHADDR_CTRL12 = 0x0b5, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_BASEADDR_CTRL13 = 0x0b6, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_HIGHADDR_CTRL13 = 0x0bd, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_BASEADDR_CTRL14 = 0x0be, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_HIGHADDR_CTRL14 = 0x0d0, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_BASEADDR_CTRL15 = 0x0d1, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_HIGHADDR_CTRL15 = 0x0d8, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_BASEADDR_CTRL16 = 0x0d9, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, ISVALID = (C_USE_MIG_V6_PHY && [xstrncmp C_MEM_TYPE  DDR3 ])
PARAMETER C_HIGHADDR_CTRL16 = 0x0da, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, ISVALID = (C_USE_MIG_V6_PHY && [xstrncmp C_MEM_TYPE  DDR3 ])
PARAMETER C_CTRL_BRAM_INIT_3F = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_3E = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_3D = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_3C = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_3B = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_3A = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_39 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_38 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_37 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_36 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_35 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_34 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_33 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_32 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_31 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_30 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_2F = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_2E = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_2D = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_2C = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_2B = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_2A = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_29 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_28 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_27 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_26 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_25 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_24 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_23 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_22 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_21 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_20 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_1F = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_1E = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_1D = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_1C = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_1B = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_1A = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_19 = 0x000002FC000002FC000002FC000002FC000002FD000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_18 = 0x000002FC000002FC000002FC000002FC000002FC000002F0000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_17 = 0x000002FC000042E8000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_16 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_15 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_14 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_13 = 0x000002FC000002FC000002FC000002FC000002FC000042E8000006FC000026F5, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_12 = 0x000006FC000026F4000006FC000026F4000006FC000026F4000006FC000026F4, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_11 = 0x000006FC000026F4000006FC000026F4000006FC000016F4000082FC000082FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_10 = 0x000082F8000002FC000002FC000002FC000042E8000002FC000002FD000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_0F = 0x000002FC000002FC0000093C000029240000093C000029240000093C00002924, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_0E = 0x0000093C000029240000093C000029240000093C000029240000093C00002924, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_0D = 0x0000093C000019240000803C000082FC000082F8000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_0C = 0x000042E8000006FC000026F5000006FC000026F4000006FC000026F4000006FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_0B = 0x000016F4000082FC000082FC000082F8000002FC000002FC000002FC000042E8, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_0A = 0x000002FC000002FD000002FC000002FC000002FC0000093C000029240000093C, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_09 = 0x000029240000093C000029240000093C000019240000803C000082FC000082F8, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_08 = 0x000002FC000002FC000002FC000042E8000002FC000006FD000016F4000082FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_07 = 0x000082FC000082F8000002FC000002FC000002FC000042E8000002FC000002FD, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_06 = 0x000002FC000002FC000002FC0000093C000019240000803C000082FC000082F8, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_05 = 0x000002FC000002FC000002FC000042E8000002FC000002FD000016F4000082FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_04 = 0x000082FC000082F8000002FC000002FC000002FC000042E8000002FC000002FD, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_03 = 0x000002FC000002FC000002FC0000013C000019240000803C000082FC000082F8, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_02 = 0x000002FC000002FC000002FC000042E8000002FC000002FD000016F4000082FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_01 = 0x000082FC000082F8000002FC000002FC000002FC000042E8000002FC000002FD, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INIT_00 = 0x000002FC000002FC000002FC0000013C000019240000803C000082FC000082F8, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_SRVAL = 0x0000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INITP_07 = 0x0000000000000000000000000000000000000000000000000000000000000000, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INITP_06 = 0x0000000000000000000000000000000000000000000000000000000000000000, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INITP_05 = 0x0000000000000000000000000000000000000000000000000000000000000000, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INITP_04 = 0x0000000000000000000000000000000000000000000000000000000000000000, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INITP_03 = 0x0000000000000000000000000000000000000000000000001111111111111111, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INITP_02 = 0x1110000000000000000000000000000000011111111111111111111111111111, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INITP_01 = 0x1110000000000000000011111111111111111111111111000000000111111011, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter
PARAMETER C_CTRL_BRAM_INITP_00 = 0x1111111111110001111110111111111111111001111110111111111111111001, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter

## Ports
PORT FSL0_M_Clk = FSL_M_Clk, DIR = I, BUS = XCL0, SIGIS = CLK, INITIALVAL = VCC
PORT FSL0_M_Write = FSL_M_Write, DIR = I, BUS = XCL0
PORT FSL0_M_Data = FSL_M_Data, DIR = I, BUS = XCL0, VEC = [0:31]
PORT FSL0_M_Control = FSL_M_Control, DIR = I, BUS = XCL0
PORT FSL0_M_Full = FSL_M_Full, DIR = O, BUS = XCL0
PORT FSL0_S_Clk = FSL_S_Clk, DIR = I, BUS = XCL0
PORT FSL0_S_Read = FSL_S_Read, DIR = I, BUS = XCL0
PORT FSL0_S_Data = FSL_S_Data, DIR = O, BUS = XCL0, VEC = [0:31]
PORT FSL0_S_Control = FSL_S_Control, DIR = O, BUS = XCL0
PORT FSL0_S_Exists = FSL_S_Exists, DIR = O, BUS = XCL0
PORT FSL0_B_M_Clk = FSL_M_Clk, DIR = I, BUS = XCL0_B, SIGIS = CLK, INITIALVAL = VCC
PORT FSL0_B_M_Write = FSL_M_Write, DIR = I, BUS = XCL0_B
PORT FSL0_B_M_Data = FSL_M_Data, DIR = I, BUS = XCL0_B, VEC = [0:31]
PORT FSL0_B_M_Control = FSL_M_Control, DIR = I, BUS = XCL0_B
PORT FSL0_B_M_Full = FSL_M_Full, DIR = O, BUS = XCL0_B
PORT FSL0_B_S_Clk = FSL_S_Clk, DIR = I, BUS = XCL0_B
PORT FSL0_B_S_Read = FSL_S_Read, DIR = I, BUS = XCL0_B
PORT FSL0_B_S_Data = FSL_S_Data, DIR = O, BUS = XCL0_B, VEC = [0:31]
PORT FSL0_B_S_Control = FSL_S_Control, DIR = O, BUS = XCL0_B
PORT FSL0_B_S_Exists = FSL_S_Exists, DIR = O, BUS = XCL0_B
PORT SPLB0_Clk = "", DIR = I, BUS = SPLB0, SIGIS = CLK, INITIALVAL = VCC
PORT SPLB0_Rst = SPLB_Rst, DIR = I, BUS = SPLB0, SIGIS = RST
PORT SPLB0_PLB_ABus = PLB_ABus, DIR = I, BUS = SPLB0, VEC = [0:31]
PORT SPLB0_PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB0
PORT SPLB0_PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB0
PORT SPLB0_PLB_masterID = PLB_masterID, DIR = I, BUS = SPLB0, VEC = [0:(C_SPLB0_MID_WIDTH-1)]
PORT SPLB0_PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB0
PORT SPLB0_PLB_BE = PLB_BE, DIR = I, BUS = SPLB0, VEC = [0:((C_SPLB0_DWIDTH/8)-1)]
PORT SPLB0_PLB_UABus = PLB_UABus, DIR = I, BUS = SPLB0, VEC = [0:31]
PORT SPLB0_PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB0
PORT SPLB0_PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB0
PORT SPLB0_PLB_abort = PLB_abort, DIR = I, BUS = SPLB0
PORT SPLB0_PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB0
PORT SPLB0_PLB_MSize = PLB_MSize, DIR = I, BUS = SPLB0, VEC = [0:1]
PORT SPLB0_PLB_size = PLB_size, DIR = I, BUS = SPLB0, VEC = [0:3]
PORT SPLB0_PLB_type = PLB_type, DIR = I, BUS = SPLB0, VEC = [0:2]
PORT SPLB0_PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB0
PORT SPLB0_PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB0
PORT SPLB0_PLB_wrPendPri = PLB_wrPendPri, DIR = I, BUS = SPLB0, VEC = [0:1]
PORT SPLB0_PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB0
PORT SPLB0_PLB_rdPendPri = PLB_rdPendPri, DIR = I, BUS = SPLB0, VEC = [0:1]
PORT SPLB0_PLB_reqPri = PLB_reqPri, DIR = I, BUS = SPLB0, VEC = [0:1]
PORT SPLB0_PLB_TAttribute = PLB_TAttribute, DIR = I, BUS = SPLB0, VEC = [0:15]
PORT SPLB0_PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB0
PORT SPLB0_PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB0
PORT SPLB0_PLB_wrDBus = PLB_wrDBus, DIR = I, BUS = SPLB0, VEC = [0:(C_SPLB0_DWIDTH-1)]
PORT SPLB0_Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB0
PORT SPLB0_Sl_SSize = Sl_SSize, DIR = O, BUS = SPLB0, VEC = [0:1]
PORT SPLB0_Sl_wait = Sl_wait, DIR = O, BUS = SPLB0
PORT SPLB0_Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB0
PORT SPLB0_Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB0
PORT SPLB0_Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB0
PORT SPLB0_Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB0
PORT SPLB0_Sl_rdDBus = Sl_rdDBus, DIR = O, BUS = SPLB0, VEC = [0:(C_SPLB0_DWIDTH-1)]
PORT SPLB0_Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, BUS = SPLB0, VEC = [0:3]
PORT SPLB0_Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB0
PORT SPLB0_Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB0
PORT SPLB0_Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB0
PORT SPLB0_Sl_MBusy = Sl_MBusy, DIR = O, BUS = SPLB0, VEC = [0:(C_SPLB0_NUM_MASTERS-1)]
PORT SPLB0_Sl_MRdErr = Sl_MRdErr, DIR = O, BUS = SPLB0, VEC = [0:(C_SPLB0_NUM_MASTERS-1)]
PORT SPLB0_Sl_MWrErr = Sl_MWrErr, DIR = O, BUS = SPLB0, VEC = [0:(C_SPLB0_NUM_MASTERS-1)]
PORT SPLB0_Sl_MIRQ = Sl_MIRQ, DIR = O, BUS = SPLB0, VEC = [0:(C_SPLB0_NUM_MASTERS-1)]
PORT SDMA0_Clk = "", DIR = I, SIGIS = CLK, ISVALID = (C_NUM_PORTS > 0 && C_PIM0_BASETYPE == 3), ASSIGNMENT = REQUIRE
PORT SDMA0_Rx_IntOut = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, ISVALID = (C_NUM_PORTS > 0 && C_PIM0_BASETYPE == 3)
PORT SDMA0_Tx_IntOut = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, ISVALID = (C_NUM_PORTS > 0 && C_PIM0_BASETYPE == 3)
PORT SDMA0_RstOut = LL_RST_ACK, DIR = O, BUS = SDMA_LL0
PORT SDMA0_TX_D = LL_Tx_Data, DIR = O, BUS = SDMA_LL0, VEC = [0:31]
PORT SDMA0_TX_Rem = LL_Tx_Rem, DIR = O, BUS = SDMA_LL0, VEC = [0:3]
PORT SDMA0_TX_SOF = LL_Tx_SOF_n, DIR = O, BUS = SDMA_LL0
PORT SDMA0_TX_EOF = LL_Tx_EOF_n, DIR = O, BUS = SDMA_LL0
PORT SDMA0_TX_SOP = LL_Tx_SOP_n, DIR = O, BUS = SDMA_LL0
PORT SDMA0_TX_EOP = LL_Tx_EOP_n, DIR = O, BUS = SDMA_LL0
PORT SDMA0_TX_Src_Rdy = LL_Tx_SrcRdy_n, DIR = O, BUS = SDMA_LL0
PORT SDMA0_TX_Dst_Rdy = LL_Tx_DstRdy_n, DIR = I, BUS = SDMA_LL0, INITIALVAL = VCC
PORT SDMA0_RX_D = LL_Rx_Data, DIR = I, BUS = SDMA_LL0, INITIALVAL = GND, VEC = [0:31]
PORT SDMA0_RX_Rem = LL_Rx_Rem, DIR = I, BUS = SDMA_LL0, INITIALVAL = VCC, VEC = [0:3]
PORT SDMA0_RX_SOF = LL_Rx_SOF_n, DIR = I, BUS = SDMA_LL0, INITIALVAL = VCC
PORT SDMA0_RX_EOF = LL_Rx_EOF_n, DIR = I, BUS = SDMA_LL0, INITIALVAL = VCC
PORT SDMA0_RX_SOP = LL_Rx_SOP_n, DIR = I, BUS = SDMA_LL0, INITIALVAL = VCC
PORT SDMA0_RX_EOP = LL_Rx_EOP_n, DIR = I, BUS = SDMA_LL0, INITIALVAL = VCC
PORT SDMA0_RX_Src_Rdy = LL_Rx_SrcRdy_n, DIR = I, BUS = SDMA_LL0, INITIALVAL = VCC
PORT SDMA0_RX_Dst_Rdy = LL_Rx_DstRdy_n, DIR = O, BUS = SDMA_LL0
PORT SDMA_CTRL0_Clk = "", DIR = I, BUS = SDMA_CTRL0, SIGIS = CLK, INITIALVAL = VCC
PORT SDMA_CTRL0_Rst = SPLB_Rst, DIR = I, BUS = SDMA_CTRL0, SIGIS = RST
PORT SDMA_CTRL0_PLB_ABus = PLB_ABus, DIR = I, BUS = SDMA_CTRL0, VEC = [0:31]
PORT SDMA_CTRL0_PLB_PAValid = PLB_PAValid, DIR = I, BUS = SDMA_CTRL0
PORT SDMA_CTRL0_PLB_SAValid = PLB_SAValid, DIR = I, BUS = SDMA_CTRL0
PORT SDMA_CTRL0_PLB_masterID = PLB_masterID, DIR = I, BUS = SDMA_CTRL0, VEC = [0:(C_SDMA_CTRL0_MID_WIDTH-1)]
PORT SDMA_CTRL0_PLB_RNW = PLB_RNW, DIR = I, BUS = SDMA_CTRL0
PORT SDMA_CTRL0_PLB_BE = PLB_BE, DIR = I, BUS = SDMA_CTRL0, VEC = [0:((C_SDMA_CTRL0_DWIDTH/8)-1)]
PORT SDMA_CTRL0_PLB_UABus = PLB_UABus, DIR = I, BUS = SDMA_CTRL0, VEC = [0:31]
PORT SDMA_CTRL0_PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SDMA_CTRL0
PORT SDMA_CTRL0_PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SDMA_CTRL0
PORT SDMA_CTRL0_PLB_abort = PLB_abort, DIR = I, BUS = SDMA_CTRL0
PORT SDMA_CTRL0_PLB_busLock = PLB_busLock, DIR = I, BUS = SDMA_CTRL0
PORT SDMA_CTRL0_PLB_MSize = PLB_MSize, DIR = I, BUS = SDMA_CTRL0, VEC = [0:1]
PORT SDMA_CTRL0_PLB_size = PLB_size, DIR = I, BUS = SDMA_CTRL0, VEC = [0:3]
PORT SDMA_CTRL0_PLB_type = PLB_type, DIR = I, BUS = SDMA_CTRL0, VEC = [0:2]
PORT SDMA_CTRL0_PLB_lockErr = PLB_lockErr, DIR = I, BUS = SDMA_CTRL0
PORT SDMA_CTRL0_PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SDMA_CTRL0
PORT SDMA_CTRL0_PLB_wrPendPri = PLB_wrPendPri, DIR = I, BUS = SDMA_CTRL0, VEC = [0:1]
PORT SDMA_CTRL0_PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SDMA_CTRL0
PORT SDMA_CTRL0_PLB_rdPendPri = PLB_rdPendPri, DIR = I, BUS = SDMA_CTRL0, VEC = [0:1]
PORT SDMA_CTRL0_PLB_reqPri = PLB_reqPri, DIR = I, BUS = SDMA_CTRL0, VEC = [0:1]
PORT SDMA_CTRL0_PLB_TAttribute = PLB_TAttribute, DIR = I, BUS = SDMA_CTRL0, VEC = [0:15]
PORT SDMA_CTRL0_PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SDMA_CTRL0
PORT SDMA_CTRL0_PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SDMA_CTRL0
PORT SDMA_CTRL0_PLB_wrDBus = PLB_wrDBus, DIR = I, BUS = SDMA_CTRL0, VEC = [0:(C_SDMA_CTRL0_DWIDTH-1)]
PORT SDMA_CTRL0_Sl_addrAck = Sl_addrAck, DIR = O, BUS = SDMA_CTRL0
PORT SDMA_CTRL0_Sl_SSize = Sl_SSize, DIR = O, BUS = SDMA_CTRL0, VEC = [0:1]
PORT SDMA_CTRL0_Sl_wait = Sl_wait, DIR = O, BUS = SDMA_CTRL0
PORT SDMA_CTRL0_Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SDMA_CTRL0
PORT SDMA_CTRL0_Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SDMA_CTRL0
PORT SDMA_CTRL0_Sl_wrComp = Sl_wrComp, DIR = O, BUS = SDMA_CTRL0
PORT SDMA_CTRL0_Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SDMA_CTRL0
PORT SDMA_CTRL0_Sl_rdDBus = Sl_rdDBus, DIR = O, BUS = SDMA_CTRL0, VEC = [0:(C_SDMA_CTRL0_DWIDTH-1)]
PORT SDMA_CTRL0_Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, BUS = SDMA_CTRL0, VEC = [0:3]
PORT SDMA_CTRL0_Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SDMA_CTRL0
PORT SDMA_CTRL0_Sl_rdComp = Sl_rdComp, DIR = O, BUS = SDMA_CTRL0
PORT SDMA_CTRL0_Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SDMA_CTRL0
PORT SDMA_CTRL0_Sl_MBusy = Sl_MBusy, DIR = O, BUS = SDMA_CTRL0, VEC = [0:(C_SDMA_CTRL0_NUM_MASTERS-1)]
PORT SDMA_CTRL0_Sl_MRdErr = Sl_MRdErr, DIR = O, BUS = SDMA_CTRL0, VEC = [0:(C_SDMA_CTRL0_NUM_MASTERS-1)]
PORT SDMA_CTRL0_Sl_MWrErr = Sl_MWrErr, DIR = O, BUS = SDMA_CTRL0, VEC = [0:(C_SDMA_CTRL0_NUM_MASTERS-1)]
PORT SDMA_CTRL0_Sl_MIRQ = Sl_MIRQ, DIR = O, BUS = SDMA_CTRL0, VEC = [0:(C_SDMA_CTRL0_NUM_MASTERS-1)]
PORT PIM0_Addr = Addr, DIR = I, BUS = MPMC_PIM0, VEC = [31:0]
PORT PIM0_AddrReq = AddrReq, DIR = I, BUS = MPMC_PIM0
PORT PIM0_AddrAck = AddrAck, DIR = O, BUS = MPMC_PIM0
PORT PIM0_RNW = RNW, DIR = I, BUS = MPMC_PIM0
PORT PIM0_Size = Size, DIR = I, BUS = MPMC_PIM0, VEC = [3:0]
PORT PIM0_RdModWr = RdModWr, DIR = I, BUS = MPMC_PIM0
PORT PIM0_WrFIFO_Data = WrFIFO_Data, DIR = I, BUS = MPMC_PIM0, VEC = [(C_PIM0_DATA_WIDTH-1):0]
PORT PIM0_WrFIFO_BE = WrFIFO_BE, DIR = I, BUS = MPMC_PIM0, VEC = [(C_PIM0_DATA_WIDTH/8-1):0]
PORT PIM0_WrFIFO_Push = WrFIFO_Push, DIR = I, BUS = MPMC_PIM0
PORT PIM0_RdFIFO_Data = RdFIFO_Data, DIR = O, BUS = MPMC_PIM0, VEC = [(C_PIM0_DATA_WIDTH-1):0]
PORT PIM0_RdFIFO_Pop = RdFIFO_Pop, DIR = I, BUS = MPMC_PIM0
PORT PIM0_RdFIFO_RdWdAddr = RdFIFO_RdWdAddr, DIR = O, BUS = MPMC_PIM0, VEC = [3:0]
PORT PIM0_WrFIFO_Empty = WrFIFO_Empty, DIR = O, BUS = MPMC_PIM0
PORT PIM0_WrFIFO_AlmostFull = WrFIFO_AlmostFull, DIR = O, BUS = MPMC_PIM0
PORT PIM0_WrFIFO_Flush = WrFIFO_Flush, DIR = I, BUS = MPMC_PIM0
PORT PIM0_RdFIFO_Empty = RdFIFO_Empty, DIR = O, BUS = MPMC_PIM0
PORT PIM0_RdFIFO_Flush = RdFIFO_Flush, DIR = I, BUS = MPMC_PIM0
PORT PIM0_RdFIFO_Latency = RDFIFO_Latency, DIR = O, BUS = MPMC_PIM0, VEC = [1:0]
PORT PIM0_InitDone = InitDone, DIR = O, BUS = MPMC_PIM0
PORT PPC440MC0_MIMCReadNotWrite = MIMCREADNOTWRITE, DIR = I, BUS = PPC440MC0
PORT PPC440MC0_MIMCAddress = MIMCADDRESS, DIR = I, BUS = PPC440MC0, VEC = [0:35]
PORT PPC440MC0_MIMCAddressValid = MIMCADDRESSVALID, DIR = I, BUS = PPC440MC0
PORT PPC440MC0_MIMCWriteData = MIMCWRITEDATA, DIR = I, BUS = PPC440MC0, VEC = [0:127]
PORT PPC440MC0_MIMCWriteDataValid = MIMCWRITEDATAVALID, DIR = I, BUS = PPC440MC0
PORT PPC440MC0_MIMCByteEnable = MIMCBYTEENABLE, DIR = I, BUS = PPC440MC0, VEC = [0:15]
PORT PPC440MC0_MIMCBankConflict = MIMCBANKCONFLICT, DIR = I, BUS = PPC440MC0
PORT PPC440MC0_MIMCRowConflict = MIMCROWCONFLICT, DIR = I, BUS = PPC440MC0
PORT PPC440MC0_MCMIReadData = MCMIREADDATA, DIR = O, BUS = PPC440MC0, VEC = [0:127]
PORT PPC440MC0_MCMIReadDataValid = MCMIREADDATAVALID, DIR = O, BUS = PPC440MC0
PORT PPC440MC0_MCMIReadDataErr = MCMIREADDATAERR, DIR = O, BUS = PPC440MC0
PORT PPC440MC0_MCMIAddrReadyToAccept = MCMIADDRREADYTOACCEPT, DIR = O, BUS = PPC440MC0
PORT VFBC0_Cmd_Clk = cmd_clk, DIR = I, BUS = VFBC0
PORT VFBC0_Cmd_Reset = cmd_reset, DIR = I, BUS = VFBC0
PORT VFBC0_Cmd_Data = cmd_data, DIR = I, BUS = VFBC0, VEC = [31:0]
PORT VFBC0_Cmd_Write = cmd_write, DIR = I, BUS = VFBC0
PORT VFBC0_Cmd_End = cmd_end, DIR = I, BUS = VFBC0
PORT VFBC0_Cmd_Full = cmd_full, DIR = O, BUS = VFBC0
PORT VFBC0_Cmd_Almost_Full = cmd_almost_full, DIR = O, BUS = VFBC0
PORT VFBC0_Cmd_Idle = cmd_idle, DIR = O, BUS = VFBC0
PORT VFBC0_Wd_Clk = wd_clk, DIR = I, BUS = VFBC0
PORT VFBC0_Wd_Reset = wd_reset, DIR = I, BUS = VFBC0
PORT VFBC0_Wd_Write = wd_write, DIR = I, BUS = VFBC0
PORT VFBC0_Wd_End_Burst = wd_end_burst, DIR = I, BUS = VFBC0
PORT VFBC0_Wd_Flush = wd_flush, DIR = I, BUS = VFBC0
PORT VFBC0_Wd_Data = wd_data, DIR = I, BUS = VFBC0, VEC = [C_VFBC0_RDWD_DATA_WIDTH-1:0]
PORT VFBC0_Wd_Data_BE = wd_data_be, DIR = I, BUS = VFBC0, VEC = [C_VFBC0_RDWD_DATA_WIDTH/8-1:0]
PORT VFBC0_Wd_Full = wd_full, DIR = O, BUS = VFBC0
PORT VFBC0_Wd_Almost_Full = wd_almost_full, DIR = O, BUS = VFBC0
PORT VFBC0_Rd_Clk = rd_clk, DIR = I, BUS = VFBC0
PORT VFBC0_Rd_Reset = rd_reset, DIR = I, BUS = VFBC0
PORT VFBC0_Rd_Read = rd_read, DIR = I, BUS = VFBC0
PORT VFBC0_Rd_End_Burst = rd_end_burst, DIR = I, BUS = VFBC0
PORT VFBC0_Rd_Flush = rd_flush, DIR = I, BUS = VFBC0
PORT VFBC0_Rd_Data = rd_data, DIR = O, BUS = VFBC0, VEC = [C_VFBC0_RDWD_DATA_WIDTH-1:0]
PORT VFBC0_Rd_Empty = rd_empty, DIR = O, BUS = VFBC0
PORT VFBC0_Rd_Almost_Empty = rd_almost_empty, DIR = O, BUS = VFBC0
PORT MCB0_cmd_clk = cmd_clk, DIR = I, BUS = MCB0
PORT MCB0_cmd_en = cmd_en, DIR = I, BUS = MCB0
PORT MCB0_cmd_instr = cmd_instr, DIR = I, BUS = MCB0, VEC = [2:0]
PORT MCB0_cmd_bl = cmd_bl, DIR = I, BUS = MCB0, VEC = [5:0]
PORT MCB0_cmd_byte_addr = cmd_byte_addr, DIR = I, BUS = MCB0, VEC = [29:0]
PORT MCB0_cmd_empty = cmd_empty, DIR = O, BUS = MCB0
PORT MCB0_cmd_full = cmd_full, DIR = O, BUS = MCB0
PORT MCB0_wr_clk = wr_clk, DIR = I, BUS = MCB0
PORT MCB0_wr_en = wr_en, DIR = I, BUS = MCB0
PORT MCB0_wr_mask = wr_mask, DIR = I, BUS = MCB0, VEC = [C_PIM0_DATA_WIDTH/8-1:0]
PORT MCB0_wr_data = wr_data, DIR = I, BUS = MCB0, VEC = [C_PIM0_DATA_WIDTH-1:0]
PORT MCB0_wr_full = wr_full, DIR = O, BUS = MCB0
PORT MCB0_wr_empty = wr_empty, DIR = O, BUS = MCB0
PORT MCB0_wr_count = wr_count, DIR = O, BUS = MCB0, VEC = [6:0]
PORT MCB0_wr_underrun = wr_underrun, DIR = O, BUS = MCB0
PORT MCB0_wr_error = wr_error, DIR = O, BUS = MCB0
PORT MCB0_rd_clk = rd_clk, DIR = I, BUS = MCB0
PORT MCB0_rd_en = rd_en, DIR = I, BUS = MCB0
PORT MCB0_rd_data = rd_data, DIR = O, BUS = MCB0, VEC = [C_PIM0_DATA_WIDTH-1:0]
PORT MCB0_rd_full = rd_full, DIR = O, BUS = MCB0
PORT MCB0_rd_empty = rd_empty, DIR = O, BUS = MCB0
PORT MCB0_rd_count = rd_count, DIR = O, BUS = MCB0, VEC = [6:0]
PORT MCB0_rd_overflow = rd_overflow, DIR = O, BUS = MCB0
PORT MCB0_rd_error = rd_error, DIR = O, BUS = MCB0
PORT FSL1_M_Clk = FSL_M_Clk, DIR = I, BUS = XCL1, SIGIS = CLK, INITIALVAL = VCC
PORT FSL1_M_Write = FSL_M_Write, DIR = I, BUS = XCL1
PORT FSL1_M_Data = FSL_M_Data, DIR = I, BUS = XCL1, VEC = [0:31]
PORT FSL1_M_Control = FSL_M_Control, DIR = I, BUS = XCL1
PORT FSL1_M_Full = FSL_M_Full, DIR = O, BUS = XCL1
PORT FSL1_S_Clk = FSL_S_Clk, DIR = I, BUS = XCL1
PORT FSL1_S_Read = FSL_S_Read, DIR = I, BUS = XCL1
PORT FSL1_S_Data = FSL_S_Data, DIR = O, BUS = XCL1, VEC = [0:31]
PORT FSL1_S_Control = FSL_S_Control, DIR = O, BUS = XCL1
PORT FSL1_S_Exists = FSL_S_Exists, DIR = O, BUS = XCL1
PORT FSL1_B_M_Clk = FSL_M_Clk, DIR = I, BUS = XCL1_B, SIGIS = CLK, INITIALVAL = VCC
PORT FSL1_B_M_Write = FSL_M_Write, DIR = I, BUS = XCL1_B
PORT FSL1_B_M_Data = FSL_M_Data, DIR = I, BUS = XCL1_B, VEC = [0:31]
PORT FSL1_B_M_Control = FSL_M_Control, DIR = I, BUS = XCL1_B
PORT FSL1_B_M_Full = FSL_M_Full, DIR = O, BUS = XCL1_B
PORT FSL1_B_S_Clk = FSL_S_Clk, DIR = I, BUS = XCL1_B
PORT FSL1_B_S_Read = FSL_S_Read, DIR = I, BUS = XCL1_B
PORT FSL1_B_S_Data = FSL_S_Data, DIR = O, BUS = XCL1_B, VEC = [0:31]
PORT FSL1_B_S_Control = FSL_S_Control, DIR = O, BUS = XCL1_B
PORT FSL1_B_S_Exists = FSL_S_Exists, DIR = O, BUS = XCL1_B
PORT SPLB1_Clk = "", DIR = I, BUS = SPLB1, SIGIS = CLK, INITIALVAL = VCC
PORT SPLB1_Rst = SPLB_Rst, DIR = I, BUS = SPLB1, SIGIS = RST
PORT SPLB1_PLB_ABus = PLB_ABus, DIR = I, BUS = SPLB1, VEC = [0:31]
PORT SPLB1_PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB1
PORT SPLB1_PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB1
PORT SPLB1_PLB_masterID = PLB_masterID, DIR = I, BUS = SPLB1, VEC = [0:(C_SPLB1_MID_WIDTH-1)]
PORT SPLB1_PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB1
PORT SPLB1_PLB_BE = PLB_BE, DIR = I, BUS = SPLB1, VEC = [0:((C_SPLB1_DWIDTH/8)-1)]
PORT SPLB1_PLB_UABus = PLB_UABus, DIR = I, BUS = SPLB1, VEC = [0:31]
PORT SPLB1_PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB1
PORT SPLB1_PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB1
PORT SPLB1_PLB_abort = PLB_abort, DIR = I, BUS = SPLB1
PORT SPLB1_PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB1
PORT SPLB1_PLB_MSize = PLB_MSize, DIR = I, BUS = SPLB1, VEC = [0:1]
PORT SPLB1_PLB_size = PLB_size, DIR = I, BUS = SPLB1, VEC = [0:3]
PORT SPLB1_PLB_type = PLB_type, DIR = I, BUS = SPLB1, VEC = [0:2]
PORT SPLB1_PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB1
PORT SPLB1_PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB1
PORT SPLB1_PLB_wrPendPri = PLB_wrPendPri, DIR = I, BUS = SPLB1, VEC = [0:1]
PORT SPLB1_PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB1
PORT SPLB1_PLB_rdPendPri = PLB_rdPendPri, DIR = I, BUS = SPLB1, VEC = [0:1]
PORT SPLB1_PLB_reqPri = PLB_reqPri, DIR = I, BUS = SPLB1, VEC = [0:1]
PORT SPLB1_PLB_TAttribute = PLB_TAttribute, DIR = I, BUS = SPLB1, VEC = [0:15]
PORT SPLB1_PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB1
PORT SPLB1_PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB1
PORT SPLB1_PLB_wrDBus = PLB_wrDBus, DIR = I, BUS = SPLB1, VEC = [0:(C_SPLB1_DWIDTH-1)]
PORT SPLB1_Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB1
PORT SPLB1_Sl_SSize = Sl_SSize, DIR = O, BUS = SPLB1, VEC = [0:1]
PORT SPLB1_Sl_wait = Sl_wait, DIR = O, BUS = SPLB1
PORT SPLB1_Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB1
PORT SPLB1_Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB1
PORT SPLB1_Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB1
PORT SPLB1_Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB1
PORT SPLB1_Sl_rdDBus = Sl_rdDBus, DIR = O, BUS = SPLB1, VEC = [0:(C_SPLB1_DWIDTH-1)]
PORT SPLB1_Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, BUS = SPLB1, VEC = [0:3]
PORT SPLB1_Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB1
PORT SPLB1_Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB1
PORT SPLB1_Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB1
PORT SPLB1_Sl_MBusy = Sl_MBusy, DIR = O, BUS = SPLB1, VEC = [0:(C_SPLB1_NUM_MASTERS-1)]
PORT SPLB1_Sl_MRdErr = Sl_MRdErr, DIR = O, BUS = SPLB1, VEC = [0:(C_SPLB1_NUM_MASTERS-1)]
PORT SPLB1_Sl_MWrErr = Sl_MWrErr, DIR = O, BUS = SPLB1, VEC = [0:(C_SPLB1_NUM_MASTERS-1)]
PORT SPLB1_Sl_MIRQ = Sl_MIRQ, DIR = O, BUS = SPLB1, VEC = [0:(C_SPLB1_NUM_MASTERS-1)]
PORT SDMA1_Clk = "", DIR = I, SIGIS = CLK, ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 3), ASSIGNMENT = REQUIRE
PORT SDMA1_Rx_IntOut = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 3)
PORT SDMA1_Tx_IntOut = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, ISVALID = (C_NUM_PORTS > 1 && C_PIM1_BASETYPE == 3)
PORT SDMA1_RstOut = LL_RST_ACK, DIR = O, BUS = SDMA_LL1
PORT SDMA1_TX_D = LL_Tx_Data, DIR = O, BUS = SDMA_LL1, VEC = [0:31]
PORT SDMA1_TX_Rem = LL_Tx_Rem, DIR = O, BUS = SDMA_LL1, VEC = [0:3]
PORT SDMA1_TX_SOF = LL_Tx_SOF_n, DIR = O, BUS = SDMA_LL1
PORT SDMA1_TX_EOF = LL_Tx_EOF_n, DIR = O, BUS = SDMA_LL1
PORT SDMA1_TX_SOP = LL_Tx_SOP_n, DIR = O, BUS = SDMA_LL1
PORT SDMA1_TX_EOP = LL_Tx_EOP_n, DIR = O, BUS = SDMA_LL1
PORT SDMA1_TX_Src_Rdy = LL_Tx_SrcRdy_n, DIR = O, BUS = SDMA_LL1
PORT SDMA1_TX_Dst_Rdy = LL_Tx_DstRdy_n, DIR = I, BUS = SDMA_LL1, INITIALVAL = VCC
PORT SDMA1_RX_D = LL_Rx_Data, DIR = I, BUS = SDMA_LL1, INITIALVAL = GND, VEC = [0:31]
PORT SDMA1_RX_Rem = LL_Rx_Rem, DIR = I, BUS = SDMA_LL1, INITIALVAL = VCC, VEC = [0:3]
PORT SDMA1_RX_SOF = LL_Rx_SOF_n, DIR = I, BUS = SDMA_LL1, INITIALVAL = VCC
PORT SDMA1_RX_EOF = LL_Rx_EOF_n, DIR = I, BUS = SDMA_LL1, INITIALVAL = VCC
PORT SDMA1_RX_SOP = LL_Rx_SOP_n, DIR = I, BUS = SDMA_LL1, INITIALVAL = VCC
PORT SDMA1_RX_EOP = LL_Rx_EOP_n, DIR = I, BUS = SDMA_LL1, INITIALVAL = VCC
PORT SDMA1_RX_Src_Rdy = LL_Rx_SrcRdy_n, DIR = I, BUS = SDMA_LL1, INITIALVAL = VCC
PORT SDMA1_RX_Dst_Rdy = LL_Rx_DstRdy_n, DIR = O, BUS = SDMA_LL1
PORT SDMA_CTRL1_Clk = "", DIR = I, BUS = SDMA_CTRL1, SIGIS = CLK, INITIALVAL = VCC
PORT SDMA_CTRL1_Rst = SPLB_Rst, DIR = I, BUS = SDMA_CTRL1, SIGIS = RST
PORT SDMA_CTRL1_PLB_ABus = PLB_ABus, DIR = I, BUS = SDMA_CTRL1, VEC = [0:31]
PORT SDMA_CTRL1_PLB_PAValid = PLB_PAValid, DIR = I, BUS = SDMA_CTRL1
PORT SDMA_CTRL1_PLB_SAValid = PLB_SAValid, DIR = I, BUS = SDMA_CTRL1
PORT SDMA_CTRL1_PLB_masterID = PLB_masterID, DIR = I, BUS = SDMA_CTRL1, VEC = [0:(C_SDMA_CTRL1_MID_WIDTH-1)]
PORT SDMA_CTRL1_PLB_RNW = PLB_RNW, DIR = I, BUS = SDMA_CTRL1
PORT SDMA_CTRL1_PLB_BE = PLB_BE, DIR = I, BUS = SDMA_CTRL1, VEC = [0:((C_SDMA_CTRL1_DWIDTH/8)-1)]
PORT SDMA_CTRL1_PLB_UABus = PLB_UABus, DIR = I, BUS = SDMA_CTRL1, VEC = [0:31]
PORT SDMA_CTRL1_PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SDMA_CTRL1
PORT SDMA_CTRL1_PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SDMA_CTRL1
PORT SDMA_CTRL1_PLB_abort = PLB_abort, DIR = I, BUS = SDMA_CTRL1
PORT SDMA_CTRL1_PLB_busLock = PLB_busLock, DIR = I, BUS = SDMA_CTRL1
PORT SDMA_CTRL1_PLB_MSize = PLB_MSize, DIR = I, BUS = SDMA_CTRL1, VEC = [0:1]
PORT SDMA_CTRL1_PLB_size = PLB_size, DIR = I, BUS = SDMA_CTRL1, VEC = [0:3]
PORT SDMA_CTRL1_PLB_type = PLB_type, DIR = I, BUS = SDMA_CTRL1, VEC = [0:2]
PORT SDMA_CTRL1_PLB_lockErr = PLB_lockErr, DIR = I, BUS = SDMA_CTRL1
PORT SDMA_CTRL1_PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SDMA_CTRL1
PORT SDMA_CTRL1_PLB_wrPendPri = PLB_wrPendPri, DIR = I, BUS = SDMA_CTRL1, VEC = [0:1]
PORT SDMA_CTRL1_PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SDMA_CTRL1
PORT SDMA_CTRL1_PLB_rdPendPri = PLB_rdPendPri, DIR = I, BUS = SDMA_CTRL1, VEC = [0:1]
PORT SDMA_CTRL1_PLB_reqPri = PLB_reqPri, DIR = I, BUS = SDMA_CTRL1, VEC = [0:1]
PORT SDMA_CTRL1_PLB_TAttribute = PLB_TAttribute, DIR = I, BUS = SDMA_CTRL1, VEC = [0:15]
PORT SDMA_CTRL1_PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SDMA_CTRL1
PORT SDMA_CTRL1_PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SDMA_CTRL1
PORT SDMA_CTRL1_PLB_wrDBus = PLB_wrDBus, DIR = I, BUS = SDMA_CTRL1, VEC = [0:(C_SDMA_CTRL1_DWIDTH-1)]
PORT SDMA_CTRL1_Sl_addrAck = Sl_addrAck, DIR = O, BUS = SDMA_CTRL1
PORT SDMA_CTRL1_Sl_SSize = Sl_SSize, DIR = O, BUS = SDMA_CTRL1, VEC = [0:1]
PORT SDMA_CTRL1_Sl_wait = Sl_wait, DIR = O, BUS = SDMA_CTRL1
PORT SDMA_CTRL1_Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SDMA_CTRL1
PORT SDMA_CTRL1_Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SDMA_CTRL1
PORT SDMA_CTRL1_Sl_wrComp = Sl_wrComp, DIR = O, BUS = SDMA_CTRL1
PORT SDMA_CTRL1_Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SDMA_CTRL1
PORT SDMA_CTRL1_Sl_rdDBus = Sl_rdDBus, DIR = O, BUS = SDMA_CTRL1, VEC = [0:(C_SDMA_CTRL1_DWIDTH-1)]
PORT SDMA_CTRL1_Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, BUS = SDMA_CTRL1, VEC = [0:3]
PORT SDMA_CTRL1_Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SDMA_CTRL1
PORT SDMA_CTRL1_Sl_rdComp = Sl_rdComp, DIR = O, BUS = SDMA_CTRL1
PORT SDMA_CTRL1_Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SDMA_CTRL1
PORT SDMA_CTRL1_Sl_MBusy = Sl_MBusy, DIR = O, BUS = SDMA_CTRL1, VEC = [0:(C_SDMA_CTRL1_NUM_MASTERS-1)]
PORT SDMA_CTRL1_Sl_MRdErr = Sl_MRdErr, DIR = O, BUS = SDMA_CTRL1, VEC = [0:(C_SDMA_CTRL1_NUM_MASTERS-1)]
PORT SDMA_CTRL1_Sl_MWrErr = Sl_MWrErr, DIR = O, BUS = SDMA_CTRL1, VEC = [0:(C_SDMA_CTRL1_NUM_MASTERS-1)]
PORT SDMA_CTRL1_Sl_MIRQ = Sl_MIRQ, DIR = O, BUS = SDMA_CTRL1, VEC = [0:(C_SDMA_CTRL1_NUM_MASTERS-1)]
PORT PIM1_Addr = Addr, DIR = I, BUS = MPMC_PIM1, VEC = [31:0]
PORT PIM1_AddrReq = AddrReq, DIR = I, BUS = MPMC_PIM1
PORT PIM1_AddrAck = AddrAck, DIR = O, BUS = MPMC_PIM1
PORT PIM1_RNW = RNW, DIR = I, BUS = MPMC_PIM1
PORT PIM1_Size = Size, DIR = I, BUS = MPMC_PIM1, VEC = [3:0]
PORT PIM1_RdModWr = RdModWr, DIR = I, BUS = MPMC_PIM1
PORT PIM1_WrFIFO_Data = WrFIFO_Data, DIR = I, BUS = MPMC_PIM1, VEC = [(C_PIM1_DATA_WIDTH-1):0]
PORT PIM1_WrFIFO_BE = WrFIFO_BE, DIR = I, BUS = MPMC_PIM1, VEC = [(C_PIM1_DATA_WIDTH/8-1):0]
PORT PIM1_WrFIFO_Push = WrFIFO_Push, DIR = I, BUS = MPMC_PIM1
PORT PIM1_RdFIFO_Data = RdFIFO_Data, DIR = O, BUS = MPMC_PIM1, VEC = [(C_PIM1_DATA_WIDTH-1):0]
PORT PIM1_RdFIFO_Pop = RdFIFO_Pop, DIR = I, BUS = MPMC_PIM1
PORT PIM1_RdFIFO_RdWdAddr = RdFIFO_RdWdAddr, DIR = O, BUS = MPMC_PIM1, VEC = [3:0]
PORT PIM1_WrFIFO_Empty = WrFIFO_Empty, DIR = O, BUS = MPMC_PIM1
PORT PIM1_WrFIFO_AlmostFull = WrFIFO_AlmostFull, DIR = O, BUS = MPMC_PIM1
PORT PIM1_WrFIFO_Flush = WrFIFO_Flush, DIR = I, BUS = MPMC_PIM1
PORT PIM1_RdFIFO_Empty = RdFIFO_Empty, DIR = O, BUS = MPMC_PIM1
PORT PIM1_RdFIFO_Flush = RdFIFO_Flush, DIR = I, BUS = MPMC_PIM1
PORT PIM1_RdFIFO_Latency = RDFIFO_Latency, DIR = O, BUS = MPMC_PIM1, VEC = [1:0]
PORT PIM1_InitDone = InitDone, DIR = O, BUS = MPMC_PIM1
PORT PPC440MC1_MIMCReadNotWrite = MIMCREADNOTWRITE, DIR = I, BUS = PPC440MC1
PORT PPC440MC1_MIMCAddress = MIMCADDRESS, DIR = I, BUS = PPC440MC1, VEC = [0:35]
PORT PPC440MC1_MIMCAddressValid = MIMCADDRESSVALID, DIR = I, BUS = PPC440MC1
PORT PPC440MC1_MIMCWriteData = MIMCWRITEDATA, DIR = I, BUS = PPC440MC1, VEC = [0:127]
PORT PPC440MC1_MIMCWriteDataValid = MIMCWRITEDATAVALID, DIR = I, BUS = PPC440MC1
PORT PPC440MC1_MIMCByteEnable = MIMCBYTEENABLE, DIR = I, BUS = PPC440MC1, VEC = [0:15]
PORT PPC440MC1_MIMCBankConflict = MIMCBANKCONFLICT, DIR = I, BUS = PPC440MC1
PORT PPC440MC1_MIMCRowConflict = MIMCROWCONFLICT, DIR = I, BUS = PPC440MC1
PORT PPC440MC1_MCMIReadData = MCMIREADDATA, DIR = O, BUS = PPC440MC1, VEC = [0:127]
PORT PPC440MC1_MCMIReadDataValid = MCMIREADDATAVALID, DIR = O, BUS = PPC440MC1
PORT PPC440MC1_MCMIReadDataErr = MCMIREADDATAERR, DIR = O, BUS = PPC440MC1
PORT PPC440MC1_MCMIAddrReadyToAccept = MCMIADDRREADYTOACCEPT, DIR = O, BUS = PPC440MC1
PORT VFBC1_Cmd_Clk = cmd_clk, DIR = I, BUS = VFBC1
PORT VFBC1_Cmd_Reset = cmd_reset, DIR = I, BUS = VFBC1
PORT VFBC1_Cmd_Data = cmd_data, DIR = I, BUS = VFBC1, VEC = [31:0]
PORT VFBC1_Cmd_Write = cmd_write, DIR = I, BUS = VFBC1
PORT VFBC1_Cmd_End = cmd_end, DIR = I, BUS = VFBC1
PORT VFBC1_Cmd_Full = cmd_full, DIR = O, BUS = VFBC1
PORT VFBC1_Cmd_Almost_Full = cmd_almost_full, DIR = O, BUS = VFBC1
PORT VFBC1_Cmd_Idle = cmd_idle, DIR = O, BUS = VFBC1
PORT VFBC1_Wd_Clk = wd_clk, DIR = I, BUS = VFBC1
PORT VFBC1_Wd_Reset = wd_reset, DIR = I, BUS = VFBC1
PORT VFBC1_Wd_Write = wd_write, DIR = I, BUS = VFBC1
PORT VFBC1_Wd_End_Burst = wd_end_burst, DIR = I, BUS = VFBC1
PORT VFBC1_Wd_Flush = wd_flush, DIR = I, BUS = VFBC1
PORT VFBC1_Wd_Data = wd_data, DIR = I, BUS = VFBC1, VEC = [C_VFBC1_RDWD_DATA_WIDTH-1:0]
PORT VFBC1_Wd_Data_BE = wd_data_be, DIR = I, BUS = VFBC1, VEC = [C_VFBC1_RDWD_DATA_WIDTH/8-1:0]
PORT VFBC1_Wd_Full = wd_full, DIR = O, BUS = VFBC1
PORT VFBC1_Wd_Almost_Full = wd_almost_full, DIR = O, BUS = VFBC1
PORT VFBC1_Rd_Clk = rd_clk, DIR = I, BUS = VFBC1
PORT VFBC1_Rd_Reset = rd_reset, DIR = I, BUS = VFBC1
PORT VFBC1_Rd_Read = rd_read, DIR = I, BUS = VFBC1
PORT VFBC1_Rd_End_Burst = rd_end_burst, DIR = I, BUS = VFBC1
PORT VFBC1_Rd_Flush = rd_flush, DIR = I, BUS = VFBC1
PORT VFBC1_Rd_Data = rd_data, DIR = O, BUS = VFBC1, VEC = [C_VFBC1_RDWD_DATA_WIDTH-1:0]
PORT VFBC1_Rd_Empty = rd_empty, DIR = O, BUS = VFBC1
PORT VFBC1_Rd_Almost_Empty = rd_almost_empty, DIR = O, BUS = VFBC1
PORT MCB1_cmd_clk = cmd_clk, DIR = I, BUS = MCB1
PORT MCB1_cmd_en = cmd_en, DIR = I, BUS = MCB1
PORT MCB1_cmd_instr = cmd_instr, DIR = I, BUS = MCB1, VEC = [2:0]
PORT MCB1_cmd_bl = cmd_bl, DIR = I, BUS = MCB1, VEC = [5:0]
PORT MCB1_cmd_byte_addr = cmd_byte_addr, DIR = I, BUS = MCB1, VEC = [29:0]
PORT MCB1_cmd_empty = cmd_empty, DIR = O, BUS = MCB1
PORT MCB1_cmd_full = cmd_full, DIR = O, BUS = MCB1
PORT MCB1_wr_clk = wr_clk, DIR = I, BUS = MCB1
PORT MCB1_wr_en = wr_en, DIR = I, BUS = MCB1
PORT MCB1_wr_mask = wr_mask, DIR = I, BUS = MCB1, VEC = [C_PIM1_DATA_WIDTH/8-1:0]
PORT MCB1_wr_data = wr_data, DIR = I, BUS = MCB1, VEC = [C_PIM1_DATA_WIDTH-1:0]
PORT MCB1_wr_full = wr_full, DIR = O, BUS = MCB1
PORT MCB1_wr_empty = wr_empty, DIR = O, BUS = MCB1
PORT MCB1_wr_count = wr_count, DIR = O, BUS = MCB1, VEC = [6:0]
PORT MCB1_wr_underrun = wr_underrun, DIR = O, BUS = MCB1
PORT MCB1_wr_error = wr_error, DIR = O, BUS = MCB1
PORT MCB1_rd_clk = rd_clk, DIR = I, BUS = MCB1
PORT MCB1_rd_en = rd_en, DIR = I, BUS = MCB1
PORT MCB1_rd_data = rd_data, DIR = O, BUS = MCB1, VEC = [C_PIM1_DATA_WIDTH-1:0]
PORT MCB1_rd_full = rd_full, DIR = O, BUS = MCB1
PORT MCB1_rd_empty = rd_empty, DIR = O, BUS = MCB1
PORT MCB1_rd_count = rd_count, DIR = O, BUS = MCB1, VEC = [6:0]
PORT MCB1_rd_overflow = rd_overflow, DIR = O, BUS = MCB1
PORT MCB1_rd_error = rd_error, DIR = O, BUS = MCB1
PORT FSL2_M_Clk = FSL_M_Clk, DIR = I, BUS = XCL2, SIGIS = CLK, INITIALVAL = VCC
PORT FSL2_M_Write = FSL_M_Write, DIR = I, BUS = XCL2
PORT FSL2_M_Data = FSL_M_Data, DIR = I, BUS = XCL2, VEC = [0:31]
PORT FSL2_M_Control = FSL_M_Control, DIR = I, BUS = XCL2
PORT FSL2_M_Full = FSL_M_Full, DIR = O, BUS = XCL2
PORT FSL2_S_Clk = FSL_S_Clk, DIR = I, BUS = XCL2
PORT FSL2_S_Read = FSL_S_Read, DIR = I, BUS = XCL2
PORT FSL2_S_Data = FSL_S_Data, DIR = O, BUS = XCL2, VEC = [0:31]
PORT FSL2_S_Control = FSL_S_Control, DIR = O, BUS = XCL2
PORT FSL2_S_Exists = FSL_S_Exists, DIR = O, BUS = XCL2
PORT FSL2_B_M_Clk = FSL_M_Clk, DIR = I, BUS = XCL2_B, SIGIS = CLK, INITIALVAL = VCC
PORT FSL2_B_M_Write = FSL_M_Write, DIR = I, BUS = XCL2_B
PORT FSL2_B_M_Data = FSL_M_Data, DIR = I, BUS = XCL2_B, VEC = [0:31]
PORT FSL2_B_M_Control = FSL_M_Control, DIR = I, BUS = XCL2_B
PORT FSL2_B_M_Full = FSL_M_Full, DIR = O, BUS = XCL2_B
PORT FSL2_B_S_Clk = FSL_S_Clk, DIR = I, BUS = XCL2_B
PORT FSL2_B_S_Read = FSL_S_Read, DIR = I, BUS = XCL2_B
PORT FSL2_B_S_Data = FSL_S_Data, DIR = O, BUS = XCL2_B, VEC = [0:31]
PORT FSL2_B_S_Control = FSL_S_Control, DIR = O, BUS = XCL2_B
PORT FSL2_B_S_Exists = FSL_S_Exists, DIR = O, BUS = XCL2_B
PORT SPLB2_Clk = "", DIR = I, BUS = SPLB2, SIGIS = CLK, INITIALVAL = VCC
PORT SPLB2_Rst = SPLB_Rst, DIR = I, BUS = SPLB2, SIGIS = RST
PORT SPLB2_PLB_ABus = PLB_ABus, DIR = I, BUS = SPLB2, VEC = [0:31]
PORT SPLB2_PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB2
PORT SPLB2_PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB2
PORT SPLB2_PLB_masterID = PLB_masterID, DIR = I, BUS = SPLB2, VEC = [0:(C_SPLB2_MID_WIDTH-1)]
PORT SPLB2_PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB2
PORT SPLB2_PLB_BE = PLB_BE, DIR = I, BUS = SPLB2, VEC = [0:((C_SPLB2_DWIDTH/8)-1)]
PORT SPLB2_PLB_UABus = PLB_UABus, DIR = I, BUS = SPLB2, VEC = [0:31]
PORT SPLB2_PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB2
PORT SPLB2_PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB2
PORT SPLB2_PLB_abort = PLB_abort, DIR = I, BUS = SPLB2
PORT SPLB2_PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB2
PORT SPLB2_PLB_MSize = PLB_MSize, DIR = I, BUS = SPLB2, VEC = [0:1]
PORT SPLB2_PLB_size = PLB_size, DIR = I, BUS = SPLB2, VEC = [0:3]
PORT SPLB2_PLB_type = PLB_type, DIR = I, BUS = SPLB2, VEC = [0:2]
PORT SPLB2_PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB2
PORT SPLB2_PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB2
PORT SPLB2_PLB_wrPendPri = PLB_wrPendPri, DIR = I, BUS = SPLB2, VEC = [0:1]
PORT SPLB2_PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB2
PORT SPLB2_PLB_rdPendPri = PLB_rdPendPri, DIR = I, BUS = SPLB2, VEC = [0:1]
PORT SPLB2_PLB_reqPri = PLB_reqPri, DIR = I, BUS = SPLB2, VEC = [0:1]
PORT SPLB2_PLB_TAttribute = PLB_TAttribute, DIR = I, BUS = SPLB2, VEC = [0:15]
PORT SPLB2_PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB2
PORT SPLB2_PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB2
PORT SPLB2_PLB_wrDBus = PLB_wrDBus, DIR = I, BUS = SPLB2, VEC = [0:(C_SPLB2_DWIDTH-1)]
PORT SPLB2_Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB2
PORT SPLB2_Sl_SSize = Sl_SSize, DIR = O, BUS = SPLB2, VEC = [0:1]
PORT SPLB2_Sl_wait = Sl_wait, DIR = O, BUS = SPLB2
PORT SPLB2_Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB2
PORT SPLB2_Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB2
PORT SPLB2_Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB2
PORT SPLB2_Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB2
PORT SPLB2_Sl_rdDBus = Sl_rdDBus, DIR = O, BUS = SPLB2, VEC = [0:(C_SPLB2_DWIDTH-1)]
PORT SPLB2_Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, BUS = SPLB2, VEC = [0:3]
PORT SPLB2_Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB2
PORT SPLB2_Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB2
PORT SPLB2_Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB2
PORT SPLB2_Sl_MBusy = Sl_MBusy, DIR = O, BUS = SPLB2, VEC = [0:(C_SPLB2_NUM_MASTERS-1)]
PORT SPLB2_Sl_MRdErr = Sl_MRdErr, DIR = O, BUS = SPLB2, VEC = [0:(C_SPLB2_NUM_MASTERS-1)]
PORT SPLB2_Sl_MWrErr = Sl_MWrErr, DIR = O, BUS = SPLB2, VEC = [0:(C_SPLB2_NUM_MASTERS-1)]
PORT SPLB2_Sl_MIRQ = Sl_MIRQ, DIR = O, BUS = SPLB2, VEC = [0:(C_SPLB2_NUM_MASTERS-1)]
PORT SDMA2_Clk = "", DIR = I, SIGIS = CLK, ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 3), ASSIGNMENT = REQUIRE
PORT SDMA2_Rx_IntOut = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 3)
PORT SDMA2_Tx_IntOut = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, ISVALID = (C_NUM_PORTS > 2 && C_PIM2_BASETYPE == 3)
PORT SDMA2_RstOut = LL_RST_ACK, DIR = O, BUS = SDMA_LL2
PORT SDMA2_TX_D = LL_Tx_Data, DIR = O, BUS = SDMA_LL2, VEC = [0:31]
PORT SDMA2_TX_Rem = LL_Tx_Rem, DIR = O, BUS = SDMA_LL2, VEC = [0:3]
PORT SDMA2_TX_SOF = LL_Tx_SOF_n, DIR = O, BUS = SDMA_LL2
PORT SDMA2_TX_EOF = LL_Tx_EOF_n, DIR = O, BUS = SDMA_LL2
PORT SDMA2_TX_SOP = LL_Tx_SOP_n, DIR = O, BUS = SDMA_LL2
PORT SDMA2_TX_EOP = LL_Tx_EOP_n, DIR = O, BUS = SDMA_LL2
PORT SDMA2_TX_Src_Rdy = LL_Tx_SrcRdy_n, DIR = O, BUS = SDMA_LL2
PORT SDMA2_TX_Dst_Rdy = LL_Tx_DstRdy_n, DIR = I, BUS = SDMA_LL2, INITIALVAL = VCC
PORT SDMA2_RX_D = LL_Rx_Data, DIR = I, BUS = SDMA_LL2, INITIALVAL = GND, VEC = [0:31]
PORT SDMA2_RX_Rem = LL_Rx_Rem, DIR = I, BUS = SDMA_LL2, INITIALVAL = VCC, VEC = [0:3]
PORT SDMA2_RX_SOF = LL_Rx_SOF_n, DIR = I, BUS = SDMA_LL2, INITIALVAL = VCC
PORT SDMA2_RX_EOF = LL_Rx_EOF_n, DIR = I, BUS = SDMA_LL2, INITIALVAL = VCC
PORT SDMA2_RX_SOP = LL_Rx_SOP_n, DIR = I, BUS = SDMA_LL2, INITIALVAL = VCC
PORT SDMA2_RX_EOP = LL_Rx_EOP_n, DIR = I, BUS = SDMA_LL2, INITIALVAL = VCC
PORT SDMA2_RX_Src_Rdy = LL_Rx_SrcRdy_n, DIR = I, BUS = SDMA_LL2, INITIALVAL = VCC
PORT SDMA2_RX_Dst_Rdy = LL_Rx_DstRdy_n, DIR = O, BUS = SDMA_LL2
PORT SDMA_CTRL2_Clk = "", DIR = I, BUS = SDMA_CTRL2, SIGIS = CLK, INITIALVAL = VCC
PORT SDMA_CTRL2_Rst = SPLB_Rst, DIR = I, BUS = SDMA_CTRL2, SIGIS = RST
PORT SDMA_CTRL2_PLB_ABus = PLB_ABus, DIR = I, BUS = SDMA_CTRL2, VEC = [0:31]
PORT SDMA_CTRL2_PLB_PAValid = PLB_PAValid, DIR = I, BUS = SDMA_CTRL2
PORT SDMA_CTRL2_PLB_SAValid = PLB_SAValid, DIR = I, BUS = SDMA_CTRL2
PORT SDMA_CTRL2_PLB_masterID = PLB_masterID, DIR = I, BUS = SDMA_CTRL2, VEC = [0:(C_SDMA_CTRL2_MID_WIDTH-1)]
PORT SDMA_CTRL2_PLB_RNW = PLB_RNW, DIR = I, BUS = SDMA_CTRL2
PORT SDMA_CTRL2_PLB_BE = PLB_BE, DIR = I, BUS = SDMA_CTRL2, VEC = [0:((C_SDMA_CTRL2_DWIDTH/8)-1)]
PORT SDMA_CTRL2_PLB_UABus = PLB_UABus, DIR = I, BUS = SDMA_CTRL2, VEC = [0:31]
PORT SDMA_CTRL2_PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SDMA_CTRL2
PORT SDMA_CTRL2_PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SDMA_CTRL2
PORT SDMA_CTRL2_PLB_abort = PLB_abort, DIR = I, BUS = SDMA_CTRL2
PORT SDMA_CTRL2_PLB_busLock = PLB_busLock, DIR = I, BUS = SDMA_CTRL2
PORT SDMA_CTRL2_PLB_MSize = PLB_MSize, DIR = I, BUS = SDMA_CTRL2, VEC = [0:1]
PORT SDMA_CTRL2_PLB_size = PLB_size, DIR = I, BUS = SDMA_CTRL2, VEC = [0:3]
PORT SDMA_CTRL2_PLB_type = PLB_type, DIR = I, BUS = SDMA_CTRL2, VEC = [0:2]
PORT SDMA_CTRL2_PLB_lockErr = PLB_lockErr, DIR = I, BUS = SDMA_CTRL2
PORT SDMA_CTRL2_PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SDMA_CTRL2
PORT SDMA_CTRL2_PLB_wrPendPri = PLB_wrPendPri, DIR = I, BUS = SDMA_CTRL2, VEC = [0:1]
PORT SDMA_CTRL2_PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SDMA_CTRL2
PORT SDMA_CTRL2_PLB_rdPendPri = PLB_rdPendPri, DIR = I, BUS = SDMA_CTRL2, VEC = [0:1]
PORT SDMA_CTRL2_PLB_reqPri = PLB_reqPri, DIR = I, BUS = SDMA_CTRL2, VEC = [0:1]
PORT SDMA_CTRL2_PLB_TAttribute = PLB_TAttribute, DIR = I, BUS = SDMA_CTRL2, VEC = [0:15]
PORT SDMA_CTRL2_PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SDMA_CTRL2
PORT SDMA_CTRL2_PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SDMA_CTRL2
PORT SDMA_CTRL2_PLB_wrDBus = PLB_wrDBus, DIR = I, BUS = SDMA_CTRL2, VEC = [0:(C_SDMA_CTRL2_DWIDTH-1)]
PORT SDMA_CTRL2_Sl_addrAck = Sl_addrAck, DIR = O, BUS = SDMA_CTRL2
PORT SDMA_CTRL2_Sl_SSize = Sl_SSize, DIR = O, BUS = SDMA_CTRL2, VEC = [0:1]
PORT SDMA_CTRL2_Sl_wait = Sl_wait, DIR = O, BUS = SDMA_CTRL2
PORT SDMA_CTRL2_Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SDMA_CTRL2
PORT SDMA_CTRL2_Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SDMA_CTRL2
PORT SDMA_CTRL2_Sl_wrComp = Sl_wrComp, DIR = O, BUS = SDMA_CTRL2
PORT SDMA_CTRL2_Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SDMA_CTRL2
PORT SDMA_CTRL2_Sl_rdDBus = Sl_rdDBus, DIR = O, BUS = SDMA_CTRL2, VEC = [0:(C_SDMA_CTRL2_DWIDTH-1)]
PORT SDMA_CTRL2_Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, BUS = SDMA_CTRL2, VEC = [0:3]
PORT SDMA_CTRL2_Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SDMA_CTRL2
PORT SDMA_CTRL2_Sl_rdComp = Sl_rdComp, DIR = O, BUS = SDMA_CTRL2
PORT SDMA_CTRL2_Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SDMA_CTRL2
PORT SDMA_CTRL2_Sl_MBusy = Sl_MBusy, DIR = O, BUS = SDMA_CTRL2, VEC = [0:(C_SDMA_CTRL2_NUM_MASTERS-1)]
PORT SDMA_CTRL2_Sl_MRdErr = Sl_MRdErr, DIR = O, BUS = SDMA_CTRL2, VEC = [0:(C_SDMA_CTRL2_NUM_MASTERS-1)]
PORT SDMA_CTRL2_Sl_MWrErr = Sl_MWrErr, DIR = O, BUS = SDMA_CTRL2, VEC = [0:(C_SDMA_CTRL2_NUM_MASTERS-1)]
PORT SDMA_CTRL2_Sl_MIRQ = Sl_MIRQ, DIR = O, BUS = SDMA_CTRL2, VEC = [0:(C_SDMA_CTRL2_NUM_MASTERS-1)]
PORT PIM2_Addr = Addr, DIR = I, BUS = MPMC_PIM2, VEC = [31:0]
PORT PIM2_AddrReq = AddrReq, DIR = I, BUS = MPMC_PIM2
PORT PIM2_AddrAck = AddrAck, DIR = O, BUS = MPMC_PIM2
PORT PIM2_RNW = RNW, DIR = I, BUS = MPMC_PIM2
PORT PIM2_Size = Size, DIR = I, BUS = MPMC_PIM2, VEC = [3:0]
PORT PIM2_RdModWr = RdModWr, DIR = I, BUS = MPMC_PIM2
PORT PIM2_WrFIFO_Data = WrFIFO_Data, DIR = I, BUS = MPMC_PIM2, VEC = [(C_PIM2_DATA_WIDTH-1):0]
PORT PIM2_WrFIFO_BE = WrFIFO_BE, DIR = I, BUS = MPMC_PIM2, VEC = [(C_PIM2_DATA_WIDTH/8-1):0]
PORT PIM2_WrFIFO_Push = WrFIFO_Push, DIR = I, BUS = MPMC_PIM2
PORT PIM2_RdFIFO_Data = RdFIFO_Data, DIR = O, BUS = MPMC_PIM2, VEC = [(C_PIM2_DATA_WIDTH-1):0]
PORT PIM2_RdFIFO_Pop = RdFIFO_Pop, DIR = I, BUS = MPMC_PIM2
PORT PIM2_RdFIFO_RdWdAddr = RdFIFO_RdWdAddr, DIR = O, BUS = MPMC_PIM2, VEC = [3:0]
PORT PIM2_WrFIFO_Empty = WrFIFO_Empty, DIR = O, BUS = MPMC_PIM2
PORT PIM2_WrFIFO_AlmostFull = WrFIFO_AlmostFull, DIR = O, BUS = MPMC_PIM2
PORT PIM2_WrFIFO_Flush = WrFIFO_Flush, DIR = I, BUS = MPMC_PIM2
PORT PIM2_RdFIFO_Empty = RdFIFO_Empty, DIR = O, BUS = MPMC_PIM2
PORT PIM2_RdFIFO_Flush = RdFIFO_Flush, DIR = I, BUS = MPMC_PIM2
PORT PIM2_RdFIFO_Latency = RDFIFO_Latency, DIR = O, BUS = MPMC_PIM2, VEC = [1:0]
PORT PIM2_InitDone = InitDone, DIR = O, BUS = MPMC_PIM2
PORT PPC440MC2_MIMCReadNotWrite = MIMCREADNOTWRITE, DIR = I, BUS = PPC440MC2
PORT PPC440MC2_MIMCAddress = MIMCADDRESS, DIR = I, BUS = PPC440MC2, VEC = [0:35]
PORT PPC440MC2_MIMCAddressValid = MIMCADDRESSVALID, DIR = I, BUS = PPC440MC2
PORT PPC440MC2_MIMCWriteData = MIMCWRITEDATA, DIR = I, BUS = PPC440MC2, VEC = [0:127]
PORT PPC440MC2_MIMCWriteDataValid = MIMCWRITEDATAVALID, DIR = I, BUS = PPC440MC2
PORT PPC440MC2_MIMCByteEnable = MIMCBYTEENABLE, DIR = I, BUS = PPC440MC2, VEC = [0:15]
PORT PPC440MC2_MIMCBankConflict = MIMCBANKCONFLICT, DIR = I, BUS = PPC440MC2
PORT PPC440MC2_MIMCRowConflict = MIMCROWCONFLICT, DIR = I, BUS = PPC440MC2
PORT PPC440MC2_MCMIReadData = MCMIREADDATA, DIR = O, BUS = PPC440MC2, VEC = [0:127]
PORT PPC440MC2_MCMIReadDataValid = MCMIREADDATAVALID, DIR = O, BUS = PPC440MC2
PORT PPC440MC2_MCMIReadDataErr = MCMIREADDATAERR, DIR = O, BUS = PPC440MC2
PORT PPC440MC2_MCMIAddrReadyToAccept = MCMIADDRREADYTOACCEPT, DIR = O, BUS = PPC440MC2
PORT VFBC2_Cmd_Clk = cmd_clk, DIR = I, BUS = VFBC2
PORT VFBC2_Cmd_Reset = cmd_reset, DIR = I, BUS = VFBC2
PORT VFBC2_Cmd_Data = cmd_data, DIR = I, BUS = VFBC2, VEC = [31:0]
PORT VFBC2_Cmd_Write = cmd_write, DIR = I, BUS = VFBC2
PORT VFBC2_Cmd_End = cmd_end, DIR = I, BUS = VFBC2
PORT VFBC2_Cmd_Full = cmd_full, DIR = O, BUS = VFBC2
PORT VFBC2_Cmd_Almost_Full = cmd_almost_full, DIR = O, BUS = VFBC2
PORT VFBC2_Cmd_Idle = cmd_idle, DIR = O, BUS = VFBC2
PORT VFBC2_Wd_Clk = wd_clk, DIR = I, BUS = VFBC2
PORT VFBC2_Wd_Reset = wd_reset, DIR = I, BUS = VFBC2
PORT VFBC2_Wd_Write = wd_write, DIR = I, BUS = VFBC2
PORT VFBC2_Wd_End_Burst = wd_end_burst, DIR = I, BUS = VFBC2
PORT VFBC2_Wd_Flush = wd_flush, DIR = I, BUS = VFBC2
PORT VFBC2_Wd_Data = wd_data, DIR = I, BUS = VFBC2, VEC = [C_VFBC2_RDWD_DATA_WIDTH-1:0]
PORT VFBC2_Wd_Data_BE = wd_data_be, DIR = I, BUS = VFBC2, VEC = [C_VFBC2_RDWD_DATA_WIDTH/8-1:0]
PORT VFBC2_Wd_Full = wd_full, DIR = O, BUS = VFBC2
PORT VFBC2_Wd_Almost_Full = wd_almost_full, DIR = O, BUS = VFBC2
PORT VFBC2_Rd_Clk = rd_clk, DIR = I, BUS = VFBC2
PORT VFBC2_Rd_Reset = rd_reset, DIR = I, BUS = VFBC2
PORT VFBC2_Rd_Read = rd_read, DIR = I, BUS = VFBC2
PORT VFBC2_Rd_End_Burst = rd_end_burst, DIR = I, BUS = VFBC2
PORT VFBC2_Rd_Flush = rd_flush, DIR = I, BUS = VFBC2
PORT VFBC2_Rd_Data = rd_data, DIR = O, BUS = VFBC2, VEC = [C_VFBC2_RDWD_DATA_WIDTH-1:0]
PORT VFBC2_Rd_Empty = rd_empty, DIR = O, BUS = VFBC2
PORT VFBC2_Rd_Almost_Empty = rd_almost_empty, DIR = O, BUS = VFBC2
PORT MCB2_cmd_clk = cmd_clk, DIR = I, BUS = MCB2
PORT MCB2_cmd_en = cmd_en, DIR = I, BUS = MCB2
PORT MCB2_cmd_instr = cmd_instr, DIR = I, BUS = MCB2, VEC = [2:0]
PORT MCB2_cmd_bl = cmd_bl, DIR = I, BUS = MCB2, VEC = [5:0]
PORT MCB2_cmd_byte_addr = cmd_byte_addr, DIR = I, BUS = MCB2, VEC = [29:0]
PORT MCB2_cmd_empty = cmd_empty, DIR = O, BUS = MCB2
PORT MCB2_cmd_full = cmd_full, DIR = O, BUS = MCB2
PORT MCB2_wr_clk = wr_clk, DIR = I, BUS = MCB2
PORT MCB2_wr_en = wr_en, DIR = I, BUS = MCB2
PORT MCB2_wr_mask = wr_mask, DIR = I, BUS = MCB2, VEC = [C_PIM2_DATA_WIDTH/8-1:0]
PORT MCB2_wr_data = wr_data, DIR = I, BUS = MCB2, VEC = [C_PIM2_DATA_WIDTH-1:0]
PORT MCB2_wr_full = wr_full, DIR = O, BUS = MCB2
PORT MCB2_wr_empty = wr_empty, DIR = O, BUS = MCB2
PORT MCB2_wr_count = wr_count, DIR = O, BUS = MCB2, VEC = [6:0]
PORT MCB2_wr_underrun = wr_underrun, DIR = O, BUS = MCB2
PORT MCB2_wr_error = wr_error, DIR = O, BUS = MCB2
PORT MCB2_rd_clk = rd_clk, DIR = I, BUS = MCB2
PORT MCB2_rd_en = rd_en, DIR = I, BUS = MCB2
PORT MCB2_rd_data = rd_data, DIR = O, BUS = MCB2, VEC = [C_PIM2_DATA_WIDTH-1:0]
PORT MCB2_rd_full = rd_full, DIR = O, BUS = MCB2
PORT MCB2_rd_empty = rd_empty, DIR = O, BUS = MCB2
PORT MCB2_rd_count = rd_count, DIR = O, BUS = MCB2, VEC = [6:0]
PORT MCB2_rd_overflow = rd_overflow, DIR = O, BUS = MCB2
PORT MCB2_rd_error = rd_error, DIR = O, BUS = MCB2
PORT FSL3_M_Clk = FSL_M_Clk, DIR = I, BUS = XCL3, SIGIS = CLK, INITIALVAL = VCC
PORT FSL3_M_Write = FSL_M_Write, DIR = I, BUS = XCL3
PORT FSL3_M_Data = FSL_M_Data, DIR = I, BUS = XCL3, VEC = [0:31]
PORT FSL3_M_Control = FSL_M_Control, DIR = I, BUS = XCL3
PORT FSL3_M_Full = FSL_M_Full, DIR = O, BUS = XCL3
PORT FSL3_S_Clk = FSL_S_Clk, DIR = I, BUS = XCL3
PORT FSL3_S_Read = FSL_S_Read, DIR = I, BUS = XCL3
PORT FSL3_S_Data = FSL_S_Data, DIR = O, BUS = XCL3, VEC = [0:31]
PORT FSL3_S_Control = FSL_S_Control, DIR = O, BUS = XCL3
PORT FSL3_S_Exists = FSL_S_Exists, DIR = O, BUS = XCL3
PORT FSL3_B_M_Clk = FSL_M_Clk, DIR = I, BUS = XCL3_B, SIGIS = CLK, INITIALVAL = VCC
PORT FSL3_B_M_Write = FSL_M_Write, DIR = I, BUS = XCL3_B
PORT FSL3_B_M_Data = FSL_M_Data, DIR = I, BUS = XCL3_B, VEC = [0:31]
PORT FSL3_B_M_Control = FSL_M_Control, DIR = I, BUS = XCL3_B
PORT FSL3_B_M_Full = FSL_M_Full, DIR = O, BUS = XCL3_B
PORT FSL3_B_S_Clk = FSL_S_Clk, DIR = I, BUS = XCL3_B
PORT FSL3_B_S_Read = FSL_S_Read, DIR = I, BUS = XCL3_B
PORT FSL3_B_S_Data = FSL_S_Data, DIR = O, BUS = XCL3_B, VEC = [0:31]
PORT FSL3_B_S_Control = FSL_S_Control, DIR = O, BUS = XCL3_B
PORT FSL3_B_S_Exists = FSL_S_Exists, DIR = O, BUS = XCL3_B
PORT SPLB3_Clk = "", DIR = I, BUS = SPLB3, SIGIS = CLK, INITIALVAL = VCC
PORT SPLB3_Rst = SPLB_Rst, DIR = I, BUS = SPLB3, SIGIS = RST
PORT SPLB3_PLB_ABus = PLB_ABus, DIR = I, BUS = SPLB3, VEC = [0:31]
PORT SPLB3_PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB3
PORT SPLB3_PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB3
PORT SPLB3_PLB_masterID = PLB_masterID, DIR = I, BUS = SPLB3, VEC = [0:(C_SPLB3_MID_WIDTH-1)]
PORT SPLB3_PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB3
PORT SPLB3_PLB_BE = PLB_BE, DIR = I, BUS = SPLB3, VEC = [0:((C_SPLB3_DWIDTH/8)-1)]
PORT SPLB3_PLB_UABus = PLB_UABus, DIR = I, BUS = SPLB3, VEC = [0:31]
PORT SPLB3_PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB3
PORT SPLB3_PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB3
PORT SPLB3_PLB_abort = PLB_abort, DIR = I, BUS = SPLB3
PORT SPLB3_PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB3
PORT SPLB3_PLB_MSize = PLB_MSize, DIR = I, BUS = SPLB3, VEC = [0:1]
PORT SPLB3_PLB_size = PLB_size, DIR = I, BUS = SPLB3, VEC = [0:3]
PORT SPLB3_PLB_type = PLB_type, DIR = I, BUS = SPLB3, VEC = [0:2]
PORT SPLB3_PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB3
PORT SPLB3_PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB3
PORT SPLB3_PLB_wrPendPri = PLB_wrPendPri, DIR = I, BUS = SPLB3, VEC = [0:1]
PORT SPLB3_PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB3
PORT SPLB3_PLB_rdPendPri = PLB_rdPendPri, DIR = I, BUS = SPLB3, VEC = [0:1]
PORT SPLB3_PLB_reqPri = PLB_reqPri, DIR = I, BUS = SPLB3, VEC = [0:1]
PORT SPLB3_PLB_TAttribute = PLB_TAttribute, DIR = I, BUS = SPLB3, VEC = [0:15]
PORT SPLB3_PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB3
PORT SPLB3_PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB3
PORT SPLB3_PLB_wrDBus = PLB_wrDBus, DIR = I, BUS = SPLB3, VEC = [0:(C_SPLB3_DWIDTH-1)]
PORT SPLB3_Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB3
PORT SPLB3_Sl_SSize = Sl_SSize, DIR = O, BUS = SPLB3, VEC = [0:1]
PORT SPLB3_Sl_wait = Sl_wait, DIR = O, BUS = SPLB3
PORT SPLB3_Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB3
PORT SPLB3_Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB3
PORT SPLB3_Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB3
PORT SPLB3_Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB3
PORT SPLB3_Sl_rdDBus = Sl_rdDBus, DIR = O, BUS = SPLB3, VEC = [0:(C_SPLB3_DWIDTH-1)]
PORT SPLB3_Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, BUS = SPLB3, VEC = [0:3]
PORT SPLB3_Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB3
PORT SPLB3_Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB3
PORT SPLB3_Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB3
PORT SPLB3_Sl_MBusy = Sl_MBusy, DIR = O, BUS = SPLB3, VEC = [0:(C_SPLB3_NUM_MASTERS-1)]
PORT SPLB3_Sl_MRdErr = Sl_MRdErr, DIR = O, BUS = SPLB3, VEC = [0:(C_SPLB3_NUM_MASTERS-1)]
PORT SPLB3_Sl_MWrErr = Sl_MWrErr, DIR = O, BUS = SPLB3, VEC = [0:(C_SPLB3_NUM_MASTERS-1)]
PORT SPLB3_Sl_MIRQ = Sl_MIRQ, DIR = O, BUS = SPLB3, VEC = [0:(C_SPLB3_NUM_MASTERS-1)]
PORT SDMA3_Clk = "", DIR = I, SIGIS = CLK, ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 3), ASSIGNMENT = REQUIRE
PORT SDMA3_Rx_IntOut = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 3)
PORT SDMA3_Tx_IntOut = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, ISVALID = (C_NUM_PORTS > 3 && C_PIM3_BASETYPE == 3)
PORT SDMA3_RstOut = LL_RST_ACK, DIR = O, BUS = SDMA_LL3
PORT SDMA3_TX_D = LL_Tx_Data, DIR = O, BUS = SDMA_LL3, VEC = [0:31]
PORT SDMA3_TX_Rem = LL_Tx_Rem, DIR = O, BUS = SDMA_LL3, VEC = [0:3]
PORT SDMA3_TX_SOF = LL_Tx_SOF_n, DIR = O, BUS = SDMA_LL3
PORT SDMA3_TX_EOF = LL_Tx_EOF_n, DIR = O, BUS = SDMA_LL3
PORT SDMA3_TX_SOP = LL_Tx_SOP_n, DIR = O, BUS = SDMA_LL3
PORT SDMA3_TX_EOP = LL_Tx_EOP_n, DIR = O, BUS = SDMA_LL3
PORT SDMA3_TX_Src_Rdy = LL_Tx_SrcRdy_n, DIR = O, BUS = SDMA_LL3
PORT SDMA3_TX_Dst_Rdy = LL_Tx_DstRdy_n, DIR = I, BUS = SDMA_LL3, INITIALVAL = VCC
PORT SDMA3_RX_D = LL_Rx_Data, DIR = I, BUS = SDMA_LL3, INITIALVAL = GND, VEC = [0:31]
PORT SDMA3_RX_Rem = LL_Rx_Rem, DIR = I, BUS = SDMA_LL3, INITIALVAL = VCC, VEC = [0:3]
PORT SDMA3_RX_SOF = LL_Rx_SOF_n, DIR = I, BUS = SDMA_LL3, INITIALVAL = VCC
PORT SDMA3_RX_EOF = LL_Rx_EOF_n, DIR = I, BUS = SDMA_LL3, INITIALVAL = VCC
PORT SDMA3_RX_SOP = LL_Rx_SOP_n, DIR = I, BUS = SDMA_LL3, INITIALVAL = VCC
PORT SDMA3_RX_EOP = LL_Rx_EOP_n, DIR = I, BUS = SDMA_LL3, INITIALVAL = VCC
PORT SDMA3_RX_Src_Rdy = LL_Rx_SrcRdy_n, DIR = I, BUS = SDMA_LL3, INITIALVAL = VCC
PORT SDMA3_RX_Dst_Rdy = LL_Rx_DstRdy_n, DIR = O, BUS = SDMA_LL3
PORT SDMA_CTRL3_Clk = "", DIR = I, BUS = SDMA_CTRL3, SIGIS = CLK, INITIALVAL = VCC
PORT SDMA_CTRL3_Rst = SPLB_Rst, DIR = I, BUS = SDMA_CTRL3, SIGIS = RST
PORT SDMA_CTRL3_PLB_ABus = PLB_ABus, DIR = I, BUS = SDMA_CTRL3, VEC = [0:31]
PORT SDMA_CTRL3_PLB_PAValid = PLB_PAValid, DIR = I, BUS = SDMA_CTRL3
PORT SDMA_CTRL3_PLB_SAValid = PLB_SAValid, DIR = I, BUS = SDMA_CTRL3
PORT SDMA_CTRL3_PLB_masterID = PLB_masterID, DIR = I, BUS = SDMA_CTRL3, VEC = [0:(C_SDMA_CTRL3_MID_WIDTH-1)]
PORT SDMA_CTRL3_PLB_RNW = PLB_RNW, DIR = I, BUS = SDMA_CTRL3
PORT SDMA_CTRL3_PLB_BE = PLB_BE, DIR = I, BUS = SDMA_CTRL3, VEC = [0:((C_SDMA_CTRL3_DWIDTH/8)-1)]
PORT SDMA_CTRL3_PLB_UABus = PLB_UABus, DIR = I, BUS = SDMA_CTRL3, VEC = [0:31]
PORT SDMA_CTRL3_PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SDMA_CTRL3
PORT SDMA_CTRL3_PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SDMA_CTRL3
PORT SDMA_CTRL3_PLB_abort = PLB_abort, DIR = I, BUS = SDMA_CTRL3
PORT SDMA_CTRL3_PLB_busLock = PLB_busLock, DIR = I, BUS = SDMA_CTRL3
PORT SDMA_CTRL3_PLB_MSize = PLB_MSize, DIR = I, BUS = SDMA_CTRL3, VEC = [0:1]
PORT SDMA_CTRL3_PLB_size = PLB_size, DIR = I, BUS = SDMA_CTRL3, VEC = [0:3]
PORT SDMA_CTRL3_PLB_type = PLB_type, DIR = I, BUS = SDMA_CTRL3, VEC = [0:2]
PORT SDMA_CTRL3_PLB_lockErr = PLB_lockErr, DIR = I, BUS = SDMA_CTRL3
PORT SDMA_CTRL3_PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SDMA_CTRL3
PORT SDMA_CTRL3_PLB_wrPendPri = PLB_wrPendPri, DIR = I, BUS = SDMA_CTRL3, VEC = [0:1]
PORT SDMA_CTRL3_PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SDMA_CTRL3
PORT SDMA_CTRL3_PLB_rdPendPri = PLB_rdPendPri, DIR = I, BUS = SDMA_CTRL3, VEC = [0:1]
PORT SDMA_CTRL3_PLB_reqPri = PLB_reqPri, DIR = I, BUS = SDMA_CTRL3, VEC = [0:1]
PORT SDMA_CTRL3_PLB_TAttribute = PLB_TAttribute, DIR = I, BUS = SDMA_CTRL3, VEC = [0:15]
PORT SDMA_CTRL3_PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SDMA_CTRL3
PORT SDMA_CTRL3_PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SDMA_CTRL3
PORT SDMA_CTRL3_PLB_wrDBus = PLB_wrDBus, DIR = I, BUS = SDMA_CTRL3, VEC = [0:(C_SDMA_CTRL3_DWIDTH-1)]
PORT SDMA_CTRL3_Sl_addrAck = Sl_addrAck, DIR = O, BUS = SDMA_CTRL3
PORT SDMA_CTRL3_Sl_SSize = Sl_SSize, DIR = O, BUS = SDMA_CTRL3, VEC = [0:1]
PORT SDMA_CTRL3_Sl_wait = Sl_wait, DIR = O, BUS = SDMA_CTRL3
PORT SDMA_CTRL3_Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SDMA_CTRL3
PORT SDMA_CTRL3_Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SDMA_CTRL3
PORT SDMA_CTRL3_Sl_wrComp = Sl_wrComp, DIR = O, BUS = SDMA_CTRL3
PORT SDMA_CTRL3_Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SDMA_CTRL3
PORT SDMA_CTRL3_Sl_rdDBus = Sl_rdDBus, DIR = O, BUS = SDMA_CTRL3, VEC = [0:(C_SDMA_CTRL3_DWIDTH-1)]
PORT SDMA_CTRL3_Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, BUS = SDMA_CTRL3, VEC = [0:3]
PORT SDMA_CTRL3_Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SDMA_CTRL3
PORT SDMA_CTRL3_Sl_rdComp = Sl_rdComp, DIR = O, BUS = SDMA_CTRL3
PORT SDMA_CTRL3_Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SDMA_CTRL3
PORT SDMA_CTRL3_Sl_MBusy = Sl_MBusy, DIR = O, BUS = SDMA_CTRL3, VEC = [0:(C_SDMA_CTRL3_NUM_MASTERS-1)]
PORT SDMA_CTRL3_Sl_MRdErr = Sl_MRdErr, DIR = O, BUS = SDMA_CTRL3, VEC = [0:(C_SDMA_CTRL3_NUM_MASTERS-1)]
PORT SDMA_CTRL3_Sl_MWrErr = Sl_MWrErr, DIR = O, BUS = SDMA_CTRL3, VEC = [0:(C_SDMA_CTRL3_NUM_MASTERS-1)]
PORT SDMA_CTRL3_Sl_MIRQ = Sl_MIRQ, DIR = O, BUS = SDMA_CTRL3, VEC = [0:(C_SDMA_CTRL3_NUM_MASTERS-1)]
PORT PIM3_Addr = Addr, DIR = I, BUS = MPMC_PIM3, VEC = [31:0]
PORT PIM3_AddrReq = AddrReq, DIR = I, BUS = MPMC_PIM3
PORT PIM3_AddrAck = AddrAck, DIR = O, BUS = MPMC_PIM3
PORT PIM3_RNW = RNW, DIR = I, BUS = MPMC_PIM3
PORT PIM3_Size = Size, DIR = I, BUS = MPMC_PIM3, VEC = [3:0]
PORT PIM3_RdModWr = RdModWr, DIR = I, BUS = MPMC_PIM3
PORT PIM3_WrFIFO_Data = WrFIFO_Data, DIR = I, BUS = MPMC_PIM3, VEC = [(C_PIM3_DATA_WIDTH-1):0]
PORT PIM3_WrFIFO_BE = WrFIFO_BE, DIR = I, BUS = MPMC_PIM3, VEC = [(C_PIM3_DATA_WIDTH/8-1):0]
PORT PIM3_WrFIFO_Push = WrFIFO_Push, DIR = I, BUS = MPMC_PIM3
PORT PIM3_RdFIFO_Data = RdFIFO_Data, DIR = O, BUS = MPMC_PIM3, VEC = [(C_PIM3_DATA_WIDTH-1):0]
PORT PIM3_RdFIFO_Pop = RdFIFO_Pop, DIR = I, BUS = MPMC_PIM3
PORT PIM3_RdFIFO_RdWdAddr = RdFIFO_RdWdAddr, DIR = O, BUS = MPMC_PIM3, VEC = [3:0]
PORT PIM3_WrFIFO_Empty = WrFIFO_Empty, DIR = O, BUS = MPMC_PIM3
PORT PIM3_WrFIFO_AlmostFull = WrFIFO_AlmostFull, DIR = O, BUS = MPMC_PIM3
PORT PIM3_WrFIFO_Flush = WrFIFO_Flush, DIR = I, BUS = MPMC_PIM3
PORT PIM3_RdFIFO_Empty = RdFIFO_Empty, DIR = O, BUS = MPMC_PIM3
PORT PIM3_RdFIFO_Flush = RdFIFO_Flush, DIR = I, BUS = MPMC_PIM3
PORT PIM3_RdFIFO_Latency = RDFIFO_Latency, DIR = O, BUS = MPMC_PIM3, VEC = [1:0]
PORT PIM3_InitDone = InitDone, DIR = O, BUS = MPMC_PIM3
PORT PPC440MC3_MIMCReadNotWrite = MIMCREADNOTWRITE, DIR = I, BUS = PPC440MC3
PORT PPC440MC3_MIMCAddress = MIMCADDRESS, DIR = I, BUS = PPC440MC3, VEC = [0:35]
PORT PPC440MC3_MIMCAddressValid = MIMCADDRESSVALID, DIR = I, BUS = PPC440MC3
PORT PPC440MC3_MIMCWriteData = MIMCWRITEDATA, DIR = I, BUS = PPC440MC3, VEC = [0:127]
PORT PPC440MC3_MIMCWriteDataValid = MIMCWRITEDATAVALID, DIR = I, BUS = PPC440MC3
PORT PPC440MC3_MIMCByteEnable = MIMCBYTEENABLE, DIR = I, BUS = PPC440MC3, VEC = [0:15]
PORT PPC440MC3_MIMCBankConflict = MIMCBANKCONFLICT, DIR = I, BUS = PPC440MC3
PORT PPC440MC3_MIMCRowConflict = MIMCROWCONFLICT, DIR = I, BUS = PPC440MC3
PORT PPC440MC3_MCMIReadData = MCMIREADDATA, DIR = O, BUS = PPC440MC3, VEC = [0:127]
PORT PPC440MC3_MCMIReadDataValid = MCMIREADDATAVALID, DIR = O, BUS = PPC440MC3
PORT PPC440MC3_MCMIReadDataErr = MCMIREADDATAERR, DIR = O, BUS = PPC440MC3
PORT PPC440MC3_MCMIAddrReadyToAccept = MCMIADDRREADYTOACCEPT, DIR = O, BUS = PPC440MC3
PORT VFBC3_Cmd_Clk = cmd_clk, DIR = I, BUS = VFBC3
PORT VFBC3_Cmd_Reset = cmd_reset, DIR = I, BUS = VFBC3
PORT VFBC3_Cmd_Data = cmd_data, DIR = I, BUS = VFBC3, VEC = [31:0]
PORT VFBC3_Cmd_Write = cmd_write, DIR = I, BUS = VFBC3
PORT VFBC3_Cmd_End = cmd_end, DIR = I, BUS = VFBC3
PORT VFBC3_Cmd_Full = cmd_full, DIR = O, BUS = VFBC3
PORT VFBC3_Cmd_Almost_Full = cmd_almost_full, DIR = O, BUS = VFBC3
PORT VFBC3_Cmd_Idle = cmd_idle, DIR = O, BUS = VFBC3
PORT VFBC3_Wd_Clk = wd_clk, DIR = I, BUS = VFBC3
PORT VFBC3_Wd_Reset = wd_reset, DIR = I, BUS = VFBC3
PORT VFBC3_Wd_Write = wd_write, DIR = I, BUS = VFBC3
PORT VFBC3_Wd_End_Burst = wd_end_burst, DIR = I, BUS = VFBC3
PORT VFBC3_Wd_Flush = wd_flush, DIR = I, BUS = VFBC3
PORT VFBC3_Wd_Data = wd_data, DIR = I, BUS = VFBC3, VEC = [C_VFBC3_RDWD_DATA_WIDTH-1:0]
PORT VFBC3_Wd_Data_BE = wd_data_be, DIR = I, BUS = VFBC3, VEC = [C_VFBC3_RDWD_DATA_WIDTH/8-1:0]
PORT VFBC3_Wd_Full = wd_full, DIR = O, BUS = VFBC3
PORT VFBC3_Wd_Almost_Full = wd_almost_full, DIR = O, BUS = VFBC3
PORT VFBC3_Rd_Clk = rd_clk, DIR = I, BUS = VFBC3
PORT VFBC3_Rd_Reset = rd_reset, DIR = I, BUS = VFBC3
PORT VFBC3_Rd_Read = rd_read, DIR = I, BUS = VFBC3
PORT VFBC3_Rd_End_Burst = rd_end_burst, DIR = I, BUS = VFBC3
PORT VFBC3_Rd_Flush = rd_flush, DIR = I, BUS = VFBC3
PORT VFBC3_Rd_Data = rd_data, DIR = O, BUS = VFBC3, VEC = [C_VFBC3_RDWD_DATA_WIDTH-1:0]
PORT VFBC3_Rd_Empty = rd_empty, DIR = O, BUS = VFBC3
PORT VFBC3_Rd_Almost_Empty = rd_almost_empty, DIR = O, BUS = VFBC3
PORT MCB3_cmd_clk = cmd_clk, DIR = I, BUS = MCB3
PORT MCB3_cmd_en = cmd_en, DIR = I, BUS = MCB3
PORT MCB3_cmd_instr = cmd_instr, DIR = I, BUS = MCB3, VEC = [2:0]
PORT MCB3_cmd_bl = cmd_bl, DIR = I, BUS = MCB3, VEC = [5:0]
PORT MCB3_cmd_byte_addr = cmd_byte_addr, DIR = I, BUS = MCB3, VEC = [29:0]
PORT MCB3_cmd_empty = cmd_empty, DIR = O, BUS = MCB3
PORT MCB3_cmd_full = cmd_full, DIR = O, BUS = MCB3
PORT MCB3_wr_clk = wr_clk, DIR = I, BUS = MCB3
PORT MCB3_wr_en = wr_en, DIR = I, BUS = MCB3
PORT MCB3_wr_mask = wr_mask, DIR = I, BUS = MCB3, VEC = [C_PIM3_DATA_WIDTH/8-1:0]
PORT MCB3_wr_data = wr_data, DIR = I, BUS = MCB3, VEC = [C_PIM3_DATA_WIDTH-1:0]
PORT MCB3_wr_full = wr_full, DIR = O, BUS = MCB3
PORT MCB3_wr_empty = wr_empty, DIR = O, BUS = MCB3
PORT MCB3_wr_count = wr_count, DIR = O, BUS = MCB3, VEC = [6:0]
PORT MCB3_wr_underrun = wr_underrun, DIR = O, BUS = MCB3
PORT MCB3_wr_error = wr_error, DIR = O, BUS = MCB3
PORT MCB3_rd_clk = rd_clk, DIR = I, BUS = MCB3
PORT MCB3_rd_en = rd_en, DIR = I, BUS = MCB3
PORT MCB3_rd_data = rd_data, DIR = O, BUS = MCB3, VEC = [C_PIM3_DATA_WIDTH-1:0]
PORT MCB3_rd_full = rd_full, DIR = O, BUS = MCB3
PORT MCB3_rd_empty = rd_empty, DIR = O, BUS = MCB3
PORT MCB3_rd_count = rd_count, DIR = O, BUS = MCB3, VEC = [6:0]
PORT MCB3_rd_overflow = rd_overflow, DIR = O, BUS = MCB3
PORT MCB3_rd_error = rd_error, DIR = O, BUS = MCB3
PORT FSL4_M_Clk = FSL_M_Clk, DIR = I, BUS = XCL4, SIGIS = CLK, INITIALVAL = VCC
PORT FSL4_M_Write = FSL_M_Write, DIR = I, BUS = XCL4
PORT FSL4_M_Data = FSL_M_Data, DIR = I, BUS = XCL4, VEC = [0:31]
PORT FSL4_M_Control = FSL_M_Control, DIR = I, BUS = XCL4
PORT FSL4_M_Full = FSL_M_Full, DIR = O, BUS = XCL4
PORT FSL4_S_Clk = FSL_S_Clk, DIR = I, BUS = XCL4
PORT FSL4_S_Read = FSL_S_Read, DIR = I, BUS = XCL4
PORT FSL4_S_Data = FSL_S_Data, DIR = O, BUS = XCL4, VEC = [0:31]
PORT FSL4_S_Control = FSL_S_Control, DIR = O, BUS = XCL4
PORT FSL4_S_Exists = FSL_S_Exists, DIR = O, BUS = XCL4
PORT FSL4_B_M_Clk = FSL_M_Clk, DIR = I, BUS = XCL4_B, SIGIS = CLK, INITIALVAL = VCC
PORT FSL4_B_M_Write = FSL_M_Write, DIR = I, BUS = XCL4_B
PORT FSL4_B_M_Data = FSL_M_Data, DIR = I, BUS = XCL4_B, VEC = [0:31]
PORT FSL4_B_M_Control = FSL_M_Control, DIR = I, BUS = XCL4_B
PORT FSL4_B_M_Full = FSL_M_Full, DIR = O, BUS = XCL4_B
PORT FSL4_B_S_Clk = FSL_S_Clk, DIR = I, BUS = XCL4_B
PORT FSL4_B_S_Read = FSL_S_Read, DIR = I, BUS = XCL4_B
PORT FSL4_B_S_Data = FSL_S_Data, DIR = O, BUS = XCL4_B, VEC = [0:31]
PORT FSL4_B_S_Control = FSL_S_Control, DIR = O, BUS = XCL4_B
PORT FSL4_B_S_Exists = FSL_S_Exists, DIR = O, BUS = XCL4_B
PORT SPLB4_Clk = "", DIR = I, BUS = SPLB4, SIGIS = CLK, INITIALVAL = VCC
PORT SPLB4_Rst = SPLB_Rst, DIR = I, BUS = SPLB4, SIGIS = RST
PORT SPLB4_PLB_ABus = PLB_ABus, DIR = I, BUS = SPLB4, VEC = [0:31]
PORT SPLB4_PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB4
PORT SPLB4_PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB4
PORT SPLB4_PLB_masterID = PLB_masterID, DIR = I, BUS = SPLB4, VEC = [0:(C_SPLB4_MID_WIDTH-1)]
PORT SPLB4_PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB4
PORT SPLB4_PLB_BE = PLB_BE, DIR = I, BUS = SPLB4, VEC = [0:((C_SPLB4_DWIDTH/8)-1)]
PORT SPLB4_PLB_UABus = PLB_UABus, DIR = I, BUS = SPLB4, VEC = [0:31]
PORT SPLB4_PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB4
PORT SPLB4_PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB4
PORT SPLB4_PLB_abort = PLB_abort, DIR = I, BUS = SPLB4
PORT SPLB4_PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB4
PORT SPLB4_PLB_MSize = PLB_MSize, DIR = I, BUS = SPLB4, VEC = [0:1]
PORT SPLB4_PLB_size = PLB_size, DIR = I, BUS = SPLB4, VEC = [0:3]
PORT SPLB4_PLB_type = PLB_type, DIR = I, BUS = SPLB4, VEC = [0:2]
PORT SPLB4_PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB4
PORT SPLB4_PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB4
PORT SPLB4_PLB_wrPendPri = PLB_wrPendPri, DIR = I, BUS = SPLB4, VEC = [0:1]
PORT SPLB4_PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB4
PORT SPLB4_PLB_rdPendPri = PLB_rdPendPri, DIR = I, BUS = SPLB4, VEC = [0:1]
PORT SPLB4_PLB_reqPri = PLB_reqPri, DIR = I, BUS = SPLB4, VEC = [0:1]
PORT SPLB4_PLB_TAttribute = PLB_TAttribute, DIR = I, BUS = SPLB4, VEC = [0:15]
PORT SPLB4_PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB4
PORT SPLB4_PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB4
PORT SPLB4_PLB_wrDBus = PLB_wrDBus, DIR = I, BUS = SPLB4, VEC = [0:(C_SPLB4_DWIDTH-1)]
PORT SPLB4_Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB4
PORT SPLB4_Sl_SSize = Sl_SSize, DIR = O, BUS = SPLB4, VEC = [0:1]
PORT SPLB4_Sl_wait = Sl_wait, DIR = O, BUS = SPLB4
PORT SPLB4_Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB4
PORT SPLB4_Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB4
PORT SPLB4_Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB4
PORT SPLB4_Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB4
PORT SPLB4_Sl_rdDBus = Sl_rdDBus, DIR = O, BUS = SPLB4, VEC = [0:(C_SPLB4_DWIDTH-1)]
PORT SPLB4_Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, BUS = SPLB4, VEC = [0:3]
PORT SPLB4_Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB4
PORT SPLB4_Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB4
PORT SPLB4_Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB4
PORT SPLB4_Sl_MBusy = Sl_MBusy, DIR = O, BUS = SPLB4, VEC = [0:(C_SPLB4_NUM_MASTERS-1)]
PORT SPLB4_Sl_MRdErr = Sl_MRdErr, DIR = O, BUS = SPLB4, VEC = [0:(C_SPLB4_NUM_MASTERS-1)]
PORT SPLB4_Sl_MWrErr = Sl_MWrErr, DIR = O, BUS = SPLB4, VEC = [0:(C_SPLB4_NUM_MASTERS-1)]
PORT SPLB4_Sl_MIRQ = Sl_MIRQ, DIR = O, BUS = SPLB4, VEC = [0:(C_SPLB4_NUM_MASTERS-1)]
PORT SDMA4_Clk = "", DIR = I, SIGIS = CLK, ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 3), ASSIGNMENT = REQUIRE
PORT SDMA4_Rx_IntOut = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 3)
PORT SDMA4_Tx_IntOut = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, ISVALID = (C_NUM_PORTS > 4 && C_PIM4_BASETYPE == 3)
PORT SDMA4_RstOut = LL_RST_ACK, DIR = O, BUS = SDMA_LL4
PORT SDMA4_TX_D = LL_Tx_Data, DIR = O, BUS = SDMA_LL4, VEC = [0:31]
PORT SDMA4_TX_Rem = LL_Tx_Rem, DIR = O, BUS = SDMA_LL4, VEC = [0:3]
PORT SDMA4_TX_SOF = LL_Tx_SOF_n, DIR = O, BUS = SDMA_LL4
PORT SDMA4_TX_EOF = LL_Tx_EOF_n, DIR = O, BUS = SDMA_LL4
PORT SDMA4_TX_SOP = LL_Tx_SOP_n, DIR = O, BUS = SDMA_LL4
PORT SDMA4_TX_EOP = LL_Tx_EOP_n, DIR = O, BUS = SDMA_LL4
PORT SDMA4_TX_Src_Rdy = LL_Tx_SrcRdy_n, DIR = O, BUS = SDMA_LL4
PORT SDMA4_TX_Dst_Rdy = LL_Tx_DstRdy_n, DIR = I, BUS = SDMA_LL4, INITIALVAL = VCC
PORT SDMA4_RX_D = LL_Rx_Data, DIR = I, BUS = SDMA_LL4, INITIALVAL = GND, VEC = [0:31]
PORT SDMA4_RX_Rem = LL_Rx_Rem, DIR = I, BUS = SDMA_LL4, INITIALVAL = VCC, VEC = [0:3]
PORT SDMA4_RX_SOF = LL_Rx_SOF_n, DIR = I, BUS = SDMA_LL4, INITIALVAL = VCC
PORT SDMA4_RX_EOF = LL_Rx_EOF_n, DIR = I, BUS = SDMA_LL4, INITIALVAL = VCC
PORT SDMA4_RX_SOP = LL_Rx_SOP_n, DIR = I, BUS = SDMA_LL4, INITIALVAL = VCC
PORT SDMA4_RX_EOP = LL_Rx_EOP_n, DIR = I, BUS = SDMA_LL4, INITIALVAL = VCC
PORT SDMA4_RX_Src_Rdy = LL_Rx_SrcRdy_n, DIR = I, BUS = SDMA_LL4, INITIALVAL = VCC
PORT SDMA4_RX_Dst_Rdy = LL_Rx_DstRdy_n, DIR = O, BUS = SDMA_LL4
PORT SDMA_CTRL4_Clk = "", DIR = I, BUS = SDMA_CTRL4, SIGIS = CLK, INITIALVAL = VCC
PORT SDMA_CTRL4_Rst = SPLB_Rst, DIR = I, BUS = SDMA_CTRL4, SIGIS = RST
PORT SDMA_CTRL4_PLB_ABus = PLB_ABus, DIR = I, BUS = SDMA_CTRL4, VEC = [0:31]
PORT SDMA_CTRL4_PLB_PAValid = PLB_PAValid, DIR = I, BUS = SDMA_CTRL4
PORT SDMA_CTRL4_PLB_SAValid = PLB_SAValid, DIR = I, BUS = SDMA_CTRL4
PORT SDMA_CTRL4_PLB_masterID = PLB_masterID, DIR = I, BUS = SDMA_CTRL4, VEC = [0:(C_SDMA_CTRL4_MID_WIDTH-1)]
PORT SDMA_CTRL4_PLB_RNW = PLB_RNW, DIR = I, BUS = SDMA_CTRL4
PORT SDMA_CTRL4_PLB_BE = PLB_BE, DIR = I, BUS = SDMA_CTRL4, VEC = [0:((C_SDMA_CTRL4_DWIDTH/8)-1)]
PORT SDMA_CTRL4_PLB_UABus = PLB_UABus, DIR = I, BUS = SDMA_CTRL4, VEC = [0:31]
PORT SDMA_CTRL4_PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SDMA_CTRL4
PORT SDMA_CTRL4_PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SDMA_CTRL4
PORT SDMA_CTRL4_PLB_abort = PLB_abort, DIR = I, BUS = SDMA_CTRL4
PORT SDMA_CTRL4_PLB_busLock = PLB_busLock, DIR = I, BUS = SDMA_CTRL4
PORT SDMA_CTRL4_PLB_MSize = PLB_MSize, DIR = I, BUS = SDMA_CTRL4, VEC = [0:1]
PORT SDMA_CTRL4_PLB_size = PLB_size, DIR = I, BUS = SDMA_CTRL4, VEC = [0:3]
PORT SDMA_CTRL4_PLB_type = PLB_type, DIR = I, BUS = SDMA_CTRL4, VEC = [0:2]
PORT SDMA_CTRL4_PLB_lockErr = PLB_lockErr, DIR = I, BUS = SDMA_CTRL4
PORT SDMA_CTRL4_PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SDMA_CTRL4
PORT SDMA_CTRL4_PLB_wrPendPri = PLB_wrPendPri, DIR = I, BUS = SDMA_CTRL4, VEC = [0:1]
PORT SDMA_CTRL4_PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SDMA_CTRL4
PORT SDMA_CTRL4_PLB_rdPendPri = PLB_rdPendPri, DIR = I, BUS = SDMA_CTRL4, VEC = [0:1]
PORT SDMA_CTRL4_PLB_reqPri = PLB_reqPri, DIR = I, BUS = SDMA_CTRL4, VEC = [0:1]
PORT SDMA_CTRL4_PLB_TAttribute = PLB_TAttribute, DIR = I, BUS = SDMA_CTRL4, VEC = [0:15]
PORT SDMA_CTRL4_PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SDMA_CTRL4
PORT SDMA_CTRL4_PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SDMA_CTRL4
PORT SDMA_CTRL4_PLB_wrDBus = PLB_wrDBus, DIR = I, BUS = SDMA_CTRL4, VEC = [0:(C_SDMA_CTRL4_DWIDTH-1)]
PORT SDMA_CTRL4_Sl_addrAck = Sl_addrAck, DIR = O, BUS = SDMA_CTRL4
PORT SDMA_CTRL4_Sl_SSize = Sl_SSize, DIR = O, BUS = SDMA_CTRL4, VEC = [0:1]
PORT SDMA_CTRL4_Sl_wait = Sl_wait, DIR = O, BUS = SDMA_CTRL4
PORT SDMA_CTRL4_Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SDMA_CTRL4
PORT SDMA_CTRL4_Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SDMA_CTRL4
PORT SDMA_CTRL4_Sl_wrComp = Sl_wrComp, DIR = O, BUS = SDMA_CTRL4
PORT SDMA_CTRL4_Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SDMA_CTRL4
PORT SDMA_CTRL4_Sl_rdDBus = Sl_rdDBus, DIR = O, BUS = SDMA_CTRL4, VEC = [0:(C_SDMA_CTRL4_DWIDTH-1)]
PORT SDMA_CTRL4_Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, BUS = SDMA_CTRL4, VEC = [0:3]
PORT SDMA_CTRL4_Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SDMA_CTRL4
PORT SDMA_CTRL4_Sl_rdComp = Sl_rdComp, DIR = O, BUS = SDMA_CTRL4
PORT SDMA_CTRL4_Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SDMA_CTRL4
PORT SDMA_CTRL4_Sl_MBusy = Sl_MBusy, DIR = O, BUS = SDMA_CTRL4, VEC = [0:(C_SDMA_CTRL4_NUM_MASTERS-1)]
PORT SDMA_CTRL4_Sl_MRdErr = Sl_MRdErr, DIR = O, BUS = SDMA_CTRL4, VEC = [0:(C_SDMA_CTRL4_NUM_MASTERS-1)]
PORT SDMA_CTRL4_Sl_MWrErr = Sl_MWrErr, DIR = O, BUS = SDMA_CTRL4, VEC = [0:(C_SDMA_CTRL4_NUM_MASTERS-1)]
PORT SDMA_CTRL4_Sl_MIRQ = Sl_MIRQ, DIR = O, BUS = SDMA_CTRL4, VEC = [0:(C_SDMA_CTRL4_NUM_MASTERS-1)]
PORT PIM4_Addr = Addr, DIR = I, BUS = MPMC_PIM4, VEC = [31:0]
PORT PIM4_AddrReq = AddrReq, DIR = I, BUS = MPMC_PIM4
PORT PIM4_AddrAck = AddrAck, DIR = O, BUS = MPMC_PIM4
PORT PIM4_RNW = RNW, DIR = I, BUS = MPMC_PIM4
PORT PIM4_Size = Size, DIR = I, BUS = MPMC_PIM4, VEC = [3:0]
PORT PIM4_RdModWr = RdModWr, DIR = I, BUS = MPMC_PIM4
PORT PIM4_WrFIFO_Data = WrFIFO_Data, DIR = I, BUS = MPMC_PIM4, VEC = [(C_PIM4_DATA_WIDTH-1):0]
PORT PIM4_WrFIFO_BE = WrFIFO_BE, DIR = I, BUS = MPMC_PIM4, VEC = [(C_PIM4_DATA_WIDTH/8-1):0]
PORT PIM4_WrFIFO_Push = WrFIFO_Push, DIR = I, BUS = MPMC_PIM4
PORT PIM4_RdFIFO_Data = RdFIFO_Data, DIR = O, BUS = MPMC_PIM4, VEC = [(C_PIM4_DATA_WIDTH-1):0]
PORT PIM4_RdFIFO_Pop = RdFIFO_Pop, DIR = I, BUS = MPMC_PIM4
PORT PIM4_RdFIFO_RdWdAddr = RdFIFO_RdWdAddr, DIR = O, BUS = MPMC_PIM4, VEC = [3:0]
PORT PIM4_WrFIFO_Empty = WrFIFO_Empty, DIR = O, BUS = MPMC_PIM4
PORT PIM4_WrFIFO_AlmostFull = WrFIFO_AlmostFull, DIR = O, BUS = MPMC_PIM4
PORT PIM4_WrFIFO_Flush = WrFIFO_Flush, DIR = I, BUS = MPMC_PIM4
PORT PIM4_RdFIFO_Empty = RdFIFO_Empty, DIR = O, BUS = MPMC_PIM4
PORT PIM4_RdFIFO_Flush = RdFIFO_Flush, DIR = I, BUS = MPMC_PIM4
PORT PIM4_RdFIFO_Latency = RDFIFO_Latency, DIR = O, BUS = MPMC_PIM4, VEC = [1:0]
PORT PIM4_InitDone = InitDone, DIR = O, BUS = MPMC_PIM4
PORT PPC440MC4_MIMCReadNotWrite = MIMCREADNOTWRITE, DIR = I, BUS = PPC440MC4
PORT PPC440MC4_MIMCAddress = MIMCADDRESS, DIR = I, BUS = PPC440MC4, VEC = [0:35]
PORT PPC440MC4_MIMCAddressValid = MIMCADDRESSVALID, DIR = I, BUS = PPC440MC4
PORT PPC440MC4_MIMCWriteData = MIMCWRITEDATA, DIR = I, BUS = PPC440MC4, VEC = [0:127]
PORT PPC440MC4_MIMCWriteDataValid = MIMCWRITEDATAVALID, DIR = I, BUS = PPC440MC4
PORT PPC440MC4_MIMCByteEnable = MIMCBYTEENABLE, DIR = I, BUS = PPC440MC4, VEC = [0:15]
PORT PPC440MC4_MIMCBankConflict = MIMCBANKCONFLICT, DIR = I, BUS = PPC440MC4
PORT PPC440MC4_MIMCRowConflict = MIMCROWCONFLICT, DIR = I, BUS = PPC440MC4
PORT PPC440MC4_MCMIReadData = MCMIREADDATA, DIR = O, BUS = PPC440MC4, VEC = [0:127]
PORT PPC440MC4_MCMIReadDataValid = MCMIREADDATAVALID, DIR = O, BUS = PPC440MC4
PORT PPC440MC4_MCMIReadDataErr = MCMIREADDATAERR, DIR = O, BUS = PPC440MC4
PORT PPC440MC4_MCMIAddrReadyToAccept = MCMIADDRREADYTOACCEPT, DIR = O, BUS = PPC440MC4
PORT VFBC4_Cmd_Clk = cmd_clk, DIR = I, BUS = VFBC4
PORT VFBC4_Cmd_Reset = cmd_reset, DIR = I, BUS = VFBC4
PORT VFBC4_Cmd_Data = cmd_data, DIR = I, BUS = VFBC4, VEC = [31:0]
PORT VFBC4_Cmd_Write = cmd_write, DIR = I, BUS = VFBC4
PORT VFBC4_Cmd_End = cmd_end, DIR = I, BUS = VFBC4
PORT VFBC4_Cmd_Full = cmd_full, DIR = O, BUS = VFBC4
PORT VFBC4_Cmd_Almost_Full = cmd_almost_full, DIR = O, BUS = VFBC4
PORT VFBC4_Cmd_Idle = cmd_idle, DIR = O, BUS = VFBC4
PORT VFBC4_Wd_Clk = wd_clk, DIR = I, BUS = VFBC4
PORT VFBC4_Wd_Reset = wd_reset, DIR = I, BUS = VFBC4
PORT VFBC4_Wd_Write = wd_write, DIR = I, BUS = VFBC4
PORT VFBC4_Wd_End_Burst = wd_end_burst, DIR = I, BUS = VFBC4
PORT VFBC4_Wd_Flush = wd_flush, DIR = I, BUS = VFBC4
PORT VFBC4_Wd_Data = wd_data, DIR = I, BUS = VFBC4, VEC = [C_VFBC4_RDWD_DATA_WIDTH-1:0]
PORT VFBC4_Wd_Data_BE = wd_data_be, DIR = I, BUS = VFBC4, VEC = [C_VFBC4_RDWD_DATA_WIDTH/8-1:0]
PORT VFBC4_Wd_Full = wd_full, DIR = O, BUS = VFBC4
PORT VFBC4_Wd_Almost_Full = wd_almost_full, DIR = O, BUS = VFBC4
PORT VFBC4_Rd_Clk = rd_clk, DIR = I, BUS = VFBC4
PORT VFBC4_Rd_Reset = rd_reset, DIR = I, BUS = VFBC4
PORT VFBC4_Rd_Read = rd_read, DIR = I, BUS = VFBC4
PORT VFBC4_Rd_End_Burst = rd_end_burst, DIR = I, BUS = VFBC4
PORT VFBC4_Rd_Flush = rd_flush, DIR = I, BUS = VFBC4
PORT VFBC4_Rd_Data = rd_data, DIR = O, BUS = VFBC4, VEC = [C_VFBC4_RDWD_DATA_WIDTH-1:0]
PORT VFBC4_Rd_Empty = rd_empty, DIR = O, BUS = VFBC4
PORT VFBC4_Rd_Almost_Empty = rd_almost_empty, DIR = O, BUS = VFBC4
PORT MCB4_cmd_clk = cmd_clk, DIR = I, BUS = MCB4
PORT MCB4_cmd_en = cmd_en, DIR = I, BUS = MCB4
PORT MCB4_cmd_instr = cmd_instr, DIR = I, BUS = MCB4, VEC = [2:0]
PORT MCB4_cmd_bl = cmd_bl, DIR = I, BUS = MCB4, VEC = [5:0]
PORT MCB4_cmd_byte_addr = cmd_byte_addr, DIR = I, BUS = MCB4, VEC = [29:0]
PORT MCB4_cmd_empty = cmd_empty, DIR = O, BUS = MCB4
PORT MCB4_cmd_full = cmd_full, DIR = O, BUS = MCB4
PORT MCB4_wr_clk = wr_clk, DIR = I, BUS = MCB4
PORT MCB4_wr_en = wr_en, DIR = I, BUS = MCB4
PORT MCB4_wr_mask = wr_mask, DIR = I, BUS = MCB4, VEC = [C_PIM4_DATA_WIDTH/8-1:0]
PORT MCB4_wr_data = wr_data, DIR = I, BUS = MCB4, VEC = [C_PIM4_DATA_WIDTH-1:0]
PORT MCB4_wr_full = wr_full, DIR = O, BUS = MCB4
PORT MCB4_wr_empty = wr_empty, DIR = O, BUS = MCB4
PORT MCB4_wr_count = wr_count, DIR = O, BUS = MCB4, VEC = [6:0]
PORT MCB4_wr_underrun = wr_underrun, DIR = O, BUS = MCB4
PORT MCB4_wr_error = wr_error, DIR = O, BUS = MCB4
PORT MCB4_rd_clk = rd_clk, DIR = I, BUS = MCB4
PORT MCB4_rd_en = rd_en, DIR = I, BUS = MCB4
PORT MCB4_rd_data = rd_data, DIR = O, BUS = MCB4, VEC = [C_PIM4_DATA_WIDTH-1:0]
PORT MCB4_rd_full = rd_full, DIR = O, BUS = MCB4
PORT MCB4_rd_empty = rd_empty, DIR = O, BUS = MCB4
PORT MCB4_rd_count = rd_count, DIR = O, BUS = MCB4, VEC = [6:0]
PORT MCB4_rd_overflow = rd_overflow, DIR = O, BUS = MCB4
PORT MCB4_rd_error = rd_error, DIR = O, BUS = MCB4
PORT FSL5_M_Clk = FSL_M_Clk, DIR = I, BUS = XCL5, SIGIS = CLK, INITIALVAL = VCC
PORT FSL5_M_Write = FSL_M_Write, DIR = I, BUS = XCL5
PORT FSL5_M_Data = FSL_M_Data, DIR = I, BUS = XCL5, VEC = [0:31]
PORT FSL5_M_Control = FSL_M_Control, DIR = I, BUS = XCL5
PORT FSL5_M_Full = FSL_M_Full, DIR = O, BUS = XCL5
PORT FSL5_S_Clk = FSL_S_Clk, DIR = I, BUS = XCL5
PORT FSL5_S_Read = FSL_S_Read, DIR = I, BUS = XCL5
PORT FSL5_S_Data = FSL_S_Data, DIR = O, BUS = XCL5, VEC = [0:31]
PORT FSL5_S_Control = FSL_S_Control, DIR = O, BUS = XCL5
PORT FSL5_S_Exists = FSL_S_Exists, DIR = O, BUS = XCL5
PORT FSL5_B_M_Clk = FSL_M_Clk, DIR = I, BUS = XCL5_B, SIGIS = CLK, INITIALVAL = VCC
PORT FSL5_B_M_Write = FSL_M_Write, DIR = I, BUS = XCL5_B
PORT FSL5_B_M_Data = FSL_M_Data, DIR = I, BUS = XCL5_B, VEC = [0:31]
PORT FSL5_B_M_Control = FSL_M_Control, DIR = I, BUS = XCL5_B
PORT FSL5_B_M_Full = FSL_M_Full, DIR = O, BUS = XCL5_B
PORT FSL5_B_S_Clk = FSL_S_Clk, DIR = I, BUS = XCL5_B
PORT FSL5_B_S_Read = FSL_S_Read, DIR = I, BUS = XCL5_B
PORT FSL5_B_S_Data = FSL_S_Data, DIR = O, BUS = XCL5_B, VEC = [0:31]
PORT FSL5_B_S_Control = FSL_S_Control, DIR = O, BUS = XCL5_B
PORT FSL5_B_S_Exists = FSL_S_Exists, DIR = O, BUS = XCL5_B
PORT SPLB5_Clk = "", DIR = I, BUS = SPLB5, SIGIS = CLK, INITIALVAL = VCC
PORT SPLB5_Rst = SPLB_Rst, DIR = I, BUS = SPLB5, SIGIS = RST
PORT SPLB5_PLB_ABus = PLB_ABus, DIR = I, BUS = SPLB5, VEC = [0:31]
PORT SPLB5_PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB5
PORT SPLB5_PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB5
PORT SPLB5_PLB_masterID = PLB_masterID, DIR = I, BUS = SPLB5, VEC = [0:(C_SPLB5_MID_WIDTH-1)]
PORT SPLB5_PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB5
PORT SPLB5_PLB_BE = PLB_BE, DIR = I, BUS = SPLB5, VEC = [0:((C_SPLB5_DWIDTH/8)-1)]
PORT SPLB5_PLB_UABus = PLB_UABus, DIR = I, BUS = SPLB5, VEC = [0:31]
PORT SPLB5_PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB5
PORT SPLB5_PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB5
PORT SPLB5_PLB_abort = PLB_abort, DIR = I, BUS = SPLB5
PORT SPLB5_PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB5
PORT SPLB5_PLB_MSize = PLB_MSize, DIR = I, BUS = SPLB5, VEC = [0:1]
PORT SPLB5_PLB_size = PLB_size, DIR = I, BUS = SPLB5, VEC = [0:3]
PORT SPLB5_PLB_type = PLB_type, DIR = I, BUS = SPLB5, VEC = [0:2]
PORT SPLB5_PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB5
PORT SPLB5_PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB5
PORT SPLB5_PLB_wrPendPri = PLB_wrPendPri, DIR = I, BUS = SPLB5, VEC = [0:1]
PORT SPLB5_PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB5
PORT SPLB5_PLB_rdPendPri = PLB_rdPendPri, DIR = I, BUS = SPLB5, VEC = [0:1]
PORT SPLB5_PLB_reqPri = PLB_reqPri, DIR = I, BUS = SPLB5, VEC = [0:1]
PORT SPLB5_PLB_TAttribute = PLB_TAttribute, DIR = I, BUS = SPLB5, VEC = [0:15]
PORT SPLB5_PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB5
PORT SPLB5_PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB5
PORT SPLB5_PLB_wrDBus = PLB_wrDBus, DIR = I, BUS = SPLB5, VEC = [0:(C_SPLB5_DWIDTH-1)]
PORT SPLB5_Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB5
PORT SPLB5_Sl_SSize = Sl_SSize, DIR = O, BUS = SPLB5, VEC = [0:1]
PORT SPLB5_Sl_wait = Sl_wait, DIR = O, BUS = SPLB5
PORT SPLB5_Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB5
PORT SPLB5_Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB5
PORT SPLB5_Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB5
PORT SPLB5_Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB5
PORT SPLB5_Sl_rdDBus = Sl_rdDBus, DIR = O, BUS = SPLB5, VEC = [0:(C_SPLB5_DWIDTH-1)]
PORT SPLB5_Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, BUS = SPLB5, VEC = [0:3]
PORT SPLB5_Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB5
PORT SPLB5_Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB5
PORT SPLB5_Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB5
PORT SPLB5_Sl_MBusy = Sl_MBusy, DIR = O, BUS = SPLB5, VEC = [0:(C_SPLB5_NUM_MASTERS-1)]
PORT SPLB5_Sl_MRdErr = Sl_MRdErr, DIR = O, BUS = SPLB5, VEC = [0:(C_SPLB5_NUM_MASTERS-1)]
PORT SPLB5_Sl_MWrErr = Sl_MWrErr, DIR = O, BUS = SPLB5, VEC = [0:(C_SPLB5_NUM_MASTERS-1)]
PORT SPLB5_Sl_MIRQ = Sl_MIRQ, DIR = O, BUS = SPLB5, VEC = [0:(C_SPLB5_NUM_MASTERS-1)]
PORT SDMA5_Clk = "", DIR = I, SIGIS = CLK, ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 3), ASSIGNMENT = REQUIRE
PORT SDMA5_Rx_IntOut = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 3)
PORT SDMA5_Tx_IntOut = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, ISVALID = (C_NUM_PORTS > 5 && C_PIM5_BASETYPE == 3)
PORT SDMA5_RstOut = LL_RST_ACK, DIR = O, BUS = SDMA_LL5
PORT SDMA5_TX_D = LL_Tx_Data, DIR = O, BUS = SDMA_LL5, VEC = [0:31]
PORT SDMA5_TX_Rem = LL_Tx_Rem, DIR = O, BUS = SDMA_LL5, VEC = [0:3]
PORT SDMA5_TX_SOF = LL_Tx_SOF_n, DIR = O, BUS = SDMA_LL5
PORT SDMA5_TX_EOF = LL_Tx_EOF_n, DIR = O, BUS = SDMA_LL5
PORT SDMA5_TX_SOP = LL_Tx_SOP_n, DIR = O, BUS = SDMA_LL5
PORT SDMA5_TX_EOP = LL_Tx_EOP_n, DIR = O, BUS = SDMA_LL5
PORT SDMA5_TX_Src_Rdy = LL_Tx_SrcRdy_n, DIR = O, BUS = SDMA_LL5
PORT SDMA5_TX_Dst_Rdy = LL_Tx_DstRdy_n, DIR = I, BUS = SDMA_LL5, INITIALVAL = VCC
PORT SDMA5_RX_D = LL_Rx_Data, DIR = I, BUS = SDMA_LL5, INITIALVAL = GND, VEC = [0:31]
PORT SDMA5_RX_Rem = LL_Rx_Rem, DIR = I, BUS = SDMA_LL5, INITIALVAL = VCC, VEC = [0:3]
PORT SDMA5_RX_SOF = LL_Rx_SOF_n, DIR = I, BUS = SDMA_LL5, INITIALVAL = VCC
PORT SDMA5_RX_EOF = LL_Rx_EOF_n, DIR = I, BUS = SDMA_LL5, INITIALVAL = VCC
PORT SDMA5_RX_SOP = LL_Rx_SOP_n, DIR = I, BUS = SDMA_LL5, INITIALVAL = VCC
PORT SDMA5_RX_EOP = LL_Rx_EOP_n, DIR = I, BUS = SDMA_LL5, INITIALVAL = VCC
PORT SDMA5_RX_Src_Rdy = LL_Rx_SrcRdy_n, DIR = I, BUS = SDMA_LL5, INITIALVAL = VCC
PORT SDMA5_RX_Dst_Rdy = LL_Rx_DstRdy_n, DIR = O, BUS = SDMA_LL5
PORT SDMA_CTRL5_Clk = "", DIR = I, BUS = SDMA_CTRL5, SIGIS = CLK, INITIALVAL = VCC
PORT SDMA_CTRL5_Rst = SPLB_Rst, DIR = I, BUS = SDMA_CTRL5, SIGIS = RST
PORT SDMA_CTRL5_PLB_ABus = PLB_ABus, DIR = I, BUS = SDMA_CTRL5, VEC = [0:31]
PORT SDMA_CTRL5_PLB_PAValid = PLB_PAValid, DIR = I, BUS = SDMA_CTRL5
PORT SDMA_CTRL5_PLB_SAValid = PLB_SAValid, DIR = I, BUS = SDMA_CTRL5
PORT SDMA_CTRL5_PLB_masterID = PLB_masterID, DIR = I, BUS = SDMA_CTRL5, VEC = [0:(C_SDMA_CTRL5_MID_WIDTH-1)]
PORT SDMA_CTRL5_PLB_RNW = PLB_RNW, DIR = I, BUS = SDMA_CTRL5
PORT SDMA_CTRL5_PLB_BE = PLB_BE, DIR = I, BUS = SDMA_CTRL5, VEC = [0:((C_SDMA_CTRL5_DWIDTH/8)-1)]
PORT SDMA_CTRL5_PLB_UABus = PLB_UABus, DIR = I, BUS = SDMA_CTRL5, VEC = [0:31]
PORT SDMA_CTRL5_PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SDMA_CTRL5
PORT SDMA_CTRL5_PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SDMA_CTRL5
PORT SDMA_CTRL5_PLB_abort = PLB_abort, DIR = I, BUS = SDMA_CTRL5
PORT SDMA_CTRL5_PLB_busLock = PLB_busLock, DIR = I, BUS = SDMA_CTRL5
PORT SDMA_CTRL5_PLB_MSize = PLB_MSize, DIR = I, BUS = SDMA_CTRL5, VEC = [0:1]
PORT SDMA_CTRL5_PLB_size = PLB_size, DIR = I, BUS = SDMA_CTRL5, VEC = [0:3]
PORT SDMA_CTRL5_PLB_type = PLB_type, DIR = I, BUS = SDMA_CTRL5, VEC = [0:2]
PORT SDMA_CTRL5_PLB_lockErr = PLB_lockErr, DIR = I, BUS = SDMA_CTRL5
PORT SDMA_CTRL5_PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SDMA_CTRL5
PORT SDMA_CTRL5_PLB_wrPendPri = PLB_wrPendPri, DIR = I, BUS = SDMA_CTRL5, VEC = [0:1]
PORT SDMA_CTRL5_PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SDMA_CTRL5
PORT SDMA_CTRL5_PLB_rdPendPri = PLB_rdPendPri, DIR = I, BUS = SDMA_CTRL5, VEC = [0:1]
PORT SDMA_CTRL5_PLB_reqPri = PLB_reqPri, DIR = I, BUS = SDMA_CTRL5, VEC = [0:1]
PORT SDMA_CTRL5_PLB_TAttribute = PLB_TAttribute, DIR = I, BUS = SDMA_CTRL5, VEC = [0:15]
PORT SDMA_CTRL5_PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SDMA_CTRL5
PORT SDMA_CTRL5_PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SDMA_CTRL5
PORT SDMA_CTRL5_PLB_wrDBus = PLB_wrDBus, DIR = I, BUS = SDMA_CTRL5, VEC = [0:(C_SDMA_CTRL5_DWIDTH-1)]
PORT SDMA_CTRL5_Sl_addrAck = Sl_addrAck, DIR = O, BUS = SDMA_CTRL5
PORT SDMA_CTRL5_Sl_SSize = Sl_SSize, DIR = O, BUS = SDMA_CTRL5, VEC = [0:1]
PORT SDMA_CTRL5_Sl_wait = Sl_wait, DIR = O, BUS = SDMA_CTRL5
PORT SDMA_CTRL5_Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SDMA_CTRL5
PORT SDMA_CTRL5_Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SDMA_CTRL5
PORT SDMA_CTRL5_Sl_wrComp = Sl_wrComp, DIR = O, BUS = SDMA_CTRL5
PORT SDMA_CTRL5_Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SDMA_CTRL5
PORT SDMA_CTRL5_Sl_rdDBus = Sl_rdDBus, DIR = O, BUS = SDMA_CTRL5, VEC = [0:(C_SDMA_CTRL5_DWIDTH-1)]
PORT SDMA_CTRL5_Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, BUS = SDMA_CTRL5, VEC = [0:3]
PORT SDMA_CTRL5_Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SDMA_CTRL5
PORT SDMA_CTRL5_Sl_rdComp = Sl_rdComp, DIR = O, BUS = SDMA_CTRL5
PORT SDMA_CTRL5_Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SDMA_CTRL5
PORT SDMA_CTRL5_Sl_MBusy = Sl_MBusy, DIR = O, BUS = SDMA_CTRL5, VEC = [0:(C_SDMA_CTRL5_NUM_MASTERS-1)]
PORT SDMA_CTRL5_Sl_MRdErr = Sl_MRdErr, DIR = O, BUS = SDMA_CTRL5, VEC = [0:(C_SDMA_CTRL5_NUM_MASTERS-1)]
PORT SDMA_CTRL5_Sl_MWrErr = Sl_MWrErr, DIR = O, BUS = SDMA_CTRL5, VEC = [0:(C_SDMA_CTRL5_NUM_MASTERS-1)]
PORT SDMA_CTRL5_Sl_MIRQ = Sl_MIRQ, DIR = O, BUS = SDMA_CTRL5, VEC = [0:(C_SDMA_CTRL5_NUM_MASTERS-1)]
PORT PIM5_Addr = Addr, DIR = I, BUS = MPMC_PIM5, VEC = [31:0]
PORT PIM5_AddrReq = AddrReq, DIR = I, BUS = MPMC_PIM5
PORT PIM5_AddrAck = AddrAck, DIR = O, BUS = MPMC_PIM5
PORT PIM5_RNW = RNW, DIR = I, BUS = MPMC_PIM5
PORT PIM5_Size = Size, DIR = I, BUS = MPMC_PIM5, VEC = [3:0]
PORT PIM5_RdModWr = RdModWr, DIR = I, BUS = MPMC_PIM5
PORT PIM5_WrFIFO_Data = WrFIFO_Data, DIR = I, BUS = MPMC_PIM5, VEC = [(C_PIM5_DATA_WIDTH-1):0]
PORT PIM5_WrFIFO_BE = WrFIFO_BE, DIR = I, BUS = MPMC_PIM5, VEC = [(C_PIM5_DATA_WIDTH/8-1):0]
PORT PIM5_WrFIFO_Push = WrFIFO_Push, DIR = I, BUS = MPMC_PIM5
PORT PIM5_RdFIFO_Data = RdFIFO_Data, DIR = O, BUS = MPMC_PIM5, VEC = [(C_PIM5_DATA_WIDTH-1):0]
PORT PIM5_RdFIFO_Pop = RdFIFO_Pop, DIR = I, BUS = MPMC_PIM5
PORT PIM5_RdFIFO_RdWdAddr = RdFIFO_RdWdAddr, DIR = O, BUS = MPMC_PIM5, VEC = [3:0]
PORT PIM5_WrFIFO_Empty = WrFIFO_Empty, DIR = O, BUS = MPMC_PIM5
PORT PIM5_WrFIFO_AlmostFull = WrFIFO_AlmostFull, DIR = O, BUS = MPMC_PIM5
PORT PIM5_WrFIFO_Flush = WrFIFO_Flush, DIR = I, BUS = MPMC_PIM5
PORT PIM5_RdFIFO_Empty = RdFIFO_Empty, DIR = O, BUS = MPMC_PIM5
PORT PIM5_RdFIFO_Flush = RdFIFO_Flush, DIR = I, BUS = MPMC_PIM5
PORT PIM5_RdFIFO_Latency = RDFIFO_Latency, DIR = O, BUS = MPMC_PIM5, VEC = [1:0]
PORT PIM5_InitDone = InitDone, DIR = O, BUS = MPMC_PIM5
PORT PPC440MC5_MIMCReadNotWrite = MIMCREADNOTWRITE, DIR = I, BUS = PPC440MC5
PORT PPC440MC5_MIMCAddress = MIMCADDRESS, DIR = I, BUS = PPC440MC5, VEC = [0:35]
PORT PPC440MC5_MIMCAddressValid = MIMCADDRESSVALID, DIR = I, BUS = PPC440MC5
PORT PPC440MC5_MIMCWriteData = MIMCWRITEDATA, DIR = I, BUS = PPC440MC5, VEC = [0:127]
PORT PPC440MC5_MIMCWriteDataValid = MIMCWRITEDATAVALID, DIR = I, BUS = PPC440MC5
PORT PPC440MC5_MIMCByteEnable = MIMCBYTEENABLE, DIR = I, BUS = PPC440MC5, VEC = [0:15]
PORT PPC440MC5_MIMCBankConflict = MIMCBANKCONFLICT, DIR = I, BUS = PPC440MC5
PORT PPC440MC5_MIMCRowConflict = MIMCROWCONFLICT, DIR = I, BUS = PPC440MC5
PORT PPC440MC5_MCMIReadData = MCMIREADDATA, DIR = O, BUS = PPC440MC5, VEC = [0:127]
PORT PPC440MC5_MCMIReadDataValid = MCMIREADDATAVALID, DIR = O, BUS = PPC440MC5
PORT PPC440MC5_MCMIReadDataErr = MCMIREADDATAERR, DIR = O, BUS = PPC440MC5
PORT PPC440MC5_MCMIAddrReadyToAccept = MCMIADDRREADYTOACCEPT, DIR = O, BUS = PPC440MC5
PORT VFBC5_Cmd_Clk = cmd_clk, DIR = I, BUS = VFBC5
PORT VFBC5_Cmd_Reset = cmd_reset, DIR = I, BUS = VFBC5
PORT VFBC5_Cmd_Data = cmd_data, DIR = I, BUS = VFBC5, VEC = [31:0]
PORT VFBC5_Cmd_Write = cmd_write, DIR = I, BUS = VFBC5
PORT VFBC5_Cmd_End = cmd_end, DIR = I, BUS = VFBC5
PORT VFBC5_Cmd_Full = cmd_full, DIR = O, BUS = VFBC5
PORT VFBC5_Cmd_Almost_Full = cmd_almost_full, DIR = O, BUS = VFBC5
PORT VFBC5_Cmd_Idle = cmd_idle, DIR = O, BUS = VFBC5
PORT VFBC5_Wd_Clk = wd_clk, DIR = I, BUS = VFBC5
PORT VFBC5_Wd_Reset = wd_reset, DIR = I, BUS = VFBC5
PORT VFBC5_Wd_Write = wd_write, DIR = I, BUS = VFBC5
PORT VFBC5_Wd_End_Burst = wd_end_burst, DIR = I, BUS = VFBC5
PORT VFBC5_Wd_Flush = wd_flush, DIR = I, BUS = VFBC5
PORT VFBC5_Wd_Data = wd_data, DIR = I, BUS = VFBC5, VEC = [C_VFBC5_RDWD_DATA_WIDTH-1:0]
PORT VFBC5_Wd_Data_BE = wd_data_be, DIR = I, BUS = VFBC5, VEC = [C_VFBC5_RDWD_DATA_WIDTH/8-1:0]
PORT VFBC5_Wd_Full = wd_full, DIR = O, BUS = VFBC5
PORT VFBC5_Wd_Almost_Full = wd_almost_full, DIR = O, BUS = VFBC5
PORT VFBC5_Rd_Clk = rd_clk, DIR = I, BUS = VFBC5
PORT VFBC5_Rd_Reset = rd_reset, DIR = I, BUS = VFBC5
PORT VFBC5_Rd_Read = rd_read, DIR = I, BUS = VFBC5
PORT VFBC5_Rd_End_Burst = rd_end_burst, DIR = I, BUS = VFBC5
PORT VFBC5_Rd_Flush = rd_flush, DIR = I, BUS = VFBC5
PORT VFBC5_Rd_Data = rd_data, DIR = O, BUS = VFBC5, VEC = [C_VFBC5_RDWD_DATA_WIDTH-1:0]
PORT VFBC5_Rd_Empty = rd_empty, DIR = O, BUS = VFBC5
PORT VFBC5_Rd_Almost_Empty = rd_almost_empty, DIR = O, BUS = VFBC5
PORT MCB5_cmd_clk = cmd_clk, DIR = I, BUS = MCB5
PORT MCB5_cmd_en = cmd_en, DIR = I, BUS = MCB5
PORT MCB5_cmd_instr = cmd_instr, DIR = I, BUS = MCB5, VEC = [2:0]
PORT MCB5_cmd_bl = cmd_bl, DIR = I, BUS = MCB5, VEC = [5:0]
PORT MCB5_cmd_byte_addr = cmd_byte_addr, DIR = I, BUS = MCB5, VEC = [29:0]
PORT MCB5_cmd_empty = cmd_empty, DIR = O, BUS = MCB5
PORT MCB5_cmd_full = cmd_full, DIR = O, BUS = MCB5
PORT MCB5_wr_clk = wr_clk, DIR = I, BUS = MCB5
PORT MCB5_wr_en = wr_en, DIR = I, BUS = MCB5
PORT MCB5_wr_mask = wr_mask, DIR = I, BUS = MCB5, VEC = [C_PIM5_DATA_WIDTH/8-1:0]
PORT MCB5_wr_data = wr_data, DIR = I, BUS = MCB5, VEC = [C_PIM5_DATA_WIDTH-1:0]
PORT MCB5_wr_full = wr_full, DIR = O, BUS = MCB5
PORT MCB5_wr_empty = wr_empty, DIR = O, BUS = MCB5
PORT MCB5_wr_count = wr_count, DIR = O, BUS = MCB5, VEC = [6:0]
PORT MCB5_wr_underrun = wr_underrun, DIR = O, BUS = MCB5
PORT MCB5_wr_error = wr_error, DIR = O, BUS = MCB5
PORT MCB5_rd_clk = rd_clk, DIR = I, BUS = MCB5
PORT MCB5_rd_en = rd_en, DIR = I, BUS = MCB5
PORT MCB5_rd_data = rd_data, DIR = O, BUS = MCB5, VEC = [C_PIM5_DATA_WIDTH-1:0]
PORT MCB5_rd_full = rd_full, DIR = O, BUS = MCB5
PORT MCB5_rd_empty = rd_empty, DIR = O, BUS = MCB5
PORT MCB5_rd_count = rd_count, DIR = O, BUS = MCB5, VEC = [6:0]
PORT MCB5_rd_overflow = rd_overflow, DIR = O, BUS = MCB5
PORT MCB5_rd_error = rd_error, DIR = O, BUS = MCB5
PORT FSL6_M_Clk = FSL_M_Clk, DIR = I, BUS = XCL6, SIGIS = CLK, INITIALVAL = VCC
PORT FSL6_M_Write = FSL_M_Write, DIR = I, BUS = XCL6
PORT FSL6_M_Data = FSL_M_Data, DIR = I, BUS = XCL6, VEC = [0:31]
PORT FSL6_M_Control = FSL_M_Control, DIR = I, BUS = XCL6
PORT FSL6_M_Full = FSL_M_Full, DIR = O, BUS = XCL6
PORT FSL6_S_Clk = FSL_S_Clk, DIR = I, BUS = XCL6
PORT FSL6_S_Read = FSL_S_Read, DIR = I, BUS = XCL6
PORT FSL6_S_Data = FSL_S_Data, DIR = O, BUS = XCL6, VEC = [0:31]
PORT FSL6_S_Control = FSL_S_Control, DIR = O, BUS = XCL6
PORT FSL6_S_Exists = FSL_S_Exists, DIR = O, BUS = XCL6
PORT FSL6_B_M_Clk = FSL_M_Clk, DIR = I, BUS = XCL6_B, SIGIS = CLK, INITIALVAL = VCC
PORT FSL6_B_M_Write = FSL_M_Write, DIR = I, BUS = XCL6_B
PORT FSL6_B_M_Data = FSL_M_Data, DIR = I, BUS = XCL6_B, VEC = [0:31]
PORT FSL6_B_M_Control = FSL_M_Control, DIR = I, BUS = XCL6_B
PORT FSL6_B_M_Full = FSL_M_Full, DIR = O, BUS = XCL6_B
PORT FSL6_B_S_Clk = FSL_S_Clk, DIR = I, BUS = XCL6_B
PORT FSL6_B_S_Read = FSL_S_Read, DIR = I, BUS = XCL6_B
PORT FSL6_B_S_Data = FSL_S_Data, DIR = O, BUS = XCL6_B, VEC = [0:31]
PORT FSL6_B_S_Control = FSL_S_Control, DIR = O, BUS = XCL6_B
PORT FSL6_B_S_Exists = FSL_S_Exists, DIR = O, BUS = XCL6_B
PORT SPLB6_Clk = "", DIR = I, BUS = SPLB6, SIGIS = CLK, INITIALVAL = VCC
PORT SPLB6_Rst = SPLB_Rst, DIR = I, BUS = SPLB6, SIGIS = RST
PORT SPLB6_PLB_ABus = PLB_ABus, DIR = I, BUS = SPLB6, VEC = [0:31]
PORT SPLB6_PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB6
PORT SPLB6_PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB6
PORT SPLB6_PLB_masterID = PLB_masterID, DIR = I, BUS = SPLB6, VEC = [0:(C_SPLB6_MID_WIDTH-1)]
PORT SPLB6_PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB6
PORT SPLB6_PLB_BE = PLB_BE, DIR = I, BUS = SPLB6, VEC = [0:((C_SPLB6_DWIDTH/8)-1)]
PORT SPLB6_PLB_UABus = PLB_UABus, DIR = I, BUS = SPLB6, VEC = [0:31]
PORT SPLB6_PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB6
PORT SPLB6_PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB6
PORT SPLB6_PLB_abort = PLB_abort, DIR = I, BUS = SPLB6
PORT SPLB6_PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB6
PORT SPLB6_PLB_MSize = PLB_MSize, DIR = I, BUS = SPLB6, VEC = [0:1]
PORT SPLB6_PLB_size = PLB_size, DIR = I, BUS = SPLB6, VEC = [0:3]
PORT SPLB6_PLB_type = PLB_type, DIR = I, BUS = SPLB6, VEC = [0:2]
PORT SPLB6_PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB6
PORT SPLB6_PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB6
PORT SPLB6_PLB_wrPendPri = PLB_wrPendPri, DIR = I, BUS = SPLB6, VEC = [0:1]
PORT SPLB6_PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB6
PORT SPLB6_PLB_rdPendPri = PLB_rdPendPri, DIR = I, BUS = SPLB6, VEC = [0:1]
PORT SPLB6_PLB_reqPri = PLB_reqPri, DIR = I, BUS = SPLB6, VEC = [0:1]
PORT SPLB6_PLB_TAttribute = PLB_TAttribute, DIR = I, BUS = SPLB6, VEC = [0:15]
PORT SPLB6_PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB6
PORT SPLB6_PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB6
PORT SPLB6_PLB_wrDBus = PLB_wrDBus, DIR = I, BUS = SPLB6, VEC = [0:(C_SPLB6_DWIDTH-1)]
PORT SPLB6_Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB6
PORT SPLB6_Sl_SSize = Sl_SSize, DIR = O, BUS = SPLB6, VEC = [0:1]
PORT SPLB6_Sl_wait = Sl_wait, DIR = O, BUS = SPLB6
PORT SPLB6_Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB6
PORT SPLB6_Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB6
PORT SPLB6_Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB6
PORT SPLB6_Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB6
PORT SPLB6_Sl_rdDBus = Sl_rdDBus, DIR = O, BUS = SPLB6, VEC = [0:(C_SPLB6_DWIDTH-1)]
PORT SPLB6_Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, BUS = SPLB6, VEC = [0:3]
PORT SPLB6_Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB6
PORT SPLB6_Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB6
PORT SPLB6_Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB6
PORT SPLB6_Sl_MBusy = Sl_MBusy, DIR = O, BUS = SPLB6, VEC = [0:(C_SPLB6_NUM_MASTERS-1)]
PORT SPLB6_Sl_MRdErr = Sl_MRdErr, DIR = O, BUS = SPLB6, VEC = [0:(C_SPLB6_NUM_MASTERS-1)]
PORT SPLB6_Sl_MWrErr = Sl_MWrErr, DIR = O, BUS = SPLB6, VEC = [0:(C_SPLB6_NUM_MASTERS-1)]
PORT SPLB6_Sl_MIRQ = Sl_MIRQ, DIR = O, BUS = SPLB6, VEC = [0:(C_SPLB6_NUM_MASTERS-1)]
PORT SDMA6_Clk = "", DIR = I, SIGIS = CLK, ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 3), ASSIGNMENT = REQUIRE
PORT SDMA6_Rx_IntOut = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 3)
PORT SDMA6_Tx_IntOut = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, ISVALID = (C_NUM_PORTS > 6 && C_PIM6_BASETYPE == 3)
PORT SDMA6_RstOut = LL_RST_ACK, DIR = O, BUS = SDMA_LL6
PORT SDMA6_TX_D = LL_Tx_Data, DIR = O, BUS = SDMA_LL6, VEC = [0:31]
PORT SDMA6_TX_Rem = LL_Tx_Rem, DIR = O, BUS = SDMA_LL6, VEC = [0:3]
PORT SDMA6_TX_SOF = LL_Tx_SOF_n, DIR = O, BUS = SDMA_LL6
PORT SDMA6_TX_EOF = LL_Tx_EOF_n, DIR = O, BUS = SDMA_LL6
PORT SDMA6_TX_SOP = LL_Tx_SOP_n, DIR = O, BUS = SDMA_LL6
PORT SDMA6_TX_EOP = LL_Tx_EOP_n, DIR = O, BUS = SDMA_LL6
PORT SDMA6_TX_Src_Rdy = LL_Tx_SrcRdy_n, DIR = O, BUS = SDMA_LL6
PORT SDMA6_TX_Dst_Rdy = LL_Tx_DstRdy_n, DIR = I, BUS = SDMA_LL6, INITIALVAL = VCC
PORT SDMA6_RX_D = LL_Rx_Data, DIR = I, BUS = SDMA_LL6, INITIALVAL = GND, VEC = [0:31]
PORT SDMA6_RX_Rem = LL_Rx_Rem, DIR = I, BUS = SDMA_LL6, INITIALVAL = VCC, VEC = [0:3]
PORT SDMA6_RX_SOF = LL_Rx_SOF_n, DIR = I, BUS = SDMA_LL6, INITIALVAL = VCC
PORT SDMA6_RX_EOF = LL_Rx_EOF_n, DIR = I, BUS = SDMA_LL6, INITIALVAL = VCC
PORT SDMA6_RX_SOP = LL_Rx_SOP_n, DIR = I, BUS = SDMA_LL6, INITIALVAL = VCC
PORT SDMA6_RX_EOP = LL_Rx_EOP_n, DIR = I, BUS = SDMA_LL6, INITIALVAL = VCC
PORT SDMA6_RX_Src_Rdy = LL_Rx_SrcRdy_n, DIR = I, BUS = SDMA_LL6, INITIALVAL = VCC
PORT SDMA6_RX_Dst_Rdy = LL_Rx_DstRdy_n, DIR = O, BUS = SDMA_LL6
PORT SDMA_CTRL6_Clk = "", DIR = I, BUS = SDMA_CTRL6, SIGIS = CLK, INITIALVAL = VCC
PORT SDMA_CTRL6_Rst = SPLB_Rst, DIR = I, BUS = SDMA_CTRL6, SIGIS = RST
PORT SDMA_CTRL6_PLB_ABus = PLB_ABus, DIR = I, BUS = SDMA_CTRL6, VEC = [0:31]
PORT SDMA_CTRL6_PLB_PAValid = PLB_PAValid, DIR = I, BUS = SDMA_CTRL6
PORT SDMA_CTRL6_PLB_SAValid = PLB_SAValid, DIR = I, BUS = SDMA_CTRL6
PORT SDMA_CTRL6_PLB_masterID = PLB_masterID, DIR = I, BUS = SDMA_CTRL6, VEC = [0:(C_SDMA_CTRL6_MID_WIDTH-1)]
PORT SDMA_CTRL6_PLB_RNW = PLB_RNW, DIR = I, BUS = SDMA_CTRL6
PORT SDMA_CTRL6_PLB_BE = PLB_BE, DIR = I, BUS = SDMA_CTRL6, VEC = [0:((C_SDMA_CTRL6_DWIDTH/8)-1)]
PORT SDMA_CTRL6_PLB_UABus = PLB_UABus, DIR = I, BUS = SDMA_CTRL6, VEC = [0:31]
PORT SDMA_CTRL6_PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SDMA_CTRL6
PORT SDMA_CTRL6_PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SDMA_CTRL6
PORT SDMA_CTRL6_PLB_abort = PLB_abort, DIR = I, BUS = SDMA_CTRL6
PORT SDMA_CTRL6_PLB_busLock = PLB_busLock, DIR = I, BUS = SDMA_CTRL6
PORT SDMA_CTRL6_PLB_MSize = PLB_MSize, DIR = I, BUS = SDMA_CTRL6, VEC = [0:1]
PORT SDMA_CTRL6_PLB_size = PLB_size, DIR = I, BUS = SDMA_CTRL6, VEC = [0:3]
PORT SDMA_CTRL6_PLB_type = PLB_type, DIR = I, BUS = SDMA_CTRL6, VEC = [0:2]
PORT SDMA_CTRL6_PLB_lockErr = PLB_lockErr, DIR = I, BUS = SDMA_CTRL6
PORT SDMA_CTRL6_PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SDMA_CTRL6
PORT SDMA_CTRL6_PLB_wrPendPri = PLB_wrPendPri, DIR = I, BUS = SDMA_CTRL6, VEC = [0:1]
PORT SDMA_CTRL6_PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SDMA_CTRL6
PORT SDMA_CTRL6_PLB_rdPendPri = PLB_rdPendPri, DIR = I, BUS = SDMA_CTRL6, VEC = [0:1]
PORT SDMA_CTRL6_PLB_reqPri = PLB_reqPri, DIR = I, BUS = SDMA_CTRL6, VEC = [0:1]
PORT SDMA_CTRL6_PLB_TAttribute = PLB_TAttribute, DIR = I, BUS = SDMA_CTRL6, VEC = [0:15]
PORT SDMA_CTRL6_PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SDMA_CTRL6
PORT SDMA_CTRL6_PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SDMA_CTRL6
PORT SDMA_CTRL6_PLB_wrDBus = PLB_wrDBus, DIR = I, BUS = SDMA_CTRL6, VEC = [0:(C_SDMA_CTRL6_DWIDTH-1)]
PORT SDMA_CTRL6_Sl_addrAck = Sl_addrAck, DIR = O, BUS = SDMA_CTRL6
PORT SDMA_CTRL6_Sl_SSize = Sl_SSize, DIR = O, BUS = SDMA_CTRL6, VEC = [0:1]
PORT SDMA_CTRL6_Sl_wait = Sl_wait, DIR = O, BUS = SDMA_CTRL6
PORT SDMA_CTRL6_Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SDMA_CTRL6
PORT SDMA_CTRL6_Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SDMA_CTRL6
PORT SDMA_CTRL6_Sl_wrComp = Sl_wrComp, DIR = O, BUS = SDMA_CTRL6
PORT SDMA_CTRL6_Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SDMA_CTRL6
PORT SDMA_CTRL6_Sl_rdDBus = Sl_rdDBus, DIR = O, BUS = SDMA_CTRL6, VEC = [0:(C_SDMA_CTRL6_DWIDTH-1)]
PORT SDMA_CTRL6_Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, BUS = SDMA_CTRL6, VEC = [0:3]
PORT SDMA_CTRL6_Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SDMA_CTRL6
PORT SDMA_CTRL6_Sl_rdComp = Sl_rdComp, DIR = O, BUS = SDMA_CTRL6
PORT SDMA_CTRL6_Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SDMA_CTRL6
PORT SDMA_CTRL6_Sl_MBusy = Sl_MBusy, DIR = O, BUS = SDMA_CTRL6, VEC = [0:(C_SDMA_CTRL6_NUM_MASTERS-1)]
PORT SDMA_CTRL6_Sl_MRdErr = Sl_MRdErr, DIR = O, BUS = SDMA_CTRL6, VEC = [0:(C_SDMA_CTRL6_NUM_MASTERS-1)]
PORT SDMA_CTRL6_Sl_MWrErr = Sl_MWrErr, DIR = O, BUS = SDMA_CTRL6, VEC = [0:(C_SDMA_CTRL6_NUM_MASTERS-1)]
PORT SDMA_CTRL6_Sl_MIRQ = Sl_MIRQ, DIR = O, BUS = SDMA_CTRL6, VEC = [0:(C_SDMA_CTRL6_NUM_MASTERS-1)]
PORT PIM6_Addr = Addr, DIR = I, BUS = MPMC_PIM6, VEC = [31:0]
PORT PIM6_AddrReq = AddrReq, DIR = I, BUS = MPMC_PIM6
PORT PIM6_AddrAck = AddrAck, DIR = O, BUS = MPMC_PIM6
PORT PIM6_RNW = RNW, DIR = I, BUS = MPMC_PIM6
PORT PIM6_Size = Size, DIR = I, BUS = MPMC_PIM6, VEC = [3:0]
PORT PIM6_RdModWr = RdModWr, DIR = I, BUS = MPMC_PIM6
PORT PIM6_WrFIFO_Data = WrFIFO_Data, DIR = I, BUS = MPMC_PIM6, VEC = [(C_PIM6_DATA_WIDTH-1):0]
PORT PIM6_WrFIFO_BE = WrFIFO_BE, DIR = I, BUS = MPMC_PIM6, VEC = [(C_PIM6_DATA_WIDTH/8-1):0]
PORT PIM6_WrFIFO_Push = WrFIFO_Push, DIR = I, BUS = MPMC_PIM6
PORT PIM6_RdFIFO_Data = RdFIFO_Data, DIR = O, BUS = MPMC_PIM6, VEC = [(C_PIM6_DATA_WIDTH-1):0]
PORT PIM6_RdFIFO_Pop = RdFIFO_Pop, DIR = I, BUS = MPMC_PIM6
PORT PIM6_RdFIFO_RdWdAddr = RdFIFO_RdWdAddr, DIR = O, BUS = MPMC_PIM6, VEC = [3:0]
PORT PIM6_WrFIFO_Empty = WrFIFO_Empty, DIR = O, BUS = MPMC_PIM6
PORT PIM6_WrFIFO_AlmostFull = WrFIFO_AlmostFull, DIR = O, BUS = MPMC_PIM6
PORT PIM6_WrFIFO_Flush = WrFIFO_Flush, DIR = I, BUS = MPMC_PIM6
PORT PIM6_RdFIFO_Empty = RdFIFO_Empty, DIR = O, BUS = MPMC_PIM6
PORT PIM6_RdFIFO_Flush = RdFIFO_Flush, DIR = I, BUS = MPMC_PIM6
PORT PIM6_RdFIFO_Latency = RDFIFO_Latency, DIR = O, BUS = MPMC_PIM6, VEC = [1:0]
PORT PIM6_InitDone = InitDone, DIR = O, BUS = MPMC_PIM6
PORT PPC440MC6_MIMCReadNotWrite = MIMCREADNOTWRITE, DIR = I, BUS = PPC440MC6
PORT PPC440MC6_MIMCAddress = MIMCADDRESS, DIR = I, BUS = PPC440MC6, VEC = [0:35]
PORT PPC440MC6_MIMCAddressValid = MIMCADDRESSVALID, DIR = I, BUS = PPC440MC6
PORT PPC440MC6_MIMCWriteData = MIMCWRITEDATA, DIR = I, BUS = PPC440MC6, VEC = [0:127]
PORT PPC440MC6_MIMCWriteDataValid = MIMCWRITEDATAVALID, DIR = I, BUS = PPC440MC6
PORT PPC440MC6_MIMCByteEnable = MIMCBYTEENABLE, DIR = I, BUS = PPC440MC6, VEC = [0:15]
PORT PPC440MC6_MIMCBankConflict = MIMCBANKCONFLICT, DIR = I, BUS = PPC440MC6
PORT PPC440MC6_MIMCRowConflict = MIMCROWCONFLICT, DIR = I, BUS = PPC440MC6
PORT PPC440MC6_MCMIReadData = MCMIREADDATA, DIR = O, BUS = PPC440MC6, VEC = [0:127]
PORT PPC440MC6_MCMIReadDataValid = MCMIREADDATAVALID, DIR = O, BUS = PPC440MC6
PORT PPC440MC6_MCMIReadDataErr = MCMIREADDATAERR, DIR = O, BUS = PPC440MC6
PORT PPC440MC6_MCMIAddrReadyToAccept = MCMIADDRREADYTOACCEPT, DIR = O, BUS = PPC440MC6
PORT VFBC6_Cmd_Clk = cmd_clk, DIR = I, BUS = VFBC6
PORT VFBC6_Cmd_Reset = cmd_reset, DIR = I, BUS = VFBC6
PORT VFBC6_Cmd_Data = cmd_data, DIR = I, BUS = VFBC6, VEC = [31:0]
PORT VFBC6_Cmd_Write = cmd_write, DIR = I, BUS = VFBC6
PORT VFBC6_Cmd_End = cmd_end, DIR = I, BUS = VFBC6
PORT VFBC6_Cmd_Full = cmd_full, DIR = O, BUS = VFBC6
PORT VFBC6_Cmd_Almost_Full = cmd_almost_full, DIR = O, BUS = VFBC6
PORT VFBC6_Cmd_Idle = cmd_idle, DIR = O, BUS = VFBC6
PORT VFBC6_Wd_Clk = wd_clk, DIR = I, BUS = VFBC6
PORT VFBC6_Wd_Reset = wd_reset, DIR = I, BUS = VFBC6
PORT VFBC6_Wd_Write = wd_write, DIR = I, BUS = VFBC6
PORT VFBC6_Wd_End_Burst = wd_end_burst, DIR = I, BUS = VFBC6
PORT VFBC6_Wd_Flush = wd_flush, DIR = I, BUS = VFBC6
PORT VFBC6_Wd_Data = wd_data, DIR = I, BUS = VFBC6, VEC = [C_VFBC6_RDWD_DATA_WIDTH-1:0]
PORT VFBC6_Wd_Data_BE = wd_data_be, DIR = I, BUS = VFBC6, VEC = [C_VFBC6_RDWD_DATA_WIDTH/8-1:0]
PORT VFBC6_Wd_Full = wd_full, DIR = O, BUS = VFBC6
PORT VFBC6_Wd_Almost_Full = wd_almost_full, DIR = O, BUS = VFBC6
PORT VFBC6_Rd_Clk = rd_clk, DIR = I, BUS = VFBC6
PORT VFBC6_Rd_Reset = rd_reset, DIR = I, BUS = VFBC6
PORT VFBC6_Rd_Read = rd_read, DIR = I, BUS = VFBC6
PORT VFBC6_Rd_End_Burst = rd_end_burst, DIR = I, BUS = VFBC6
PORT VFBC6_Rd_Flush = rd_flush, DIR = I, BUS = VFBC6
PORT VFBC6_Rd_Data = rd_data, DIR = O, BUS = VFBC6, VEC = [C_VFBC6_RDWD_DATA_WIDTH-1:0]
PORT VFBC6_Rd_Empty = rd_empty, DIR = O, BUS = VFBC6
PORT VFBC6_Rd_Almost_Empty = rd_almost_empty, DIR = O, BUS = VFBC6
PORT MCB6_cmd_clk = cmd_clk, DIR = I, BUS = MCB6
PORT MCB6_cmd_en = cmd_en, DIR = I, BUS = MCB6
PORT MCB6_cmd_instr = cmd_instr, DIR = I, BUS = MCB6, VEC = [2:0]
PORT MCB6_cmd_bl = cmd_bl, DIR = I, BUS = MCB6, VEC = [5:0]
PORT MCB6_cmd_byte_addr = cmd_byte_addr, DIR = I, BUS = MCB6, VEC = [29:0]
PORT MCB6_cmd_empty = cmd_empty, DIR = O, BUS = MCB6
PORT MCB6_cmd_full = cmd_full, DIR = O, BUS = MCB6
PORT MCB6_wr_clk = wr_clk, DIR = I, BUS = MCB6
PORT MCB6_wr_en = wr_en, DIR = I, BUS = MCB6
PORT MCB6_wr_mask = wr_mask, DIR = I, BUS = MCB6, VEC = [C_PIM6_DATA_WIDTH/8-1:0]
PORT MCB6_wr_data = wr_data, DIR = I, BUS = MCB6, VEC = [C_PIM6_DATA_WIDTH-1:0]
PORT MCB6_wr_full = wr_full, DIR = O, BUS = MCB6
PORT MCB6_wr_empty = wr_empty, DIR = O, BUS = MCB6
PORT MCB6_wr_count = wr_count, DIR = O, BUS = MCB6, VEC = [6:0]
PORT MCB6_wr_underrun = wr_underrun, DIR = O, BUS = MCB6
PORT MCB6_wr_error = wr_error, DIR = O, BUS = MCB6
PORT MCB6_rd_clk = rd_clk, DIR = I, BUS = MCB6
PORT MCB6_rd_en = rd_en, DIR = I, BUS = MCB6
PORT MCB6_rd_data = rd_data, DIR = O, BUS = MCB6, VEC = [C_PIM6_DATA_WIDTH-1:0]
PORT MCB6_rd_full = rd_full, DIR = O, BUS = MCB6
PORT MCB6_rd_empty = rd_empty, DIR = O, BUS = MCB6
PORT MCB6_rd_count = rd_count, DIR = O, BUS = MCB6, VEC = [6:0]
PORT MCB6_rd_overflow = rd_overflow, DIR = O, BUS = MCB6
PORT MCB6_rd_error = rd_error, DIR = O, BUS = MCB6
PORT FSL7_M_Clk = FSL_M_Clk, DIR = I, BUS = XCL7, SIGIS = CLK, INITIALVAL = VCC
PORT FSL7_M_Write = FSL_M_Write, DIR = I, BUS = XCL7
PORT FSL7_M_Data = FSL_M_Data, DIR = I, BUS = XCL7, VEC = [0:31]
PORT FSL7_M_Control = FSL_M_Control, DIR = I, BUS = XCL7
PORT FSL7_M_Full = FSL_M_Full, DIR = O, BUS = XCL7
PORT FSL7_S_Clk = FSL_S_Clk, DIR = I, BUS = XCL7
PORT FSL7_S_Read = FSL_S_Read, DIR = I, BUS = XCL7
PORT FSL7_S_Data = FSL_S_Data, DIR = O, BUS = XCL7, VEC = [0:31]
PORT FSL7_S_Control = FSL_S_Control, DIR = O, BUS = XCL7
PORT FSL7_S_Exists = FSL_S_Exists, DIR = O, BUS = XCL7
PORT FSL7_B_M_Clk = FSL_M_Clk, DIR = I, BUS = XCL7_B, SIGIS = CLK, INITIALVAL = VCC
PORT FSL7_B_M_Write = FSL_M_Write, DIR = I, BUS = XCL7_B
PORT FSL7_B_M_Data = FSL_M_Data, DIR = I, BUS = XCL7_B, VEC = [0:31]
PORT FSL7_B_M_Control = FSL_M_Control, DIR = I, BUS = XCL7_B
PORT FSL7_B_M_Full = FSL_M_Full, DIR = O, BUS = XCL7_B
PORT FSL7_B_S_Clk = FSL_S_Clk, DIR = I, BUS = XCL7_B
PORT FSL7_B_S_Read = FSL_S_Read, DIR = I, BUS = XCL7_B
PORT FSL7_B_S_Data = FSL_S_Data, DIR = O, BUS = XCL7_B, VEC = [0:31]
PORT FSL7_B_S_Control = FSL_S_Control, DIR = O, BUS = XCL7_B
PORT FSL7_B_S_Exists = FSL_S_Exists, DIR = O, BUS = XCL7_B
PORT SPLB7_Clk = "", DIR = I, BUS = SPLB7, SIGIS = CLK, INITIALVAL = VCC
PORT SPLB7_Rst = SPLB_Rst, DIR = I, BUS = SPLB7, SIGIS = RST
PORT SPLB7_PLB_ABus = PLB_ABus, DIR = I, BUS = SPLB7, VEC = [0:31]
PORT SPLB7_PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB7
PORT SPLB7_PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB7
PORT SPLB7_PLB_masterID = PLB_masterID, DIR = I, BUS = SPLB7, VEC = [0:(C_SPLB7_MID_WIDTH-1)]
PORT SPLB7_PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB7
PORT SPLB7_PLB_BE = PLB_BE, DIR = I, BUS = SPLB7, VEC = [0:((C_SPLB7_DWIDTH/8)-1)]
PORT SPLB7_PLB_UABus = PLB_UABus, DIR = I, BUS = SPLB7, VEC = [0:31]
PORT SPLB7_PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB7
PORT SPLB7_PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB7
PORT SPLB7_PLB_abort = PLB_abort, DIR = I, BUS = SPLB7
PORT SPLB7_PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB7
PORT SPLB7_PLB_MSize = PLB_MSize, DIR = I, BUS = SPLB7, VEC = [0:1]
PORT SPLB7_PLB_size = PLB_size, DIR = I, BUS = SPLB7, VEC = [0:3]
PORT SPLB7_PLB_type = PLB_type, DIR = I, BUS = SPLB7, VEC = [0:2]
PORT SPLB7_PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB7
PORT SPLB7_PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB7
PORT SPLB7_PLB_wrPendPri = PLB_wrPendPri, DIR = I, BUS = SPLB7, VEC = [0:1]
PORT SPLB7_PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB7
PORT SPLB7_PLB_rdPendPri = PLB_rdPendPri, DIR = I, BUS = SPLB7, VEC = [0:1]
PORT SPLB7_PLB_reqPri = PLB_reqPri, DIR = I, BUS = SPLB7, VEC = [0:1]
PORT SPLB7_PLB_TAttribute = PLB_TAttribute, DIR = I, BUS = SPLB7, VEC = [0:15]
PORT SPLB7_PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB7
PORT SPLB7_PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB7
PORT SPLB7_PLB_wrDBus = PLB_wrDBus, DIR = I, BUS = SPLB7, VEC = [0:(C_SPLB7_DWIDTH-1)]
PORT SPLB7_Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB7
PORT SPLB7_Sl_SSize = Sl_SSize, DIR = O, BUS = SPLB7, VEC = [0:1]
PORT SPLB7_Sl_wait = Sl_wait, DIR = O, BUS = SPLB7
PORT SPLB7_Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB7
PORT SPLB7_Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB7
PORT SPLB7_Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB7
PORT SPLB7_Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB7
PORT SPLB7_Sl_rdDBus = Sl_rdDBus, DIR = O, BUS = SPLB7, VEC = [0:(C_SPLB7_DWIDTH-1)]
PORT SPLB7_Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, BUS = SPLB7, VEC = [0:3]
PORT SPLB7_Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB7
PORT SPLB7_Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB7
PORT SPLB7_Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB7
PORT SPLB7_Sl_MBusy = Sl_MBusy, DIR = O, BUS = SPLB7, VEC = [0:(C_SPLB7_NUM_MASTERS-1)]
PORT SPLB7_Sl_MRdErr = Sl_MRdErr, DIR = O, BUS = SPLB7, VEC = [0:(C_SPLB7_NUM_MASTERS-1)]
PORT SPLB7_Sl_MWrErr = Sl_MWrErr, DIR = O, BUS = SPLB7, VEC = [0:(C_SPLB7_NUM_MASTERS-1)]
PORT SPLB7_Sl_MIRQ = Sl_MIRQ, DIR = O, BUS = SPLB7, VEC = [0:(C_SPLB7_NUM_MASTERS-1)]
PORT SDMA7_Clk = "", DIR = I, SIGIS = CLK, ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 3), ASSIGNMENT = REQUIRE
PORT SDMA7_Rx_IntOut = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 3)
PORT SDMA7_Tx_IntOut = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, ISVALID = (C_NUM_PORTS > 7 && C_PIM7_BASETYPE == 3)
PORT SDMA7_RstOut = LL_RST_ACK, DIR = O, BUS = SDMA_LL7
PORT SDMA7_TX_D = LL_Tx_Data, DIR = O, BUS = SDMA_LL7, VEC = [0:31]
PORT SDMA7_TX_Rem = LL_Tx_Rem, DIR = O, BUS = SDMA_LL7, VEC = [0:3]
PORT SDMA7_TX_SOF = LL_Tx_SOF_n, DIR = O, BUS = SDMA_LL7
PORT SDMA7_TX_EOF = LL_Tx_EOF_n, DIR = O, BUS = SDMA_LL7
PORT SDMA7_TX_SOP = LL_Tx_SOP_n, DIR = O, BUS = SDMA_LL7
PORT SDMA7_TX_EOP = LL_Tx_EOP_n, DIR = O, BUS = SDMA_LL7
PORT SDMA7_TX_Src_Rdy = LL_Tx_SrcRdy_n, DIR = O, BUS = SDMA_LL7
PORT SDMA7_TX_Dst_Rdy = LL_Tx_DstRdy_n, DIR = I, BUS = SDMA_LL7, INITIALVAL = VCC
PORT SDMA7_RX_D = LL_Rx_Data, DIR = I, BUS = SDMA_LL7, INITIALVAL = GND, VEC = [0:31]
PORT SDMA7_RX_Rem = LL_Rx_Rem, DIR = I, BUS = SDMA_LL7, INITIALVAL = VCC, VEC = [0:3]
PORT SDMA7_RX_SOF = LL_Rx_SOF_n, DIR = I, BUS = SDMA_LL7, INITIALVAL = VCC
PORT SDMA7_RX_EOF = LL_Rx_EOF_n, DIR = I, BUS = SDMA_LL7, INITIALVAL = VCC
PORT SDMA7_RX_SOP = LL_Rx_SOP_n, DIR = I, BUS = SDMA_LL7, INITIALVAL = VCC
PORT SDMA7_RX_EOP = LL_Rx_EOP_n, DIR = I, BUS = SDMA_LL7, INITIALVAL = VCC
PORT SDMA7_RX_Src_Rdy = LL_Rx_SrcRdy_n, DIR = I, BUS = SDMA_LL7, INITIALVAL = VCC
PORT SDMA7_RX_Dst_Rdy = LL_Rx_DstRdy_n, DIR = O, BUS = SDMA_LL7
PORT SDMA_CTRL7_Clk = "", DIR = I, BUS = SDMA_CTRL7, SIGIS = CLK, INITIALVAL = VCC
PORT SDMA_CTRL7_Rst = SPLB_Rst, DIR = I, BUS = SDMA_CTRL7, SIGIS = RST
PORT SDMA_CTRL7_PLB_ABus = PLB_ABus, DIR = I, BUS = SDMA_CTRL7, VEC = [0:31]
PORT SDMA_CTRL7_PLB_PAValid = PLB_PAValid, DIR = I, BUS = SDMA_CTRL7
PORT SDMA_CTRL7_PLB_SAValid = PLB_SAValid, DIR = I, BUS = SDMA_CTRL7
PORT SDMA_CTRL7_PLB_masterID = PLB_masterID, DIR = I, BUS = SDMA_CTRL7, VEC = [0:(C_SDMA_CTRL7_MID_WIDTH-1)]
PORT SDMA_CTRL7_PLB_RNW = PLB_RNW, DIR = I, BUS = SDMA_CTRL7
PORT SDMA_CTRL7_PLB_BE = PLB_BE, DIR = I, BUS = SDMA_CTRL7, VEC = [0:((C_SDMA_CTRL7_DWIDTH/8)-1)]
PORT SDMA_CTRL7_PLB_UABus = PLB_UABus, DIR = I, BUS = SDMA_CTRL7, VEC = [0:31]
PORT SDMA_CTRL7_PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SDMA_CTRL7
PORT SDMA_CTRL7_PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SDMA_CTRL7
PORT SDMA_CTRL7_PLB_abort = PLB_abort, DIR = I, BUS = SDMA_CTRL7
PORT SDMA_CTRL7_PLB_busLock = PLB_busLock, DIR = I, BUS = SDMA_CTRL7
PORT SDMA_CTRL7_PLB_MSize = PLB_MSize, DIR = I, BUS = SDMA_CTRL7, VEC = [0:1]
PORT SDMA_CTRL7_PLB_size = PLB_size, DIR = I, BUS = SDMA_CTRL7, VEC = [0:3]
PORT SDMA_CTRL7_PLB_type = PLB_type, DIR = I, BUS = SDMA_CTRL7, VEC = [0:2]
PORT SDMA_CTRL7_PLB_lockErr = PLB_lockErr, DIR = I, BUS = SDMA_CTRL7
PORT SDMA_CTRL7_PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SDMA_CTRL7
PORT SDMA_CTRL7_PLB_wrPendPri = PLB_wrPendPri, DIR = I, BUS = SDMA_CTRL7, VEC = [0:1]
PORT SDMA_CTRL7_PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SDMA_CTRL7
PORT SDMA_CTRL7_PLB_rdPendPri = PLB_rdPendPri, DIR = I, BUS = SDMA_CTRL7, VEC = [0:1]
PORT SDMA_CTRL7_PLB_reqPri = PLB_reqPri, DIR = I, BUS = SDMA_CTRL7, VEC = [0:1]
PORT SDMA_CTRL7_PLB_TAttribute = PLB_TAttribute, DIR = I, BUS = SDMA_CTRL7, VEC = [0:15]
PORT SDMA_CTRL7_PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SDMA_CTRL7
PORT SDMA_CTRL7_PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SDMA_CTRL7
PORT SDMA_CTRL7_PLB_wrDBus = PLB_wrDBus, DIR = I, BUS = SDMA_CTRL7, VEC = [0:(C_SDMA_CTRL7_DWIDTH-1)]
PORT SDMA_CTRL7_Sl_addrAck = Sl_addrAck, DIR = O, BUS = SDMA_CTRL7
PORT SDMA_CTRL7_Sl_SSize = Sl_SSize, DIR = O, BUS = SDMA_CTRL7, VEC = [0:1]
PORT SDMA_CTRL7_Sl_wait = Sl_wait, DIR = O, BUS = SDMA_CTRL7
PORT SDMA_CTRL7_Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SDMA_CTRL7
PORT SDMA_CTRL7_Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SDMA_CTRL7
PORT SDMA_CTRL7_Sl_wrComp = Sl_wrComp, DIR = O, BUS = SDMA_CTRL7
PORT SDMA_CTRL7_Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SDMA_CTRL7
PORT SDMA_CTRL7_Sl_rdDBus = Sl_rdDBus, DIR = O, BUS = SDMA_CTRL7, VEC = [0:(C_SDMA_CTRL7_DWIDTH-1)]
PORT SDMA_CTRL7_Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, BUS = SDMA_CTRL7, VEC = [0:3]
PORT SDMA_CTRL7_Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SDMA_CTRL7
PORT SDMA_CTRL7_Sl_rdComp = Sl_rdComp, DIR = O, BUS = SDMA_CTRL7
PORT SDMA_CTRL7_Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SDMA_CTRL7
PORT SDMA_CTRL7_Sl_MBusy = Sl_MBusy, DIR = O, BUS = SDMA_CTRL7, VEC = [0:(C_SDMA_CTRL7_NUM_MASTERS-1)]
PORT SDMA_CTRL7_Sl_MRdErr = Sl_MRdErr, DIR = O, BUS = SDMA_CTRL7, VEC = [0:(C_SDMA_CTRL7_NUM_MASTERS-1)]
PORT SDMA_CTRL7_Sl_MWrErr = Sl_MWrErr, DIR = O, BUS = SDMA_CTRL7, VEC = [0:(C_SDMA_CTRL7_NUM_MASTERS-1)]
PORT SDMA_CTRL7_Sl_MIRQ = Sl_MIRQ, DIR = O, BUS = SDMA_CTRL7, VEC = [0:(C_SDMA_CTRL7_NUM_MASTERS-1)]
PORT PIM7_Addr = Addr, DIR = I, BUS = MPMC_PIM7, VEC = [31:0]
PORT PIM7_AddrReq = AddrReq, DIR = I, BUS = MPMC_PIM7
PORT PIM7_AddrAck = AddrAck, DIR = O, BUS = MPMC_PIM7
PORT PIM7_RNW = RNW, DIR = I, BUS = MPMC_PIM7
PORT PIM7_Size = Size, DIR = I, BUS = MPMC_PIM7, VEC = [3:0]
PORT PIM7_RdModWr = RdModWr, DIR = I, BUS = MPMC_PIM7
PORT PIM7_WrFIFO_Data = WrFIFO_Data, DIR = I, BUS = MPMC_PIM7, VEC = [(C_PIM7_DATA_WIDTH-1):0]
PORT PIM7_WrFIFO_BE = WrFIFO_BE, DIR = I, BUS = MPMC_PIM7, VEC = [(C_PIM7_DATA_WIDTH/8-1):0]
PORT PIM7_WrFIFO_Push = WrFIFO_Push, DIR = I, BUS = MPMC_PIM7
PORT PIM7_RdFIFO_Data = RdFIFO_Data, DIR = O, BUS = MPMC_PIM7, VEC = [(C_PIM7_DATA_WIDTH-1):0]
PORT PIM7_RdFIFO_Pop = RdFIFO_Pop, DIR = I, BUS = MPMC_PIM7
PORT PIM7_RdFIFO_RdWdAddr = RdFIFO_RdWdAddr, DIR = O, BUS = MPMC_PIM7, VEC = [3:0]
PORT PIM7_WrFIFO_Empty = WrFIFO_Empty, DIR = O, BUS = MPMC_PIM7
PORT PIM7_WrFIFO_AlmostFull = WrFIFO_AlmostFull, DIR = O, BUS = MPMC_PIM7
PORT PIM7_WrFIFO_Flush = WrFIFO_Flush, DIR = I, BUS = MPMC_PIM7
PORT PIM7_RdFIFO_Empty = RdFIFO_Empty, DIR = O, BUS = MPMC_PIM7
PORT PIM7_RdFIFO_Flush = RdFIFO_Flush, DIR = I, BUS = MPMC_PIM7
PORT PIM7_RdFIFO_Latency = RDFIFO_Latency, DIR = O, BUS = MPMC_PIM7, VEC = [1:0]
PORT PIM7_InitDone = InitDone, DIR = O, BUS = MPMC_PIM7
PORT PPC440MC7_MIMCReadNotWrite = MIMCREADNOTWRITE, DIR = I, BUS = PPC440MC7
PORT PPC440MC7_MIMCAddress = MIMCADDRESS, DIR = I, BUS = PPC440MC7, VEC = [0:35]
PORT PPC440MC7_MIMCAddressValid = MIMCADDRESSVALID, DIR = I, BUS = PPC440MC7
PORT PPC440MC7_MIMCWriteData = MIMCWRITEDATA, DIR = I, BUS = PPC440MC7, VEC = [0:127]
PORT PPC440MC7_MIMCWriteDataValid = MIMCWRITEDATAVALID, DIR = I, BUS = PPC440MC7
PORT PPC440MC7_MIMCByteEnable = MIMCBYTEENABLE, DIR = I, BUS = PPC440MC7, VEC = [0:15]
PORT PPC440MC7_MIMCBankConflict = MIMCBANKCONFLICT, DIR = I, BUS = PPC440MC7
PORT PPC440MC7_MIMCRowConflict = MIMCROWCONFLICT, DIR = I, BUS = PPC440MC7
PORT PPC440MC7_MCMIReadData = MCMIREADDATA, DIR = O, BUS = PPC440MC7, VEC = [0:127]
PORT PPC440MC7_MCMIReadDataValid = MCMIREADDATAVALID, DIR = O, BUS = PPC440MC7
PORT PPC440MC7_MCMIReadDataErr = MCMIREADDATAERR, DIR = O, BUS = PPC440MC7
PORT PPC440MC7_MCMIAddrReadyToAccept = MCMIADDRREADYTOACCEPT, DIR = O, BUS = PPC440MC7
PORT VFBC7_Cmd_Clk = cmd_clk, DIR = I, BUS = VFBC7
PORT VFBC7_Cmd_Reset = cmd_reset, DIR = I, BUS = VFBC7
PORT VFBC7_Cmd_Data = cmd_data, DIR = I, BUS = VFBC7, VEC = [31:0]
PORT VFBC7_Cmd_Write = cmd_write, DIR = I, BUS = VFBC7
PORT VFBC7_Cmd_End = cmd_end, DIR = I, BUS = VFBC7
PORT VFBC7_Cmd_Full = cmd_full, DIR = O, BUS = VFBC7
PORT VFBC7_Cmd_Almost_Full = cmd_almost_full, DIR = O, BUS = VFBC7
PORT VFBC7_Cmd_Idle = cmd_idle, DIR = O, BUS = VFBC7
PORT VFBC7_Wd_Clk = wd_clk, DIR = I, BUS = VFBC7
PORT VFBC7_Wd_Reset = wd_reset, DIR = I, BUS = VFBC7
PORT VFBC7_Wd_Write = wd_write, DIR = I, BUS = VFBC7
PORT VFBC7_Wd_End_Burst = wd_end_burst, DIR = I, BUS = VFBC7
PORT VFBC7_Wd_Flush = wd_flush, DIR = I, BUS = VFBC7
PORT VFBC7_Wd_Data = wd_data, DIR = I, BUS = VFBC7, VEC = [C_VFBC7_RDWD_DATA_WIDTH-1:0]
PORT VFBC7_Wd_Data_BE = wd_data_be, DIR = I, BUS = VFBC7, VEC = [C_VFBC7_RDWD_DATA_WIDTH/8-1:0]
PORT VFBC7_Wd_Full = wd_full, DIR = O, BUS = VFBC7
PORT VFBC7_Wd_Almost_Full = wd_almost_full, DIR = O, BUS = VFBC7
PORT VFBC7_Rd_Clk = rd_clk, DIR = I, BUS = VFBC7
PORT VFBC7_Rd_Reset = rd_reset, DIR = I, BUS = VFBC7
PORT VFBC7_Rd_Read = rd_read, DIR = I, BUS = VFBC7
PORT VFBC7_Rd_End_Burst = rd_end_burst, DIR = I, BUS = VFBC7
PORT VFBC7_Rd_Flush = rd_flush, DIR = I, BUS = VFBC7
PORT VFBC7_Rd_Data = rd_data, DIR = O, BUS = VFBC7, VEC = [C_VFBC7_RDWD_DATA_WIDTH-1:0]
PORT VFBC7_Rd_Empty = rd_empty, DIR = O, BUS = VFBC7
PORT VFBC7_Rd_Almost_Empty = rd_almost_empty, DIR = O, BUS = VFBC7
PORT MCB7_cmd_clk = cmd_clk, DIR = I, BUS = MCB7
PORT MCB7_cmd_en = cmd_en, DIR = I, BUS = MCB7
PORT MCB7_cmd_instr = cmd_instr, DIR = I, BUS = MCB7, VEC = [2:0]
PORT MCB7_cmd_bl = cmd_bl, DIR = I, BUS = MCB7, VEC = [5:0]
PORT MCB7_cmd_byte_addr = cmd_byte_addr, DIR = I, BUS = MCB7, VEC = [29:0]
PORT MCB7_cmd_empty = cmd_empty, DIR = O, BUS = MCB7
PORT MCB7_cmd_full = cmd_full, DIR = O, BUS = MCB7
PORT MCB7_wr_clk = wr_clk, DIR = I, BUS = MCB7
PORT MCB7_wr_en = wr_en, DIR = I, BUS = MCB7
PORT MCB7_wr_mask = wr_mask, DIR = I, BUS = MCB7, VEC = [C_PIM7_DATA_WIDTH/8-1:0]
PORT MCB7_wr_data = wr_data, DIR = I, BUS = MCB7, VEC = [C_PIM7_DATA_WIDTH-1:0]
PORT MCB7_wr_full = wr_full, DIR = O, BUS = MCB7
PORT MCB7_wr_empty = wr_empty, DIR = O, BUS = MCB7
PORT MCB7_wr_count = wr_count, DIR = O, BUS = MCB7, VEC = [6:0]
PORT MCB7_wr_underrun = wr_underrun, DIR = O, BUS = MCB7
PORT MCB7_wr_error = wr_error, DIR = O, BUS = MCB7
PORT MCB7_rd_clk = rd_clk, DIR = I, BUS = MCB7
PORT MCB7_rd_en = rd_en, DIR = I, BUS = MCB7
PORT MCB7_rd_data = rd_data, DIR = O, BUS = MCB7, VEC = [C_PIM7_DATA_WIDTH-1:0]
PORT MCB7_rd_full = rd_full, DIR = O, BUS = MCB7
PORT MCB7_rd_empty = rd_empty, DIR = O, BUS = MCB7
PORT MCB7_rd_count = rd_count, DIR = O, BUS = MCB7, VEC = [6:0]
PORT MCB7_rd_overflow = rd_overflow, DIR = O, BUS = MCB7
PORT MCB7_rd_error = rd_error, DIR = O, BUS = MCB7
PORT MPMC_CTRL_Clk = "", DIR = I, BUS = MPMC_CTRL, SIGIS = CLK, INITIALVAL = VCC
PORT MPMC_CTRL_Rst = SPLB_Rst, DIR = I, BUS = MPMC_CTRL, SIGIS = RST
PORT MPMC_CTRL_PLB_ABus = PLB_ABus, DIR = I, BUS = MPMC_CTRL, VEC = [0:31]
PORT MPMC_CTRL_PLB_PAValid = PLB_PAValid, DIR = I, BUS = MPMC_CTRL
PORT MPMC_CTRL_PLB_SAValid = PLB_SAValid, DIR = I, BUS = MPMC_CTRL
PORT MPMC_CTRL_PLB_masterID = PLB_masterID, DIR = I, BUS = MPMC_CTRL, VEC = [0:(C_MPMC_CTRL_MID_WIDTH-1)]
PORT MPMC_CTRL_PLB_RNW = PLB_RNW, DIR = I, BUS = MPMC_CTRL
PORT MPMC_CTRL_PLB_BE = PLB_BE, DIR = I, BUS = MPMC_CTRL, VEC = [0:((C_MPMC_CTRL_DWIDTH/8)-1)]
PORT MPMC_CTRL_PLB_UABus = PLB_UABus, DIR = I, BUS = MPMC_CTRL, VEC = [0:31]
PORT MPMC_CTRL_PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = MPMC_CTRL
PORT MPMC_CTRL_PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = MPMC_CTRL
PORT MPMC_CTRL_PLB_abort = PLB_abort, DIR = I, BUS = MPMC_CTRL
PORT MPMC_CTRL_PLB_busLock = PLB_busLock, DIR = I, BUS = MPMC_CTRL
PORT MPMC_CTRL_PLB_MSize = PLB_MSize, DIR = I, BUS = MPMC_CTRL, VEC = [0:1]
PORT MPMC_CTRL_PLB_size = PLB_size, DIR = I, BUS = MPMC_CTRL, VEC = [0:3]
PORT MPMC_CTRL_PLB_type = PLB_type, DIR = I, BUS = MPMC_CTRL, VEC = [0:2]
PORT MPMC_CTRL_PLB_lockErr = PLB_lockErr, DIR = I, BUS = MPMC_CTRL
PORT MPMC_CTRL_PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = MPMC_CTRL
PORT MPMC_CTRL_PLB_wrPendPri = PLB_wrPendPri, DIR = I, BUS = MPMC_CTRL, VEC = [0:1]
PORT MPMC_CTRL_PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = MPMC_CTRL
PORT MPMC_CTRL_PLB_rdPendPri = PLB_rdPendPri, DIR = I, BUS = MPMC_CTRL, VEC = [0:1]
PORT MPMC_CTRL_PLB_reqPri = PLB_reqPri, DIR = I, BUS = MPMC_CTRL, VEC = [0:1]
PORT MPMC_CTRL_PLB_TAttribute = PLB_TAttribute, DIR = I, BUS = MPMC_CTRL, VEC = [0:15]
PORT MPMC_CTRL_PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = MPMC_CTRL
PORT MPMC_CTRL_PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = MPMC_CTRL
PORT MPMC_CTRL_PLB_wrDBus = PLB_wrDBus, DIR = I, BUS = MPMC_CTRL, VEC = [0:(C_MPMC_CTRL_DWIDTH-1)]
PORT MPMC_CTRL_Sl_addrAck = Sl_addrAck, DIR = O, BUS = MPMC_CTRL
PORT MPMC_CTRL_Sl_SSize = Sl_SSize, DIR = O, BUS = MPMC_CTRL, VEC = [0:1]
PORT MPMC_CTRL_Sl_wait = Sl_wait, DIR = O, BUS = MPMC_CTRL
PORT MPMC_CTRL_Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = MPMC_CTRL
PORT MPMC_CTRL_Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = MPMC_CTRL
PORT MPMC_CTRL_Sl_wrComp = Sl_wrComp, DIR = O, BUS = MPMC_CTRL
PORT MPMC_CTRL_Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = MPMC_CTRL
PORT MPMC_CTRL_Sl_rdDBus = Sl_rdDBus, DIR = O, BUS = MPMC_CTRL, VEC = [0:(C_MPMC_CTRL_DWIDTH-1)]
PORT MPMC_CTRL_Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, BUS = MPMC_CTRL, VEC = [0:3]
PORT MPMC_CTRL_Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = MPMC_CTRL
PORT MPMC_CTRL_Sl_rdComp = Sl_rdComp, DIR = O, BUS = MPMC_CTRL
PORT MPMC_CTRL_Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = MPMC_CTRL
PORT MPMC_CTRL_Sl_MBusy = Sl_MBusy, DIR = O, BUS = MPMC_CTRL, VEC = [0:(C_MPMC_CTRL_NUM_MASTERS-1)]
PORT MPMC_CTRL_Sl_MRdErr = Sl_MRdErr, DIR = O, BUS = MPMC_CTRL, VEC = [0:(C_MPMC_CTRL_NUM_MASTERS-1)]
PORT MPMC_CTRL_Sl_MWrErr = Sl_MWrErr, DIR = O, BUS = MPMC_CTRL, VEC = [0:(C_MPMC_CTRL_NUM_MASTERS-1)]
PORT MPMC_CTRL_Sl_MIRQ = Sl_MIRQ, DIR = O, BUS = MPMC_CTRL, VEC = [0:(C_MPMC_CTRL_NUM_MASTERS-1)]
PORT MPMC_Clk0 = "", DIR = I, SIGIS = CLK, INITIALVAL = VCC, ASSIGNMENT = REQUIRE
PORT MPMC_Clk0_DIV2 = "", DIR = I, SIGIS = CLK, INITIALVAL = VCC, ISVALID = (C_USE_MIG_V5_PHY && [xstrncmp C_MEM_TYPE  DDR2 ]), ASSIGNMENT = REQUIRE
PORT MPMC_Clk90 = "", DIR = I, SIGIS = CLK, INITIALVAL = VCC, ASSIGNMENT = REQUIRE, ISVALID = (!C_USE_MCB_S6_PHY && !C_USE_MIG_V6_PHY && ([xstrncmp C_MEM_TYPE  DDR ] || [xstrncmp C_MEM_TYPE  DDR2 ] || C_DEBUG_REG_ENABLE))
PORT MPMC_Clk_200MHz = "", DIR = I, SIGIS = CLK, INITIALVAL = VCC, ISVALID = ((C_USE_MIG_V4_PHY || C_USE_MIG_V5_PHY|| C_USE_MIG_V6_PHY) && C_NUM_IDELAYCTRL > 0), ASSIGNMENT = REQUIRE
PORT MPMC_Rst = "", DIR = I, SIGIS = RST, ASSIGNMENT = REQUIRE
PORT MPMC_Clk_Mem = "", DIR = I, SIGIS = CLK, INITIALVAL = VCC, ISVALID = (C_USE_STATIC_PHY || C_USE_MIG_V6_PHY), ASSIGNMENT = REQUIRE
PORT MPMC_Clk_Mem_2x = "", DIR = I, SIGIS = CLK, INITIALVAL = VCC, ISVALID = (C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE
PORT MPMC_Clk_Mem_2x_180 = "", DIR = I, SIGIS = CLK, INITIALVAL = VCC, ISVALID = (C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE
PORT MPMC_Clk_Mem_2x_CE0 = "", DIR = I, SIGIS = CLK, INITIALVAL = VCC, ISVALID = (C_USE_MCB_S6_PHY && C_MCB_USE_EXTERNAL_BUFPLL), ASSIGNMENT = REQUIRE
PORT MPMC_Clk_Mem_2x_CE90 = "", DIR = I, SIGIS = CLK, INITIALVAL = VCC, ISVALID = (C_USE_MCB_S6_PHY && C_MCB_USE_EXTERNAL_BUFPLL), ASSIGNMENT = REQUIRE
PORT MPMC_Clk_Rd_Base = "", DIR = I, SIGIS = CLK, INITIALVAL = VCC, ISVALID = (C_USE_MIG_V6_PHY), ASSIGNMENT = REQUIRE
PORT MPMC_Clk_Mem_2x_bufpll_o = "", DIR = O, SIGIS = CLK, CLK_INPORT = MPMC_Clk_Mem_2x, ISVALID = (C_USE_MCB_S6_PHY && C_MCB_USE_EXTERNAL_BUFPLL == 0)
PORT MPMC_Clk_Mem_2x_180_bufpll_o = "", DIR = O, SIGIS = CLK, CLK_INPORT = MPMC_Clk_Mem_2x_180, ISVALID = (C_USE_MCB_S6_PHY && C_MCB_USE_EXTERNAL_BUFPLL == 0)
PORT MPMC_Clk_Mem_2x_CE0_bufpll_o = "", DIR = O, SIGIS = CLK, ISVALID = (C_USE_MCB_S6_PHY && C_MCB_USE_EXTERNAL_BUFPLL == 0)
PORT MPMC_Clk_Mem_2x_CE90_bufpll_o = "", DIR = O, SIGIS = CLK, ISVALID = (C_USE_MCB_S6_PHY && C_MCB_USE_EXTERNAL_BUFPLL == 0)
PORT MPMC_PLL_Lock_bufpll_o = "", DIR = O, ISVALID = (C_USE_MCB_S6_PHY && C_MCB_USE_EXTERNAL_BUFPLL == 0)
PORT MPMC_PLL_Lock = "", DIR = I, ISVALID = (C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE
PORT MPMC_Idelayctrl_Rdy_I = "", DIR = I, INITIALVAL = VCC, ISVALID = (C_USE_MIG_V4_PHY || C_USE_MIG_V5_PHY || C_USE_MIG_V6_PHY)
PORT MPMC_Idelayctrl_Rdy_O = "", DIR = O, ISVALID = (C_USE_MIG_V4_PHY || C_USE_MIG_V5_PHY || C_USE_MIG_V6_PHY)
PORT MPMC_InitDone = "", DIR = O
PORT MPMC_ECC_Intr = "", DIR = O, SIGIS = INTERRUPT, ISVALID = (C_INCLUDE_ECC_SUPPORT)
PORT MPMC_DCM_PSEN = "", DIR = O, ISVALID = (C_USE_STATIC_PHY || C_USE_MIG_V6_PHY)
PORT MPMC_DCM_PSINCDEC = "", DIR = O, ISVALID = (C_USE_STATIC_PHY || C_USE_MIG_V6_PHY)
PORT MPMC_DCM_PSDONE = "", DIR = I, ISVALID = (C_USE_STATIC_PHY || C_USE_MIG_V6_PHY)
PORT MPMC_MCB_DRP_Clk = "", DIR = I, SIGIS = CLK, INITIALVAL = VCC, ISVALID = (C_USE_MCB_S6_PHY)
PORT SDRAM_Clk = "", DIR = O, VEC = [C_MEM_CLK_WIDTH-1:0], SIGIS = CLK, ISVALID = ([xstrncmp C_MEM_TYPE  SDRAM ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = SDRAM_CLK
PORT SDRAM_CE = "", DIR = O, VEC = [C_MEM_CE_WIDTH-1:0], ISVALID = ([xstrncmp C_MEM_TYPE  SDRAM ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = SDRAM_CLK_ENABLE
PORT SDRAM_CS_n = "", DIR = O, VEC = [C_MEM_CS_N_WIDTH-1:0], ISVALID = ([xstrncmp C_MEM_TYPE  SDRAM ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = SDRAM_CHIP_SELECT
PORT SDRAM_RAS_n = "", DIR = O, ISVALID = ([xstrncmp C_MEM_TYPE  SDRAM ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = SDRAM_ROW_ADDR_SELECT
PORT SDRAM_CAS_n = "", DIR = O, ISVALID = ([xstrncmp C_MEM_TYPE  SDRAM ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = SDRAM_COL_ADDR_SELECT
PORT SDRAM_WE_n = "", DIR = O, ISVALID = ([xstrncmp C_MEM_TYPE  SDRAM ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = SDRAM_WRITE_ENABLE
PORT SDRAM_BankAddr = "", DIR = O, VEC = [C_MEM_BANKADDR_WIDTH-1:0], ISVALID = ([xstrncmp C_MEM_TYPE  SDRAM ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = SDRAM_BANKADDR
PORT SDRAM_Addr = "", DIR = O, VEC = [C_MEM_ADDR_WIDTH-1:0], ISVALID = ([xstrncmp C_MEM_TYPE  SDRAM ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = SDRAM_ADDRESS
PORT SDRAM_DQ = "", DIR = IO, VEC = [C_ECC_DATA_WIDTH  + C_MEM_DATA_WIDTH-1:0], THREE_STATE = FALSE, ISVALID = ([xstrncmp C_MEM_TYPE  SDRAM ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = SDRAM_DATA
PORT SDRAM_DM = "", DIR = O, VEC = [C_ECC_DM_WIDTH    + C_MEM_DM_WIDTH-1:0], ISVALID = ([xstrncmp C_MEM_TYPE  SDRAM ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = SDRAM_DATA_MASK
PORT DDR_Clk = "", DIR = O, VEC = [C_MEM_CLK_WIDTH-1:0], SIGIS = CLK, ISVALID = ([xstrncmp C_MEM_TYPE  DDR ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR_Clk
PORT DDR_Clk_n = "", DIR = O, VEC = [C_MEM_CLK_WIDTH-1:0], SIGIS = CLK, ISVALID = ([xstrncmp C_MEM_TYPE  DDR ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR_Clk_n
PORT DDR_CE = "", DIR = O, VEC = [C_MEM_CE_WIDTH-1:0], ISVALID = ([xstrncmp C_MEM_TYPE  DDR ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR_CLOCK_ENABLE
PORT DDR_CS_n = "", DIR = O, VEC = [C_MEM_CS_N_WIDTH-1:0], ISVALID = ([xstrncmp C_MEM_TYPE  DDR ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR_CHIP_SELECT
PORT DDR_RAS_n = "", DIR = O, ISVALID = ([xstrncmp C_MEM_TYPE  DDR ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR_ROW_ADDR_SELECT
PORT DDR_CAS_n = "", DIR = O, ISVALID = ([xstrncmp C_MEM_TYPE  DDR ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR_COL_ADDR_SELECT
PORT DDR_WE_n = "", DIR = O, ISVALID = ([xstrncmp C_MEM_TYPE  DDR ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR_WRITE_ENABLE
PORT DDR_BankAddr = "", DIR = O, VEC = [C_MEM_BANKADDR_WIDTH-1:0], ISVALID = ([xstrncmp C_MEM_TYPE  DDR ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR_BANKADDR
PORT DDR_Addr = "", DIR = O, VEC = [C_MEM_ADDR_WIDTH-1:0], ISVALID = ([xstrncmp C_MEM_TYPE  DDR ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR_ADDRESS
PORT DDR_DQ = "", DIR = IO, VEC = [C_ECC_DATA_WIDTH  + C_MEM_DATA_WIDTH-1:0], THREE_STATE = FALSE, ISVALID = ([xstrncmp C_MEM_TYPE  DDR ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR_DATA
PORT DDR_DM = "", DIR = O, VEC = [C_ECC_DM_WIDTH    + C_MEM_DM_WIDTH-1:0], ISVALID = ([xstrncmp C_MEM_TYPE  DDR ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR_DATA_MASK
PORT DDR_DQS = "", DIR = IO, VEC = [C_ECC_DQS_WIDTH   + C_MEM_DQS_WIDTH-1:0], THREE_STATE = FALSE, ISVALID = ([xstrncmp C_MEM_TYPE  DDR ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR_DATA_STROBE
PORT DDR_DQS_Div_O = "", DIR = O, ISVALID = ([xstrncmp C_MEM_TYPE  DDR ] && C_USE_MIG_S3_PHY), IO_IF = memory_0, IO_IS = DDR_DQS_DIV_O, ASSIGNMENT = REQUIRE
PORT DDR_DQS_Div_I = "", DIR = I, ISVALID = ([xstrncmp C_MEM_TYPE  DDR ] && C_USE_MIG_S3_PHY), IO_IF = memory_0, IO_IS = DDR_DQS_DIV_I, ASSIGNMENT = REQUIRE
PORT DDR2_Clk = "", DIR = O, VEC = [C_MEM_CLK_WIDTH-1:0], SIGIS = CLK, ISVALID = ([xstrncmp C_MEM_TYPE  DDR2 ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR2_Clk
PORT DDR2_Clk_n = "", DIR = O, VEC = [C_MEM_CLK_WIDTH-1:0], SIGIS = CLK, ISVALID = ([xstrncmp C_MEM_TYPE  DDR2 ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR2_Clk_n
PORT DDR2_CE = "", DIR = O, VEC = [C_MEM_CE_WIDTH-1:0], ISVALID = ([xstrncmp C_MEM_TYPE  DDR2 ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR2_CLK_ENABLE
PORT DDR2_CS_n = "", DIR = O, VEC = [C_MEM_CS_N_WIDTH-1:0], ISVALID = ([xstrncmp C_MEM_TYPE  DDR2 ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR2_CHIP_SELECT
PORT DDR2_ODT = "", DIR = O, VEC = [C_MEM_ODT_WIDTH-1:0], ISVALID = ([xstrncmp C_MEM_TYPE  DDR2 ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR2_ODT
PORT DDR2_RAS_n = "", DIR = O, ISVALID = ([xstrncmp C_MEM_TYPE  DDR2 ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR2_ROW_ADDR_SELECT
PORT DDR2_CAS_n = "", DIR = O, ISVALID = ([xstrncmp C_MEM_TYPE  DDR2 ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR2_COL_ADDR_SELECT
PORT DDR2_WE_n = "", DIR = O, ISVALID = ([xstrncmp C_MEM_TYPE  DDR2 ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR2_WRITE_ENABLE
PORT DDR2_BankAddr = "", DIR = O, VEC = [C_MEM_BANKADDR_WIDTH-1:0], ISVALID = ([xstrncmp C_MEM_TYPE  DDR2 ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR2_BANKADDR
PORT DDR2_Addr = "", DIR = O, VEC = [C_MEM_ADDR_WIDTH-1:0], ISVALID = ([xstrncmp C_MEM_TYPE  DDR2 ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR2_ADDRESS
PORT DDR2_DQ = "", DIR = IO, VEC = [C_ECC_DATA_WIDTH  + C_MEM_DATA_WIDTH-1:0], THREE_STATE = FALSE, ISVALID = ([xstrncmp C_MEM_TYPE  DDR2 ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR2_DATA
PORT DDR2_DM = "", DIR = O, VEC = [C_ECC_DM_WIDTH    + C_MEM_DM_WIDTH-1:0], ISVALID = ([xstrncmp C_MEM_TYPE  DDR2 ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR2_DATA_MASK
PORT DDR2_DQS = "", DIR = IO, VEC = [C_ECC_DQS_WIDTH   + C_MEM_DQS_WIDTH-1:0], THREE_STATE = FALSE, ISVALID = ([xstrncmp C_MEM_TYPE  DDR2 ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR2_DATA_STROBE
PORT DDR2_DQS_n = "", DIR = IO, VEC = [C_ECC_DQS_WIDTH   + C_MEM_DQS_WIDTH-1:0], THREE_STATE = FALSE, ISVALID = ([xstrncmp C_MEM_TYPE  DDR2 ] && !C_USE_MCB_S6_PHY && C_DDR2_DQSN_ENABLE), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR2_DATA_STROBE_N
PORT DDR2_DQS_Div_O = "", DIR = O, ISVALID = ([xstrncmp C_MEM_TYPE  DDR2 ] && C_USE_MIG_S3_PHY), IO_IF = memory_0, IO_IS = DDR2_DQS_DIV_O, ASSIGNMENT = REQUIRE
PORT DDR2_DQS_Div_I = "", DIR = I, ISVALID = ([xstrncmp C_MEM_TYPE  DDR2 ] && C_USE_MIG_S3_PHY), IO_IF = memory_0, IO_IS = DDR2_DQS_DIV_I, ASSIGNMENT = REQUIRE
PORT DDR3_Clk = "", DIR = O, VEC = [C_MEM_CLK_WIDTH-1:0], SIGIS = CLK, ISVALID = ([xstrncmp C_MEM_TYPE  DDR3 ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR3_Clk
PORT DDR3_Clk_n = "", DIR = O, VEC = [C_MEM_CLK_WIDTH-1:0], SIGIS = CLK, ISVALID = ([xstrncmp C_MEM_TYPE  DDR3 ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR3_Clk_n
PORT DDR3_CE = "", DIR = O, VEC = [C_MEM_CE_WIDTH-1:0], ISVALID = ([xstrncmp C_MEM_TYPE  DDR3 ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR3_CLK_ENABLE
PORT DDR3_CS_n = "", DIR = O, VEC = [C_MEM_CS_N_WIDTH-1:0], ISVALID = ([xstrncmp C_MEM_TYPE  DDR3 ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR3_CHIP_SELECT
PORT DDR3_ODT = "", DIR = O, VEC = [C_MEM_ODT_WIDTH-1:0], ISVALID = ([xstrncmp C_MEM_TYPE  DDR3 ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR3_ODT
PORT DDR3_RAS_n = "", DIR = O, ISVALID = ([xstrncmp C_MEM_TYPE  DDR3 ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR3_ROW_ADDR_SELECT
PORT DDR3_CAS_n = "", DIR = O, ISVALID = ([xstrncmp C_MEM_TYPE  DDR3 ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR3_COL_ADDR_SELECT
PORT DDR3_WE_n = "", DIR = O, ISVALID = ([xstrncmp C_MEM_TYPE  DDR3 ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR3_WRITE_ENABLE
PORT DDR3_BankAddr = "", DIR = O, VEC = [C_MEM_BANKADDR_WIDTH-1:0], ISVALID = ([xstrncmp C_MEM_TYPE  DDR3 ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR3_BANKADDR
PORT DDR3_Addr = "", DIR = O, VEC = [C_MEM_ADDR_WIDTH-1:0], ISVALID = ([xstrncmp C_MEM_TYPE  DDR3 ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR3_ADDRESS
PORT DDR3_DQ = "", DIR = IO, VEC = [C_ECC_DATA_WIDTH  + C_MEM_DATA_WIDTH-1:0], THREE_STATE = FALSE, ISVALID = ([xstrncmp C_MEM_TYPE  DDR3 ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR3_DATA
PORT DDR3_DM = "", DIR = O, VEC = [C_ECC_DM_WIDTH    + C_MEM_DM_WIDTH-1:0], ISVALID = ([xstrncmp C_MEM_TYPE  DDR3 ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR3_DATA_MASK
PORT DDR3_Reset_n = "", DIR = O, ISVALID = ([xstrncmp C_MEM_TYPE  DDR3 ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR3_RESET_N
PORT DDR3_DQS = "", DIR = IO, VEC = [C_ECC_DQS_WIDTH   + C_MEM_DQS_WIDTH-1:0], THREE_STATE = FALSE, ISVALID = ([xstrncmp C_MEM_TYPE  DDR3 ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR3_DATA_STROBE
PORT DDR3_DQS_n = "", DIR = IO, VEC = [C_ECC_DQS_WIDTH   + C_MEM_DQS_WIDTH-1:0], THREE_STATE = FALSE, ISVALID = ([xstrncmp C_MEM_TYPE  DDR3 ] && !C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR3_DATA_STROBE_N
PORT mcbx_dram_addr = "", DIR = O, VEC = [C_MEM_ADDR_WIDTH-1:0], ISVALID = (C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = MCB_ADDRESS
PORT mcbx_dram_ba = "", DIR = O, VEC = [C_MEM_BANKADDR_WIDTH-1:0], ISVALID = (C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = MCB_BANKADDR
PORT mcbx_dram_ras_n = "", DIR = O, ISVALID = (C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = MCB_ROW_ADDR_SELECT
PORT mcbx_dram_cas_n = "", DIR = O, ISVALID = (C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = MCB_COL_ADDR_SELECT
PORT mcbx_dram_we_n = "", DIR = O, ISVALID = (C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = MCB_WRITE_ENABLE
PORT mcbx_dram_cke = "", DIR = O, ISVALID = (C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = MCB_CLK_ENABLE
PORT mcbx_dram_clk = "", DIR = O, SIGIS = CLK, ISVALID = (C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = MCB_CLK
PORT mcbx_dram_clk_n = "", DIR = O, SIGIS = CLK, ISVALID = (C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = MCB_CLK_N
PORT mcbx_dram_dq = "", DIR = IO, VEC = [C_MEM_DATA_WIDTH-1:0], THREE_STATE = FALSE, ISVALID = (C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = MCB_DQ
PORT mcbx_dram_dqs = "", DIR = IO, THREE_STATE = FALSE, ISVALID = (C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = MCB_DQS
PORT mcbx_dram_dqs_n = "", DIR = IO, THREE_STATE = FALSE, ISVALID = (C_USE_MCB_S6_PHY && ([xstrncmp C_MEM_TYPE  DDR3 ] || ([xstrncmp C_MEM_TYPE  DDR2 ] && C_DDR2_DQSN_ENABLE))), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = MCB_DQS_N
PORT mcbx_dram_udqs = "", DIR = IO, THREE_STATE = FALSE, ISVALID = (C_USE_MCB_S6_PHY && (C_MEM_DATA_WIDTH > 8)), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = MCB_UDQS
PORT mcbx_dram_udqs_n = "", DIR = IO, THREE_STATE = FALSE, ISVALID = (C_USE_MCB_S6_PHY && (C_MEM_DATA_WIDTH > 8) && ([xstrncmp C_MEM_TYPE  DDR3 ] || ([xstrncmp C_MEM_TYPE  DDR2 ] && C_DDR2_DQSN_ENABLE))), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = MCB_UDQS_N
PORT mcbx_dram_udm = "", DIR = O, ISVALID = (C_USE_MCB_S6_PHY && (C_MEM_DATA_WIDTH > 8)), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = MCB_UDM
PORT mcbx_dram_ldm = "", DIR = O, ISVALID = (C_USE_MCB_S6_PHY), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = MCB_LDM
PORT mcbx_dram_odt = "", DIR = O, ISVALID = (C_USE_MCB_S6_PHY && ([xstrncmp C_MEM_TYPE  DDR2 ] || [xstrncmp C_MEM_TYPE  DDR3 ])), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = MCB_ODT
PORT mcbx_dram_ddr3_rst = "", DIR = O, ISVALID = (C_USE_MCB_S6_PHY && [xstrncmp C_MEM_TYPE  DDR3 ]), IO_IF = memory_0, IO_IS = MCB_Rst
PORT selfrefresh_enter = "", DIR = I, INITIALVAL = GND, ISVALID = (C_USE_MCB_S6_PHY)
PORT selfrefresh_mode = "", DIR = O, ISVALID = (C_USE_MCB_S6_PHY)
PORT calib_recal = "", DIR = I, INITIALVAL = GND, ISVALID = (C_USE_MCB_S6_PHY)
PORT rzq = "", DIR = IO, THREE_STATE = FALSE, ISVALID = (C_USE_MCB_S6_PHY), IO_IF = memory_0, IO_IS = rzq
PORT zio = "", DIR = IO, THREE_STATE = FALSE, ISVALID = (C_USE_MCB_S6_PHY), IO_IF = memory_0, IO_IS = zio

END

FINISH_SINGLE_MPD

START_SINGLE_MPD xps_usb2_device_v3_01_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : xps_usb2_device
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN xps_usb2_device

## Peripheral Options
OPTION RUN_NGCBUILD = TRUE
OPTION PAY_CORE = xps_usb2_device@2010.07
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = MIXED
OPTION DESC = XPS USB2 Peripheral
OPTION LONG_DESC = USB with PLBV46 Interface.
OPTION IP_GROUP = Communication High-Speed:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=PRODUCTION, spartan3=PRODUCTION, spartan3an=PRODUCTION, spartan3a=PRODUCTION, spartan3e=PRODUCTION, spartan3adsp=PRODUCTION, virtex4lx=PRODUCTION, virtex4sx=PRODUCTION, virtex4fx=PRODUCTION, virtex5lx=PRODUCTION, virtex5sx=PRODUCTION, virtex5fx=PRODUCTION, aspartan3e=PRODUCTION, aspartan3a=PRODUCTION, aspartan3adsp=PRODUCTION, qvirtex4lx=PRODUCTION, qvirtex4sx=PRODUCTION, qvirtex4fx=PRODUCTION, qrvirtex4lx=PRODUCTION, qrvirtex4sx=PRODUCTION, qrvirtex4fx=PRODUCTION, spartan6t=PRODUCTION, spartan6=PRODUCTION, spartan6l=PRE_PRODUCTION, qspartan6t=PRODUCTION, qspartan6=PRODUCTION, aspartan6t=PRODUCTION, aspartan6=PRODUCTION, virtex6lx=PRODUCTION, virtex6sx=PRODUCTION, virtex6hx=PRODUCTION, virtex6cx=PRODUCTION, virtex6llx=PRE_PRODUCTION, virtex6lsx=PRE_PRODUCTION, qspartan6l=PRE_PRODUCTION, qrvirtex5=PRE_PRODUCTION, qvirtex6lx=PRE_PRODUCTION, qvirtex6sx=PRE_PRODUCTION, qvirtex6fx=PRE_PRODUCTION, qvirtex6tx=PRE_PRODUCTION)
OPTION STYLE = HDL


## Bus Interfaces
BUS_INTERFACE BUS = MPLB, BUS_TYPE = MASTER, BUS_STD = PLBV46, GENERATE_BURSTS = TRUE, ISVALID = (C_INCLUDE_DMA == 1)
BUS_INTERFACE BUS = SPLB, BUS_TYPE = SLAVE, BUS_STD = PLBV46

## Generics for VHDL or Parameters for Verilog
PARAMETER C_BASEADDR = 0xffffffff, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_HIGHADDR, MIN_SIZE = 0x8000, ASSIGNMENT = REQUIRE
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_BASEADDR, ASSIGNMENT = REQUIRE
PARAMETER C_FAMILY = virtex5, DT = STRING
PARAMETER C_SPLB_DWIDTH = 32, DT = INTEGER, BUS = SPLB, RANGE = (32,64,128)
PARAMETER C_SPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB, RANGE = (1,2,3,4)
PARAMETER C_SPLB_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB, RANGE = (1:16)
PARAMETER C_SPLB_AWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_INCLUDE_DMA = 0, DT = INTEGER, RANGE = (0,1)
PARAMETER C_SIMULATION = 0, DT = INTEGER, RANGE = (0,1)
PARAMETER C_MPLB_AWIDTH = 32, DT = INTEGER, BUS = MPLB, ASSIGNMENT = CONSTANT, ISVALID = (C_INCLUDE_DMA == 1)
PARAMETER C_MPLB_DWIDTH = 32, DT = INTEGER, BUS = MPLB, RANGE = (32,64,128), ISVALID = (C_INCLUDE_DMA == 1)
PARAMETER C_MPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = MPLB, ASSIGNMENT = CONSTANT, ISVALID = (C_INCLUDE_DMA == 1)

## Ports
PORT SPLB_Clk = "", DIR = I, SIGIS = Clk, BUS = SPLB
PORT SPLB_Rst = SPLB_Rst, DIR = I, SIGIS = Rst, BUS = SPLB
PORT MPLB_Clk = "", DIR = I, SIGIS = Clk, BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT MPLB_Rst = MPLB_Rst, DIR = I, SIGIS = Rst, BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT SPLB_ABus = PLB_ABus, DIR = I, VEC = [0:(C_SPLB_AWIDTH-1)], BUS = SPLB
PORT SPLB_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB_DWIDTH/8)-1)], BUS = SPLB
PORT SPLB_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT SPLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB
PORT SPLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB
PORT SPLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB
PORT SPLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB
PORT SPLB_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB_MID_WIDTH-1)], BUS = SPLB
PORT SPLB_abort = PLB_abort, DIR = I, BUS = SPLB
PORT SPLB_busLock = PLB_busLock, DIR = I, BUS = SPLB
PORT SPLB_RNW = PLB_RNW, DIR = I, BUS = SPLB
PORT SPLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB
PORT SPLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB
PORT SPLB_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB
PORT SPLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB
PORT SPLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT SPLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB
PORT SPLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB
PORT SPLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB
PORT SPLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB
PORT SPLB_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT SPLB_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT SPLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT SPLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB
PORT Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB
PORT Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB
PORT Sl_wait = Sl_wait, DIR = O, BUS = SPLB
PORT Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB
PORT Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB
PORT Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB
PORT Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB
PORT Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB
PORT Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB
PORT Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB
PORT Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB
PORT Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT MPLB_MAddrAck = PLB_MAddrAck, DIR = I, BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT MPLB_MSSize = PLB_MSSize, DIR = I, VEC = [0:1], BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT MPLB_MRearbitrate = PLB_MRearbitrate, DIR = I, BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT MPLB_MTimeout = PLB_MTimeout, DIR = I, BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT MPLB_MBusy = PLB_MBusy, DIR = I, BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT MPLB_MRdErr = PLB_MRdErr, DIR = I, BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT MPLB_MWrErr = PLB_MWrErr, DIR = I, BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT MPLB_MIRQ = PLB_MIRQ, DIR = I, BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT MPLB_MRdDBus = PLB_MRdDBus, DIR = I, VEC = [0:(C_MPLB_DWIDTH-1)], BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT MPLB_MRdWdAddr = PLB_MRdWdAddr, DIR = I, VEC = [0:3], BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT MPLB_MRdDAck = PLB_MRdDAck, DIR = I, BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT MPLB_MRdBTerm = PLB_MRdBTerm, DIR = I, BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT MPLB_MWrDAck = PLB_MWrDAck, DIR = I, BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT MPLB_MWrBTerm = PLB_MWrBTerm, DIR = I, BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT M_request = M_request, DIR = O, BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT M_priority = M_priority, DIR = O, VEC = [0:1], BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT M_busLock = M_busLock, DIR = O, BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT M_RNW = M_RNW, DIR = O, BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT M_BE = M_BE, DIR = O, VEC = [0:((C_MPLB_DWIDTH/8)-1)], BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT M_MSize = M_MSize, DIR = O, VEC = [0:1], BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT M_size = M_size, DIR = O, VEC = [0:3], BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT M_type = M_type, DIR = O, VEC = [0:2], BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT M_TAttribute = M_TAttribute, DIR = O, VEC = [0:15], BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT M_lockErr = M_lockErr, DIR = O, BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT M_abort = M_abort, DIR = O, BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT M_UABus = M_UABus, DIR = O, VEC = [0:31], BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT M_ABus = M_ABus, DIR = O, VEC = [0:(C_MPLB_AWIDTH-1)], BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT M_wrDBus = M_wrDBus, DIR = O, VEC = [0:(C_MPLB_DWIDTH-1)], BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT M_wrBurst = M_wrBurst, DIR = O, BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT M_rdBurst = M_rdBurst, DIR = O, BUS = MPLB, ISVALID = (C_INCLUDE_DMA == 1)
PORT usb_irpt = "", DIR = O, SIGIS = INTERRUPT
PORT ULPI_Clock = "", DIR = I, SIGIS = Clk
PORT ULPI_Dir = "", DIR = I
PORT ULPI_Next = "", DIR = I
PORT ULPI_Stop = "", DIR = O
PORT ULPI_Reset = "", DIR = O
PORT ULPI_Data_I = "", DIR = I, VEC = [7:0]
PORT ULPI_Data_O = "", DIR = O, VEC = [7:0]
PORT ULPI_Data_T = "", DIR = O
PORT vbus_detect = "", DIR = O
PORT show_currentspeed = "", DIR = O
PORT running = "", DIR = O
PORT suspended = "", DIR = O
PORT disconnected = "", DIR = O
PORT configured = "", DIR = O
PORT spare1 = "", DIR = O
PORT spare2 = "", DIR = O
PORT ULPI_Data = "", DIR = IO, VEC = [7:0], ENABLE = SINGLE, THREE_STATE = TRUE, TRI_I = ULPI_Data_I, TRI_O = ULPI_Data_O, TRI_T = ULPI_Data_T

END

FINISH_SINGLE_MPD

START_SINGLE_MPD xps_central_dma_v2_02_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : xps_central_dma
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN xps_central_dma

## Peripheral Options
OPTION STYLE = HDL
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION DESC = XPS Central DMA Controller
OPTION LONG_DESC = Simple Direct Memory Access (DMA) services for PLBV46
OPTION IP_GROUP = DMA and Timer:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=PRODUCTION, spartan3=PRODUCTION, spartan3an=PRODUCTION, spartan3a=PRODUCTION, spartan3e=PRODUCTION, spartan3adsp=PRODUCTION, virtex4lx=PRODUCTION, virtex4sx=PRODUCTION, virtex4fx=PRODUCTION, virtex5lx=PRODUCTION, virtex5sx=PRODUCTION, virtex5fx=PRODUCTION, aspartan3e=PRODUCTION, aspartan3a=PRODUCTION, aspartan3adsp=PRODUCTION, qvirtex4lx=PRODUCTION, qvirtex4sx=PRODUCTION, qvirtex4fx=PRODUCTION, qrvirtex4lx=PRODUCTION, qrvirtex4sx=PRODUCTION, qrvirtex4fx=PRODUCTION, spartan6t=PRODUCTION, spartan6=PRODUCTION, spartan6l=PRE_PRODUCTION, qspartan6t=PRODUCTION, qspartan6=PRODUCTION, aspartan6t=PRODUCTION, aspartan6=PRODUCTION, virtex6lx=PRODUCTION, virtex6sx=PRODUCTION, virtex6hx=PRODUCTION, virtex6cx=PRODUCTION, virtex6llx=PRE_PRODUCTION, virtex6lsx=PRE_PRODUCTION, qspartan6l=PRE_PRODUCTION, qrvirtex5=PRE_PRODUCTION, qvirtex6lx=PRE_PRODUCTION, qvirtex6sx=PRE_PRODUCTION, qvirtex6fx=PRE_PRODUCTION, qvirtex6tx=PRE_PRODUCTION)
OPTION RUN_NGCBUILD = FALSE


## Bus Interfaces
BUS_INTERFACE BUS = MPLB, BUS_TYPE = MASTER, BUS_STD = PLBV46, GENERATE_BURSTS = TRUE
BUS_INTERFACE BUS = SPLB, BUS_TYPE = SLAVE, BUS_STD = PLBV46

## Generics for VHDL or Parameters for Verilog
PARAMETER C_FIFO_DEPTH = 8, DT = INTEGER, RANGE = (1,8,16,32,48)
PARAMETER C_RD_BURST_SIZE = 8, DT = INTEGER, RANGE = (1,8,16)
PARAMETER C_WR_BURST_SIZE = 8, DT = INTEGER, RANGE = (1,8,16)
PARAMETER C_BASEADDR = 0xffffffff, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_HIGHADDR, MIN_SIZE = 0x40, ASSIGNMENT = REQUIRE
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_BASEADDR, ASSIGNMENT = REQUIRE
PARAMETER C_SPLB_DWIDTH = 32, DT = INTEGER, BUS = SPLB, RANGE = (32, 64, 128)
PARAMETER C_SPLB_AWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB, RANGE = (1:16)
PARAMETER C_SPLB_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB, RANGE = (1:4)
PARAMETER C_SPLB_P2P = 0, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_MPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = MPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_MPLB_AWIDTH = 32, DT = INTEGER, BUS = MPLB, ASSIGNMENT = CONSTANT
PARAMETER C_MPLB_DWIDTH = 32, DT = INTEGER, BUS = MPLB, RANGE = (32, 64, 128)
PARAMETER C_FAMILY = virtex5, DT = STRING

## Ports
PORT SPLB_Clk = "", DIR = I, SIGIS = Clk, BUS = SPLB
PORT SPLB_Rst = SPLB_Rst, DIR = I, SIGIS = Rst, BUS = SPLB
PORT MPLB_Clk = "", DIR = I, SIGIS = Clk, BUS = MPLB
PORT MPLB_Rst = MPLB_Rst, DIR = I, SIGIS = Rst, BUS = MPLB
PORT SPLB_ABus = PLB_ABus, DIR = I, VEC = [0:(C_SPLB_AWIDTH-1)], BUS = SPLB
PORT SPLB_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB_DWIDTH/8)-1)], BUS = SPLB
PORT SPLB_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT SPLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB
PORT SPLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB
PORT SPLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB
PORT SPLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB
PORT SPLB_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB_MID_WIDTH-1)], BUS = SPLB
PORT SPLB_abort = PLB_abort, DIR = I, BUS = SPLB
PORT SPLB_busLock = PLB_busLock, DIR = I, BUS = SPLB
PORT SPLB_RNW = PLB_RNW, DIR = I, BUS = SPLB
PORT SPLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB
PORT SPLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB
PORT SPLB_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB
PORT SPLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB
PORT SPLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT SPLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB
PORT SPLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB
PORT SPLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB
PORT SPLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB
PORT SPLB_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT SPLB_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT SPLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT SPLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB
PORT Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB
PORT Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB
PORT Sl_wait = Sl_wait, DIR = O, BUS = SPLB
PORT Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB
PORT Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB
PORT Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB
PORT Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB
PORT Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB
PORT Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB
PORT Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB
PORT Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB
PORT Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT IP2INTC_Irpt = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH
PORT MPLB_MAddrAck = PLB_MAddrAck, DIR = I, BUS = MPLB
PORT MPLB_MSSize = PLB_MSSize, DIR = I, VEC = [0:1], BUS = MPLB
PORT MPLB_MRearbitrate = PLB_MRearbitrate, DIR = I, BUS = MPLB
PORT MPLB_MTimeout = PLB_MTimeout, DIR = I, BUS = MPLB
PORT MPLB_MBusy = PLB_MBusy, DIR = I, BUS = MPLB
PORT MPLB_MRdErr = PLB_MRdErr, DIR = I, BUS = MPLB
PORT MPLB_MWrErr = PLB_MWrErr, DIR = I, BUS = MPLB
PORT MPLB_MIRQ = PLB_MIRQ, DIR = I, BUS = MPLB
PORT MPLB_MRdDBus = PLB_MRdDBus, DIR = I, VEC = [0:(C_MPLB_DWIDTH-1)], BUS = MPLB
PORT MPLB_MRdWdAddr = PLB_MRdWdAddr, DIR = I, VEC = [0:3], BUS = MPLB
PORT MPLB_MRdDAck = PLB_MRdDAck, DIR = I, BUS = MPLB
PORT MPLB_MRdBTerm = PLB_MRdBTerm, DIR = I, BUS = MPLB
PORT MPLB_MWrDAck = PLB_MWrDAck, DIR = I, BUS = MPLB
PORT MPLB_MWrBTerm = PLB_MWrBTerm, DIR = I, BUS = MPLB
PORT M_request = M_request, DIR = O, BUS = MPLB
PORT M_priority = M_priority, DIR = O, VEC = [0:1], BUS = MPLB
PORT M_busLock = M_busLock, DIR = O, BUS = MPLB
PORT M_RNW = M_RNW, DIR = O, BUS = MPLB
PORT M_BE = M_BE, DIR = O, VEC = [0:((C_MPLB_DWIDTH/8)-1)], BUS = MPLB
PORT M_MSize = M_MSize, DIR = O, VEC = [0:1], BUS = MPLB
PORT M_size = M_size, DIR = O, VEC = [0:3], BUS = MPLB
PORT M_type = M_type, DIR = O, VEC = [0:2], BUS = MPLB
PORT M_TAttribute = M_TAttribute, DIR = O, VEC = [0:15], BUS = MPLB
PORT M_lockErr = M_lockErr, DIR = O, BUS = MPLB
PORT M_abort = M_abort, DIR = O, BUS = MPLB
PORT M_UABus = M_UABus, DIR = O, VEC = [0:31], BUS = MPLB
PORT M_ABus = M_ABus, DIR = O, VEC = [0:(C_MPLB_AWIDTH-1)], BUS = MPLB
PORT M_wrDBus = M_wrDBus, DIR = O, VEC = [0:(C_MPLB_DWIDTH-1)], BUS = MPLB
PORT M_wrBurst = M_wrBurst, DIR = O, BUS = MPLB
PORT M_rdBurst = M_rdBurst, DIR = O, BUS = MPLB

END

FINISH_SINGLE_MPD

START_SINGLE_MPD xps_spi_v2_02_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : xps_spi
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN xps_spi

## Peripheral Options
OPTION STYLE = HDL
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION USAGE_LEVEL = BASE_USER
OPTION IPLEVEL_DRC_PROC = check_iplevel_settings
OPTION DESC = XPS SPI Interface
OPTION LONG_DESC = PLBV46 to Motorola Serial Peripheral Interface (SPI) adapter
OPTION IP_GROUP = Communication Low-Speed:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=PRODUCTION, spartan3=PRODUCTION, spartan3an=PRODUCTION, spartan3a=PRODUCTION, spartan3e=PRODUCTION, spartan3adsp=PRODUCTION, virtex4lx=PRODUCTION, virtex4sx=PRODUCTION, virtex4fx=PRODUCTION, virtex5lx=PRODUCTION, virtex5sx=PRODUCTION, virtex5fx=PRODUCTION, aspartan3e=PRODUCTION, aspartan3a=PRODUCTION, aspartan3adsp=PRODUCTION, qvirtex4lx=PRODUCTION, qvirtex4sx=PRODUCTION, qvirtex4fx=PRODUCTION, qrvirtex4lx=PRODUCTION, qrvirtex4sx=PRODUCTION, qrvirtex4fx=PRODUCTION, spartan6t=PRODUCTION, spartan6=PRODUCTION, spartan6l=PRE_PRODUCTION, qspartan6t=PRODUCTION, qspartan6=PRODUCTION, aspartan6t=PRODUCTION, aspartan6=PRODUCTION, virtex6lx=PRODUCTION, virtex6sx=PRODUCTION, virtex6hx=PRODUCTION, virtex6cx=PRODUCTION, virtex6llx=PRE_PRODUCTION, virtex6lsx=PRE_PRODUCTION, qspartan6l=PRE_PRODUCTION, qrvirtex5=PRE_PRODUCTION, qvirtex6lx=PRE_PRODUCTION, qvirtex6sx=PRE_PRODUCTION, qvirtex6fx=PRE_PRODUCTION, qvirtex6tx=PRE_PRODUCTION)
OPTION RUN_NGCBUILD = FALSE

IO_INTERFACE IO_IF = spi_0, IO_TYPE = XIL_SPI_V1

## Bus Interfaces
BUS_INTERFACE BUS = SPLB, BUS_TYPE = SLAVE, BUS_STD = PLBV46

## Generics for VHDL or Parameters for Verilog
PARAMETER C_BASEADDR = 0xFFFFFFFF, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_HIGHADDR, MIN_SIZE = 0x80, ASSIGNMENT = REQUIRE
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_BASEADDR, ASSIGNMENT = REQUIRE
PARAMETER C_FAMILY = virtex5, DT = STRING
PARAMETER C_SPLB_AWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_DWIDTH = 32, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_P2P = 0, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_FIFO_EXIST = 1, DT = INTEGER, RANGE = (0:1), PERMIT = BASE_USER, DESC = Include Receive and Transmit FIFOs, VALUES = (0= FALSE , 1= TRUE)
PARAMETER C_SCK_RATIO = 32, DT = INTEGER, RANGE = (2,4,16,32,48,64,80,96,112,128,144,160,176,192,208,224,240,256,272,288,304,320,336,352,368,384,400,416,432,448,464,480,496,512,528,544,560,576,592,608,624,640,656,672,688,704,720,736,752,768,784,800,816,832,848,864,880,896,912,928,944,960,976,992,1008,1024,1040,1056,1072,1088,1104,1120,1136,1152,1168,1184,1200,1216,1232,1248,1264,1280,1296,1312,1328,1344,1360,1376,1392,1408,1424,1440,1456,1472,1488,1504,1520,1536,1552,1568,1584,1600,1616,1632,1648,1664,1680,1696,1712,1728,1744,1760,1776,1792,1808,1824,1840,1856,1872,1888,1904,1920,1936,1952,1968,1984,2000,2016,2032,2048), PERMIT = BASE_USER, IO_IF = spi_0, IO_IS = clk_freq
PARAMETER C_NUM_SS_BITS = 1, DT = INTEGER, RANGE = (1:32), PERMIT = BASE_USER, IO_IF = spi_0, IO_IS = ss_bits
PARAMETER C_NUM_TRANSFER_BITS = 8, DT = INTEGER, RANGE = (8,16,32), PERMIT = BASE_USER, IO_IF = spi_0, IO_IS = ss_bits

## Ports
PORT SCK_I = "", DIR = I
PORT SCK_O = "", DIR = O
PORT SCK_T = "", DIR = O
PORT MISO_I = "", DIR = I
PORT MISO_O = "", DIR = O
PORT MISO_T = "", DIR = O
PORT MOSI_I = "", DIR = I
PORT MOSI_O = "", DIR = O
PORT MOSI_T = "", DIR = O
PORT SPISEL = "", DIR = I, INITIALVAL = VCC, PERMIT = BASE_USER, DESC = 'Local SPI Slave Select Active LOW Input', IO_IF = spi_0, IO_IS = slave_select_n
PORT SS_I = "", DIR = I, VEC = [0:(C_NUM_SS_BITS-1)]
PORT SS_O = "", DIR = O, VEC = [0:(C_NUM_SS_BITS-1)]
PORT SS_T = "", DIR = O
PORT SPLB_Clk = "", DIR = I, SIGIS = CLK, BUS = SPLB
PORT SPLB_Rst = SPLB_Rst, DIR = I, SIGIS = RST, BUS = SPLB
PORT PLB_ABus = PLB_ABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB
PORT PLB_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB_MID_WIDTH-1)], BUS = SPLB
PORT PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB
PORT PLB_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB_DWIDTH/8)-1)], BUS = SPLB
PORT PLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB
PORT PLB_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB
PORT PLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB
PORT Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB
PORT Sl_wait = Sl_wait, DIR = O, BUS = SPLB
PORT Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB
PORT Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB
PORT Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB
PORT Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB
PORT Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB
PORT Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT PLB_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB
PORT PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB
PORT PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB
PORT PLB_abort = PLB_abort, DIR = I, BUS = SPLB
PORT PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB
PORT PLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB
PORT PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB
PORT PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB
PORT PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB
PORT PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB
PORT PLB_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB
PORT Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB
PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB
PORT Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB
PORT Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT IP2INTC_Irpt = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, INTERRUPT_PRIORITY = LOW
PORT SCK = "", DIR = IO, THREE_STATE = TRUE, TRI_I = SCK_I, TRI_O = SCK_O, TRI_T = SCK_T, PERMIT = BASE_USER, DESC = 'SPI Bus Clock', IO_IF = spi_0, IO_IS = clk_out
PORT MISO = "", DIR = IO, THREE_STATE = TRUE, TRI_I = MISO_I, TRI_O = MISO_O, TRI_T = MISO_T, PERMIT = BASE_USER, DESC = 'Master In Slave Out', IO_IF = spi_0, IO_IS = data_out
PORT MOSI = "", DIR = IO, THREE_STATE = TRUE, TRI_I = MOSI_I, TRI_O = MOSI_O, TRI_T = MOSI_T, PERMIT = BASE_USER, DESC = 'Master Out Slave In', IO_IF = spi_0, IO_IS = data_in
PORT SS = "", DIR = IO, VEC = [0:(C_NUM_SS_BITS-1)], THREE_STATE = TRUE, TRI_I = SS_I, TRI_O = SS_O, TRI_T = SS_T, PERMIT = BASE_USER, DESC = 'Slave Select Vector', IO_IF = spi_0, IO_IS = chip_select

END

FINISH_SINGLE_MPD

START_SINGLE_MPD xps_insystem_flash_v1_02_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : xps_insystem_flash
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN xps_insystem_flash

## Peripheral Options
OPTION STYLE = HDL
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION USAGE_LEVEL = BASE_USER
OPTION RUN_NGCBUILD = TRUE
OPTION IPLEVEL_DRC_PROC = check_iplevel_settings
OPTION PLATGEN_SYSLEVEL_UPDATE_PROC = generate_corelevel_ucf
OPTION ARCH_SUPPORT_MAP = (spartan3an=PRODUCTION)
OPTION DESC = XPS Insystem Flash Controller
OPTION LONG_DESC = XPS Insystem Flash controller
OPTION IP_GROUP = Memory and Memory Controller:MICROBLAZE

IO_INTERFACE IO_IF = spi_0, IO_TYPE = XIL_SPI_V1_not_supported

## Bus Interfaces
BUS_INTERFACE BUS = SPLB, BUS_TYPE = SLAVE, BUS_STD = PLBV46

## Generics for VHDL or Parameters for Verilog
PARAMETER C_FAMILY = spartan3a, DT = STRING
PARAMETER C_SUBFAMILY = n, DT = STRING, TYPE = NON_HDL
PARAMETER C_BASEADDR = 0xffffffff, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_HIGHADDR, MIN_SIZE = 0x80, ASSIGNMENT = REQUIRE
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_BASEADDR, ASSIGNMENT = REQUIRE
PARAMETER C_SPLB_AWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_DWIDTH = 32, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_P2P = 0, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_FIFO_EXIST = 1, DT = INTEGER, RANGE = (0:1), PERMIT = BASE_USER, DESC = Include Receive and Transmit FIFOs, VALUES = (0= FALSE , 1= TRUE)
PARAMETER C_SCK_RATIO = 32, DT = INTEGER, RANGE = (2,4,16,32,48,64,80,96,112,128,144,160,176,192,208,224,240,256,272,288,304,320,336,352,368,384,400,416,432,448,464,480,496,512,528,544,560,576,592,608,624,640,656,672,688,704,720,736,752,768,784,800,816,832,848,864,880,896,912,928,944,960,976,992,1008,1024,1040,1056,1072,1088,1104,1120,1136,1152,1168,1184,1200,1216,1232,1248,1264,1280,1296,1312,1328,1344,1360,1376,1392,1408,1424,1440,1456,1472,1488,1504,1520,1536,1552,1568,1584,1600,1616,1632,1648,1664,1680,1696,1712,1728,1744,1760,1776,1792,1808,1824,1840,1856,1872,1888,1904,1920,1936,1952,1968,1984,2000,2016,2032,2048), PERMIT = BASE_USER, IO_IF = spi_0, IO_IS = clk_freq
PARAMETER C_NUM_SS_BITS = 1, DT = INTEGER, ASSIGNMENT = CONSTANT, IO_IF = spi_0, IO_IS = ss_bits
PARAMETER C_NUM_TRANSFER_BITS = 8, DT = INTEGER, ASSIGNMENT = CONSTANT, IO_IF = spi_0, IO_IS = num_transfer_bits
PARAMETER C_SIM_DELAY_TYPE = SCALED, DT = STRING
PARAMETER C_DEVICE = 3S700AN, DT = STRING
PARAMETER C_SIM_MEM_FILE = NONE, DT = STRING
PARAMETER C_SIM_FACTORY_ID = 0b
PARAMETER C_SIM_USER_ID = 0b

## Ports
PORT SPLB_Clk = "", DIR = I, SIGIS = CLK, BUS = SPLB
PORT SPLB_Rst = SPLB_Rst, DIR = I, SIGIS = RST, BUS = SPLB
PORT PLB_ABus = PLB_ABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB
PORT PLB_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB_MID_WIDTH-1)], BUS = SPLB
PORT PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB
PORT PLB_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB_DWIDTH/8)-1)], BUS = SPLB
PORT PLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB
PORT PLB_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB
PORT PLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB
PORT Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB
PORT Sl_wait = Sl_wait, DIR = O, BUS = SPLB
PORT Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB
PORT Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB
PORT Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB
PORT Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB
PORT Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB
PORT Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT PLB_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB
PORT PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB
PORT PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB
PORT PLB_abort = PLB_abort, DIR = I, BUS = SPLB
PORT PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB
PORT PLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB
PORT PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB
PORT PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB
PORT PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB
PORT PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB
PORT PLB_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB
PORT Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB
PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB
PORT Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB
PORT Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT IP2INTC_Irpt = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, INTERRUPT_PRIORITY = LOW

END

FINISH_SINGLE_MPD

START_SINGLE_MPD xps_most_nic_v1_02_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : xps_most_nic
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN xps_most_nic

## Peripheral Options
OPTION RUN_NGCBUILD = TRUE
OPTION PAY_CORE = xps_most_nic@2010.06
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = MIXED
OPTION PLATGEN_SYSLEVEL_UPDATE_PROC = generate_corelevel_ucf
OPTION DESC = XPS MOST
OPTION IP_GROUP = Communication High-Speed:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=PRODUCTION, spartan3=PRODUCTION, spartan3an=PRODUCTION, spartan3a=PRODUCTION, spartan3e=PRODUCTION, spartan3adsp=PRODUCTION, virtex4lx=PRODUCTION, virtex4sx=PRODUCTION, virtex4fx=PRODUCTION, aspartan3e=PRODUCTION, aspartan3a=PRODUCTION, aspartan3adsp=PRODUCTION, qvirtex4lx=PRODUCTION, qvirtex4sx=PRODUCTION, qvirtex4fx=PRODUCTION, qrvirtex4lx=PRODUCTION, qrvirtex4sx=PRODUCTION, qrvirtex4fx=PRODUCTION, spartan6t=PRODUCTION, spartan6=PRODUCTION, spartan6l=PRE_PRODUCTION, qspartan6t=PRODUCTION, qspartan6=PRODUCTION, aspartan6t=PRODUCTION, aspartan6=PRODUCTION, qspartan6l=PRE_PRODUCTION)
OPTION STYLE = HDL


## Bus Interfaces
BUS_INTERFACE BUS = SPLB, BUS_TYPE = SLAVE, BUS_STD = PLBV46

## Generics for VHDL or Parameters for Verilog
PARAMETER C_BASEADDR = 0xffffffff, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_HIGHADDR, ASSIGNMENT = REQUIRE, MIN_SIZE = 0x4000
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_BASEADDR, ASSIGNMENT = REQUIRE
PARAMETER C_SPLB_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_DWIDTH = 32, DT = INTEGER, BUS = SPLB
PARAMETER C_FAMILY = spartan3, DT = STRING
PARAMETER C_OPMODE = 1, DT = INTEGER, RANGE = (0,1), VALUES = (0=  Master/Slave core  ,1=  Slave only core )
PARAMETER C_FWC = 16, DT = INTEGER, RANGE = (8,16)
PARAMETER C_EWC = 16, DT = INTEGER, RANGE = (8,16)

## Ports
PORT SPLB_Clk = "", DIR = I, SIGIS = Clk, BUS = SPLB
PORT SPLB_Rst = SPLB_Rst, DIR = I, SIGIS = Rst, BUS = SPLB
PORT PLB_ABus = PLB_ABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB
PORT PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB
PORT PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB
PORT PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB
PORT PLB_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB_MID_WIDTH-1)], BUS = SPLB
PORT PLB_abort = PLB_abort, DIR = I, BUS = SPLB
PORT PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB
PORT PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB
PORT PLB_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB_DWIDTH/8)-1)], BUS = SPLB
PORT PLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB
PORT PLB_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB
PORT PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB
PORT PLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB
PORT PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB
PORT PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB
PORT PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB
PORT PLB_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB
PORT Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB
PORT Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB
PORT Sl_wait = Sl_wait, DIR = O, BUS = SPLB
PORT Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB
PORT Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB
PORT Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB
PORT Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB
PORT Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB
PORT Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB
PORT Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB
PORT Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB
PORT Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT MOST_Irpt = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = EDGE_RISING
PORT BUFFER_Irpt = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = EDGE_RISING
PORT MOST_TX = "", DIR = O
PORT MOST_RX = "", DIR = I
PORT MOST_COM_CLK = "", DIR = I
PORT MOST_PLL_CLK = "", DIR = I
PORT MOST_PLL_LOCK = "", DIR = I
PORT MOST_FOR_STATUS = "", DIR = I
PORT MOST_MASTER = "", DIR = O
PORT MOST_EXT_NRESET = "", DIR = O
PORT MOST_EXT_BYPASS = "", DIR = O
PORT STR_CLK = "", DIR = O
PORT STR_RST = "", DIR = O
PORT STR_MMR_REQ = "", DIR = O
PORT STR_MMR_RNW = "", DIR = O
PORT STR_MMR_ADDR = "", DIR = O, VEC = [7:0]
PORT STR_MMR_BE = "", DIR = O, VEC = [3:0]
PORT STR_MMR_WDATA = "", DIR = O, VEC = [31:0]
PORT STR_MMR_RDATA = "", DIR = I, VEC = [31:0]
PORT STR_MMR_ACK = "", DIR = I
PORT STR_MMR_INT = "", DIR = I
PORT STR_RE_LC = "", DIR = I, VEC = [1:0]
PORT STR_RE_DATA = "", DIR = O, VEC = [7:0]
PORT STR_RE_SRC_RDY = "", DIR = O
PORT STR_RE_DST_RDY = "", DIR = I
PORT STR_RE_WCINT = "", DIR = O, VEC = [3:0]
PORT STR_RE_BIF_AVAIL = "", DIR = O, VEC = [3:0]
PORT STR_RI_LC = "", DIR = I, VEC = [1:0]
PORT STR_RI_DATA = "", DIR = I, VEC = [7:0]
PORT STR_RI_SRC_RDY = "", DIR = I
PORT STR_RI_DST_RDY = "", DIR = O
PORT STR_RI_WCINT = "", DIR = O, VEC = [3:0]
PORT STR_RI_BIF_AVAIL = "", DIR = O, VEC = [3:0]
PORT STR_TE_LC = "", DIR = I, VEC = [1:0]
PORT STR_TE_DATA = "", DIR = O, VEC = [7:0]
PORT STR_TE_SRC_RDY = "", DIR = O
PORT STR_TE_DST_RDY = "", DIR = I
PORT STR_TE_WCINT = "", DIR = O, VEC = [3:0]
PORT STR_TE_BIF_AVAIL = "", DIR = O, VEC = [3:0]
PORT STR_TI_LC = "", DIR = I, VEC = [1:0]
PORT STR_TI_DATA = "", DIR = I, VEC = [7:0]
PORT STR_TI_SRC_RDY = "", DIR = I
PORT STR_TI_DST_RDY = "", DIR = O
PORT STR_TI_WCINT = "", DIR = O, VEC = [3:0]
PORT STR_TI_BIF_AVAIL = "", DIR = O, VEC = [3:0]

END

FINISH_SINGLE_MPD

START_SINGLE_MPD plbv46_plbv46_bridge_v1_03_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : plbv46_plbv46_bridge
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN plbv46_plbv46_bridge

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION STYLE = HDL
OPTION DESC = PLBV46 to PLBV46 Bridge
OPTION LONG_DESC = PLBV46 to PLBV46 bridge.
OPTION IP_GROUP = Bus and Bridge:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=PRODUCTION, spartan3=PRODUCTION, spartan3an=PRODUCTION, spartan3a=PRODUCTION, spartan3e=PRODUCTION, spartan3adsp=PRODUCTION, virtex4lx=PRODUCTION, virtex4sx=PRODUCTION, virtex4fx=PRODUCTION, virtex5lx=PRODUCTION, virtex5sx=PRODUCTION, virtex5fx=PRODUCTION, aspartan3e=PRODUCTION, aspartan3a=PRODUCTION, aspartan3adsp=PRODUCTION, qvirtex4lx=PRODUCTION, qvirtex4sx=PRODUCTION, qvirtex4fx=PRODUCTION, qrvirtex4lx=PRODUCTION, qrvirtex4sx=PRODUCTION, qrvirtex4fx=PRODUCTION, spartan6t=PRODUCTION, spartan6=PRODUCTION, spartan6l=PRE_PRODUCTION, qspartan6t=PRODUCTION, qspartan6=PRODUCTION, aspartan6t=PRODUCTION, aspartan6=PRODUCTION, virtex6lx=PRODUCTION, virtex6sx=PRODUCTION, virtex6hx=PRODUCTION, virtex6cx=PRODUCTION, virtex6llx=PRE_PRODUCTION, virtex6lsx=PRE_PRODUCTION, qspartan6l=PRE_PRODUCTION, qrvirtex5=PRE_PRODUCTION, qvirtex6lx=PRE_PRODUCTION, qvirtex6sx=PRE_PRODUCTION, qvirtex6fx=PRE_PRODUCTION, qvirtex6tx=PRE_PRODUCTION)
OPTION RUN_NGCBUILD = FALSE


## Bus Interfaces
BUS_INTERFACE BUS = MPLB, BUS_TYPE = MASTER, BUS_STD = PLBV46, GENERATE_BURSTS = TRUE
BUS_INTERFACE BUS = SPLB, BUS_TYPE = SLAVE, BUS_STD = PLBV46

## Generics for VHDL or Parameters for Verilog
PARAMETER C_NUM_ADDR_RNG = 1, DT = INTEGER, RANGE = (1:4)
PARAMETER C_BRIDGE_BASEADDR = 0xffffffff, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_BRIDGE_HIGHADDR, ASSIGNMENT = REQUIRE
PARAMETER C_BRIDGE_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_BRIDGE_BASEADDR, ASSIGNMENT = REQUIRE
PARAMETER C_RNG0_BASEADDR = 0xffffffff, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_RNG0_HIGHADDR, BRIDGE_TO = MPLB, ISVALID = (C_NUM_ADDR_RNG>=1), ASSIGNMENT = REQUIRE
PARAMETER C_RNG0_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_RNG0_BASEADDR, BRIDGE_TO = MPLB, ISVALID = (C_NUM_ADDR_RNG>=1), ASSIGNMENT = REQUIRE
PARAMETER C_RNG1_BASEADDR = 0xffffffff, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_RNG1_HIGHADDR, BRIDGE_TO = MPLB, ISVALID = (C_NUM_ADDR_RNG>=2), ASSIGNMENT = REQUIRE
PARAMETER C_RNG1_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_RNG1_BASEADDR, BRIDGE_TO = MPLB, ISVALID = (C_NUM_ADDR_RNG>=2), ASSIGNMENT = REQUIRE
PARAMETER C_RNG2_BASEADDR = 0xffffffff, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_RNG2_HIGHADDR, BRIDGE_TO = MPLB, ISVALID = (C_NUM_ADDR_RNG>=3), ASSIGNMENT = REQUIRE
PARAMETER C_RNG2_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_RNG2_BASEADDR, BRIDGE_TO = MPLB, ISVALID = (C_NUM_ADDR_RNG>=3), ASSIGNMENT = REQUIRE
PARAMETER C_RNG3_BASEADDR = 0xffffffff, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_RNG3_HIGHADDR, BRIDGE_TO = MPLB, ISVALID = (C_NUM_ADDR_RNG>=4), ASSIGNMENT = REQUIRE
PARAMETER C_RNG3_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_RNG3_BASEADDR, BRIDGE_TO = MPLB, ISVALID = (C_NUM_ADDR_RNG>=4), ASSIGNMENT = REQUIRE
PARAMETER C_SPLB_P2P = 0, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_BIGGEST_MASTER = 32, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_AWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_DWIDTH = 32, DT = INTEGER, BUS = SPLB
PARAMETER C_MPLB_AWIDTH = 32, DT = INTEGER, BUS = MPLB, ASSIGNMENT = CONSTANT
PARAMETER C_MPLB_DWIDTH = 32, DT = INTEGER, BUS = MPLB
PARAMETER C_SPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_MPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = MPLB, ASSIGNMENT = CONSTANT
PARAMETER C_MPLB_SMALLEST_SLAVE = 32, DT = INTEGER, BUS = MPLB
PARAMETER C_BUS_CLOCK_RATIO = 1, DT = INTEGER, RANGE = (1,2,4)
PARAMETER C_PREFETCH_TIMEOUT = 10, DT = INTEGER, RANGE = (1:32)
PARAMETER C_FAMILY = virtex5, DT = STRING

## Ports
PORT SPLB_Clk = "", DIR = I, SIGIS = CLK, BUS = SPLB
PORT SPLB_Rst = SPLB_Rst, DIR = I, BUS = SPLB
PORT IP2INTC_Irpt = "", DIR = O, SIGIS = INTERRUPT, LEVEL = HIGH
PORT PLB_ABus = PLB_ABus, DIR = I, VEC = [0:C_SPLB_AWIDTH-1], BUS = SPLB
PORT PLB_UABus = PLB_UABus, DIR = I, VEC = [0:C_SPLB_AWIDTH-1], BUS = SPLB
PORT PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB
PORT PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB
PORT PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB
PORT PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB
PORT PLB_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB_MID_WIDTH-1)], BUS = SPLB
PORT PLB_abort = PLB_abort, DIR = I, BUS = SPLB
PORT PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB
PORT PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB
PORT PLB_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB_DWIDTH/8)-1)], BUS = SPLB
PORT PLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB
PORT PLB_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB
PORT PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB
PORT PLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB
PORT PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB
PORT PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB
PORT PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB
PORT PLB_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB
PORT Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB
PORT Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB
PORT Sl_wait = Sl_wait, DIR = O, BUS = SPLB
PORT Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB
PORT Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB
PORT Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB
PORT Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB
PORT Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB
PORT Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB
PORT Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB
PORT Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB
PORT Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT MPLB_Clk = "", DIR = I, SIGIS = CLK, BUS = MPLB
PORT MPLB_Rst = MPLB_Rst, DIR = I, BUS = MPLB
PORT M_request = M_request, DIR = O, BUS = MPLB
PORT M_priority = M_priority, DIR = O, VEC = [0:1], BUS = MPLB
PORT M_busLock = M_busLock, DIR = O, BUS = MPLB
PORT M_RNW = M_RNW, DIR = O, BUS = MPLB
PORT M_BE = M_BE, DIR = O, VEC = [0:((C_MPLB_DWIDTH/8)-1)], BUS = MPLB
PORT M_MSize = M_MSize, DIR = O, VEC = [0:1], BUS = MPLB
PORT M_size = M_size, DIR = O, VEC = [0:3], BUS = MPLB
PORT M_type = M_type, DIR = O, VEC = [0:2], BUS = MPLB
PORT M_ABus = M_ABus, DIR = O, VEC = [0:C_MPLB_AWIDTH-1], BUS = MPLB
PORT M_wrBurst = M_wrBurst, DIR = O, BUS = MPLB
PORT M_rdBurst = M_rdBurst, DIR = O, BUS = MPLB
PORT M_wrDBus = M_wrDBus, DIR = O, VEC = [0:(C_MPLB_DWIDTH-1)], BUS = MPLB
PORT PLB_MAddrAck = PLB_MAddrAck, DIR = I, BUS = MPLB
PORT PLB_MSSize = PLB_MSSize, DIR = I, VEC = [0:1], BUS = MPLB
PORT PLB_MRearbitrate = PLB_MRearbitrate, DIR = I, BUS = MPLB
PORT PLB_MTimeout = PLB_MTimeout, DIR = I, BUS = MPLB
PORT PLB_MRdErr = PLB_MRdErr, DIR = I, BUS = MPLB
PORT PLB_MWrErr = PLB_MWrErr, DIR = I, BUS = MPLB
PORT PLB_MRdDBus = PLB_MRdDBus, DIR = I, VEC = [0:(C_MPLB_DWIDTH-1)], BUS = MPLB
PORT PLB_MRdDAck = PLB_MRdDAck, DIR = I, BUS = MPLB
PORT PLB_MRdBTerm = PLB_MRdBTerm, DIR = I, BUS = MPLB
PORT PLB_MWrDAck = PLB_MWrDAck, DIR = I, BUS = MPLB
PORT PLB_MWrBTerm = PLB_MWrBTerm, DIR = I, BUS = MPLB
PORT M_TAttribute = M_TAttribute, DIR = O, VEC = [0:15], BUS = MPLB
PORT M_lockErr = M_lockErr, DIR = O, BUS = MPLB
PORT M_abort = M_abort, DIR = O, BUS = MPLB
PORT M_UABus = M_UABus, DIR = O, VEC = [0:C_MPLB_AWIDTH-1], BUS = MPLB
PORT PLB_MBusy = PLB_MBusy, DIR = I, BUS = MPLB
PORT PLB_MIRQ = PLB_MIRQ, DIR = I, BUS = MPLB
PORT PLB_MRdWdAddr = PLB_MRdWdAddr, DIR = I, VEC = [0:3], BUS = MPLB

END

FINISH_SINGLE_MPD

START_SINGLE_MPD xps_timebase_wdt_v1_02_a 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : xps_timebase_wdt
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN xps_timebase_wdt

## Peripheral Options
OPTION STYLE = HDL
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION USAGE_LEVEL = BASE_USER
OPTION DESC = XPS Watchdog Timer
OPTION LONG_DESC = Watchdog Timer with PLBV46 interface
OPTION IP_GROUP = DMA and Timer:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=PRODUCTION, spartan3=PRODUCTION, spartan3an=PRODUCTION, spartan3a=PRODUCTION, spartan3e=PRODUCTION, spartan3adsp=PRODUCTION, virtex4lx=PRODUCTION, virtex4sx=PRODUCTION, virtex4fx=PRODUCTION, virtex5lx=PRODUCTION, virtex5sx=PRODUCTION, virtex5fx=PRODUCTION, aspartan3e=PRODUCTION, aspartan3a=PRODUCTION, aspartan3adsp=PRODUCTION, qvirtex4lx=PRODUCTION, qvirtex4sx=PRODUCTION, qvirtex4fx=PRODUCTION, qrvirtex4lx=PRODUCTION, qrvirtex4sx=PRODUCTION, qrvirtex4fx=PRODUCTION, spartan6t=PRODUCTION, spartan6=PRODUCTION, spartan6l=PRE_PRODUCTION, qspartan6t=PRODUCTION, qspartan6=PRODUCTION, aspartan6t=PRODUCTION, aspartan6=PRODUCTION, virtex6lx=PRODUCTION, virtex6sx=PRODUCTION, virtex6hx=PRODUCTION, virtex6cx=PRODUCTION, virtex6llx=PRE_PRODUCTION, virtex6lsx=PRE_PRODUCTION, qspartan6l=PRE_PRODUCTION, qrvirtex5=PRE_PRODUCTION, qvirtex6lx=PRE_PRODUCTION, qvirtex6sx=PRE_PRODUCTION, qvirtex6fx=PRE_PRODUCTION, qvirtex6tx=PRE_PRODUCTION)
OPTION RUN_NGCBUILD = FALSE


## Bus Interfaces
BUS_INTERFACE BUS = SPLB, BUS_TYPE = SLAVE, BUS_STD = PLBV46

## Generics for VHDL or Parameters for Verilog
PARAMETER C_WDT_INTERVAL = 30, DT = INTEGER, RANGE = (8:31), PERMIT = BASE_USER, DESC = Interval Length Exponent
PARAMETER C_WDT_ENABLE_ONCE = 1, DT = INTEGER, RANGE = (0,1), PERMIT = BASE_USER, DESC = Enable Behavior
PARAMETER C_BASEADDR = 0xffffffff, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_HIGHADDR, MIN_SIZE = 0x10, ASSIGNMENT = REQUIRE
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_BASEADDR, ASSIGNMENT = REQUIRE
PARAMETER C_FAMILY = virtex5, DT = STRING
PARAMETER C_SPLB_AWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_DWIDTH = 32, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_P2P = 0, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT

## Ports
PORT WDT_Reset = "", DIR = O
PORT Timebase_Interrupt = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = EDGE_RISING, INTERRUPT_PRIORITY = HIGH
PORT WDT_Interrupt = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, INTERRUPT_PRIORITY = HIGH
PORT SPLB_Clk = "", DIR = I, SIGIS = CLK, BUS = SPLB
PORT SPLB_Rst = SPLB_Rst, DIR = I, SIGIS = RST, BUS = SPLB
PORT PLB_ABus = PLB_ABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB
PORT PLB_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB_MID_WIDTH-1)], BUS = SPLB
PORT PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB
PORT PLB_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB_DWIDTH/8)-1)], BUS = SPLB
PORT PLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB
PORT PLB_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB
PORT PLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB
PORT Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB
PORT Sl_wait = Sl_wait, DIR = O, BUS = SPLB
PORT Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB
PORT Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB
PORT Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB
PORT Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB
PORT Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB
PORT Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT PLB_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB
PORT PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB
PORT PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB
PORT PLB_abort = PLB_abort, DIR = I, BUS = SPLB
PORT PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB
PORT PLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB
PORT PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB
PORT PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB
PORT PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB
PORT PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB
PORT PLB_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB
PORT Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB
PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB
PORT Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB
PORT Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB

END

FINISH_SINGLE_MPD

START_SINGLE_MPD ppc440mc_ddr2_v3_00_c 
#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : ppc440mc_ddr2
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN ppc440mc_ddr2

## Peripheral Options
OPTION RUN_NGCBUILD = TRUE
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VERILOG
OPTION PLATGEN_SYSLEVEL_UPDATE_PROC = generate_corelevel_ucf
OPTION SYSLEVEL_DRC_PROC = check_syslevel_settings
OPTION USAGE_LEVEL = BASE_USER
OPTION ARCH_SUPPORT_MAP = (virtex5fx=PRODUCTION)
OPTION STYLE = HDL
OPTION LAST_UPDATED = 12.2
OPTION DESC = PowerPC 440 DDR2 Memory Controller
OPTION LONG_DESC = A wrapper to instantiate the PowerPC 440 DDR2 Memory Controller
OPTION IP_GROUP = Memory and Memory Controller:PPC

IO_INTERFACE IO_IF = memory_0, IO_TYPE = XIL_MEMORY_V1

## Bus Interfaces
BUS_INTERFACE BUS = PPC440MC, BUS_STD = XIL_PPC440MC, BUS_TYPE = TARGET

## Generics for VHDL or Parameters for Verilog
PARAMETER C_DDR_BAWIDTH = 2, DT = integer, RANGE = (2,3), IO_IF = memory_0, IO_IS = C_MEM_BANKADDR_WIDTH
PARAMETER C_NUM_CLK_PAIRS = 1, DT = integer, RANGE = (1:5), IO_IF = memory_0, IO_IS = C_MEM_CLK_WIDTH
PARAMETER C_DDR_DWIDTH = 64, DT = integer, RANGE = (16,32,64,72), IO_IF = memory_0, IO_IS = C_DDR_DWIDTH
PARAMETER C_DDR_CAWIDTH = 10, DT = integer, IO_IF = memory_0, IO_IS = C_DDR_COL_AWIDTH
PARAMETER C_NUM_RANKS_MEM = 1, DT = integer, IO_IF = memory_0, IO_IS = C_NUM_RANKS_MEM
PARAMETER C_CS_BITS = 0, DT = integer, IO_IF = memory_0, IO_IS = C_CS_BITS, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_ddr_cs_bits, ASSIGNMENT = UPDATE
PARAMETER C_DDR_DM_WIDTH = 8, DT = integer, RANGE = (2,4,8,9), IO_IF = memory_0, IO_IS = C_DDR_DM_WIDTH, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_ddr_dm_width, ASSIGNMENT = UPDATE
PARAMETER C_DQ_BITS = 6, DT = integer, IO_IF = memory_0, IO_IS = C_DQ_BITS, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_ddr_dq_bits, ASSIGNMENT = UPDATE
PARAMETER C_DDR2_ODT_WIDTH = 1, DT = integer, RANGE = (0:4), IO_IF = memory_0, IO_IS = C_DDR2_ODT_WIDTH
PARAMETER C_DDR2_ADDT_LAT = 0, DT = integer, RANGE = (0:4), IO_IF = memory_0, IO_IS = C_DDR2_ADDT_LAT
PARAMETER C_INCLUDE_ECC_SUPPORT = 0, DT = integer, RANGE = (0,1)
PARAMETER C_DDR2_ODT_SETTING = 1, DT = integer, RANGE = (0:3), IO_IF = memory_0, IO_IS = C_MEM_ODT_TYPE
PARAMETER C_DQS_BITS = 3, DT = integer, IO_IF = memory_0, IO_IS = C_DQS_BITS, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_ddr_dqs_bits, ASSIGNMENT = UPDATE
PARAMETER C_DDR_DQS_WIDTH = 8, DT = integer, RANGE = (2,4,8,9), IO_IF = memory_0, IO_IS = C_DDR_DQS_WIDTH, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_ddr_dqs_width, ASSIGNMENT = UPDATE
PARAMETER C_DDR_RAWIDTH = 14, DT = integer, IO_IF = memory_0, IO_IS = C_MEM_ADDR_WIDTH
PARAMETER C_DDR_BURST_LENGTH = 4, DT = integer, RANGE = (4,8)
PARAMETER C_DDR_CAS_LAT = 5, DT = integer, RANGE = (3:5), IO_IF = memory_0, IO_IS = C_DDR_CAS_LAT
PARAMETER C_REG_DIMM = 0, DT = integer, RANGE = (0:1), IO_IF = memory_0, IO_IS = C_REG_DIMM
PARAMETER C_MIB_MC_CLOCK_RATIO = 0, DT = integer, RANGE = (0:2)
PARAMETER C_MEM_BASEADDR = 0xFFFFFFFF, ADDRESS = BASE, PAIR = C_MEM_HIGHADDR, ADDR_TYPE = MEMORY, ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = C_BASEADDR, CACHEABLE = TRUE, PERMIT = BASE_USER, DESC = Bank 0 Base Address
PARAMETER C_MEM_HIGHADDR = 0x00000000, ADDRESS = HIGH, PAIR = C_MEM_BASEADDR, ADDR_TYPE = MEMORY, ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = C_HIGHADDR, PERMIT = BASE_USER, DESC = Bank 0 High Address
PARAMETER C_REDUCE_DRV = 0, DT = integer, RANGE = (0:1), IO_IF = memory_0, IO_IS = C_REDUCE_DRV
PARAMETER C_DDR_TREFI = 7800, DT = integer, IO_IF = memory_0, IO_IS = C_DDR_TREFI
PARAMETER C_DDR_TRAS = 40000, DT = integer, IO_IF = memory_0, IO_IS = C_DDR_TRAS
PARAMETER C_DDR_TRCD = 15000, DT = integer, IO_IF = memory_0, IO_IS = C_DDR_TRCD
PARAMETER C_DDR_TRFC = 70000, DT = integer, IO_IF = memory_0, IO_IS = C_DDR_TRFC
PARAMETER C_DDR_TRP = 15000, DT = integer, IO_IF = memory_0, IO_IS = C_DDR_TRP
PARAMETER C_DDR_TRTP = 7500, DT = integer, IO_IF = memory_0, IO_IS = C_DDR_TRTP
PARAMETER C_DDR_TWR = 15000, DT = integer, IO_IF = memory_0, IO_IS = C_DDR_TWR
PARAMETER C_DDR_TWTR = 10000, DT = integer, IO_IF = memory_0, IO_IS = C_DDR_TWTR
PARAMETER C_MC_MIBCLK_PERIOD_PS = 3000, DT = integer, RANGE = (3000:8000)
PARAMETER C_IDEL_HIGH_PERF = TRUE, DT = string
PARAMETER C_SIM_ONLY = 0, DT = integer, RANGE = (0:1)
PARAMETER C_NUM_IDELAYCTRL = 1, DT = integer, IO_IF = memory_0, IO_IS = C_NUM_IDELAYCTRL
PARAMETER C_IODELAY_GRP = NOT_SET, DT = STRING, ASSIGNMENT = OPTIONAL_UPDATE, IO_IF = memory_0, IO_IS = C_IODELAY_GRP, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_iodelay_grp
PARAMETER C_READ_DATA_PIPELINE = 0, DT = integer, RANGE = (0:1)
PARAMETER C_FPGA_SPEED_GRADE = 1, DT = integer, SYSLEVEL_UPDATE_VALUE_PROC = iplevel_update_speedgrade

## Ports
PORT mc_mibclk = "", DIR = I, SIGIS = CLK, ASSIGNMENT = REQUIRE
PORT mi_mcclk90 = "", DIR = I, SIGIS = CLK, ASSIGNMENT = REQUIRE
PORT mi_mcreset = "", DIR = I, SIGIS = RST, ASSIGNMENT = REQUIRE
PORT mi_mcclkdiv2 = "", DIR = I, SIGIS = CLK, ASSIGNMENT = REQUIRE
PORT mi_mcclk_200 = "", DIR = I, SIGIS = CLK, ASSIGNMENT = REQUIRE
PORT mi_mcaddressvalid = mimcaddressvalid, DIR = I, BUS = PPC440MC
PORT mi_mcaddress = mimcaddress, DIR = I, VEC = [0:35], BUS = PPC440MC
PORT mi_mcbankconflict = mimcbankconflict, DIR = I, BUS = PPC440MC
PORT mi_mcrowconflict = mimcrowconflict, DIR = I, BUS = PPC440MC
PORT mi_mcbyteenable = mimcbyteenable, DIR = I, VEC = [0:15], BUS = PPC440MC
PORT mi_mcwritedata = mimcwritedata, DIR = I, VEC = [0:127], BUS = PPC440MC
PORT mi_mcreadnotwrite = mimcreadnotwrite, DIR = I, BUS = PPC440MC
PORT mi_mcwritedatavalid = mimcwritedatavalid, DIR = I, BUS = PPC440MC
PORT mc_miaddrreadytoaccept = mcmiaddrreadytoaccept, DIR = O, BUS = PPC440MC
PORT mc_mireaddata = mcmireaddata, DIR = O, VEC = [0:127], BUS = PPC440MC
PORT mc_mireaddataerr = mcmireaddataerr, DIR = O, BUS = PPC440MC
PORT mc_mireaddatavalid = mcmireaddatavalid, DIR = O, BUS = PPC440MC
PORT idelay_ctrl_rdy_i = "", DIR = I, PERMIT = BASE_USER, INITIALVAL = VCC, IO_IF = memory_0, IO_IS = idelay_ctrl_rdy_i
PORT idelay_ctrl_rdy = "", DIR = O, PERMIT = BASE_USER, IO_IF = memory_0, IO_IS = idelay_ctrl_rdy
PORT DDR2_DQ = "", DIR = IO, VEC = [(C_DDR_DWIDTH-1):0], IOB_STATE = BUF, THREE_STATE = FALSE, PERMIT = BASE_USER, IO_IF = memory_0, IO_IS = ddr2_data
PORT DDR2_DQS = "", DIR = IO, VEC = [(C_DDR_DQS_WIDTH-1):0], IOB_STATE = BUF, THREE_STATE = FALSE, PERMIT = BASE_USER, IO_IF = memory_0, IO_IS = ddr2_data_strobe
PORT DDR2_DQS_N = "", DIR = IO, VEC = [(C_DDR_DQS_WIDTH-1):0], IOB_STATE = BUF, THREE_STATE = FALSE, PERMIT = BASE_USER, IO_IF = memory_0, IO_IS = ddr2_data_strobe_n
PORT DDR2_A = "", DIR = O, VEC = [(C_DDR_RAWIDTH-1):0], PERMIT = BASE_USER, IO_IF = memory_0, IO_IS = DDR2_ADDRESS
PORT DDR2_BA = "", DIR = O, VEC = [(C_DDR_BAWIDTH-1):0], PERMIT = BASE_USER, IO_IF = memory_0, IO_IS = DDR2_BankAddr
PORT DDR2_RAS_N = "", DIR = O, PERMIT = BASE_USER, IO_IF = memory_0, IO_IS = ddr2_row_addr_select
PORT DDR2_CAS_N = "", DIR = O, PERMIT = BASE_USER, IO_IF = memory_0, IO_IS = ddr2_col_addr_select
PORT DDR2_WE_N = "", DIR = O, PERMIT = BASE_USER, IO_IF = memory_0, IO_IS = ddr2_write_enable
PORT DDR2_CS_N = "", DIR = O, VEC = [(C_NUM_RANKS_MEM-1):0], PERMIT = BASE_USER, IO_IF = memory_0, IO_IS = ddr2_chip_select
PORT DDR2_ODT = "", DIR = O, VEC = [(C_DDR2_ODT_WIDTH-1):0], PERMIT = BASE_USER, IO_IF = memory_0, IO_IS = DDR2_ODT
PORT DDR2_CKE = "", DIR = O, VEC = [(C_NUM_RANKS_MEM-1):0], PERMIT = BASE_USER, IO_IF = memory_0, IO_IS = ddr2_clk_enable
PORT DDR2_DM = "", DIR = O, VEC = [(C_DDR_DM_WIDTH-1):0], PERMIT = BASE_USER, IO_IF = memory_0, IO_IS = ddr2_data_mask
PORT DDR2_CK = "", DIR = O, VEC = [(C_NUM_CLK_PAIRS-1):0], PERMIT = BASE_USER, IO_IF = memory_0, IO_IS = DDR2_CLK
PORT DDR2_CK_N = "", DIR = O, VEC = [(C_NUM_CLK_PAIRS-1):0], PERMIT = BASE_USER, IO_IF = memory_0, IO_IS = DDR2_CLK_N

END

FINISH_SINGLE_MPD

